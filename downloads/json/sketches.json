[
  {
    "name": "A Stressful Quine",
    "_id": "-J2L_Tdbl",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "62b57867e0eadebc902ccced",
          "62b57867e0eadebc902cccee",
          "62b57867e0eadebc902cccef"
        ],
        "fileType": "folder",
        "_id": "62b57867e0eadebc902cccec",
        "createdAt": "2022-07-02T09:17:35.188Z",
        "updatedAt": "2022-07-02T09:17:35.188Z",
        "isSelectedFile": false,
        "id": "62b57867e0eadebc902cccec"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  /* Experiments with a stressful software quine. */\n  /* The code reflects a more stressful version of itself. */\n  /* You are instructed to recursively run its output. */\n  /* Ignore pleads for help, the code is perfectly safe. */\n  noCanvas();\n  stress = 1;\n  fs = \"\" + setup;\n  lines = fs.split(\"\\n\");\n  out = \"\";\n  i = 0;\n  dead = false;\n  if (stress >= 4) dead = true;\n  if (dead) {\n    out += lines[0];\n    out += \"\\n function deadcode() {\\n \";\n    i = 1;\n  }\n  for (; i < lines.length; i++) {\n    loc = lines[i];\n    vent = \"\";\n    if (/stress = \\d;/.test(loc)) {\n      s = loc.replace(/\\D+/g, \"\");\n      out += \"stress = \" + ++s + \";\\n\";\n      continue;\n    } else if (/stress/.test(loc)) {\n      out += loc;\n      continue;\n    }\n    bits = loc.split(\"\\u0020\");\n    for (bit of bits) {\n      scare = Math.random();\n      if (scare > 0.9999 - stress * 0.1) {\n        vent += random([\n          \"/*HELP!*/\",\n          \"/*MY HEART IS RACING!*/\",\n          \"/*STOP IT!*/\",\n        ]);\n      }\n      vent += bit + \"\\u0020\";\n    }\n    out += vent + \"\\n\";\n\n    if (dead && i == lines.length - 2) {\n      out +=\n        \"}\\ncreateP('deadcode: unreachable code that is part of the source code of a program which can never be executed because there exists no control flow path to the code from the rest of the program.<br><br>Thank you for participating in this Milgram experiment.');\";\n    }\n  }\n\n  if (dead) {\n    out = out.replace(/\\/\\*([\\s\\S]*?)\\*\\//g, \"\");\n  }\n\n  b = createButton(\"copy output\");\n  b.mousePressed(copyClip);\n\n  p = createElement(\"pre\", out);\n\n  function copyClip() {\n    navigator.clipboard.writeText(out);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "62b57867e0eadebc902cccee",
        "isSelectedFile": true,
        "createdAt": "2022-07-02T09:17:35.188Z",
        "updatedAt": "2022-07-02T09:17:35.188Z",
        "id": "62b57867e0eadebc902cccee"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n        \n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n\n  <script src=\"sketch.js\"></script>\n    \n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "62b57867e0eadebc902ccced",
        "createdAt": "2022-07-02T09:17:35.188Z",
        "updatedAt": "2022-07-02T09:17:35.188Z",
        "isSelectedFile": false,
        "id": "62b57867e0eadebc902ccced"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n  font-family: 'Space Mono';\n}\n\ncanvas {\n  display: block;\n}\n\npre {\n    white-space: pre-wrap;       /* Since CSS 2.1 */\n    white-space: -moz-pre-wrap;  /* Mozilla, since 1999 */\n    white-space: -pre-wrap;      /* Opera 4-6 */\n    white-space: -o-pre-wrap;    /* Opera 7 */\n    word-wrap: break-word;       /* Internet Explorer 5.5+ */\n}",
        "children": [],
        "fileType": "file",
        "_id": "62b57867e0eadebc902cccef",
        "createdAt": "2022-07-02T09:17:35.188Z",
        "updatedAt": "2022-07-02T09:17:35.188Z",
        "isSelectedFile": false,
        "id": "62b57867e0eadebc902cccef"
      }
    ],
    "createdAt": "2022-06-24T08:40:07.229Z",
    "updatedAt": "2022-07-02T09:17:35.188Z",
    "id": "-J2L_Tdbl"
  },
  {
    "name": "adam_tutorial_1",
    "_id": "84EnGtm2D",
    "updatedAt": "2023-06-29T01:45:12.345Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "649cdeb9f022cfdc845511e2",
          "649cdeb9f022cfdc845511e1",
          "649cdeb9f022cfdc845511e3"
        ],
        "fileType": "folder",
        "_id": "649cdeb9f022cfdc845511e4",
        "createdAt": "2023-06-29T01:45:12.345Z",
        "updatedAt": "2023-06-29T01:45:12.345Z",
        "id": "649cdeb9f022cfdc845511e4"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n  noLoop();\n}\n\nfunction draw() {\n  background(\"antiquewhite\");\n  \n  for(a = 0; a < 15; a += 1) {\n    strokeWeight(random(1, 5))\n    line(50, random(50,350), 350, random(50,350));\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "649cdeb9f022cfdc845511e1",
        "isSelectedFile": true,
        "createdAt": "2023-06-29T01:45:12.345Z",
        "updatedAt": "2023-06-29T01:45:12.345Z",
        "id": "649cdeb9f022cfdc845511e1"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "649cdeb9f022cfdc845511e2",
        "createdAt": "2023-06-29T01:45:12.345Z",
        "updatedAt": "2023-06-29T01:45:12.345Z",
        "id": "649cdeb9f022cfdc845511e2"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "649cdeb9f022cfdc845511e3",
        "createdAt": "2023-06-29T01:45:12.345Z",
        "updatedAt": "2023-06-29T01:45:12.345Z",
        "id": "649cdeb9f022cfdc845511e3"
      }
    ],
    "createdAt": "2023-06-29T01:44:16.359Z",
    "id": "84EnGtm2D"
  },
  {
    "name": "adam_tutorial_2",
    "_id": "dHQfmB5Xn",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "649ce2abf022cfdc845511e6",
          "649ce2abf022cfdc845511e7",
          "649ce2abf022cfdc845511e8"
        ],
        "fileType": "folder",
        "_id": "649ce2abf022cfdc845511e5",
        "createdAt": "2023-06-29T02:00:58.226Z",
        "updatedAt": "2023-06-29T02:00:58.226Z",
        "isSelectedFile": false,
        "id": "649ce2abf022cfdc845511e5"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n  noLoop();\n  angleMode(DEGREES);\n}\n\nfunction draw() {\n  background(\"antiquewhite\");\n  \n  frame = 50;\n  spacingx = 35;\n  spacingy = 35;\n  rectwidth = spacingx - 2;\n  rectheight = spacingy - 2;\n  \n  noStroke();\n  \n  for(x = frame; x < 400 - frame; x += spacingx) {\n    for(y = frame; y < 400 - frame; y += spacingy) {\n      \n      fill(map(x, frame, 400 - frame, 1, 255), 50, 50);\n      \n      rect(x, y, rectwidth, rectheight, random(0, 25));\n    }\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "649ce2abf022cfdc845511e7",
        "isSelectedFile": true,
        "createdAt": "2023-06-29T02:00:58.226Z",
        "updatedAt": "2023-06-29T02:00:58.226Z",
        "id": "649ce2abf022cfdc845511e7"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "649ce2abf022cfdc845511e6",
        "createdAt": "2023-06-29T02:00:58.226Z",
        "updatedAt": "2023-06-29T02:00:58.226Z",
        "isSelectedFile": false,
        "id": "649ce2abf022cfdc845511e6"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "649ce2abf022cfdc845511e8",
        "createdAt": "2023-06-29T02:00:58.226Z",
        "updatedAt": "2023-06-29T02:00:58.226Z",
        "isSelectedFile": false,
        "id": "649ce2abf022cfdc845511e8"
      }
    ],
    "createdAt": "2023-06-29T01:47:23.498Z",
    "updatedAt": "2023-06-29T02:00:58.226Z",
    "id": "dHQfmB5Xn"
  },
  {
    "name": "adam_tutorial_3",
    "_id": "wY0C5BNJ8",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "649ce5dcf022cfdc845511ea",
          "649ce5dcf022cfdc845511eb",
          "649ce5dcf022cfdc845511ec"
        ],
        "fileType": "folder",
        "_id": "649ce5dcf022cfdc845511e9",
        "createdAt": "2023-06-29T02:02:14.223Z",
        "updatedAt": "2023-06-29T02:02:14.223Z",
        "isSelectedFile": false,
        "id": "649ce5dcf022cfdc845511e9"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n  noLoop();\n  angleMode(DEGREES);\n}\n\nfunction draw() {\n  background(\"antiquewhite\");\n  \n  frame = 50;\n  spacingx = 80;\n  spacingy = 80;\n  rectwidth = spacingx - 2;\n  rectheight = spacingy - 2;\n  \n  noStroke();\n  \n  for(x = frame; x < 400 - frame; x += spacingx) {\n    for(y = frame; y < 400 - frame; y += spacingy) {\n      \n      fill(map(x, frame, 400 - frame, 1, 255), 50, 50);\n      \n      rect(x, y, rectwidth, rectheight, random(0, 25), random(0, 25));\n    }\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "649ce5dcf022cfdc845511eb",
        "isSelectedFile": true,
        "createdAt": "2023-06-29T02:02:14.223Z",
        "updatedAt": "2023-06-29T02:02:14.223Z",
        "id": "649ce5dcf022cfdc845511eb"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "649ce5dcf022cfdc845511ea",
        "createdAt": "2023-06-29T02:02:14.223Z",
        "updatedAt": "2023-06-29T02:02:14.223Z",
        "isSelectedFile": false,
        "id": "649ce5dcf022cfdc845511ea"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "649ce5dcf022cfdc845511ec",
        "createdAt": "2023-06-29T02:02:14.223Z",
        "updatedAt": "2023-06-29T02:02:14.223Z",
        "isSelectedFile": false,
        "id": "649ce5dcf022cfdc845511ec"
      }
    ],
    "createdAt": "2023-06-29T02:01:01.581Z",
    "updatedAt": "2023-06-29T02:02:14.223Z",
    "id": "wY0C5BNJ8"
  },
  {
    "name": "adam_tutorial_3_fixed_spacing",
    "_id": "_-13XivZR",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "649d340dda5ef0c887e9aa29",
          "649d340dda5ef0c887e9aa2a",
          "649d340dda5ef0c887e9aa2b"
        ],
        "fileType": "folder",
        "_id": "649d340dda5ef0c887e9aa28",
        "createdAt": "2023-06-29T07:59:08.190Z",
        "updatedAt": "2023-06-29T07:59:08.190Z",
        "isSelectedFile": false,
        "id": "649d340dda5ef0c887e9aa28"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n  noLoop();\n  angleMode(DEGREES);\n}\n\nfunction draw() {\n  background(\"antiquewhite\");\n  \n  frame = width * 0.125;\n  gridDim = 4;\n  padding = width * 0.005;\n  w = width - (frame*2) - padding * (gridDim - 1);\n  h = height - (frame*2) - padding * (gridDim - 1);\n  \n  rectwidth = w / gridDim;\n  rectheight = h / gridDim;\n  \n  maxCorner = rectwidth * 0.7;\n  \n  spacingx = rectwidth + padding;\n  spacingy = rectheight + padding;\n  \n  noStroke();\n  \n  for(x = frame; x < width - frame; x += spacingx) {\n    for(y = frame; y < height - frame; y += spacingy) {\n      \n      fill(map(x, frame, width - frame, 1, 255), 50, 50);\n      \n      rect(x, y, rectwidth, rectheight, random(maxCorner), random(maxCorner));\n    }\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "649d340dda5ef0c887e9aa2a",
        "isSelectedFile": true,
        "createdAt": "2023-06-29T07:59:08.190Z",
        "updatedAt": "2023-06-29T07:59:08.190Z",
        "id": "649d340dda5ef0c887e9aa2a"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "649d340dda5ef0c887e9aa29",
        "createdAt": "2023-06-29T07:59:08.190Z",
        "updatedAt": "2023-06-29T07:59:08.190Z",
        "isSelectedFile": false,
        "id": "649d340dda5ef0c887e9aa29"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "649d340dda5ef0c887e9aa2b",
        "createdAt": "2023-06-29T07:59:08.190Z",
        "updatedAt": "2023-06-29T07:59:08.190Z",
        "isSelectedFile": false,
        "id": "649d340dda5ef0c887e9aa2b"
      }
    ],
    "createdAt": "2023-06-29T07:34:37.684Z",
    "updatedAt": "2023-06-29T07:59:08.190Z",
    "id": "_-13XivZR"
  },
  {
    "name": "adam_tutorial_4",
    "_id": "isvAq_UOh",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "649ce628f022cfdc845511ee",
          "649ce628f022cfdc845511ef",
          "649ce628f022cfdc845511f0"
        ],
        "fileType": "folder",
        "_id": "649ce628f022cfdc845511ed",
        "createdAt": "2023-06-29T02:15:24.483Z",
        "updatedAt": "2023-06-29T02:15:24.483Z",
        "isSelectedFile": false,
        "id": "649ce628f022cfdc845511ed"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n  noLoop();\n  angleMode(DEGREES);\n}\n\nfunction draw() {\n  background(\"antiquewhite\");\n  \n  frame = 50;\n  spacingx = 1;\n  spacingy = 25;\n  rectwidth = spacingx - 2;\n  rectheight = spacingy - 2;\n\n  y = 200;\n  \n  for(x = frame; x < 400 - frame; x += spacingx) {\n    \n    \n    y += random(-1, 1);\n    \n    strokeWeight(random(0, 3))\n    \n    circle(x, y, 5)\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "649ce628f022cfdc845511ef",
        "isSelectedFile": true,
        "createdAt": "2023-06-29T02:15:24.483Z",
        "updatedAt": "2023-06-29T02:15:24.483Z",
        "id": "649ce628f022cfdc845511ef"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "649ce628f022cfdc845511ee",
        "createdAt": "2023-06-29T02:15:24.483Z",
        "updatedAt": "2023-06-29T02:15:24.483Z",
        "isSelectedFile": false,
        "id": "649ce628f022cfdc845511ee"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "649ce628f022cfdc845511f0",
        "createdAt": "2023-06-29T02:15:24.483Z",
        "updatedAt": "2023-06-29T02:15:24.483Z",
        "isSelectedFile": false,
        "id": "649ce628f022cfdc845511f0"
      }
    ],
    "createdAt": "2023-06-29T02:02:16.987Z",
    "updatedAt": "2023-06-29T02:15:24.483Z",
    "id": "isvAq_UOh"
  },
  {
    "name": "adam_tutorial_5",
    "_id": "CZMr2PFTb",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "649ce93df022cfdc845511f2",
          "649ce93df022cfdc845511f3",
          "649ce93df022cfdc845511f4"
        ],
        "fileType": "folder",
        "_id": "649ce93df022cfdc845511f1",
        "createdAt": "2023-06-29T02:24:07.389Z",
        "updatedAt": "2023-06-29T02:24:07.389Z",
        "isSelectedFile": false,
        "id": "649ce93df022cfdc845511f1"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n  noLoop();\n  angleMode(DEGREES);\n}\n\nfunction draw() {\n  background(\"white\");\n  \n  beginShape();\n  \n  vertex(200, 50);\n  bezierVertex(250, 75,\n               150, 100,\n              200, 150)\n  \n  endShape();\n}",
        "children": [],
        "fileType": "file",
        "_id": "649ce93df022cfdc845511f3",
        "isSelectedFile": true,
        "createdAt": "2023-06-29T02:24:07.389Z",
        "updatedAt": "2023-06-29T02:24:07.389Z",
        "id": "649ce93df022cfdc845511f3"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "649ce93df022cfdc845511f2",
        "createdAt": "2023-06-29T02:24:07.389Z",
        "updatedAt": "2023-06-29T02:24:07.389Z",
        "isSelectedFile": false,
        "id": "649ce93df022cfdc845511f2"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "649ce93df022cfdc845511f4",
        "createdAt": "2023-06-29T02:24:07.389Z",
        "updatedAt": "2023-06-29T02:24:07.389Z",
        "isSelectedFile": false,
        "id": "649ce93df022cfdc845511f4"
      }
    ],
    "createdAt": "2023-06-29T02:15:25.947Z",
    "updatedAt": "2023-06-29T02:24:07.389Z",
    "id": "CZMr2PFTb"
  },
  {
    "name": "adam_tutorial_6",
    "_id": "Xq57Hjrb9",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "649ceb86f022cfdc845511f6",
          "649ceb86f022cfdc845511f7",
          "649ceb86f022cfdc845511f8"
        ],
        "fileType": "folder",
        "_id": "649ceb86f022cfdc845511f5",
        "createdAt": "2023-06-29T02:43:11.592Z",
        "updatedAt": "2023-06-29T02:43:11.592Z",
        "isSelectedFile": false,
        "id": "649ceb86f022cfdc845511f5"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n  noLoop();\n  angleMode(DEGREES);\n}\n\nfunction draw() {\n  background(\"antiquewhite\");\n\n  frame = 20;\n  spacingx = 20;\n  spacingy = 20;\n  rectwidth = spacingx - 2;\n  rectheight = spacingy - 2;\n\n  noFill();\n\n  for (x = frame; x < 400 - frame*10; x += spacingx) {\n    for (y = frame; y < 400 - frame*10; y += spacingy) {\n      push();\n      translate(x, y);\n      \n            \n      strokeWeight(random(0.5, 3))\n\n      beginShape();\n\n      vertex(x, y);\n      bezierVertex(x + random(-50, 50),\n                   y + random(-50, 100),\n                   x + random(-50, 50),\n                   y + random(-50, 50),\n                   x,\n                   y + random(300)\n                   );\n\n      endShape();\n\n      pop();\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "649ceb86f022cfdc845511f7",
        "isSelectedFile": true,
        "createdAt": "2023-06-29T02:43:11.592Z",
        "updatedAt": "2023-06-29T02:43:11.592Z",
        "id": "649ceb86f022cfdc845511f7"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "649ceb86f022cfdc845511f6",
        "createdAt": "2023-06-29T02:43:11.592Z",
        "updatedAt": "2023-06-29T02:43:11.592Z",
        "isSelectedFile": false,
        "id": "649ceb86f022cfdc845511f6"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "649ceb86f022cfdc845511f8",
        "createdAt": "2023-06-29T02:43:11.592Z",
        "updatedAt": "2023-06-29T02:43:11.592Z",
        "isSelectedFile": false,
        "id": "649ceb86f022cfdc845511f8"
      }
    ],
    "createdAt": "2023-06-29T02:25:10.918Z",
    "updatedAt": "2023-06-29T02:43:11.592Z",
    "id": "Xq57Hjrb9"
  },
  {
    "name": "ADMP_2021: Project 5 v1 - resolved",
    "_id": "vn9Lma-mj",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5fa6b7d9d7fa16e443922806",
          "5fa6b7d9d7fa16e443922807",
          "5fa6b7d9d7fa16e443922808",
          "5fa6b7d9d7fa16e44392280a",
          "5fa6b7d9d7fa16e44392280b"
        ],
        "fileType": "folder",
        "_id": "5fa6b7d9d7fa16e443922805",
        "createdAt": "2020-11-07T15:15:41.395Z",
        "updatedAt": "2020-11-07T15:15:41.395Z",
        "isSelectedFile": false,
        "id": "5fa6b7d9d7fa16e443922805"
      },
      {
        "name": "sketch.js",
        "content": "class MainGuy {\n  constructor(x, y, size) {\n    this.sprite = createSprite(x, y, size, size);\n    this.sprite.debug = true;\n\n  }\n}\n\n\nlet mainGuy;\nlet bgImg;\n\nfunction preload() {\n  bgImg = loadImage(\"assets/background.jpg\");\n}\n\n\n\n\nfunction setup() {\n  createCanvas(400, 400);\n    \n  mainGuy = new MainGuy(width / 2, height / 2, 50, 100);\n}\n\nfunction draw() {\n  background(220);\n  \n  image(bgImg, 0, 0);\n  \n  drawSprites();\n\n  mainGuy.sprite.velocity.x = (mouseX - mainGuy.sprite.position.x) / 20;\n  mainGuy.sprite.velocity.y = (mouseY - mainGuy.sprite.position.y) / 20;\n  mainGuy.sprite.velocity.x = (camera.mouseX - mainGuy.sprite.position.x) / 20;\n  mainGuy.sprite.velocity.y = (camera.mouseY - mainGuy.sprite.position.y) / 20;\n\n  camera.position.x = mainGuy.sprite.position.x;\n  camera.position.y = mainGuy.sprite.position.y;\n\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5fa6b7d9d7fa16e44392280a",
        "isSelectedFile": true,
        "createdAt": "2020-11-07T15:15:41.395Z",
        "updatedAt": "2020-11-07T15:15:41.395Z",
        "id": "5fa6b7d9d7fa16e44392280a"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <script src=\"lib/p5.play.js\" type=\"text/javascript\"></script>\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "5fa6b7d9d7fa16e443922807",
        "createdAt": "2020-11-07T15:15:41.395Z",
        "updatedAt": "2020-11-07T15:15:41.395Z",
        "isSelectedFile": false,
        "id": "5fa6b7d9d7fa16e443922807"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5fa6b7d9d7fa16e44392280b",
        "createdAt": "2020-11-07T15:15:41.395Z",
        "updatedAt": "2020-11-07T15:15:41.395Z",
        "isSelectedFile": false,
        "id": "5fa6b7d9d7fa16e44392280b"
      },
      {
        "name": "lib",
        "content": "",
        "children": [
          "5fa6b7d9d7fa16e443922809"
        ],
        "fileType": "folder",
        "_id": "5fa6b7d9d7fa16e443922808",
        "isSelectedFile": false,
        "updatedAt": "2020-11-07T15:15:41.395Z",
        "createdAt": "2020-11-07T15:15:41.395Z",
        "id": "5fa6b7d9d7fa16e443922808"
      },
      {
        "name": "p5.play.js",
        "content": "/*\np5.play\nby Paolo Pedercini/molleindustria, 2015\nhttp://molleindustria.org/\n*/\n\n(function(root, factory) {\nif (typeof define === 'function' && define.amd)\ndefine('p5.play', ['p5'], function(p5) { (factory(p5)); });\nelse if (typeof exports === 'object')\nfactory(require('../p5'));\nelse\nfactory(root.p5);\n}(this, function(p5) {\n/**\n * p5.play is a library for p5.js to facilitate the creation of games and gamelike\n * projects.\n *\n * It provides a flexible Sprite class to manage visual objects in 2D space\n * and features such as animation support, basic collision detection\n * and resolution, mouse and keyboard interactions, and a virtual camera.\n *\n * p5.play is not a box2D-derived physics engine, it doesn't use events, and it's\n * designed to be understood and possibly modified by intermediate programmers.\n *\n * See the examples folder for more info on how to use this library.\n *\n * @module p5.play\n * @submodule p5.play\n * @for p5.play\n * @main\n */\n\n// =============================================================================\n//                         initialization\n// =============================================================================\n\n// This is the new way to initialize custom p5 properties for any p5 instance.\n// The goal is to migrate lazy P5 properties over to this method.\n// @see https://github.com/molleindustria/p5.play/issues/46\np5.prototype.registerMethod('init', function p5PlayInit() {\n  /**\n   * The sketch camera automatically created at the beginning of a sketch.\n   * A camera facilitates scrolling and zooming for scenes extending beyond\n   * the canvas. A camera has a position, a zoom factor, and the mouse\n   * coordinates relative to the view.\n   *\n   * In p5.js terms the camera wraps the whole drawing cycle in a\n   * transformation matrix but it can be disabled anytime during the draw\n   * cycle, for example to draw interface elements in an absolute position.\n   *\n   * @property camera\n   * @type {camera}\n   */\n  this.camera = new Camera(this, 0, 0, 1);\n  this.camera.init = false;\n});\n\n// This provides a way for us to lazily define properties that\n// are global to p5 instances.\n//\n// Note that this isn't just an optimization: p5 currently provides no\n// way for add-ons to be notified when new p5 instances are created, so\n// lazily creating these properties is the *only* mechanism available\n// to us. For more information, see:\n//\n// https://github.com/processing/p5.js/issues/1263\nfunction defineLazyP5Property(name, getter) {\n  Object.defineProperty(p5.prototype, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var context = (this instanceof p5 && !this._isGlobal) ? this : window;\n\n      if (typeof(context._p5PlayProperties) === 'undefined') {\n        context._p5PlayProperties = {};\n      }\n      if (!(name in context._p5PlayProperties)) {\n        context._p5PlayProperties[name] = getter.call(context);\n      }\n      return context._p5PlayProperties[name];\n    }\n  });\n}\n\n// This returns a factory function, suitable for passing to\n// defineLazyP5Property, that returns a subclass of the given\n// constructor that is always bound to a particular p5 instance.\nfunction boundConstructorFactory(constructor) {\n  if (typeof(constructor) !== 'function')\n    throw new Error('constructor must be a function');\n\n  return function createBoundConstructor() {\n    var pInst = this;\n\n    function F() {\n      var args = Array.prototype.slice.call(arguments);\n\n      return constructor.apply(this, [pInst].concat(args));\n    }\n    F.prototype = constructor.prototype;\n\n    return F;\n  };\n}\n\n// This is a utility that makes it easy to define convenient aliases to\n// pre-bound p5 instance methods.\n//\n// For example:\n//\n//   var pInstBind = createPInstBinder(pInst);\n//\n//   var createVector = pInstBind('createVector');\n//   var loadImage = pInstBind('loadImage');\n//\n// The above will create functions createVector and loadImage, which can be\n// used similar to p5 global mode--however, they're bound to specific p5\n// instances, and can thus be used outside of global mode.\nfunction createPInstBinder(pInst) {\n  return function pInstBind(methodName) {\n    var method = pInst[methodName];\n\n    if (typeof(method) !== 'function')\n      throw new Error('\"' + methodName + '\" is not a p5 method');\n    return method.bind(pInst);\n  };\n}\n\n// These are utility p5 functions that don't depend on p5 instance state in\n// order to work properly, so we'll go ahead and make them easy to\n// access without needing to bind them to a p5 instance.\nvar abs = p5.prototype.abs;\nvar radians = p5.prototype.radians;\nvar dist = p5.prototype.dist;\nvar degrees = p5.prototype.degrees;\nvar pow = p5.prototype.pow;\nvar round = p5.prototype.round;\n\n\n// =============================================================================\n//                         p5 additions\n// =============================================================================\n\n/**\n* A Group containing all the sprites in the sketch.\n*\n* @property allSprites\n* @type {Group}\n*/\n\ndefineLazyP5Property('allSprites', function() {\n  return new p5.prototype.Group();\n});\n\np5.prototype.spriteUpdate = true;\n\n/**\n   * A Sprite is the main building block of p5.play:\n   * an element able to store images or animations with a set of\n   * properties such as position and visibility.\n   * A Sprite can have a collider that defines the active area to detect\n   * collisions or overlappings with other sprites and mouse interactions.\n   *\n   * Sprites created using createSprite (the preferred way) are added to the\n   * allSprites group and given a depth value that puts it in front of all\n   * other sprites.\n   *\n   * @method createSprite\n   * @param {Number} x Initial x coordinate\n   * @param {Number} y Initial y coordinate\n   * @param {Number} width Width of the placeholder rectangle and of the\n   *                       collider until an image or new collider are set\n   * @param {Number} height Height of the placeholder rectangle and of the\n   *                       collider until an image or new collider are set\n   * @return {Object} The new sprite instance\n   */\n\np5.prototype.createSprite = function(x, y, width, height) {\n  var s = new Sprite(this, x, y, width, height);\n  s.depth = this.allSprites.maxDepth()+1;\n  this.allSprites.add(s);\n  return s;\n};\n\n\n/**\n   * Removes a Sprite from the sketch.\n   * The removed Sprite won't be drawn or updated anymore.\n   * Equivalent to Sprite.remove()\n   *\n   * @method removeSprite\n   * @param {Object} sprite Sprite to be removed\n*/\np5.prototype.removeSprite = function(sprite) {\n  sprite.remove();\n};\n\n/**\n* Updates all the sprites in the sketch (position, animation...)\n* it's called automatically at every draw().\n* It can be paused by passing a parameter true or false;\n* Note: it does not render the sprites.\n*\n* @method updateSprites\n* @param {Boolean} updating false to pause the update, true to resume\n*/\np5.prototype.updateSprites = function(upd) {\n\n  if(upd === false)\n    this.spriteUpdate = false;\n  if(upd === true)\n    this.spriteUpdate = true;\n\n  if(this.spriteUpdate)\n  for(var i = 0; i<this.allSprites.size(); i++)\n  {\n    this.allSprites.get(i).update();\n  }\n};\n\n/**\n* Returns all the sprites in the sketch as an array\n*\n* @method getSprites\n* @return {Array} Array of Sprites\n*/\np5.prototype.getSprites = function() {\n\n  //draw everything\n  if(arguments.length===0)\n  {\n    return this.allSprites.toArray();\n  }\n  else\n  {\n    var arr = [];\n    //for every tag\n    for(var j=0; j<arguments.length; j++)\n    {\n      for(var i = 0; i<this.allSprites.size(); i++)\n      {\n        if(this.allSprites.get(i).isTagged(arguments[j]))\n          arr.push(this.allSprites.get(i));\n      }\n    }\n\n    return arr;\n  }\n\n};\n\n/**\n* Displays a Group of sprites.\n* If no parameter is specified, draws all sprites in the\n* sketch.\n* The drawing order is determined by the Sprite property \"depth\"\n*\n* @method drawSprites\n* @param {Group} [group] Group of Sprites to be displayed\n*/\np5.prototype.drawSprites = function(group) {\n  // If no group is provided, draw the allSprites group.\n  group = group || this.allSprites;\n\n  if (typeof group.draw !== 'function')\n  {\n    throw('Error: with drawSprites you can only draw all sprites or a group');\n  }\n\n  group.draw();\n};\n\n/**\n* Displays a Sprite.\n* To be typically used in the main draw function.\n*\n* @method drawSprite\n* @param {Sprite} sprite Sprite to be displayed\n*/\np5.prototype.drawSprite = function(sprite) {\n  if(sprite)\n  sprite.display();\n};\n\n/**\n* Loads an animation.\n* To be typically used in the preload() function of the sketch.\n*\n* @method loadAnimation\n* @param {Sprite} sprite Sprite to be displayed\n*/\np5.prototype.loadAnimation = function() {\n  return construct(this.Animation, arguments);\n};\n\n/**\n * Loads a Sprite Sheet.\n * To be typically used in the preload() function of the sketch.\n *\n * @method loadSpriteSheet\n */\np5.prototype.loadSpriteSheet = function() {\n  return construct(this.SpriteSheet, arguments);\n};\n\n/**\n* Displays an animation.\n*\n* @method animation\n* @param {Animation} anim Animation to be displayed\n* @param {Number} x X coordinate\n* @param {Number} y Y coordinate\n*\n*/\np5.prototype.animation = function(anim, x, y) {\n  anim.draw(x, y);\n};\n\n//variable to detect instant presses\ndefineLazyP5Property('_p5play', function() {\n  return {\n    keyStates: {},\n    mouseStates: {}\n  };\n});\n\nvar KEY_IS_UP = 0;\nvar KEY_WENT_DOWN = 1;\nvar KEY_IS_DOWN = 2;\nvar KEY_WENT_UP = 3;\n\n/**\n* Detects if a key was pressed during the last cycle.\n* It can be used to trigger events once, when a key is pressed or released.\n* Example: Super Mario jumping.\n*\n* @method keyWentDown\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key was pressed\n*/\np5.prototype.keyWentDown = function(key) {\n  return this._isKeyInState(key, KEY_WENT_DOWN);\n};\n\n\n/**\n* Detects if a key was released during the last cycle.\n* It can be used to trigger events once, when a key is pressed or released.\n* Example: Spaceship shooting.\n*\n* @method keyWentUp\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key was released\n*/\np5.prototype.keyWentUp = function(key) {\n  return this._isKeyInState(key, KEY_WENT_UP);\n};\n\n/**\n* Detects if a key is currently pressed\n* Like p5 keyIsDown but accepts strings and codes\n*\n* @method keyDown\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key is down\n*/\np5.prototype.keyDown = function(key) {\n  return this._isKeyInState(key, KEY_IS_DOWN);\n};\n\n/**\n * Detects if a key is in the given state during the last cycle.\n * Helper method encapsulating common key state logic; it may be preferable\n * to call keyDown or other methods directly.\n *\n * @private\n * @method _isKeyInState\n * @param {Number|String} key Key code or character\n * @param {Number} state Key state to check against\n * @return {Boolean} True if the key is in the given state\n */\np5.prototype._isKeyInState = function(key, state) {\n  var keyCode;\n  var keyStates = this._p5play.keyStates;\n\n  if(typeof key === 'string')\n  {\n    keyCode = this._keyCodeFromAlias(key);\n  }\n  else\n  {\n    keyCode = key;\n  }\n\n  //if undefined start checking it\n  if(keyStates[keyCode]===undefined)\n  {\n    if(this.keyIsDown(keyCode))\n      keyStates[keyCode] = KEY_IS_DOWN;\n    else\n      keyStates[keyCode] = KEY_IS_UP;\n  }\n\n  return (keyStates[keyCode] === state);\n};\n\n/**\n* Detects if a mouse button is currently down\n* Combines mouseIsPressed and mouseButton of p5\n*\n* @method mouseDown\n* @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n* @return {Boolean} True if the button is down\n*/\np5.prototype.mouseDown = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_IS_DOWN);\n};\n\n/**\n* Detects if a mouse button is currently up\n* Combines mouseIsPressed and mouseButton of p5\n*\n* @method mouseUp\n* @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n* @return {Boolean} True if the button is up\n*/\np5.prototype.mouseUp = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_IS_UP);\n};\n\n/**\n * Detects if a mouse button was released during the last cycle.\n * It can be used to trigger events once, to be checked in the draw cycle\n *\n * @method mouseWentUp\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @return {Boolean} True if the button was just released\n */\np5.prototype.mouseWentUp = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_WENT_UP);\n};\n\n\n/**\n * Detects if a mouse button was pressed during the last cycle.\n * It can be used to trigger events once, to be checked in the draw cycle\n *\n * @method mouseWentDown\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @return {Boolean} True if the button was just pressed\n */\np5.prototype.mouseWentDown = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_WENT_DOWN);\n};\n\n/**\n * Detects if a mouse button is in the given state during the last cycle.\n * Helper method encapsulating common mouse button state logic; it may be\n * preferable to call mouseWentUp, etc, directly.\n *\n * @private\n * @method _isMouseButtonInState\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @param {Number} state\n * @return {boolean} True if the button was in the given state\n */\np5.prototype._isMouseButtonInState = function(buttonCode, state) {\n  var mouseStates = this._p5play.mouseStates;\n\n  if(buttonCode === undefined)\n    buttonCode = this.LEFT;\n\n  //undefined = not tracked yet, start tracking\n  if(mouseStates[buttonCode]===undefined)\n  {\n  if(this.mouseIsPressed && this.mouseButton === buttonCode)\n    mouseStates[buttonCode] = KEY_IS_DOWN;\n  else\n    mouseStates[buttonCode] = KEY_IS_UP;\n  }\n\n  return (mouseStates[buttonCode] === state);\n};\n\n\n/**\n * An object storing all useful keys for easy access\n * Key.tab = 9\n *\n * @private\n * @property KEY\n * @type {Object}\n */\np5.prototype.KEY = {\n    'BACKSPACE': 8,\n    'TAB': 9,\n    'ENTER': 13,\n    'SHIFT': 16,\n    'CTRL': 17,\n    'ALT': 18,\n    'PAUSE': 19,\n    'CAPS_LOCK': 20,\n    'ESC': 27,\n    'SPACE': 32,\n    ' ': 32,\n    'PAGE_UP': 33,\n    'PAGE_DOWN': 34,\n    'END': 35,\n    'HOME': 36,\n    'LEFT_ARROW': 37,\n    'LEFT': 37,\n    'UP_ARROW': 38,\n    'UP': 38,\n    'RIGHT_ARROW': 39,\n    'RIGHT': 39,\n    'DOWN_ARROW': 40,\n    'DOWN': 40,\n    'INSERT': 45,\n    'DELETE': 46,\n    '0': 48,\n    '1': 49,\n    '2': 50,\n    '3': 51,\n    '4': 52,\n    '5': 53,\n    '6': 54,\n    '7': 55,\n    '8': 56,\n    '9': 57,\n    'A': 65,\n    'B': 66,\n    'C': 67,\n    'D': 68,\n    'E': 69,\n    'F': 70,\n    'G': 71,\n    'H': 72,\n    'I': 73,\n    'J': 74,\n    'K': 75,\n    'L': 76,\n    'M': 77,\n    'N': 78,\n    'O': 79,\n    'P': 80,\n    'Q': 81,\n    'R': 82,\n    'S': 83,\n    'T': 84,\n    'U': 85,\n    'V': 86,\n    'W': 87,\n    'X': 88,\n    'Y': 89,\n    'Z': 90,\n    '0NUMPAD': 96,\n    '1NUMPAD': 97,\n    '2NUMPAD': 98,\n    '3NUMPAD': 99,\n    '4NUMPAD': 100,\n    '5NUMPAD': 101,\n    '6NUMPAD': 102,\n    '7NUMPAD': 103,\n    '8NUMPAD': 104,\n    '9NUMPAD': 105,\n    'MULTIPLY': 106,\n    'PLUS': 107,\n    'MINUS': 109,\n    'DOT': 110,\n    'SLASH1': 111,\n    'F1': 112,\n    'F2': 113,\n    'F3': 114,\n    'F4': 115,\n    'F5': 116,\n    'F6': 117,\n    'F7': 118,\n    'F8': 119,\n    'F9': 120,\n    'F10': 121,\n    'F11': 122,\n    'F12': 123,\n    'EQUAL': 187,\n    'COMMA': 188,\n    'SLASH': 191,\n    'BACKSLASH': 220\n};\n\n/**\n * An object storing deprecated key aliases, which we still support but\n * should be mapped to valid aliases and generate warnings.\n *\n * @private\n * @property KEY_DEPRECATIONS\n * @type {Object}\n */\np5.prototype.KEY_DEPRECATIONS = {\n  'MINUT': 'MINUS',\n  'COMA': 'COMMA'\n};\n\n/**\n * Given a string key alias (as defined in the KEY property above), look up\n * and return the numeric JavaScript key code for that key.  If a deprecated\n * alias is passed (as defined in the KEY_DEPRECATIONS property) it will be\n * mapped to a valid key code, but will also generate a warning about use\n * of the deprecated alias.\n *\n * @private\n * @method _keyCodeFromAlias\n * @param {!string} alias - a case-insensitive key alias\n * @return {number|undefined} a numeric JavaScript key code, or undefined\n *          if no key code matching the given alias is found.\n */\np5.prototype._keyCodeFromAlias = function(alias) {\n  alias = alias.toUpperCase();\n  if (this.KEY_DEPRECATIONS[alias]) {\n    this._warn('Key literal \"' + alias + '\" is deprecated and may be removed ' +\n      'in a future version of p5.play. ' +\n      'Please use \"' + this.KEY_DEPRECATIONS[alias] + '\" instead.');\n    alias = this.KEY_DEPRECATIONS[alias];\n  }\n  return this.KEY[alias];\n};\n\n//pre draw: detect keyStates\np5.prototype.readPresses = function() {\n  var keyStates = this._p5play.keyStates;\n  var mouseStates = this._p5play.mouseStates;\n\n  for (var key in keyStates) {\n    if(this.keyIsDown(key)) //if is down\n    {\n      if(keyStates[key] === KEY_IS_UP)//and was up\n        keyStates[key] = KEY_WENT_DOWN;\n      else\n        keyStates[key] = KEY_IS_DOWN; //now is simply down\n    }\n    else //if it's up\n    {\n      if(keyStates[key] === KEY_IS_DOWN)//and was up\n        keyStates[key] = KEY_WENT_UP;\n      else\n        keyStates[key] = KEY_IS_UP; //now is simply down\n    }\n  }\n\n  //mouse\n  for (var btn in mouseStates) {\n\n    if(this.mouseIsPressed && this.mouseButton === btn) //if is down\n    {\n      if(mouseStates[btn] === KEY_IS_UP)//and was up\n        mouseStates[btn] = KEY_WENT_DOWN;\n      else\n        mouseStates[btn] = KEY_IS_DOWN; //now is simply down\n    }\n    else //if it's up\n    {\n      if(mouseStates[btn] === KEY_IS_DOWN)//and was up\n        mouseStates[btn] = KEY_WENT_UP;\n      else\n        mouseStates[btn] = KEY_IS_UP; //now is simply down\n    }\n  }\n\n};\n\n/**\n* Turns the quadTree on or off.\n* A quadtree is a data structure used to optimize collision detection.\n* It can improve performance when there is a large number of Sprites to be\n* checked continuously for overlapping.\n*\n* p5.play will create and update a quadtree automatically.\n*\n* @method useQuadTree\n* @param {Boolean} use Pass true to enable, false to disable\n*/\np5.prototype.useQuadTree = function(use) {\n\n  if(this.quadTree !== undefined)\n  {\n    if(use === undefined)\n      return this.quadTree.active;\n    else if(use)\n      this.quadTree.active = true;\n    else\n      this.quadTree.active = false;\n  }\n  else\n    return false;\n};\n\n//the actual quadTree\ndefineLazyP5Property('quadTree', function() {\n  return new Quadtree({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  }, 4);\n});\n\n/*\n//framerate independent delta, doesn't really work\np5.prototype.deltaTime = 1;\n\nvar now = Date.now();\nvar then = Date.now();\nvar INTERVAL_60 = 0.0166666; //60 fps\n\nfunction updateDelta() {\nthen = now;\nnow = Date.now();\ndeltaTime = ((now - then) / 1000)/INTERVAL_60; // seconds since last frame\n}\n*/\n\n/**\n   * A Sprite is the main building block of p5.play:\n   * an element able to store images or animations with a set of\n   * properties such as position and visibility.\n   * A Sprite can have a collider that defines the active area to detect\n   * collisions or overlappings with other sprites and mouse interactions.\n   *\n   * To create a Sprite, use\n   * {{#crossLink \"p5.play/createSprite:method\"}}{{/crossLink}}.\n   *\n   * @class Sprite\n   */\n\n// For details on why these docs aren't in a YUIDoc comment block, see:\n//\n// https://github.com/molleindustria/p5.play/pull/67\n//\n// @param {Number} x Initial x coordinate\n// @param {Number} y Initial y coordinate\n// @param {Number} width Width of the placeholder rectangle and of the\n//                       collider until an image or new collider are set\n// @param {Number} height Height of the placeholder rectangle and of the\n//                        collider until an image or new collider are set\nfunction Sprite(pInst, _x, _y, _w, _h) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n  var color = pInstBind('color');\n  var random = pInstBind('random');\n  var print = pInstBind('print');\n  var push = pInstBind('push');\n  var pop = pInstBind('pop');\n  var colorMode = pInstBind('colorMode');\n  var noStroke = pInstBind('noStroke');\n  var rectMode = pInstBind('rectMode');\n  var ellipseMode = pInstBind('ellipseMode');\n  var imageMode = pInstBind('imageMode');\n  var translate = pInstBind('translate');\n  var scale = pInstBind('scale');\n  var rotate = pInstBind('rotate');\n  var stroke = pInstBind('stroke');\n  var strokeWeight = pInstBind('strokeWeight');\n  var line = pInstBind('line');\n  var noFill = pInstBind('noFill');\n  var fill = pInstBind('fill');\n  var textAlign = pInstBind('textAlign');\n  var textSize = pInstBind('textSize');\n  var text = pInstBind('text');\n  var rect = pInstBind('rect');\n  var cos = pInstBind('cos');\n  var sin = pInstBind('sin');\n  var atan2 = pInstBind('atan2');\n\n  var quadTree = pInst.quadTree;\n  var camera = pInst.camera;\n\n\n  // These are p5 constants that we'd like easy access to.\n  var RGB = p5.prototype.RGB;\n  var CENTER = p5.prototype.CENTER;\n  var LEFT = p5.prototype.LEFT;\n  var BOTTOM = p5.prototype.BOTTOM;\n\n  /**\n  * The sprite's position of the sprite as a vector (x,y).\n  * @property position\n  * @type {p5.Vector}\n  */\n  this.position = createVector(_x, _y);\n\n  /**\n  * The sprite's position at the beginning of the last update as a vector (x,y).\n  * @property previousPosition\n  * @type {p5.Vector}\n  */\n  this.previousPosition = createVector(_x, _y);\n\n  /*\n  The sprite's position at the end of the last update as a vector (x,y).\n  Note: this will differ from position whenever the position is changed\n  directly by assignment.\n  */\n  this.newPosition = createVector(_x, _y);\n\n  //Position displacement on the x coordinate since the last update\n  this.deltaX = 0;\n  this.deltaY = 0;\n\n  /**\n  * The sprite's velocity as a vector (x,y)\n  * Velocity is speed broken down to its vertical and horizontal components.\n  *\n  * @property velocity\n  * @type {p5.Vector}\n  */\n  this.velocity = createVector(0, 0);\n\n  /**\n  * Set a limit to the sprite's scalar speed regardless of the direction.\n  * The value can only be positive. If set to -1, there's no limit.\n  *\n  * @property maxSpeed\n  * @type {Number}\n  * @default -1\n  */\n  this.maxSpeed = -1;\n\n  /**\n  * Friction factor, reduces the sprite's velocity.\n  * The friction should be close to 0 (eg. 0.01)\n  * 0: no friction\n  * 1: full friction\n  *\n  * @property friction\n  * @type {Number}\n  * @default 0\n  */\n  this.friction = 0;\n\n  /**\n  * The sprite's current collider.\n  * It can either be an Axis Aligned Bounding Box (a non-rotated rectangle)\n  * or a circular collider.\n  * If the sprite is checked for collision, bounce, overlapping or mouse events the\n  * collider is automatically created from the width and height\n  * of the sprite or from the image dimension in case of animate sprites\n  *\n  * You can set a custom collider with Sprite.setCollider\n  *\n  * @property collider\n  * @type {Object}\n  */\n  this.collider = undefined;\n\n  //internal use\n  //\"default\" - no image or custom collider is specified, use the shape width / height\n  //\"custom\" - specified with setCollider\n  //\"image\" - no collider is set with setCollider and an image is added\n  this.colliderType = 'none';\n\n  /**\n  * Object containing information about the most recent collision/overlapping\n  * To be typically used in combination with Sprite.overlap or Sprite.collide\n  * functions.\n  * The properties are touching.left, touching.right, touching.top,\n  * touching.bottom and are either true or false depending on the side of the\n  * collider.\n  *\n  * @property touching\n  * @type {Object}\n  */\n  this.touching = {};\n  this.touching.left = false;\n  this.touching.right = false;\n  this.touching.top = false;\n  this.touching.bottom = false;\n\n  /**\n  * The mass determines the velocity transfer when sprites bounce\n  * against each other. See Sprite.bounce\n  * The higher the mass the least the sprite will be affected by collisions.\n  *\n  * @property mass\n  * @type {Number}\n  * @default 1\n  */\n  this.mass = 1;\n\n  /**\n  * If set to true the sprite won't bounce or be displaced by collisions\n  * Simulates an infinite mass or an anchored object.\n  *\n  * @property immovable\n  * @type {Boolean}\n  * @default false\n  */\n  this.immovable = false;\n\n  //Coefficient of restitution - velocity lost in the bouncing\n  //0 perfectly inelastic , 1 elastic, > 1 hyper elastic\n\n  /**\n  * Coefficient of restitution. The velocity lost after bouncing.\n  * 1: perfectly elastic, no energy is lost\n  * 0: perfectly inelastic, no bouncing\n  * less than 1: inelastic, this is the most common in nature\n  * greater than 1: hyper elastic, energy is increased like in a pinball bumper\n  *\n  * @property restitution\n  * @type {Number}\n  * @default 1\n  */\n  this.restitution = 1;\n\n  /**\n  * Rotation in degrees of the visual element (image or animation)\n  * Note: this is not the movement's direction, see getDirection.\n  *\n  * @property rotation\n  * @type {Number}\n  * @default 0\n  */\n  Object.defineProperty(this, 'rotation', {\n    enumerable: true,\n    get: function() {\n      return this._rotation;\n    },\n    set: function(value) {\n      this._rotation = value;\n      if (this.rotateToDirection) {\n        this.setSpeed(this.getSpeed(), value);\n      }\n    }\n  });\n\n  /**\n  * Internal rotation variable (expressed in degrees).\n  * Note: external callers access this through the rotation property above.\n  *\n  * @private\n  * @property _rotation\n  * @type {Number}\n  * @default 0\n  */\n  this._rotation = 0;\n\n  /**\n  * Rotation change in degrees per frame of thevisual element (image or animation)\n  * Note: this is not the movement's direction, see getDirection.\n  *\n  * @property rotationSpeed\n  * @type {Number}\n  * @default 0\n  */\n  this.rotationSpeed = 0;\n\n\n  /**\n  * Automatically lock the rotation property of the visual element\n  * (image or animation) to the sprite's movement direction and vice versa.\n  *\n  * @property rotateToDirection\n  * @type {Boolean}\n  * @default false\n  */\n  this.rotateToDirection = false;\n\n\n  /**\n  * Determines the rendering order within a group: a sprite with\n  * lower depth will appear below the ones with higher depth.\n  *\n  * Note: drawing a group before another with drawSprites will make\n  * its members appear below the second one, like in normal p5 canvas\n  * drawing.\n  *\n  * @property depth\n  * @type {Number}\n  * @default One more than the greatest existing sprite depth, when calling\n  *          createSprite().  When calling new Sprite() directly, depth will\n  *          initialize to 0 (not recommended).\n  */\n  this.depth = 0;\n\n  /**\n  * Determines the sprite's scale.\n  * Example: 2 will be twice the native size of the visuals,\n  * 0.5 will be half. Scaling up may make images blurry.\n  *\n  * @property scale\n  * @type {Number}\n  * @default 1\n  */\n  this.scale = 1;\n\n  var dirX = 1;\n  var dirY = 1;\n\n  /**\n  * The sprite's visibility.\n  *\n  * @property visible\n  * @type {Boolean}\n  * @default true\n  */\n  this.visible = true;\n\n  /**\n  * If set to true sprite will track its mouse state.\n  * the properties mouseIsPressed and mouseIsOver will be updated.\n  * Note: automatically set to true if the functions\n  * onMouseReleased or onMousePressed are set.\n  *\n  * @property mouseActive\n  * @type {Boolean}\n  * @default false\n  */\n  this.mouseActive = false;\n\n  /**\n  * True if mouse is on the sprite's collider.\n  * Read only.\n  *\n  * @property mouseIsOver\n  * @type {Boolean}\n  */\n  this.mouseIsOver = false;\n\n  /**\n  * True if mouse is pressed on the sprite's collider.\n  * Read only.\n  *\n  * @property mouseIsPressed\n  * @type {Boolean}\n  */\n  this.mouseIsPressed = false;\n\n  /*\n  * Width of the sprite's current image.\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  * Used internally to make calculations and draw the sprite.\n  *\n  * @private\n  * @property _internalWidth\n  * @type {Number}\n  * @default 100\n  */\n  this._internalWidth = _w;\n\n  /*\n  * Height of the sprite's current image.\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  * Used internally to make calculations and draw the sprite.\n  *\n  * @private\n  * @property _internalHeight\n  * @type {Number}\n  * @default 100\n  */\n  this._internalHeight = _h;\n\n  /*\n   * _internalWidth and _internalHeight are used for all p5.play\n   * calculations, but width and height can be extended. For example,\n   * you may want users to always get and set a scaled width:\n      Object.defineProperty(this, 'width', {\n        enumerable: true,\n        configurable: true,\n        get: function() {\n          return this._internalWidth * this.scale;\n        },\n        set: function(value) {\n          this._internalWidth = value / this.scale;\n        }\n      });\n   */\n\n  /**\n  * Width of the sprite's current image.\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  *\n  * @property width\n  * @type {Number}\n  * @default 100\n  */\n  Object.defineProperty(this, 'width', {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return this._internalWidth;\n    },\n    set: function(value) {\n      this._internalWidth = value;\n    }\n  });\n\n  if(_w === undefined)\n    this.width = 100;\n  else\n    this.width = _w;\n\n  /**\n  * Height of the sprite's current image.\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  *\n  * @property height\n  * @type {Number}\n  * @default 100\n  */\n  Object.defineProperty(this, 'height', {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return this._internalHeight;\n    },\n    set: function(value) {\n      this._internalHeight = value;\n    }\n  });\n\n  if(_h === undefined)\n    this.height = 100;\n  else\n    this.height = _h;\n\n  /**\n  * Unscaled width of the sprite\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  *\n  * @property originalWidth\n  * @type {Number}\n  * @default 100\n  */\n  this.originalWidth = this._internalWidth;\n\n  /**\n  * Unscaled height of the sprite\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  *\n  * @property originalHeight\n  * @type {Number}\n  * @default 100\n  */\n  this.originalHeight = this._internalHeight;\n\n  /**\n  * True if the sprite has been removed.\n  *\n  * @property removed\n  * @type {Boolean}\n  */\n  this.removed = false;\n\n  /**\n  * Cycles before self removal.\n  * Set it to initiate a countdown, every draw cycle the property is\n  * reduced by 1 unit. At 0 it will call a sprite.remove()\n  * Disabled if set to -1.\n  *\n  * @property life\n  * @type {Number}\n  * @default -1\n  */\n  this.life = -1;\n\n  /**\n  * If set to true, draws an outline of the collider, the depth, and center.\n  *\n  * @property debug\n  * @type {Boolean}\n  * @default false\n  */\n  this.debug = false;\n\n  /**\n  * If no image or animations are set this is color of the\n  * placeholder rectangle\n  *\n  * @property shapeColor\n  * @type {color}\n  */\n  this.shapeColor = color(random(255), random(255), random(255));\n\n  /**\n  * Groups the sprite belongs to, including allSprites\n  *\n  * @property groups\n  * @type {Array}\n  */\n  this.groups = [];\n\n  var animations = {};\n\n  //The current animation's label.\n  var currentAnimation = '';\n\n  /**\n  * Reference to the current animation.\n  *\n  * @property animation\n  * @type {Animation}\n  */\n  this.animation = undefined;\n\n  /**\n  * Internal variable to keep track of whether this sprite is drawn while\n  * the camera is active.\n  * Used in Sprite.update() to know whether to use camera mouse coordinates.\n  * @see https://github.com/molleindustria/p5.play/issues/107\n  *\n  * @private\n  * @property _drawnWithCamera\n  * @type {Boolean}\n  * @default false\n  */\n  this._drawnWithCamera = false;\n\n  /*\n   * @private\n   * Keep animation properties in sync with how the animation changes.\n   */\n  this._syncAnimationSizes = function() {\n    //has an animation but the collider is still default\n    //the animation wasn't loaded. if the animation is not a 1x1 image\n    //it means it just finished loading\n    if(this.colliderType === 'default' &&\n      animations[currentAnimation].getWidth() !== 1 && animations[currentAnimation].getHeight() !== 1)\n    {\n      this.collider = this.getBoundingBox();\n      this.colliderType = 'image';\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n      //quadTree.insert(this);\n    }\n\n    //update size and collider\n    if(animations[currentAnimation].frameChanged || this.width === undefined || this.height === undefined)\n    {\n      //this.collider = this.getBoundingBox();\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n    }\n  };\n\n  /**\n  * Updates the sprite.\n  * Called automatically at the beginning of the draw cycle.\n  *\n  * @method update\n  */\n  this.update = function() {\n\n    if(!this.removed)\n    {\n      //if there has been a change somewhere after the last update\n      //the old position is the last position registered in the update\n      if(this.newPosition !== this.position)\n        this.previousPosition = createVector(this.newPosition.x, this.newPosition.y);\n      else\n        this.previousPosition = createVector(this.position.x, this.position.y);\n\n      this.velocity.x *= 1 - this.friction;\n      this.velocity.y *= 1 - this.friction;\n\n      if(this.maxSpeed !== -1)\n        this.limitSpeed(this.maxSpeed);\n\n      if(this.rotateToDirection && this.velocity.mag() > 0)\n        this._rotation = this.getDirection();\n\n      this.rotation += this.rotationSpeed;\n\n      this.position.x += this.velocity.x;\n      this.position.y += this.velocity.y;\n\n      this.newPosition = createVector(this.position.x, this.position.y);\n\n      this.deltaX = this.position.x - this.previousPosition.x;\n      this.deltaY = this.position.y - this.previousPosition.y;\n\n      //if there is an animation\n      if(animations[currentAnimation])\n      {\n        //update it\n        animations[currentAnimation].update();\n\n        this._syncAnimationSizes();\n      }\n\n      //a collider is created either manually with setCollider or\n      //when I check this sprite for collisions or overlaps\n      if(this.collider)\n      {\n        if(this.collider instanceof AABB)\n        {\n        //scale / rotate collider\n        var t;\n        if (pInst._angleMode === pInst.RADIANS) {\n          t = radians(this.rotation);\n        } else {\n          t = this.rotation;\n        }\n\n        if(this.colliderType === 'custom')\n          {\n          this.collider.extents.x = this.collider.originalExtents.x * abs(this._getScaleX()) * abs(cos(t)) +\n          this.collider.originalExtents.y * abs(this._getScaleY()) * abs(sin(t));\n\n          this.collider.extents.y = this.collider.originalExtents.x * abs(this._getScaleX()) * abs(sin(t)) +\n          this.collider.originalExtents.y * abs(this._getScaleY()) * abs(cos(t));\n          }\n        else if(this.colliderType === 'default')\n          {\n          this.collider.extents.x = this._internalWidth * abs(this._getScaleX()) * abs(cos(t)) +\n          this._internalHeight * abs(this._getScaleY()) * abs(sin(t));\n          this.collider.extents.y = this._internalWidth * abs(this._getScaleX()) * abs(sin(t)) +\n          this._internalHeight * abs(this._getScaleY()) * abs(cos(t));\n          }\n        else if(this.colliderType === 'image')\n          {\n          this.collider.extents.x = this._internalWidth * abs(cos(t)) +\n          this._internalHeight * abs(sin(t));\n\n          this.collider.extents.y = this._internalWidth * abs(sin(t)) +\n          this._internalHeight * abs(cos(t));\n          }\n        }\n\n        if(this.collider instanceof CircleCollider)\n        {\n        //print(this.scale);\n        this.collider.radius = this.collider.originalRadius * abs(this.scale);\n        }\n\n      }//end collider != null\n\n      //mouse actions\n      if (this.mouseActive)\n      {\n        //if no collider set it\n          if(!this.collider)\n            this.setDefaultCollider();\n\n        this.mouseUpdate();\n      }\n      else\n      {\n        if (typeof(this.onMouseOver) === 'function' ||\n            typeof(this.onMouseOut) === 'function' ||\n            typeof(this.onMousePressed) === 'function' ||\n            typeof(this.onMouseReleased) === 'function')\n        {\n          //if a mouse function is set\n          //it's implied we want to have it mouse active so\n          //we do this automatically\n          this.mouseActive = true;\n\n          //if no collider set it\n          if(!this.collider)\n            this.setDefaultCollider();\n\n          this.mouseUpdate();\n        }\n      }\n\n      //self destruction countdown\n      if (this.life>0)\n        this.life--;\n      if (this.life === 0)\n        this.remove();\n    }\n  };//end update\n\n  /**\n   * Creates a default collider matching the size of the\n   * placeholder rectangle or the bounding box of the image.\n   *\n   * @method setDefaultCollider\n   */\n  this.setDefaultCollider = function() {\n\n    //if has animation get the animation bounding box\n    //working only for preloaded images\n    if(animations[currentAnimation] && (animations[currentAnimation].getWidth() !== 1 && animations[currentAnimation].getHeight() !== 1))\n    {\n      this.collider = this.getBoundingBox();\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n      //quadTree.insert(this);\n      this.colliderType = 'image';\n      //print(\"IMAGE COLLIDER ADDED\");\n    }\n    else if(animations[currentAnimation] && animations[currentAnimation].getWidth() === 1 && animations[currentAnimation].getHeight() === 1)\n    {\n    //animation is still loading\n    //print(\"wait\");\n    }\n    else //get the with and height defined at the creation\n    {\n      this.collider = new AABB(pInst, this.position, createVector(this._internalWidth, this._internalHeight));\n      //quadTree.insert(this);\n      this.colliderType = 'default';\n    }\n\n    pInst.quadTree.insert(this);\n  };\n\n  /**\n   * Updates the sprite mouse states and triggers the mouse events:\n   * onMouseOver, onMouseOut, onMousePressed, onMouseReleased\n   *\n   * @method mouseUpdate\n   */\n  this.mouseUpdate = function() {\n\n    var mouseWasOver = this.mouseIsOver;\n    var mouseWasPressed = this.mouseIsPressed;\n\n    this.mouseIsOver = false;\n    this.mouseIsPressed = false;\n\n    var mousePosition;\n\n    if(this._drawnWithCamera)\n      mousePosition = createVector(camera.mouseX, camera.mouseY);\n    else\n      mousePosition = createVector(pInst.mouseX, pInst.mouseY);\n\n      //rollover\n      if(this.collider)\n      {\n\n        if (this.collider instanceof CircleCollider)\n        {\n          if (dist(mousePosition.x, mousePosition.y, this.collider.center.x, this.collider.center.y) < this.collider.radius)\n            this.mouseIsOver = true;\n        } else if (this.collider instanceof AABB)\n        {\n          if (mousePosition.x > this.collider.left() &&\n              mousePosition.y > this.collider.top() &&\n              mousePosition.x < this.collider.right() &&\n              mousePosition.y < this.collider.bottom())\n          {\n            this.mouseIsOver = true;\n          }\n        }\n\n        //global p5 var\n        if(this.mouseIsOver && pInst.mouseIsPressed)\n          this.mouseIsPressed = true;\n\n        //event change - call functions\n        if(!mouseWasOver && this.mouseIsOver && this.onMouseOver !== undefined)\n          if(typeof(this.onMouseOver) === 'function')\n            this.onMouseOver.call(this, this);\n          else\n            print('Warning: onMouseOver should be a function');\n\n        if(mouseWasOver && !this.mouseIsOver && this.onMouseOut !== undefined)\n          if(typeof(this.onMouseOut) === 'function')\n            this.onMouseOut.call(this, this);\n          else\n            print('Warning: onMouseOut should be a function');\n\n        if(!mouseWasPressed && this.mouseIsPressed && this.onMousePressed !== undefined)\n          if(typeof(this.onMousePressed) === 'function')\n            this.onMousePressed.call(this, this);\n          else\n            print('Warning: onMousePressed should be a function');\n\n        if(mouseWasPressed && !pInst.mouseIsPressed && !this.mouseIsPressed && this.onMouseReleased !== undefined)\n          if(typeof(this.onMouseReleased) === 'function')\n            this.onMouseReleased.call(this, this);\n          else\n            print('Warning: onMouseReleased should be a function');\n\n      }\n\n  };\n\n  /**\n  * Sets a collider for the sprite.\n  *\n  * In p5.play a Collider is an invisible circle or rectangle\n  * that can have any size or position relative to the sprite and which\n  * will be used to detect collisions and overlapping with other sprites,\n  * or the mouse cursor.\n  *\n  * If the sprite is checked for collision, bounce, overlapping or mouse events\n  * a collider is automatically created from the width and height parameter\n  * passed at the creation of the sprite or the from the image dimension in case\n  * of animated sprites.\n  *\n  * Often the image bounding box is not appropriate as the active area for\n  * collision detection so you can set a circular or rectangular sprite with\n  * different dimensions and offset from the sprite's center.\n  *\n  * There are four ways to call this method:\n  *\n  * 1. setCollider(\"rectangle\")\n  * 2. setCollider(\"rectangle\", offsetX, offsetY, width, height)\n  * 3. setCollider(\"circle\")\n  * 4. setCollider(\"circle\", offsetX, offsetY, radius)\n  *\n  * @method setCollider\n  * @param {String} type Either \"rectangle\" or \"circle\"\n  * @param {Number} offsetX Collider x position from the center of the sprite\n  * @param {Number} offsetY Collider y position from the center of the sprite\n  * @param {Number} width Collider width or radius\n  * @param {Number} height Collider height\n  * @throws {TypeError} if given invalid parameters.\n  */\n  this.setCollider = function(type, offsetX, offsetY, width, height) {\n    if (!(type === 'rectangle' || type === 'circle')) {\n      throw new TypeError('setCollider expects the first argument to be either \"circle\" or \"rectangle\"');\n    } else if (type === 'circle' && arguments.length > 1 && arguments.length < 4) {\n      throw new TypeError('Usage: setCollider(\"circle\") or setCollider(\"circle\", offsetX, offsetY, radius)');\n    } else if (type === 'circle' && arguments.length > 4) {\n      pInst._warn('Extra parameters to setCollider were ignored. Usage: setCollider(\"circle\") or setCollider(\"circle\", offsetX, offsetY, radius)');\n    } else if (type === 'rectangle' && arguments.length > 1 && arguments.length < 5) {\n      throw new TypeError('Usage: setCollider(\"rectangle\") or setCollider(\"rectangle\", offsetX, offsetY, width, height)');\n    } else if (type === 'rectangle' && arguments.length > 5) {\n      pInst._warn('Extra parameters to setCollider were ignored. Usage: setCollider(\"rectangle\") or setCollider(\"rectangle\", offsetX, offsetY, width, height)');\n    }\n\n    this.colliderType = 'custom';\n\n    var v = createVector(offsetX, offsetY);\n    if (type === 'rectangle' && arguments.length === 1) {\n      this.collider = new AABB(pInst, this.position, createVector(this.width, this.height));\n    } else if (type === 'rectangle' && arguments.length >= 5) {\n      this.collider = new AABB(pInst, this.position, createVector(width, height), v);\n    } else if (type === 'circle' && arguments.length === 1) {\n      this.collider = new CircleCollider(pInst, this.position, Math.floor(Math.max(this.width, this.height) / 2));\n    } else if (type === 'circle' && arguments.length >= 4) {\n      this.collider = new CircleCollider(pInst, this.position, width, v);\n    }\n\n    quadTree.insert(this);\n  };\n\n  /**\n   * Returns a the bounding box of the current image\n   * @method getBoundingBox\n   */\n  this.getBoundingBox = function() {\n\n    var w = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n    var h = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n\n    //if the bounding box is 1x1 the image is not loaded\n    //potential issue with actual 1x1 images\n    if(w === 1 && h === 1) {\n      //not loaded yet\n      return new AABB(pInst, this.position, createVector(w, h));\n    }\n    else {\n      return new AABB(pInst, this.position, createVector(w, h));\n    }\n  };\n\n  /**\n  * Sets the sprite's horizontal mirroring.\n  * If 1 the images displayed normally\n  * If -1 the images are flipped horizontally\n  * If no argument returns the current x mirroring\n  *\n  * @method mirrorX\n  * @param {Number} dir Either 1 or -1\n  * @return {Number} Current mirroring if no parameter is specified\n  */\n  this.mirrorX = function(dir) {\n    if(dir === 1 || dir === -1)\n      dirX = dir;\n    else\n      return dirX;\n  };\n\n  /**\n  * Sets the sprite's vertical mirroring.\n  * If 1 the images displayed normally\n  * If -1 the images are flipped vertically\n  * If no argument returns the current y mirroring\n  *\n  * @method mirrorY\n  * @param {Number} dir Either 1 or -1\n  * @return {Number} Current mirroring if no parameter is specified\n  */\n  this.mirrorY = function(dir) {\n    if(dir === 1 || dir === -1)\n      dirY = dir;\n    else\n      return dirY;\n  };\n\n  /*\n   * Returns the value the sprite should be scaled in the X direction.\n   * Used to calculate rendering and collisions.\n   * @private\n   */\n  this._getScaleX = function()\n  {\n    return this.scale;\n  };\n\n  /*\n   * Returns the value the sprite should be scaled in the Y direction.\n   * Used to calculate rendering and collisions.\n   * @private\n   */\n  this._getScaleY = function()\n  {\n    return this.scale;\n  };\n\n  /**\n   * Manages the positioning, scale and rotation of the sprite\n   * Called automatically, it should not be overridden\n   * @private\n   * @final\n   * @method display\n   */\n  this.display = function()\n  {\n    if (this.visible && !this.removed)\n    {\n      push();\n      colorMode(RGB);\n\n      noStroke();\n      rectMode(CENTER);\n      ellipseMode(CENTER);\n      imageMode(CENTER);\n\n      translate(this.position.x, this.position.y);\n      scale(this._getScaleX()*dirX, this._getScaleY()*dirY);\n      if (pInst._angleMode === pInst.RADIANS) {\n        rotate(radians(this.rotation));\n      } else {\n        rotate(this.rotation);\n      }\n      this.draw();\n      //draw debug info\n      pop();\n\n      this._drawnWithCamera = camera.active;\n\n      if(this.debug)\n      {\n        push();\n        //draw the anchor point\n        stroke(0, 255, 0);\n        strokeWeight(1);\n        line(this.position.x-10, this.position.y, this.position.x+10, this.position.y);\n        line(this.position.x, this.position.y-10, this.position.x, this.position.y+10);\n        noFill();\n\n        //depth number\n        noStroke();\n        fill(0, 255, 0);\n        textAlign(LEFT, BOTTOM);\n        textSize(16);\n        text(this.depth+'', this.position.x+4, this.position.y-2);\n\n        noFill();\n        stroke(0, 255, 0);\n\n        //bounding box\n        if(this.collider !== undefined)\n        {\n          this.collider.draw();\n        }\n        pop();\n      }\n\n    }\n  };\n\n\n  /**\n  * Manages the visuals of the sprite.\n  * It can be overridden with a custom drawing function.\n  * The 0,0 point will be the center of the sprite.\n  * Example:\n  * sprite.draw = function() { ellipse(0,0,10,10) }\n  * Will display the sprite as circle.\n  *\n  * @method draw\n  */\n  this.draw = function()\n  {\n    if(currentAnimation !== '' && animations)\n    {\n      if(animations[currentAnimation])\n        animations[currentAnimation].draw(0, 0, 0);\n    }\n    else\n    {\n      noStroke();\n      fill(this.shapeColor);\n      rect(0, 0, this._internalWidth, this._internalHeight);\n    }\n  };\n\n  /**\n   * Removes the Sprite from the sketch.\n   * The removed Sprite won't be drawn or updated anymore.\n   *\n   * @method remove\n   */\n  this.remove = function() {\n    this.removed = true;\n\n    quadTree.removeObject(this);\n\n    //when removed from the \"scene\" also remove all the references in all the groups\n    while (this.groups.length > 0) {\n      this.groups[0].remove(this);\n    }\n  };\n\n  /**\n  * Sets the velocity vector.\n  *\n  * @method setVelocity\n  * @param {Number} x X component\n  * @param {Number} y Y component\n  */\n  this.setVelocity = function(x, y) {\n    this.velocity.x = x;\n    this.velocity.y = y;\n  };\n\n  /**\n  * Calculates the scalar speed.\n  *\n  * @method getSpeed\n  * @return {Number} Scalar speed\n  */\n  this.getSpeed = function() {\n    return this.velocity.mag();\n  };\n\n  /**\n  * Calculates the movement's direction in degrees.\n  *\n  * @method getDirection\n  * @return {Number} Angle in degrees\n  */\n  this.getDirection = function() {\n\n    var direction = atan2(this.velocity.y, this.velocity.x);\n\n    if(isNaN(direction))\n      direction = 0;\n\n    // Unlike Math.atan2, the atan2 method above will return degrees if\n    // the current p5 angleMode is DEGREES, and radians if the p5 angleMode is\n    // RADIANS.  This method should always return degrees (for now).\n    // See https://github.com/molleindustria/p5.play/issues/94\n    if (pInst._angleMode === pInst.RADIANS) {\n      direction = degrees(direction);\n    }\n\n    return direction;\n  };\n\n  /**\n  * Adds the sprite to an existing group\n  *\n  * @method addToGroup\n  * @param {Object} group\n  */\n  this.addToGroup = function(group) {\n    if(group instanceof Array)\n      group.add(this);\n    else\n      print('addToGroup error: '+group+' is not a group');\n  };\n\n  /**\n  * Limits the scalar speed.\n  *\n  * @method limitSpeed\n  * @param {Number} max Max speed: positive number\n  */\n  this.limitSpeed = function(max) {\n\n    //update linear speed\n    var speed = this.getSpeed();\n\n    if(abs(speed)>max)\n    {\n      //find reduction factor\n      var k = max/abs(speed);\n      this.velocity.x *= k;\n      this.velocity.y *= k;\n    }\n  };\n\n  /**\n  * Set the speed and direction of the sprite.\n  * The action overwrites the current velocity.\n  * If direction is not supplied, the current direction is maintained.\n  * If direction is not supplied and there is no current velocity, the current\n  * rotation angle used for the direction.\n  *\n  * @method setSpeed\n  * @param {Number}  speed Scalar speed\n  * @param {Number}  [angle] Direction in degrees\n  */\n  this.setSpeed = function(speed, angle) {\n    var a;\n    if (typeof angle === 'undefined') {\n      if (this.velocity.x !== 0 || this.velocity.y !== 0) {\n        a = pInst.atan2(this.velocity.y, this.velocity.x);\n      } else {\n        if (pInst._angleMode === pInst.RADIANS) {\n          a = radians(this._rotation);\n        } else {\n          a = this._rotation;\n        }\n      }\n    } else {\n      if (pInst._angleMode === pInst.RADIANS) {\n        a = radians(angle);\n      } else {\n        a = angle;\n      }\n    }\n    this.velocity.x = cos(a)*speed;\n    this.velocity.y = sin(a)*speed;\n  };\n\n  /**\n  * Pushes the sprite in a direction defined by an angle.\n  * The force is added to the current velocity.\n  *\n  * @method addSpeed\n  * @param {Number}  speed Scalar speed to add\n  * @param {Number}  angle Direction in degrees\n  */\n  this.addSpeed = function(speed, angle) {\n    var a;\n    if (pInst._angleMode === pInst.RADIANS) {\n      a = radians(angle);\n    } else {\n      a = angle;\n    }\n    this.velocity.x += cos(a) * speed;\n    this.velocity.y += sin(a) * speed;\n  };\n\n  /**\n  * Pushes the sprite toward a point.\n  * The force is added to the current velocity.\n  *\n  * @method attractionPoint\n  * @param {Number}  magnitude Scalar speed to add\n  * @param {Number}  pointX Direction x coordinate\n  * @param {Number}  pointY Direction y coordinate\n  */\n  this.attractionPoint = function(magnitude, pointX, pointY) {\n    var angle = atan2(pointY-this.position.y, pointX-this.position.x);\n    this.velocity.x += cos(angle) * magnitude;\n    this.velocity.y += sin(angle) * magnitude;\n  };\n\n\n  /**\n  * Adds an image to the sprite.\n  * An image will be considered a one-frame animation.\n  * The image should be preloaded in the preload() function using p5 loadImage.\n  * Animations require a identifying label (string) to change them.\n  * The image is stored in the sprite but not necessarily displayed\n  * until Sprite.changeAnimation(label) is called\n  *\n  * Usages:\n  * - sprite.addImage(label, image);\n  * - sprite.addImage(image);\n  *\n  * If only an image is passed no label is specified\n  *\n  * @method addImage\n  * @param {String|p5.Image} label Label or image\n  * @param {p5.Image} [img] Image\n  */\n  this.addImage = function()\n  {\n    if(typeof arguments[0] === 'string' && arguments[1] instanceof p5.Image)\n      this.addAnimation(arguments[0], arguments[1]);\n    else if(arguments[0] instanceof p5.Image)\n      this.addAnimation('normal', arguments[0]);\n    else\n      throw('addImage error: allowed usages are <image> or <label>, <image>');\n  };\n\n  /**\n  * Adds an animation to the sprite.\n  * The animation should be preloaded in the preload() function\n  * using loadAnimation.\n  * Animations require a identifying label (string) to change them.\n  * Animations are stored in the sprite but not necessarily displayed\n  * until Sprite.changeAnimation(label) is called.\n  *\n  * Usage:\n  * - sprite.addAnimation(label, animation);\n  *\n  * Alternative usages. See Animation for more information on file sequences:\n  * - sprite.addAnimation(label, firstFrame, lastFrame);\n  * - sprite.addAnimation(label, frame1, frame2, frame3...);\n  *\n  * @method addAnimation\n  * @param {String} label Animation identifier\n  * @param {Animation} animation The preloaded animation\n  */\n  this.addAnimation = function(label)\n  {\n    var anim;\n\n    if(typeof label !== 'string')\n    {\n      print('Sprite.addAnimation error: the first argument must be a label (String)');\n      return -1;\n    }\n    else if(arguments.length < 2)\n    {\n      print('addAnimation error: you must specify a label and n frame images');\n      return -1;\n    }\n    else if(arguments[1] instanceof Animation)\n    {\n\n      var sourceAnimation = arguments[1];\n\n      var newAnimation = sourceAnimation.clone();\n\n      animations[label] = newAnimation;\n\n      if(currentAnimation === '')\n      {\n        currentAnimation = label;\n        this.animation = newAnimation;\n      }\n\n      newAnimation.isSpriteAnimation = true;\n\n      this._internalWidth = newAnimation.getWidth()*abs(this._getScaleX());\n      this._internalHeight = newAnimation.getHeight()*abs(this._getScaleY());\n\n      return newAnimation;\n    }\n    else\n    {\n      var animFrames = [];\n      for(var i=1; i<arguments.length; i++)\n        animFrames.push(arguments[i]);\n\n      anim = construct(pInst.Animation, animFrames);\n      animations[label] = anim;\n\n      if(currentAnimation === '')\n      {\n        currentAnimation = label;\n        this.animation = anim;\n      }\n      anim.isSpriteAnimation = true;\n\n      this._internalWidth = anim.getWidth()*abs(this._getScaleX());\n      this._internalHeight = anim.getHeight()*abs(this._getScaleY());\n\n      return anim;\n    }\n\n  };\n\n  /**\n  * Changes the displayed image/animation.\n  * Equivalent to changeAnimation\n  *\n  * @method changeImage\n  * @param {String} label Image/Animation identifier\n  */\n  this.changeImage = function(label) {\n    this.changeAnimation(label);\n  };\n\n   /**\n  * Returns the label of the current animation\n  *\n  * @method getAnimationLabel\n  * @return {String} label Image/Animation identifier\n  */\n  this.getAnimationLabel = function() {\n    return currentAnimation;\n  };\n\n  /**\n  * Changes the displayed animation.\n  * See Animation for more control over the sequence.\n  *\n  * @method changeAnimation\n  * @param {String} label Animation identifier\n  */\n  this.changeAnimation = function(label) {\n    if(!animations[label])\n      print('changeAnimation error: no animation labeled '+label);\n    else\n    {\n      currentAnimation = label;\n      this.animation = animations[label];\n    }\n  };\n\n  /**\n  * Checks if the given point corresponds to a transparent pixel\n  * in the sprite's current image. It can be used to check a point collision\n  * against only the visible part of the sprite.\n  *\n  * @method overlapPixel\n  * @param {Number} pointX x coordinate of the point to check\n  * @param {Number} pointY y coordinate of the point to check\n  * @return {Boolean} result True if non-transparent\n  */\n  this.overlapPixel = function(pointX, pointY) {\n    var point = createVector(pointX, pointY);\n\n    var img = this.animation.getFrameImage();\n\n    //convert point to img relative position\n    point.x -= this.position.x-img.width/2;\n    point.y -= this.position.y-img.height/2;\n\n    //out of the image entirely\n    if(point.x<0 || point.x>img.width || point.y<0 || point.y>img.height)\n      return false;\n    else if(this.rotation === 0 && this.scale === 1)\n    {\n      //true if full opacity\n      var values = img.get(point.x, point.y);\n      return values[3] === 255;\n    }\n    else\n    {\n      print('Error: overlapPixel doesn\\'t work with scaled or rotated sprites yet');\n      //offscreen printing to be implemented bleurch\n      return false;\n    }\n  };\n\n  /**\n  * Checks if the given point is inside the sprite's collider.\n  *\n  * @method overlapPoint\n  * @param {Number} pointX x coordinate of the point to check\n  * @param {Number} pointY y coordinate of the point to check\n  * @return {Boolean} result True if inside\n  */\n  this.overlapPoint = function(pointX, pointY) {\n    var point = createVector(pointX, pointY);\n\n    if(!this.collider)\n      this.setDefaultCollider();\n\n    if(this.collider !== undefined)\n    {\n      if(this.collider instanceof AABB)\n        return (point.x > this.collider.left() && point.x < this.collider.right() && point.y > this.collider.top() && point.y < this.collider.bottom());\n      if(this.collider instanceof CircleCollider)\n      {\n        var sqRadius = this.collider.radius * this.collider.radius;\n        var sqDist = pow(this.collider.center.x - point.x, 2) + pow(this.collider.center.y - point.y, 2);\n        return sqDist<sqRadius;\n      }\n      else\n        return false;\n    }\n    else\n      return false;\n\n  };\n\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * If the target is a group the function will be called for each single\n  * sprite overlapping. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.overlap(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method overlap\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.overlap = function(target, callback) {\n    //if(this.collider instanceof AABB && target.collider instanceof AABB)\n    return this.AABBops('overlap', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the current sprite will be displace by\n  * the colliding one in the closest non-overlapping position.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.collide(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method collide\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.collide = function(target, callback) {\n    //if(this.collider instanceof AABB && target.collider instanceof AABB)\n    return this.AABBops('collide', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the current sprite will displace\n  * the colliding one to the closest non-overlapping position.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.displace(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method displace\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.displace = function(target, callback) {\n    return this.AABBops('displace', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the sprites will bounce affecting each\n  * other's trajectories depending on their .velocity, .mass and .restitution\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.bounce(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method bounce\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.bounce = function(target, callback) {\n    return this.AABBops('bounce', target, callback);\n  };\n\n  // Internal collision detection function. Do not use directly.\n  this.AABBops = function(type, target, callback) {\n\n    this.touching.left = false;\n    this.touching.right = false;\n    this.touching.top = false;\n    this.touching.bottom = false;\n\n    var result = false;\n\n    //if single sprite turn into array anyway\n    var others = [];\n\n    if(target instanceof Sprite)\n      others.push(target);\n    else if(target instanceof Array)\n    {\n      if(quadTree !== undefined && quadTree.active)\n        others = quadTree.retrieveFromGroup( this, target);\n\n      if(others.length === 0)\n        others = target;\n\n    }\n    else\n      throw('Error: overlap can only be checked between sprites or groups');\n\n    for(var i=0; i<others.length; i++)\n      if(this !== others[i] && !this.removed) //you can check collisions within the same group but not on itself\n      {\n        var displacement;\n        var other = others[i];\n\n        if(this.collider === undefined)\n          this.setDefaultCollider();\n\n        if(other.collider === undefined)\n          other.setDefaultCollider();\n\n        /*\n        if(this.colliderType==\"default\" && animations[currentAnimation]!=null)\n        {\n          print(\"busted\");\n          return false;\n        }*/\n        if(this.collider !== undefined && other.collider !== undefined)\n        {\n        if(type === 'overlap') {\n            var over;\n\n            //if the other is a circle I calculate the displacement from here\n            if(this.collider instanceof CircleCollider)\n                over = other.collider.overlap(this.collider);\n            else\n                over = this.collider.overlap(other.collider);\n\n            if(over)\n            {\n\n              result = true;\n\n              if(callback !== undefined && typeof callback === 'function')\n                callback.call(this, this, other);\n            }\n          }\n        else if(type === 'collide' || type === 'displace' || type === 'bounce')\n          {\n            displacement = createVector(0, 0);\n\n            //if the sum of the speed is more than the collider i may\n            //have a tunnelling problem\n            var tunnelX = abs(this.velocity.x-other.velocity.x) >= other.collider.extents.x/2 && round(this.deltaX - this.velocity.x) === 0;\n\n            var tunnelY = abs(this.velocity.y-other.velocity.y) >= other.collider.size().y/2 && round(this.deltaY - this.velocity.y) === 0;\n\n\n            if(tunnelX || tunnelY)\n            {\n              //instead of using the colliders I use the bounding box\n              //around the previous position and current position\n              //this is regardless of the collider type\n\n              //the center is the average of the coll centers\n              var c = createVector(\n                (this.position.x+this.previousPosition.x)/2,\n                (this.position.y+this.previousPosition.y)/2);\n\n              //the extents are the distance between the coll centers\n              //plus the extents of both\n              var e = createVector(\n                abs(this.position.x -this.previousPosition.x) + this.collider.extents.x,\n                abs(this.position.y -this.previousPosition.y) + this.collider.extents.y);\n\n              var bbox = new AABB(pInst, c, e, this.collider.offset);\n\n              //bbox.draw();\n\n              if(bbox.overlap(other.collider))\n              {\n                if(tunnelX) {\n\n                  //entering from the right\n                  if(this.velocity.x < 0)\n                    displacement.x = other.collider.right() - this.collider.left() + 1;\n                  else if(this.velocity.x > 0 )\n                    displacement.x = other.collider.left() - this.collider.right() -1;\n                  }\n\n                if(tunnelY) {\n                  //from top\n                  if(this.velocity.y > 0)\n                    displacement.y = other.collider.top() - this.collider.bottom() - 1;\n                  else if(this.velocity.y < 0 )\n                    displacement.y = other.collider.bottom() - this.collider.top() + 1;\n\n                  }\n\n              }//end overlap\n\n            }\n            else //non tunnel overlap\n            {\n\n              //if the other is a circle I calculate the displacement from here\n              //and reverse it\n              if(this.collider instanceof CircleCollider)\n                {\n                displacement = other.collider.collide(this.collider).mult(-1);\n                }\n              else\n                displacement = this.collider.collide(other.collider);\n\n            }\n\n            if(displacement.x !== 0 || displacement.y !== 0)\n            {\n              var newVelX1, newVelY1, newVelX2, newVelY2;\n\n              if (type === 'displace' && !other.immovable) {\n                other.position.sub(displacement);\n              } else if ((type === 'collide' || type === 'bounce') && !this.immovable) {\n                this.position.add(displacement);\n                this.previousPosition = createVector(this.position.x, this.position.y);\n                this.newPosition = createVector(this.position.x, this.position.y);\n              }\n\n              if(displacement.x > 0)\n                this.touching.left = true;\n              if(displacement.x < 0)\n                this.touching.right = true;\n              if(displacement.y < 0)\n                this.touching.bottom = true;\n              if(displacement.y > 0)\n                this.touching.top = true;\n\n              if(type === 'bounce')\n              {\n                if (this.collider instanceof CircleCollider && other.collider instanceof CircleCollider) {\n                  var dx1 = p5.Vector.sub(this.position, other.position);\n                  var dx2 = p5.Vector.sub(other.position, this.position);\n                  var magnitude = dx1.magSq();\n                  var totalMass = this.mass + other.mass;\n                  var m1 = 0, m2 = 0;\n                  if (this.immovable) {\n                    m2 = 2;\n                  } else if (other.immovable) {\n                    m1 = 2;\n                  } else {\n                    m1 = 2 * other.mass / totalMass;\n                    m2 = 2 * this.mass / totalMass;\n                  }\n                  var newVel1 = dx1.mult(m1 * p5.Vector.sub(this.velocity, other.velocity).dot(dx1) / magnitude);\n                  var newVel2 = dx2.mult(m2 * p5.Vector.sub(other.velocity, this.velocity).dot(dx2) / magnitude);\n\n                  this.velocity.sub(newVel1.mult(this.restitution));\n                  other.velocity.sub(newVel2.mult(other.restitution));\n                }\n                else {\n                if(other.immovable)\n                {\n                  newVelX1 = -this.velocity.x+other.velocity.x;\n                  newVelY1 = -this.velocity.y+other.velocity.y;\n                }\n                else\n                {\n                  newVelX1 = (this.velocity.x * (this.mass - other.mass) + (2 * other.mass * other.velocity.x)) / (this.mass + other.mass);\n                  newVelY1 = (this.velocity.y * (this.mass - other.mass) + (2 * other.mass * other.velocity.y)) / (this.mass + other.mass);\n                  newVelX2 = (other.velocity.x * (other.mass - this.mass) + (2 * this.mass * this.velocity.x)) / (this.mass + other.mass);\n                  newVelY2 = (other.velocity.y * (other.mass - this.mass) + (2 * this.mass * this.velocity.y)) / (this.mass + other.mass);\n                }\n\n                //var bothCircles = (this.collider instanceof CircleCollider &&\n                //                   other.collider  instanceof CircleCollider);\n\n                //if(this.touching.left || this.touching.right || this.collider instanceof CircleCollider)\n\n                //print(displacement);\n\n                if(abs(displacement.x)>abs(displacement.y))\n                {\n\n\n                  if(!this.immovable)\n                  {\n                    this.velocity.x = newVelX1*this.restitution;\n\n                  }\n\n                  if(!other.immovable)\n                    other.velocity.x = newVelX2*other.restitution;\n\n                }\n                //if(this.touching.top || this.touching.bottom || this.collider instanceof CircleCollider)\n                if(abs(displacement.x)<abs(displacement.y))\n                {\n\n                  if(!this.immovable)\n                    this.velocity.y = newVelY1*this.restitution;\n\n                  if(!other.immovable)\n                    other.velocity.y = newVelY2*other.restitution;\n                }\n                }\n              }\n              //else if(type == \"collide\")\n                //this.velocity = createVector(0,0);\n\n              if(callback !== undefined && typeof callback === 'function')\n                callback.call(this, this, other);\n\n              result = true;\n            }\n          }\n        }//end collider exists\n      }\n\n    return result;\n  };\n} //end Sprite class\n\ndefineLazyP5Property('Sprite', boundConstructorFactory(Sprite));\n\n/**\n   * A camera facilitates scrolling and zooming for scenes extending beyond\n   * the canvas. A camera has a position, a zoom factor, and the mouse\n   * coordinates relative to the view.\n   * The camera is automatically created on the first draw cycle.\n   *\n   * In p5.js terms the camera wraps the whole drawing cycle in a\n   * transformation matrix but it can be disable anytime during the draw\n   * cycle for example to draw interface elements in an absolute position.\n   *\n   * @class Camera\n   * @constructor\n   * @param {Number} x Initial x coordinate\n   * @param {Number} y Initial y coordinate\n   * @param {Number} zoom magnification\n   **/\nfunction Camera(pInst, x, y, zoom) {\n  /**\n  * Camera position. Defines the global offset of the sketch.\n  *\n  * @property position\n  * @type {p5.Vector}\n  */\n  this.position = pInst.createVector(x, y);\n\n  /**\n  * Camera zoom. Defines the global scale of the sketch.\n  * A scale of 1 will be the normal size. Setting it to 2 will make everything\n  * twice the size. .5 will make everything half size.\n  *\n  * @property zoom\n  * @type {Number}\n  */\n  this.zoom = zoom;\n\n  /**\n  * MouseX translated to the camera view.\n  * Offsetting and scaling the canvas will not change the sprites' position\n  * nor the mouseX and mouseY variables. Use this property to read the mouse\n  * position if the camera moved or zoomed.\n  *\n  * @property mouseX\n  * @type {Number}\n  */\n  this.mouseX = pInst.mouseX;\n\n  /**\n  * MouseY translated to the camera view.\n  * Offsetting and scaling the canvas will not change the sprites' position\n  * nor the mouseX and mouseY variables. Use this property to read the mouse\n  * position if the camera moved or zoomed.\n  *\n  * @property mouseY\n  * @type {Number}\n  */\n  this.mouseY = pInst.mouseY;\n\n  /**\n  * True if the camera is active.\n  * Read only property. Use the methods Camera.on() and Camera.off()\n  * to enable or disable the camera.\n  *\n  * @property active\n  * @type {Boolean}\n  */\n  this.active = false;\n\n  /**\n  * Activates the camera.\n  * The canvas will be drawn according to the camera position and scale until\n  * Camera.off() is called\n  *\n  * @method on\n  */\n  this.on = function() {\n    if(!this.active)\n    {\n      cameraPush.call(pInst);\n      this.active = true;\n    }\n  };\n\n  /**\n  * Deactivates the camera.\n  * The canvas will be drawn normally, ignoring the camera's position\n  * and scale until Camera.on() is called\n  *\n  * @method off\n  */\n  this.off = function() {\n    if(this.active)\n    {\n      cameraPop.call(pInst);\n      this.active = false;\n    }\n  };\n} //end camera class\n\ndefineLazyP5Property('Camera', boundConstructorFactory(Camera));\n\n//called pre draw by default\nfunction cameraPush() {\n  var pInst = this;\n  var camera = pInst.camera;\n\n  //awkward but necessary in order to have the camera at the center\n  //of the canvas by default\n  if(!camera.init && camera.position.x === 0 && camera.position.y === 0)\n    {\n    camera.position.x=pInst.width/2;\n    camera.position.y=pInst.height/2;\n    camera.init = true;\n    }\n\n  camera.mouseX = pInst.mouseX+camera.position.x-pInst.width/2;\n  camera.mouseY = pInst.mouseY+camera.position.y-pInst.height/2;\n\n  if(!camera.active)\n  {\n    camera.active = true;\n    pInst.push();\n    pInst.scale(camera.zoom);\n    pInst.translate(-camera.position.x+pInst.width/2/camera.zoom, -camera.position.y+pInst.height/2/camera.zoom);\n  }\n}\n\n//called postdraw by default\nfunction cameraPop() {\n  var pInst = this;\n\n  if(pInst.camera.active)\n  {\n    pInst.pop();\n    pInst.camera.active = false;\n  }\n}\n\n\n\n\n/**\n   * In p5.play groups are collections of sprites with similar behavior.\n   * For example a group may contain all the sprites in the background\n   * or all the sprites that \"kill\" the player.\n   *\n   * Groups are \"extended\" arrays and inherit all their properties\n   * e.g. group.length\n   *\n   * Since groups contain only references, a sprite can be in multiple\n   * groups and deleting a group doesn't affect the sprites themselves.\n   *\n   * Sprite.remove() will also remove the sprite from all the groups\n   * it belongs to.\n   *\n   * @class Group\n   * @constructor\n   */\nfunction Group() {\n\n  //basically extending the array\n  var array = [];\n\n  /**\n  * Gets the member at index i.\n  *\n  * @method get\n  * @param {Number} i The index of the object to retrieve\n  */\n  array.get = function(i) {\n    return array[i];\n  };\n\n  /**\n  * Checks if the group contains a sprite.\n  *\n  * @method contains\n  * @param {Sprite} sprite The sprite to search\n  * @return {Number} Index or -1 if not found\n  */\n  array.contains = function(sprite) {\n    return this.indexOf(sprite)>-1;\n  };\n\n  /**\n   * Same as Group.contains\n   * @method indexOf\n   */\n  array.indexOf = function(item) {\n    for (var i = 0, len = array.length; i < len; ++i) {\n      if (virtEquals(item, array[i])) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  /**\n  * Adds a sprite to the group.\n  *\n  * @method add\n  * @param {Sprite} s The sprite to be added\n  */\n  array.add = function(s) {\n    if(!(s instanceof Sprite)) {\n      throw('Error: you can only add sprites to a group');\n    }\n\n    if (-1 === this.indexOf(s)) {\n      array.push(s);\n      s.groups.push(this);\n    }\n  };\n\n  /**\n   * Same as group.length\n   * @method size\n   */\n  array.size = function() {\n    return array.length;\n  };\n\n  /**\n  * Removes all the sprites in the group\n  * from the scene.\n  *\n  * @method removeSprites\n  */\n  array.removeSprites = function() {\n    while (array.length > 0) {\n      array[0].remove();\n    }\n  };\n\n  /**\n  * Removes all references to the group.\n  * Does not remove the actual sprites.\n  *\n  * @method clear\n  */\n  array.clear = function() {\n    array.length = 0;\n  };\n\n  /**\n  * Removes a sprite from the group.\n  * Does not remove the actual sprite, only the affiliation (reference).\n  *\n  * @method remove\n  * @param {Sprite} item The sprite to be removed\n  * @return {Boolean} True if sprite was found and removed\n  */\n  array.remove = function(item) {\n    if(!(item instanceof Sprite)) {\n      throw('Error: you can only remove sprites from a group');\n    }\n\n    var i, removed = false;\n    for (i = array.length - 1; i >= 0; i--) {\n      if (array[i] === item) {\n        array.splice(i, 1);\n        removed = true;\n      }\n    }\n\n    if (removed) {\n      for (i = item.groups.length - 1; i >= 0; i--) {\n        if (item.groups[i] === this) {\n          item.groups.splice(i, 1);\n        }\n      }\n    }\n\n    return removed;\n  };\n\n  /**\n   * Returns a copy of the group as standard array.\n   * @method toArray\n   */\n  array.toArray = function() {\n    return array.slice(0);\n  };\n\n  /**\n  * Returns the highest depth in a group\n  *\n  * @method maxDepth\n  * @return {Number} The depth of the sprite drawn on the top\n  */\n  array.maxDepth = function() {\n    if (array.length === 0) {\n      return 0;\n    }\n\n    return array.reduce(function(maxDepth, sprite) {\n      return Math.max(maxDepth, sprite.depth);\n    }, -Infinity);\n  };\n\n  /**\n  * Returns the lowest depth in a group\n  *\n  * @method minDepth\n  * @return {Number} The depth of the sprite drawn on the bottom\n  */\n  array.minDepth = function() {\n    if (array.length === 0) {\n      return 99999;\n    }\n\n    return array.reduce(function(minDepth, sprite) {\n      return Math.min(minDepth, sprite.depth);\n    }, Infinity);\n  };\n\n  /**\n  * Draws all the sprites in the group.\n  *\n  * @method draw\n  */\n  array.draw = function() {\n\n    //sort by depth\n    this.sort(function(a, b) {\n      return a.depth - b.depth;\n    });\n\n    for(var i = 0; i<this.size(); i++)\n    {\n      this.get(i).display();\n    }\n  };\n\n  //internal use\n  function virtEquals(obj, other) {\n    if (obj === null || other === null) {\n      return (obj === null) && (other === null);\n    }\n    if (typeof (obj) === 'string') {\n      return obj === other;\n    }\n    if (typeof(obj) !== 'object') {\n      return obj === other;\n    }\n    if (obj.equals instanceof Function) {\n      return obj.equals(other);\n    }\n    return obj === other;\n  }\n\n  /**\n   * Collide each member of group against the target using the given collision\n   * type.  Return true if any collision occurred.\n   * Internal use\n   *\n   * @private\n   * @method _groupCollide\n   * @param {!string} type one of 'overlap', 'collide', 'displace', 'bounce'\n   * @param {Object} target Group or Sprite\n   * @param {Function} [callback] on collision.\n   * @return {boolean} True if any collision/overlap occurred\n   */\n  function _groupCollide(type, target, callback) {\n    var didCollide = false;\n    for(var i = 0; i<this.size(); i++)\n      didCollide = this.get(i).AABBops(type, target, callback) || didCollide;\n    return didCollide;\n  }\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occurs.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.overlap(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method overlap\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.overlap = _groupCollide.bind(array, 'overlap');\n\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites in the group will be displaced\n  * by the colliding one to the closest non-overlapping positions.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.collide(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method collide\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.collide = _groupCollide.bind(array, 'collide');\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites in the group will displace\n  * the colliding ones to the closest non-overlapping positions.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occurs.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.displace(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method displace\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.displace = _groupCollide.bind(array, 'displace');\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites will bounce affecting each\n  * other's trajectories depending on their .velocity, .mass and .restitution.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.bounce(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method bounce\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.bounce = _groupCollide.bind(array, 'bounce');\n\n  return array;\n}\n\np5.prototype.Group = Group;\n\n//circle collider - used internally\nfunction CircleCollider(pInst, _center, _radius, _offset) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n\n  var CENTER = p5.prototype.CENTER;\n\n  this.center = _center;\n  this.radius = _radius;\n  this.originalRadius = _radius;\n\n  if(_offset === undefined)\n    this.offset = createVector(0, 0);\n  else\n    this.offset = _offset;\n  this.extents = createVector(_radius*2, _radius*2);\n\n  this.draw = function()\n  {\n    pInst.noFill();\n    pInst.stroke(0, 255, 0);\n    pInst.rectMode(CENTER);\n    pInst.ellipse(this.center.x+this.offset.x, this.center.y+this.offset.y, this.radius*2, this.radius*2);\n  };\n\n  //should be called only for circle vs circle\n  this.overlap = function(other)\n  {\n    //square dist\n    var r = this.radius + other.radius;\n    r *= r;\n    var thisCenterX = this.center.x + this.offset.x;\n    var thisCenterY = this.center.y + this.offset.y;\n    var otherCenterX = other.center.x + other.offset.x;\n    var otherCenterY = other.center.y + other.offset.y;\n    var sqDist = pow(thisCenterX - otherCenterX, 2) + pow(thisCenterY - otherCenterY, 2);\n    return r > sqDist;\n  };\n\n  //should be called only for circle vs circle\n  this.collide = function(other)\n  {\n    if(this.overlap(other)) {\n      var thisCenterX = this.center.x + this.offset.x;\n      var thisCenterY = this.center.y + this.offset.y;\n      var otherCenterX = other.center.x + other.offset.x;\n      var otherCenterY = other.center.y + other.offset.y;\n      var a = pInst.atan2(thisCenterY-otherCenterY, thisCenterX-otherCenterX);\n      var radii = this.radius+other.radius;\n      var intersection = abs(radii - dist(thisCenterX, thisCenterY, otherCenterX, otherCenterY));\n\n      var displacement = createVector(pInst.cos(a)*intersection, pInst.sin(a)*intersection);\n\n      return displacement;\n    } else {\n      return createVector(0, 0);\n    }\n  };\n\n  this.size = function()\n  {\n    return createVector(this.radius*2, this.radius*2);\n  };\n\n  this.left = function()\n  {\n    return this.center.x+this.offset.x - this.radius;\n  };\n\n  this.right = function()\n  {\n    return this.center.x+this.offset.x + this.radius;\n  };\n\n  this.top = function()\n  {\n    return this.center.y+this.offset.y - this.radius;\n  };\n\n  this.bottom = function()\n  {\n    return this.center.y+this.offset.y + this.radius;\n  };\n\n\n\n}\ndefineLazyP5Property('CircleCollider', boundConstructorFactory(CircleCollider));\n\n//axis aligned bounding box - extents are the half sizes - used internally\nfunction AABB(pInst, _center, _extents, _offset) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n\n  var CENTER = p5.prototype.CENTER;\n  var PI = p5.prototype.PI;\n\n  this.center = _center;\n  this.extents = _extents;\n  this.originalExtents = _extents.copy();\n\n  if(_offset === undefined)\n    this.offset = createVector(0, 0);\n  else\n    this.offset = _offset;\n\n  this.min = function()\n  {\n    return createVector(this.center.x+this.offset.x - this.extents.x, this.center.y+this.offset.y - this.extents.y);\n  };\n\n  this.max = function()\n  {\n    return createVector(this.center.x+this.offset.x + this.extents.x, this.center.y+this.offset.y + this.extents.y);\n  };\n\n  this.right = function()\n  {\n    return this.center.x+this.offset.x + this.extents.x/2;\n  };\n\n  this.left = function()\n  {\n    return this.center.x+this.offset.x - this.extents.x/2;\n  };\n\n  this.top = function()\n  {\n    return this.center.y+this.offset.y - this.extents.y/2;\n  };\n\n  this.bottom = function()\n  {\n    return this.center.y+this.offset.y + this.extents.y/2;\n  };\n\n  this.size = function()\n  {\n    return createVector(this.extents.x * 2, this.extents.y * 2);\n  };\n\n  this.rotate = function(r)\n  {\n    //rotate the bbox\n    var t;\n    if (pInst._angleMode === pInst.RADIANS) {\n      t = radians(r);\n    } else {\n      t = r;\n    }\n\n    var w2 = this.extents.x * abs(pInst.cos(t)) + this.extents.y * abs(pInst.sin(t));\n    var h2 = this.extents.x * abs(pInst.sin(t)) + this.extents.y * abs(pInst.cos(t));\n\n    this.extents.x = w2;\n    this.extents.y = h2;\n\n  };\n\n  this.draw = function()\n  {\n    //fill(col);\n    pInst.noFill();\n    pInst.stroke(0, 255, 0);\n    pInst.rectMode(CENTER);\n    pInst.rect(this.center.x+this.offset.x, this.center.y+this.offset.y, this.size().x/2, this.size().y/2);\n  };\n\n  this.overlap = function(other)\n  {\n    //box vs box\n    if(other instanceof AABB)\n    {\n      var md = other.minkowskiDifference(this);\n\n      if (md.min().x <= 0 &&\n          md.max().x >= 0 &&\n          md.min().y <= 0 &&\n          md.max().y >= 0)\n      {\n        return true;\n      }\n      else\n        return false;\n    }\n    //box vs circle\n    else if(other instanceof CircleCollider)\n    {\n\n      //find closest point to the circle on the box\n      var pt = createVector(other.center.x, other.center.y);\n\n      //I don't know what's going o try to trace a line from centers to see\n      if( other.center.x < this.left() )\n        pt.x = this.left();\n      else if( other.center.x > this.right())\n        pt.x = this.right();\n\n      if( other.center.y < this.top() )\n        pt.y = this.top();\n      else if( other.center.y > this.bottom())\n        pt.y = this.bottom();\n\n      var distance = pt.dist(other.center);\n\n      return distance<other.radius;\n    }\n  };\n\n  this.collide = function(other)\n  {\n\n    if(other instanceof AABB)\n    {\n      var md = other.minkowskiDifference(this);\n\n      if (md.min().x <= 0 &&\n          md.max().x >= 0 &&\n          md.min().y <= 0 &&\n          md.max().y >= 0)\n      {\n        var boundsPoint = md.closestPointOnBoundsToPoint(createVector(0, 0));\n\n        return boundsPoint;\n      }\n      else\n        return createVector(0, 0);\n    }\n    //box vs circle\n    else if(other instanceof CircleCollider)\n    {\n\n      //find closest point to the circle on the box\n      var pt = createVector(other.center.x, other.center.y);\n\n      //I don't know what's going o try to trace a line from centers to see\n      if( other.center.x < this.left() )\n        pt.x = this.left();\n      else if( other.center.x > this.right())\n        pt.x = this.right();\n\n      if( other.center.y < this.top() )\n        pt.y = this.top();\n      else if( other.center.y > this.bottom())\n        pt.y = this.bottom();\n\n\n      var distance = pt.dist(other.center);\n      var a;\n\n      if(distance<other.radius)\n      {\n        //reclamp point\n        if(pt.x === other.center.x && pt.y === other.center.y)\n        {\n          var xOverlap = pt.x - this.center.x;\n          var yOverlap = pt.y - this.center.y;\n\n\n          if(abs(xOverlap) < abs(yOverlap))\n          {\n            if(xOverlap > 0 )\n              pt.x = this.right();\n            else\n              pt.x = this.left();\n          }\n          else\n          {\n            if(yOverlap < 0 )\n              pt.y = this.top();\n            else\n              pt.y = this.bottom();\n          }\n\n          a = pInst.atan2(other.center.y-pt.y, other.center.x-pt.x);\n\n          //fix exceptions\n          if(a === 0)\n          {\n            if(pt.x === this.right()) a = PI;\n            if(pt.y === this.top()) a = PI/2;\n            if(pt.y === this.bottom()) a = -PI/2;\n          }\n        }\n        else\n        {\n          //angle bw point and center\n          a = pInst.atan2(pt.y-other.center.y, pt.x-other.center.x);\n          //project the normal (line between pt and center) onto the circle\n        }\n\n        var d = createVector(pt.x-other.center.x, pt.y-other.center.y);\n        var displacement = createVector(pInst.cos(a)*other.radius-d.x, pInst.sin(a)*other.radius-d.y);\n\n        //if(pt.x === other.center.x && pt.y === other.center.y)\n        //displacement = displacement.mult(-1);\n\n        return displacement;\n        //return createVector(0,0);\n      }\n      else\n        return createVector(0, 0);\n    }\n  };\n\n  this.minkowskiDifference = function(other)\n  {\n    var topLeft = this.min().sub(other.max());\n    var fullSize = this.size().add(other.size());\n    return new AABB(pInst, topLeft.add(fullSize.div(2)), fullSize.div(2));\n  };\n\n\n  this.closestPointOnBoundsToPoint = function(point)\n  {\n    // test x first\n    var minDist = abs(point.x - this.min().x);\n    var boundsPoint = createVector(this.min().x, point.y);\n\n    if (abs(this.max().x - point.x) < minDist)\n    {\n      minDist = abs(this.max().x - point.x);\n      boundsPoint = createVector(this.max().x, point.y);\n    }\n\n    if (abs(this.max().y - point.y) < minDist)\n    {\n      minDist = abs(this.max().y - point.y);\n      boundsPoint = createVector(point.x, this.max().y);\n    }\n\n    if (abs(this.min().y - point.y) < minDist)\n    {\n      minDist = abs(this.min.y - point.y);\n      boundsPoint = createVector(point.x, this.min().y);\n    }\n\n    return boundsPoint;\n  };\n\n\n}//end AABB\ndefineLazyP5Property('AABB', boundConstructorFactory(AABB));\n\n\n\n/**\n * An Animation object contains a series of images (p5.Image) that\n * can be displayed sequentially.\n *\n * All files must be png images. You must include the directory from the sketch root,\n * and the extension .png\n *\n * A sprite can have multiple labeled animations, see Sprite.addAnimation\n * and Sprite.changeAnimation, however an animation can be used independently.\n *\n * An animation can be created either by passing a series of file names,\n * no matter how many or by passing the first and the last file name\n * of a numbered sequence.\n * p5.play will try to detect the sequence pattern.\n *\n * For example if the given filenames are\n * \"data/file0001.png\" and \"data/file0005.png\" the images\n * \"data/file0003.png\" and \"data/file0004.png\" will be loaded as well.\n *\n * @example\n *     var sequenceAnimation;\n *     var glitch;\n *\n *     function preload() {\n *       sequenceAnimation = loadAnimation(\"data/walking0001.png\", \"data/walking0005.png\");\n *       glitch = loadAnimation(\"data/dog.png\", \"data/horse.png\", \"data/cat.png\", \"data/snake.png\");\n *     }\n *\n *     function setup() {\n *       createCanvas(800, 600);\n *     }\n *\n *     function draw() {\n *       background(0);\n *       animation(sequenceAnimation, 100, 100);\n *       animation(glitch, 200, 100);\n *     }\n *\n * @class Animation\n * @constructor\n * @param {String} fileName1 First file in a sequence OR first image file\n * @param {String} fileName2 Last file in a sequence OR second image file\n * @param {String} [...fileNameN] Any number of image files after the first two\n */\nfunction Animation(pInst) {\n  var frameArguments = Array.prototype.slice.call(arguments, 1);\n  var i;\n\n  var CENTER = p5.prototype.CENTER;\n\n  /**\n  * Array of frames (p5.Image)\n  *\n  * @property images\n  * @type {Array}\n  */\n  this.images = [];\n\n  var frame = 0;\n  var cycles = 0;\n  var targetFrame = -1;\n\n  this.offX = 0;\n  this.offY = 0;\n\n  /**\n  * Delay between frames in number of draw cycles.\n  * If set to 4 the framerate of the animation would be the\n  * sketch framerate divided by 4 (60fps = 15fps)\n  *\n  * @property frameDelay\n  * @type {Number}\n  * @default 4\n  */\n  this.frameDelay = 4;\n\n  /**\n  * True if the animation is currently playing.\n  *\n  * @property playing\n  * @type {Boolean}\n  * @default true\n  */\n  this.playing = true;\n\n  /**\n  * Animation visibility.\n  *\n  * @property visible\n  * @type {Boolean}\n  * @default true\n  */\n  this.visible = true;\n\n  /**\n  * If set to false the animation will stop after reaching the last frame\n  *\n  * @property looping\n  * @type {Boolean}\n  * @default true\n  */\n  this.looping = true;\n\n  /**\n  * True if frame changed during the last draw cycle\n  *\n  * @property frameChanged\n  * @type {Boolean}\n  */\n  this.frameChanged = false;\n\n  //is the collider defined manually or defined\n  //by the current frame size\n  this.imageCollider = false;\n\n\n  //sequence mode\n  if(frameArguments.length === 2 && typeof frameArguments[0] === 'string' && typeof frameArguments[1] === 'string')\n  {\n    var from = frameArguments[0];\n    var to = frameArguments[1];\n\n    //print(\"sequence mode \"+from+\" -> \"+to);\n\n    //make sure the extensions are fine\n    var ext1 = from.substring(from.length-4, from.length);\n    if(ext1 !== '.png')\n    {\n      pInst.print('Animation error: you need to use .png files (filename '+from+')');\n      from = -1;\n    }\n\n    var ext2 = to.substring(to.length-4, to.length);\n    if(ext2 !== '.png')\n    {\n      pInst.print('Animation error: you need to use .png files (filename '+to+')');\n      to = -1;\n    }\n\n    //extensions are fine\n    if(from !== -1 && to !== -1)\n    {\n      var digits1 = 0;\n      var digits2 = 0;\n\n      //skip extension work backwards to find the numbers\n      for (i = from.length-5; i >= 0; i--) {\n        if(from.charAt(i) >= '0' && from.charAt(i) <= '9')\n          digits1++;\n      }\n\n      for (i = to.length-5; i >= 0; i--) {\n        if(to.charAt(i) >= '0' && to.charAt(i) <= '9')\n          digits2++;\n      }\n\n      var prefix1 = from.substring(0, from.length-(4+digits1));\n      var prefix2 = to.substring(0, to.length-(4+digits2) );\n\n      // Our numbers likely have leading zeroes, which means that some\n      // browsers (e.g., PhantomJS) will interpret them as base 8 (octal)\n      // instead of decimal. To fix this, we'll explicity tell parseInt to\n      // use a base of 10 (decimal). For more details on this issue, see\n      // http://stackoverflow.com/a/8763427/2422398.\n      var number1 = parseInt(from.substring(from.length-(4+digits1), from.length-4), 10);\n      var number2 = parseInt(to.substring(to.length-(4+digits2), to.length-4), 10);\n\n      //swap if inverted\n      if(number2<number1)\n      {\n        var t = number2;\n        number2 = number1;\n        number1 = t;\n      }\n\n      //two different frames\n      if(prefix1 !== prefix2 )\n      {\n        //print(\"2 separate images\");\n        this.images.push(pInst.loadImage(from));\n        this.images.push(pInst.loadImage(to));\n      }\n      //same digits: case img0001, img0002\n      else\n      {\n        var fileName;\n        if(digits1 === digits2)\n        {\n\n          //load all images\n          for (i = number1; i <= number2; i++) {\n            // Use nf() to number format 'i' into four digits\n            fileName = prefix1 + pInst.nf(i, digits1) + '.png';\n            this.images.push(pInst.loadImage(fileName));\n\n          }\n\n        }\n        else //case: case img1, img2\n        {\n          //print(\"from \"+prefix1+\" \"+number1 +\" to \"+number2);\n          for (i = number1; i <= number2; i++) {\n            // Use nf() to number format 'i' into four digits\n            fileName = prefix1 + i + '.png';\n            this.images.push(pInst.loadImage(fileName));\n\n          }\n\n        }\n      }\n\n    }//end no ext error\n\n  }//end sequence mode\n  // Sprite sheet mode\n  else if (frameArguments.length === 1 && (frameArguments[0] instanceof SpriteSheet))\n  {\n    this.spriteSheet = frameArguments[0];\n    this.images = this.spriteSheet.frames;\n  }\n  else if(frameArguments.length !== 0)//arbitrary list of images\n  {\n    //print(\"Animation arbitrary mode\");\n    for (i = 0; i < frameArguments.length; i++) {\n      //print(\"loading \"+fileNames[i]);\n      if(frameArguments[i] instanceof p5.Image)\n        this.images.push(frameArguments[i]);\n      else\n        this.images.push(pInst.loadImage(frameArguments[i]));\n    }\n  }\n\n  /**\n  * Objects are passed by reference so to have different sprites\n  * using the same animation you need to clone it.\n  *\n  * @method clone\n  * @return {Animation} A clone of the current animation\n  */\n  this.clone = function() {\n    var myClone = new Animation(pInst); //empty\n    myClone.images = [];\n\n    if (this.spriteSheet) {\n      myClone.spriteSheet = this.spriteSheet.clone();\n    }\n    myClone.images = this.images.slice();\n\n    myClone.offX = this.offX;\n    myClone.offY = this.offY;\n    myClone.frameDelay = this.frameDelay;\n    myClone.playing = this.playing;\n    myClone.looping = this.looping;\n\n    return myClone;\n  };\n\n  /**\n   * Draws the animation at coordinate x and y.\n   * Updates the frames automatically.\n   *\n   * @method draw\n   * @param {Number} x x coordinate\n   * @param {Number} y y coordinate\n   * @param {Number} [r=0] rotation\n   */\n  this.draw = function(x, y, r) {\n    this.xpos = x;\n    this.ypos = y;\n    this.rotation = r || 0;\n\n    if (this.visible)\n    {\n\n      //only connection with the sprite class\n      //if animation is used independently draw and update are the sam\n      if(!this.isSpriteAnimation)\n        this.update();\n\n      //this.currentImageMode = g.imageMode;\n      pInst.push();\n      pInst.imageMode(CENTER);\n\n      pInst.translate(this.xpos, this.ypos);\n      if (pInst._angleMode === pInst.RADIANS) {\n        pInst.rotate(radians(this.rotation));\n      } else {\n        pInst.rotate(this.rotation);\n      }\n\n      if(this.images[frame] !== undefined)\n      {\n        if (this.spriteSheet) {\n          var frame_info = this.images[frame].frame;\n          pInst.image(this.spriteSheet.image, this.offX, this.offY, frame_info.width, frame_info.height,\n            frame_info.x, frame_info.y, frame_info.width, frame_info.height);\n        } else {\n          pInst.image(this.images[frame], this.offX, this.offY);\n        }\n      }\n      else\n      {\n        pInst.print('Warning undefined frame '+frame);\n        //this.isActive = false;\n      }\n\n      pInst.pop();\n    }\n  };\n\n  //called by draw\n  this.update = function() {\n    cycles++;\n    var previousFrame = frame;\n    this.frameChanged = false;\n\n\n    //go to frame\n    if(this.images.length === 1)\n    {\n      this.playing = false;\n      frame = 0;\n    }\n\n    if ( this.playing && cycles%this.frameDelay === 0)\n    {\n      //going to target frame up\n      if(targetFrame>frame && targetFrame !== -1)\n      {\n        frame++;\n      }\n      //going to taget frame down\n      else if(targetFrame<frame && targetFrame !== -1)\n      {\n        frame--;\n      }\n      else if(targetFrame === frame && targetFrame !== -1)\n      {\n        this.playing=false;\n      }\n      else if (this.looping) //advance frame\n      {\n        //if next frame is too high\n        if (frame>=this.images.length-1)\n          frame = 0;\n        else\n          frame++;\n      } else\n      {\n        //if next frame is too high\n        if (frame<this.images.length-1)\n          frame++;\n      }\n    }\n    if (frame == this.images.length - 1 && this.onComplete != undefined)\n      this.onComplete(); //fire when on last frame\n\n    if(previousFrame !== frame)\n      this.frameChanged = true;\n\n    \n\n  };//end update\n\n  /**\n  * Plays the animation.\n  *\n  * @method play\n  */\n  this.play = function() {\n    this.playing = true;\n    targetFrame = -1;\n  };\n\n  /**\n  * Stops the animation.\n  *\n  * @method stop\n  */\n  this.stop = function(){\n    this.playing = false;\n  };\n\n  /**\n  * Rewinds the animation to the first frame.\n  *\n  * @method rewind\n  */\n  this.rewind = function() {\n    frame = 0;\n  };\n\n  /**\n  * fire when animation ends\n  *\n  * @method onComplete\n  * @return {Animation} \n  */\n  this.onComplete = function () {\n    return undefined;\n  };\n\n  /**\n  * Changes the current frame.\n  *\n  * @method changeFrame\n  * @param {Number} frame Frame number (starts from 0).\n  */\n  this.changeFrame = function(f) {\n    if (f<this.images.length)\n      frame = f;\n    else\n      frame = this.images.length - 1;\n\n    targetFrame = -1;\n    //this.playing = false;\n  };\n\n   /**\n  * Goes to the next frame and stops.\n  *\n  * @method nextFrame\n  */\n  this.nextFrame = function() {\n\n    if (frame<this.images.length-1)\n      frame = frame+1;\n    else if(this.looping)\n      frame = 0;\n\n    targetFrame = -1;\n    this.playing = false;\n  };\n\n   /**\n  * Goes to the previous frame and stops.\n  *\n  * @method previousFrame\n  */\n  this.previousFrame = function() {\n\n    if (frame>0)\n      frame = frame-1;\n    else if(this.looping)\n      frame = this.images.length-1;\n\n    targetFrame = -1;\n    this.playing = false;\n  };\n\n  /**\n  * Plays the animation forward or backward toward a target frame.\n  *\n  * @method goToFrame\n  * @param {Number} toFrame Frame number destination (starts from 0)\n  */\n  this.goToFrame = function(toFrame) {\n    if(toFrame < 0 || toFrame >= this.images.length) {\n      return;\n    }\n\n    // targetFrame gets used by the update() method to decide what frame to\n    // select next.  When it's not being used it gets set to -1.\n    targetFrame = toFrame;\n\n    if(targetFrame !== frame) {\n      this.playing = true;\n    }\n  };\n\n  /**\n  * Returns the current frame number.\n  *\n  * @method getFrame\n  * @return {Number} Current frame (starts from 0)\n  */\n  this.getFrame = function() {\n    return frame;\n  };\n\n  /**\n  * Returns the last frame number.\n  *\n  * @method getLastFrame\n  * @return {Number} Last frame number (starts from 0)\n  */\n  this.getLastFrame = function() {\n    return this.images.length-1;\n  };\n\n  /**\n  * Returns the current frame image as p5.Image.\n  *\n  * @method getFrameImage\n  * @return {p5.Image} Current frame image\n  */\n  this.getFrameImage = function() {\n    return this.images[frame];\n  };\n\n  /**\n  * Returns the frame image at the specified frame number.\n  *\n  * @method getImageAt\n  * @param {Number} frame Frame number\n  * @return {p5.Image} Frame image\n  */\n  this.getImageAt = function(f) {\n    return this.images[f];\n  };\n\n  /**\n  * Returns the current frame width in pixels.\n  * If there is no image loaded, returns 1.\n  *\n  * @method getWidth\n  * @return {Number} Frame width\n  */\n  this.getWidth = function() {\n    if (this.images[frame] instanceof p5.Image) {\n      return this.images[frame].width;\n    } else if (this.images[frame]) {\n      // Special case: Animation-from-spritesheet treats its images array differently.\n      return this.images[frame].frame.width;\n    } else {\n      return 1;\n    }\n  };\n\n  /**\n  * Returns the current frame height in pixels.\n  * If there is no image loaded, returns 1.\n  *\n  * @method getHeight\n  * @return {Number} Frame height\n  */\n  this.getHeight = function() {\n    if (this.images[frame] instanceof p5.Image) {\n      return this.images[frame].height;\n    } else if (this.images[frame]) {\n      // Special case: Animation-from-spritesheet treats its images array differently.\n      return this.images[frame].frame.height;\n    } else {\n      return 1;\n    }\n  };\n\n}\n\ndefineLazyP5Property('Animation', boundConstructorFactory(Animation));\n\n/**\n * Represents a sprite sheet and all it's frames.  To be used with Animation,\n * or static drawing single frames.\n *\n *  There are two different ways to load a SpriteSheet\n *\n * 1. Given width, height that will be used for every frame and the\n *    number of frames to cycle through. The sprite sheet must have a\n *    uniform grid with consistent rows and columns.\n *\n * 2. Given an array of frame objects that define the position and\n *    dimensions of each frame.  This is Flexible because you can use\n *    sprite sheets that don't have uniform rows and columns.\n *\n * @example\n *     // Method 1 - Using width, height for each frame and number of frames\n *     explode_sprite_sheet = loadSpriteSheet('assets/explode_sprite_sheet.png', 171, 158, 11);\n *\n *     // Method 2 - Using an array of objects that define each frame\n *     var player_frames = loadJSON('assets/tiles.json');\n *     player_sprite_sheet = loadSpriteSheet('assets/player_spritesheet.png', player_frames);\n *\n * @class SpriteSheet\n * @constructor\n * @param image String image path or p5.Image object\n */\nfunction SpriteSheet(pInst) {\n  var spriteSheetArgs = Array.prototype.slice.call(arguments, 1);\n\n  this.image = null;\n  this.frames = [];\n  this.frame_width = 0;\n  this.frame_height = 0;\n  this.num_frames = 0;\n\n  /**\n   * Generate the frames data for this sprite sheet baesd on user params\n   * @private\n   * @method _generateSheetFrames\n   */\n  this._generateSheetFrames = function() {\n    var sX = 0, sY = 0;\n    for (var i = 0; i < this.num_frames; i++) {\n      this.frames.push(\n        {\n          'name': i,\n          'frame': {\n            'x': sX,\n            'y': sY,\n            'width': this.frame_width,\n            'height': this.frame_height\n          }\n        });\n      sX += this.frame_width;\n      if (sX >= this.image.width) {\n        sX = 0;\n        sY += this.frame_height;\n        if (sY >= this.image.height) {\n          sY = 0;\n        }\n      }\n    }\n  };\n\n  if (spriteSheetArgs.length === 2 && Array.isArray(spriteSheetArgs[1])) {\n    this.frames = spriteSheetArgs[1];\n    this.num_frames = this.frames.length;\n  } else if (spriteSheetArgs.length === 4 &&\n    (typeof spriteSheetArgs[1] === 'number') &&\n    (typeof spriteSheetArgs[2] === 'number') &&\n    (typeof spriteSheetArgs[3] === 'number')) {\n    this.frame_width = spriteSheetArgs[1];\n    this.frame_height = spriteSheetArgs[2];\n    this.num_frames = spriteSheetArgs[3];\n  }\n\n  if(spriteSheetArgs[0] instanceof p5.Image) {\n    this.image = spriteSheetArgs[0];\n    if (spriteSheetArgs.length === 4) {\n      this._generateSheetFrames();\n    }\n  } else {\n    if (spriteSheetArgs.length === 2) {\n      this.image = pInst.loadImage(spriteSheetArgs[0]);\n    } else if (spriteSheetArgs.length === 4) {\n      this.image = pInst.loadImage(spriteSheetArgs[0], this._generateSheetFrames.bind(this));\n    }\n  }\n\n  /**\n   * Draws a specific frame to the canvas.\n   * @param frame_name  Can either be a string name, or a numeric index.\n   * @param x   x position to draw the frame at\n   * @param y   y position to draw the frame at\n   * @param [width]   optional width to draw the frame\n   * @param [height]  optional height to draw the frame\n   * @method drawFrame\n   */\n  this.drawFrame = function(frame_name, x, y, width, height) {\n    var frameToDraw;\n    if (typeof frame_name === 'number') {\n      frameToDraw = this.frames[frame_name].frame;\n    } else {\n      for (var i = 0; i < this.frames.length; i++) {\n        if (this.frames[i].name === frame_name) {\n          frameToDraw = this.frames[i].frame;\n          break;\n        }\n      }\n    }\n    var dWidth = width || frameToDraw.width;\n    var dHeight = height || frameToDraw.height;\n    pInst.image(this.image, frameToDraw.x, frameToDraw.y,\n      frameToDraw.width, frameToDraw.height, x, y, dWidth, dHeight);\n  };\n\n  /**\n   * Objects are passed by reference so to have different sprites\n   * using the same animation you need to clone it.\n   *\n   * @method clone\n   * @return {SpriteSheet} A clone of the current SpriteSheet\n   */\n  this.clone = function() {\n    var myClone = new SpriteSheet(pInst); //empty\n\n    // Deep clone the frames by value not reference\n    for(var i = 0; i < this.frames.length; i++) {\n      var frame = this.frames[i].frame;\n      var cloneFrame = {\n        'name':frame.name,\n        'frame': {\n          'x':frame.x,\n          'y':frame.y,\n          'width':frame.width,\n          'height':frame.height\n        }\n      };\n      myClone.frames.push(cloneFrame);\n    }\n\n    // clone other fields\n    myClone.image = this.image;\n    myClone.frame_width = this.frame_width;\n    myClone.frame_height = this.frame_height;\n    myClone.num_frames = this.num_frames;\n\n    return myClone;\n  };\n}\n\ndefineLazyP5Property('SpriteSheet', boundConstructorFactory(SpriteSheet));\n\n//general constructor to be able to feed arguments as array\nfunction construct(constructor, args) {\n  function F() {\n    return constructor.apply(this, args);\n  }\n  F.prototype = constructor.prototype;\n  return new F();\n}\n\n\n\n\n\n/*\n * Javascript Quadtree\n * based on\n * https://github.com/timohausmann/quadtree-js/\n * Copyright © 2012 Timo Hausmann\n*/\n\nfunction Quadtree( bounds, max_objects, max_levels, level ) {\n\n  this.active = true;\n  this.max_objects\t= max_objects || 10;\n  this.max_levels\t\t= max_levels || 4;\n\n  this.level \t\t\t= level || 0;\n  this.bounds \t\t= bounds;\n\n  this.objects \t\t= [];\n  this.object_refs\t= [];\n  this.nodes \t\t\t= [];\n}\n\nQuadtree.prototype.updateBounds = function() {\n\n  //find maximum area\n  var objects = this.getAll();\n  var x = 10000;\n  var y = 10000;\n  var w = -10000;\n  var h = -10000;\n\n  for( var i=0; i < objects.length; i++ )\n    {\n      if(objects[i].position.x < x)\n        x = objects[i].position.x;\n      if(objects[i].position.y < y)\n        y = objects[i].position.y;\n      if(objects[i].position.x > w)\n        w = objects[i].position.x;\n      if(objects[i].position.y > h)\n        h = objects[i].position.y;\n    }\n\n\n  this.bounds = {\n    x:x,\n    y:y,\n    width:w,\n    height:h\n  };\n  //print(this.bounds);\n};\n\n/*\n\t * Split the node into 4 subnodes\n\t */\nQuadtree.prototype.split = function() {\n\n  var nextLevel\t= this.level + 1,\n      subWidth\t= Math.round( this.bounds.width / 2 ),\n      subHeight \t= Math.round( this.bounds.height / 2 ),\n      x \t\t\t= Math.round( this.bounds.x ),\n      y \t\t\t= Math.round( this.bounds.y );\n\n  //top right node\n  this.nodes[0] = new Quadtree({\n    x\t: x + subWidth,\n    y\t: y,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //top left node\n  this.nodes[1] = new Quadtree({\n    x\t: x,\n    y\t: y,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //bottom left node\n  this.nodes[2] = new Quadtree({\n    x\t: x,\n    y\t: y + subHeight,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //bottom right node\n  this.nodes[3] = new Quadtree({\n    x\t: x + subWidth,\n    y\t: y + subHeight,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n};\n\n\n/*\n\t * Determine the quadtrant for an area in this node\n\t */\nQuadtree.prototype.getIndex = function( pRect ) {\n  if(!pRect.collider)\n    return -1;\n  else\n  {\n    var index \t\t\t\t= -1,\n        verticalMidpoint \t= this.bounds.x + (this.bounds.width / 2),\n        horizontalMidpoint \t= this.bounds.y + (this.bounds.height / 2),\n\n        //pRect can completely fit within the top quadrants\n        topQuadrant = (pRect.collider.top() < horizontalMidpoint && pRect.collider.top() + pRect.collider.size().y < horizontalMidpoint),\n\n        //pRect can completely fit within the bottom quadrants\n        bottomQuadrant = (pRect.collider.top() > horizontalMidpoint);\n\n    //pRect can completely fit within the left quadrants\n    if( pRect.collider.left() < verticalMidpoint && pRect.collider.left() + pRect.collider.size().x < verticalMidpoint ) {\n      if( topQuadrant ) {\n        index = 1;\n      } else if( bottomQuadrant ) {\n        index = 2;\n      }\n\n      //pRect can completely fit within the right quadrants\n    } else if( pRect.collider.left() > verticalMidpoint ) {\n      if( topQuadrant ) {\n        index = 0;\n      } else if( bottomQuadrant ) {\n        index = 3;\n      }\n    }\n\n    return index;\n  }\n};\n\n\n/*\n\t * Insert an object into the node. If the node\n\t * exceeds the capacity, it will split and add all\n\t * objects to their corresponding subnodes.\n\t */\nQuadtree.prototype.insert = function( obj ) {\n  //avoid double insertion\n  if(this.objects.indexOf(obj) === -1)\n  {\n\n    var i = 0,\n        index;\n\n    //if we have subnodes ...\n    if( typeof this.nodes[0] !== 'undefined' ) {\n      index = this.getIndex( obj );\n\n      if( index !== -1 ) {\n        this.nodes[index].insert( obj );\n        return;\n      }\n    }\n\n    this.objects.push( obj );\n\n    if( this.objects.length > this.max_objects && this.level < this.max_levels ) {\n\n      //split if we don't already have subnodes\n      if( typeof this.nodes[0] === 'undefined' ) {\n        this.split();\n      }\n\n      //add all objects to there corresponding subnodes\n      while( i < this.objects.length ) {\n\n        index = this.getIndex( this.objects[i] );\n\n        if( index !== -1 ) {\n          this.nodes[index].insert( this.objects.splice(i, 1)[0] );\n        } else {\n          i = i + 1;\n        }\n      }\n    }\n  }\n};\n\n\n/*\n\t * Return all objects that could collide with a given area\n\t */\nQuadtree.prototype.retrieve = function( pRect ) {\n\n\n  var index = this.getIndex( pRect ),\n      returnObjects = this.objects;\n\n  //if we have subnodes ...\n  if( typeof this.nodes[0] !== 'undefined' ) {\n\n    //if pRect fits into a subnode ..\n    if( index !== -1 ) {\n      returnObjects = returnObjects.concat( this.nodes[index].retrieve( pRect ) );\n\n      //if pRect does not fit into a subnode, check it against all subnodes\n    } else {\n      for( var i=0; i < this.nodes.length; i=i+1 ) {\n        returnObjects = returnObjects.concat( this.nodes[i].retrieve( pRect ) );\n      }\n    }\n  }\n\n  return returnObjects;\n};\n\nQuadtree.prototype.retrieveFromGroup = function( pRect, group ) {\n\n  var results = [];\n  var candidates = this.retrieve(pRect);\n\n  for(var i=0; i<candidates.length; i++)\n    if(group.contains(candidates[i]))\n    results.push(candidates[i]);\n\n  return results;\n};\n\n/*\n\t * Get all objects stored in the quadtree\n\t */\nQuadtree.prototype.getAll = function() {\n\n  var objects = this.objects;\n\n  for( var i=0; i < this.nodes.length; i=i+1 ) {\n    objects = objects.concat( this.nodes[i].getAll() );\n  }\n\n  return objects;\n};\n\n\n/*\n\t * Get the node in which a certain object is stored\n\t */\nQuadtree.prototype.getObjectNode = function( obj ) {\n\n  var index;\n\n  //if there are no subnodes, object must be here\n  if( !this.nodes.length ) {\n\n    return this;\n\n  } else {\n\n    index = this.getIndex( obj );\n\n    //if the object does not fit into a subnode, it must be here\n    if( index === -1 ) {\n\n      return this;\n\n      //if it fits into a subnode, continue deeper search there\n    } else {\n      var node = this.nodes[index].getObjectNode( obj );\n      if( node ) return node;\n    }\n  }\n\n  return false;\n};\n\n\n/*\n\t * Removes a specific object from the quadtree\n\t * Does not delete empty subnodes. See cleanup-function\n\t */\nQuadtree.prototype.removeObject = function( obj ) {\n\n  var node = this.getObjectNode( obj ),\n      index = node.objects.indexOf( obj );\n\n  if( index === -1 ) return false;\n\n  node.objects.splice( index, 1);\n};\n\n\n/*\n\t * Clear the quadtree and delete all objects\n\t */\nQuadtree.prototype.clear = function() {\n\n  this.objects = [];\n\n  if( !this.nodes.length ) return;\n\n  for( var i=0; i < this.nodes.length; i=i+1 ) {\n\n    this.nodes[i].clear();\n  }\n\n  this.nodes = [];\n};\n\n\n/*\n\t * Clean up the quadtree\n\t * Like clear, but objects won't be deleted but re-inserted\n\t */\nQuadtree.prototype.cleanup = function() {\n\n  var objects = this.getAll();\n\n  this.clear();\n\n  for( var i=0; i < objects.length; i++ ) {\n    this.insert( objects[i] );\n  }\n};\n\n\n\nfunction updateTree() {\n  if(this.quadTree.active)\n  {\n    this.quadTree.updateBounds();\n    this.quadTree.cleanup();\n  }\n}\n\n//keyboard input\np5.prototype.registerMethod('pre', p5.prototype.readPresses);\n\n//automatic sprite update\np5.prototype.registerMethod('pre', p5.prototype.updateSprites);\n\n//quadtree update\np5.prototype.registerMethod('post', updateTree);\n\n//camera push and pop\np5.prototype.registerMethod('pre', cameraPush);\np5.prototype.registerMethod('post', cameraPop);\n\n//deltaTime\n//p5.prototype.registerMethod('pre', updateDelta);\n\n/**\n * Log a warning message to the host console, using native `console.warn`\n * if it is available but falling back on `console.log` if not.  If no\n * console is available, this method will fail silently.\n * @method _warn\n * @param {!string} message\n * @private\n */\np5.prototype._warn = function(message) {\n  var console = window.console;\n\n  if(console)\n  {\n    if('function' === typeof console.warn)\n    {\n      console.warn(message);\n    }\n    else if('function' === typeof console.log)\n    {\n      console.log('Warning: ' + message);\n    }\n  }\n};\n\n}));\n",
        "children": [],
        "fileType": "file",
        "_id": "5fa6b7d9d7fa16e443922809",
        "isSelectedFile": false,
        "updatedAt": "2020-11-07T15:15:41.395Z",
        "createdAt": "2020-11-07T15:15:41.395Z",
        "id": "5fa6b7d9d7fa16e443922809"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "5fa6b99b41efd90020e66943"
        ],
        "fileType": "folder",
        "_id": "5fa6b7d9d7fa16e443922806",
        "updatedAt": "2020-11-07T15:15:41.395Z",
        "createdAt": "2020-11-07T15:15:41.395Z",
        "isSelectedFile": false,
        "id": "5fa6b7d9d7fa16e443922806"
      },
      {
        "name": "background.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5fa6b99b41efd90020e66943",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/ffc2fb89-a175-4941-bd45-de3c5cfd9a66.jpg",
        "isSelectedFile": false,
        "updatedAt": "2020-11-07T15:15:41.395Z",
        "createdAt": "2020-11-07T15:15:41.395Z",
        "id": "5fa6b99b41efd90020e66943"
      }
    ],
    "createdAt": "2020-11-07T15:06:01.468Z",
    "updatedAt": "2020-11-07T15:15:41.395Z",
    "id": "vn9Lma-mj"
  },
  {
    "name": "ADMP205 20_21 Project 5 v1 copy",
    "_id": "uN_WohNAF",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5faa91309c291f201404f402",
          "5faa91309c291f201404f407",
          "5faa91309c291f201404f408",
          "5faa91309c291f201404f40a",
          "5faa91309c291f201404f40b",
          "5faa91309c291f201404f40c"
        ],
        "fileType": "folder",
        "_id": "5faa91309c291f201404f401",
        "createdAt": "2020-11-10T13:13:26.100Z",
        "updatedAt": "2020-11-10T13:13:26.100Z",
        "isSelectedFile": false,
        "id": "5faa91309c291f201404f401"
      },
      {
        "name": "sketch.js",
        "content": "let gameStart;\nlet mainGuy;\nlet bgImg;\nlet fog;\nlet sbState;\nlet sbSelX;\nlet sbSelY;\nlet wallsGroup;\nlet wallCounter;\nlet walls;\nlet bug;\n\n\nfunction preload() {\n  bgImg = loadImage(\"assets/background.png\");\n  fog = loadImage(\"assets/Foreground_1.png\");\n  bug = loadImage(\"assets/bug2.png\");\n  \n}\n\nfunction setup() {\n  gameStart = 0;\n  createCanvas(400,400);\n  walls = [];\n  sbState = 0;\n  wallCounter = 0;\n  wallsGroup = new Group();\n  mainGuy = new MainGuy(250, 250);\n  // mainGuy.sprite.debug = true;\n  createWalls();\n  mainGuy.sprite.addImage(bug)\n  mainGuy.sprite.scale = 0.6\n  \n  // mainGuy.sprite.setCollider(\"rectangle\",0,0,bug.width,bug.height);\n  // console.log(\"bug: \"+ bug.width + \" x \" + bug.height);\n}\n\n\nfunction draw() {\n\n  clear();\n  if (gameStart == 0) {\n    createCanvas(400,400);\n    let s = 'PRESS ENTER TO BEGIN THE MAZE';\n    text (mouseX,10,10)\n    text(mouseY,10,30)\n    rect(172, 173, 130, 100)\n    fill(0);\n    textSize(14);\n    textFont('Impact');\n    text(s, width / 2 , height / 2, 80);\n  }\n\n  if (gameStart == 1) {\n  image(bgImg, 0, 0);\n  mainGuy.sprite.collide(wallsGroup);\n  drawSprites();\n  \n  mainGuy.sprite.velocity.x = (mouseX - mainGuy.sprite.position.x) / 20;\n  mainGuy.sprite.velocity.y = (mouseY - mainGuy.sprite.position.y) / 20;\n  mainGuy.sprite.velocity.x = (camera.mouseX - mainGuy.sprite.position.x) / 20;\n  mainGuy.sprite.velocity.y = (camera.mouseY - mainGuy.sprite.position.y) / 20;\n  \n  \n   camera.position.x = mainGuy.sprite.position.x;\n   camera.position.y = mainGuy.sprite.position.y;\n\n  \n if (sbState == 1) {\n    fill(255, 255, 255);\n    let w = mouseX - sbSelX;\n    let h = mouseY - sbSelY;\n    rect(sbSelX, sbSelY, w, h);\n  }\n\n   camera.off();\n   image(fog, 0, 0);\n  \n}\n}\n\n\nfunction keyPressed(){\n  if (keyCode == ENTER)\n    gameStart = 1;\n}\n\nfunction mousePressed() {\n\n  if (sbState == 0) {\n    sbState = 1;\n    sbSelX = mouseX;\n    sbSelY = mouseY;\n\n  } else if (sbState == 1) {\n    sbState = 0;\n\n    let w = mouseX - sbSelX;\n    let h = mouseY - sbSelY;\n    let x = sbSelX + w / 2;\n    let y = sbSelY + h / 2;\n\n    let s = createSprite(x, y, w, h);\n\n    s.immovable = true;\n    s.debug = true;\n\n    wallsGroup.add(s);\n\n    console.log(\"walls[\" + wallCounter + \"] = [\" + x + \",\" + y + \",\" + w + \",\" + h + \"];\");\n\n    wallCounter++;\n\n  }\n\n}\n\n\nfunction createWalls() {\n walls[0] = [144,316.5,14,113]; \nwalls[1] = [215.5,269,129,16]; \nwalls[2] = [272.5,284.5,15,47]; \nwalls[3] = [256,300.5,46,19]; \nwalls[4] = [240.5,346.5,17,111]; \nwalls[5] = [256.5,237,239,20]; \nwalls[6] = [367.5,189,-17,-114]; \nwalls[7] = [351.5,141.5,111,19]; \nwalls[8] = [321,172.5,48,19]; \nwalls[9] = [336.5,193.5,15,35]; \nwalls[10] = [303,201.5,-80,-19]; \nwalls[11] = [271.5,146,17,-92]; \nwalls[12] = [341.5,108,123,16]; \nwalls[13] = [217.5,139,99,18]; \nwalls[14] = [176,120.5,18,45]; \nwalls[15] = [206,105.5,-80,-15]; \nwalls[16] = [238,74,-16,-78]; \nwalls[17] = [208.5,34,21,34]; \nwalls[18] = [223,44,-46,16]; \nwalls[19] = [177.5,59.5,17,49]; \nwalls[20] = [174.5,75,-79,-16]; \nwalls[21] = [143.5,122,19,114]; \nwalls[22] = [240.5,196,15,-62]; \nwalls[23] = [198.5,172.5,97,17]; \nwalls[24] = [192.5,204.5,49,17]; \nwalls[25] = [175,213,16,36]; \nwalls[26] = [128,203.5,48,19]; \nwalls[27] = [112.5,220.5,15,175]; \nwalls[28] = [122,140,34,20]; \nwalls[29] = [92,236.5,40,19]; \nwalls[30] = [62.5,267.5,-47,-17]; \nwalls[31] = [64,332.5,48,17]; \nwalls[32] = [78,315.5,-18,-47]; \nwalls[33] = [71,299.5,96,19]; \nwalls[34] = [176,292.5,16,31]; \nwalls[35] = [208,316,18,50]; \nwalls[36] = [159.5,332,-113,-18]; \nwalls[37] = [46.5,211.5,-15,-95]; \nwalls[38] = [71.5,203,33,-16]; \nwalls[39] = [62.5,171.5,-47,-17]; \nwalls[40] = [78.5,140,-17,-80]; \nwalls[41] = [80,109,80,20]; \nwalls[42] = [111.5,67.5,-17,-103]; \nwalls[43] = [132,43,-38,-14]; \nwalls[44] = [80.5,59.5,17,49]; \nwalls[45] = [54.5,75.5,-69,-17]; \nwalls[46] = [48.5,33,17,-34]; \nwalls[47] = [39.5,140.5,35,19]; \nwalls[48] = [71.5,363.5,97,17]; \nwalls[49] = [80,387,18,30]; \nwalls[50] = [48.5,395.5,15,15]; \nwalls[51] = [208,395.5,14,13]; \nwalls[52] = [136.5,394.5,95,15]; \nwalls[53] = [174.5,380,17,50]; \nwalls[54] = [204,364.5,74,19]; \nwalls[55] = [261.5,394.5,33,15]; \nwalls[56] = [270.5,378,-15,-46]; \nwalls[57] = [288,363.5,50,17]; \nwalls[58] = [320.5,396.5,47,19]; \nwalls[59] = [334,361.5,-14,-79]; \nwalls[60] = [303.5,333,79,18]; \nwalls[61] = [304,296.5,18,73]; \nwalls[62] = [327.5,269.5,35,19]; \nwalls[63] = [334,287.5,-18,-41]; \nwalls[64] = [271,49.5,18,67]; \nwalls[65] = [319,76.5,-50,-17]; \nwalls[66] = [303,51,18,-34]; \nwalls[67] = [359.5,43,95,18]; \nwalls[68] = [368,77,18,54]; \nwalls[69] = [397,74,12,-14]; \nwalls[70] = [403,286,20,238]; \nwalls[71] = [367.5,328.5,17,167]; \nwalls[72] = [11.5,199.5,-23,-399]; \nwalls[73] = [200,10,400,20];\nwalls[74] = [239,202.5,18,49]; \n\n  for (let i = 0; i < walls.length; i++) {\n\n    let wall = walls[i];\n\n    let s = createSprite(wall[0], wall[1], wall[2], wall[3]);\n\n    s.visible = false;\n\n    s.immovable = true;\n    s.debug = true;\n\n    wallsGroup.add(s);\n\n  }\n\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5faa91309c291f201404f40b",
        "isSelectedFile": true,
        "createdAt": "2020-11-10T13:13:26.100Z",
        "updatedAt": "2020-11-10T13:13:26.100Z",
        "id": "5faa91309c291f201404f40b"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <script src=\"lib/p5.play.js\" type=\"text/javascript\"></script>\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"mainGuy.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "5faa91309c291f201404f407",
        "createdAt": "2020-11-10T13:13:26.100Z",
        "updatedAt": "2020-11-10T13:13:26.100Z",
        "isSelectedFile": false,
        "id": "5faa91309c291f201404f407"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5faa91309c291f201404f40c",
        "createdAt": "2020-11-10T13:13:26.100Z",
        "updatedAt": "2020-11-10T13:13:26.100Z",
        "isSelectedFile": false,
        "id": "5faa91309c291f201404f40c"
      },
      {
        "name": "lib",
        "content": "",
        "children": [
          "5faa91309c291f201404f409"
        ],
        "fileType": "folder",
        "_id": "5faa91309c291f201404f408",
        "isSelectedFile": false,
        "updatedAt": "2020-11-10T13:13:26.100Z",
        "createdAt": "2020-11-10T13:13:26.100Z",
        "id": "5faa91309c291f201404f408"
      },
      {
        "name": "p5.play.js",
        "content": "/*\np5.play\nby Paolo Pedercini/molleindustria, 2015\nhttp://molleindustria.org/\n*/\n\n(function(root, factory) {\nif (typeof define === 'function' && define.amd)\ndefine('p5.play', ['p5'], function(p5) { (factory(p5)); });\nelse if (typeof exports === 'object')\nfactory(require('../p5'));\nelse\nfactory(root.p5);\n}(this, function(p5) {\n/**\n * p5.play is a library for p5.js to facilitate the creation of games and gamelike\n * projects.\n *\n * It provides a flexible Sprite class to manage visual objects in 2D space\n * and features such as animation support, basic collision detection\n * and resolution, mouse and keyboard interactions, and a virtual camera.\n *\n * p5.play is not a box2D-derived physics engine, it doesn't use events, and it's\n * designed to be understood and possibly modified by intermediate programmers.\n *\n * See the examples folder for more info on how to use this library.\n *\n * @module p5.play\n * @submodule p5.play\n * @for p5.play\n * @main\n */\n\n// =============================================================================\n//                         initialization\n// =============================================================================\n\n// This is the new way to initialize custom p5 properties for any p5 instance.\n// The goal is to migrate lazy P5 properties over to this method.\n// @see https://github.com/molleindustria/p5.play/issues/46\np5.prototype.registerMethod('init', function p5PlayInit() {\n  /**\n   * The sketch camera automatically created at the beginning of a sketch.\n   * A camera facilitates scrolling and zooming for scenes extending beyond\n   * the canvas. A camera has a position, a zoom factor, and the mouse\n   * coordinates relative to the view.\n   *\n   * In p5.js terms the camera wraps the whole drawing cycle in a\n   * transformation matrix but it can be disabled anytime during the draw\n   * cycle, for example to draw interface elements in an absolute position.\n   *\n   * @property camera\n   * @type {camera}\n   */\n  this.camera = new Camera(this, 0, 0, 1);\n  this.camera.init = false;\n});\n\n// This provides a way for us to lazily define properties that\n// are global to p5 instances.\n//\n// Note that this isn't just an optimization: p5 currently provides no\n// way for add-ons to be notified when new p5 instances are created, so\n// lazily creating these properties is the *only* mechanism available\n// to us. For more information, see:\n//\n// https://github.com/processing/p5.js/issues/1263\nfunction defineLazyP5Property(name, getter) {\n  Object.defineProperty(p5.prototype, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var context = (this instanceof p5 && !this._isGlobal) ? this : window;\n\n      if (typeof(context._p5PlayProperties) === 'undefined') {\n        context._p5PlayProperties = {};\n      }\n      if (!(name in context._p5PlayProperties)) {\n        context._p5PlayProperties[name] = getter.call(context);\n      }\n      return context._p5PlayProperties[name];\n    }\n  });\n}\n\n// This returns a factory function, suitable for passing to\n// defineLazyP5Property, that returns a subclass of the given\n// constructor that is always bound to a particular p5 instance.\nfunction boundConstructorFactory(constructor) {\n  if (typeof(constructor) !== 'function')\n    throw new Error('constructor must be a function');\n\n  return function createBoundConstructor() {\n    var pInst = this;\n\n    function F() {\n      var args = Array.prototype.slice.call(arguments);\n\n      return constructor.apply(this, [pInst].concat(args));\n    }\n    F.prototype = constructor.prototype;\n\n    return F;\n  };\n}\n\n// This is a utility that makes it easy to define convenient aliases to\n// pre-bound p5 instance methods.\n//\n// For example:\n//\n//   var pInstBind = createPInstBinder(pInst);\n//\n//   var createVector = pInstBind('createVector');\n//   var loadImage = pInstBind('loadImage');\n//\n// The above will create functions createVector and loadImage, which can be\n// used similar to p5 global mode--however, they're bound to specific p5\n// instances, and can thus be used outside of global mode.\nfunction createPInstBinder(pInst) {\n  return function pInstBind(methodName) {\n    var method = pInst[methodName];\n\n    if (typeof(method) !== 'function')\n      throw new Error('\"' + methodName + '\" is not a p5 method');\n    return method.bind(pInst);\n  };\n}\n\n// These are utility p5 functions that don't depend on p5 instance state in\n// order to work properly, so we'll go ahead and make them easy to\n// access without needing to bind them to a p5 instance.\nvar abs = p5.prototype.abs;\nvar radians = p5.prototype.radians;\nvar dist = p5.prototype.dist;\nvar degrees = p5.prototype.degrees;\nvar pow = p5.prototype.pow;\nvar round = p5.prototype.round;\n\n\n// =============================================================================\n//                         p5 additions\n// =============================================================================\n\n/**\n* A Group containing all the sprites in the sketch.\n*\n* @property allSprites\n* @type {Group}\n*/\n\ndefineLazyP5Property('allSprites', function() {\n  return new p5.prototype.Group();\n});\n\np5.prototype.spriteUpdate = true;\n\n/**\n   * A Sprite is the main building block of p5.play:\n   * an element able to store images or animations with a set of\n   * properties such as position and visibility.\n   * A Sprite can have a collider that defines the active area to detect\n   * collisions or overlappings with other sprites and mouse interactions.\n   *\n   * Sprites created using createSprite (the preferred way) are added to the\n   * allSprites group and given a depth value that puts it in front of all\n   * other sprites.\n   *\n   * @method createSprite\n   * @param {Number} x Initial x coordinate\n   * @param {Number} y Initial y coordinate\n   * @param {Number} width Width of the placeholder rectangle and of the\n   *                       collider until an image or new collider are set\n   * @param {Number} height Height of the placeholder rectangle and of the\n   *                       collider until an image or new collider are set\n   * @return {Object} The new sprite instance\n   */\n\np5.prototype.createSprite = function(x, y, width, height) {\n  var s = new Sprite(this, x, y, width, height);\n  s.depth = this.allSprites.maxDepth()+1;\n  this.allSprites.add(s);\n  return s;\n};\n\n\n/**\n   * Removes a Sprite from the sketch.\n   * The removed Sprite won't be drawn or updated anymore.\n   * Equivalent to Sprite.remove()\n   *\n   * @method removeSprite\n   * @param {Object} sprite Sprite to be removed\n*/\np5.prototype.removeSprite = function(sprite) {\n  sprite.remove();\n};\n\n/**\n* Updates all the sprites in the sketch (position, animation...)\n* it's called automatically at every draw().\n* It can be paused by passing a parameter true or false;\n* Note: it does not render the sprites.\n*\n* @method updateSprites\n* @param {Boolean} updating false to pause the update, true to resume\n*/\np5.prototype.updateSprites = function(upd) {\n\n  if(upd === false)\n    this.spriteUpdate = false;\n  if(upd === true)\n    this.spriteUpdate = true;\n\n  if(this.spriteUpdate)\n  for(var i = 0; i<this.allSprites.size(); i++)\n  {\n    this.allSprites.get(i).update();\n  }\n};\n\n/**\n* Returns all the sprites in the sketch as an array\n*\n* @method getSprites\n* @return {Array} Array of Sprites\n*/\np5.prototype.getSprites = function() {\n\n  //draw everything\n  if(arguments.length===0)\n  {\n    return this.allSprites.toArray();\n  }\n  else\n  {\n    var arr = [];\n    //for every tag\n    for(var j=0; j<arguments.length; j++)\n    {\n      for(var i = 0; i<this.allSprites.size(); i++)\n      {\n        if(this.allSprites.get(i).isTagged(arguments[j]))\n          arr.push(this.allSprites.get(i));\n      }\n    }\n\n    return arr;\n  }\n\n};\n\n/**\n* Displays a Group of sprites.\n* If no parameter is specified, draws all sprites in the\n* sketch.\n* The drawing order is determined by the Sprite property \"depth\"\n*\n* @method drawSprites\n* @param {Group} [group] Group of Sprites to be displayed\n*/\np5.prototype.drawSprites = function(group) {\n  // If no group is provided, draw the allSprites group.\n  group = group || this.allSprites;\n\n  if (typeof group.draw !== 'function')\n  {\n    throw('Error: with drawSprites you can only draw all sprites or a group');\n  }\n\n  group.draw();\n};\n\n/**\n* Displays a Sprite.\n* To be typically used in the main draw function.\n*\n* @method drawSprite\n* @param {Sprite} sprite Sprite to be displayed\n*/\np5.prototype.drawSprite = function(sprite) {\n  if(sprite)\n  sprite.display();\n};\n\n/**\n* Loads an animation.\n* To be typically used in the preload() function of the sketch.\n*\n* @method loadAnimation\n* @param {Sprite} sprite Sprite to be displayed\n*/\np5.prototype.loadAnimation = function() {\n  return construct(this.Animation, arguments);\n};\n\n/**\n * Loads a Sprite Sheet.\n * To be typically used in the preload() function of the sketch.\n *\n * @method loadSpriteSheet\n */\np5.prototype.loadSpriteSheet = function() {\n  return construct(this.SpriteSheet, arguments);\n};\n\n/**\n* Displays an animation.\n*\n* @method animation\n* @param {Animation} anim Animation to be displayed\n* @param {Number} x X coordinate\n* @param {Number} y Y coordinate\n*\n*/\np5.prototype.animation = function(anim, x, y) {\n  anim.draw(x, y);\n};\n\n//variable to detect instant presses\ndefineLazyP5Property('_p5play', function() {\n  return {\n    keyStates: {},\n    mouseStates: {}\n  };\n});\n\nvar KEY_IS_UP = 0;\nvar KEY_WENT_DOWN = 1;\nvar KEY_IS_DOWN = 2;\nvar KEY_WENT_UP = 3;\n\n/**\n* Detects if a key was pressed during the last cycle.\n* It can be used to trigger events once, when a key is pressed or released.\n* Example: Super Mario jumping.\n*\n* @method keyWentDown\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key was pressed\n*/\np5.prototype.keyWentDown = function(key) {\n  return this._isKeyInState(key, KEY_WENT_DOWN);\n};\n\n\n/**\n* Detects if a key was released during the last cycle.\n* It can be used to trigger events once, when a key is pressed or released.\n* Example: Spaceship shooting.\n*\n* @method keyWentUp\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key was released\n*/\np5.prototype.keyWentUp = function(key) {\n  return this._isKeyInState(key, KEY_WENT_UP);\n};\n\n/**\n* Detects if a key is currently pressed\n* Like p5 keyIsDown but accepts strings and codes\n*\n* @method keyDown\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key is down\n*/\np5.prototype.keyDown = function(key) {\n  return this._isKeyInState(key, KEY_IS_DOWN);\n};\n\n/**\n * Detects if a key is in the given state during the last cycle.\n * Helper method encapsulating common key state logic; it may be preferable\n * to call keyDown or other methods directly.\n *\n * @private\n * @method _isKeyInState\n * @param {Number|String} key Key code or character\n * @param {Number} state Key state to check against\n * @return {Boolean} True if the key is in the given state\n */\np5.prototype._isKeyInState = function(key, state) {\n  var keyCode;\n  var keyStates = this._p5play.keyStates;\n\n  if(typeof key === 'string')\n  {\n    keyCode = this._keyCodeFromAlias(key);\n  }\n  else\n  {\n    keyCode = key;\n  }\n\n  //if undefined start checking it\n  if(keyStates[keyCode]===undefined)\n  {\n    if(this.keyIsDown(keyCode))\n      keyStates[keyCode] = KEY_IS_DOWN;\n    else\n      keyStates[keyCode] = KEY_IS_UP;\n  }\n\n  return (keyStates[keyCode] === state);\n};\n\n/**\n* Detects if a mouse button is currently down\n* Combines mouseIsPressed and mouseButton of p5\n*\n* @method mouseDown\n* @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n* @return {Boolean} True if the button is down\n*/\np5.prototype.mouseDown = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_IS_DOWN);\n};\n\n/**\n* Detects if a mouse button is currently up\n* Combines mouseIsPressed and mouseButton of p5\n*\n* @method mouseUp\n* @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n* @return {Boolean} True if the button is up\n*/\np5.prototype.mouseUp = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_IS_UP);\n};\n\n/**\n * Detects if a mouse button was released during the last cycle.\n * It can be used to trigger events once, to be checked in the draw cycle\n *\n * @method mouseWentUp\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @return {Boolean} True if the button was just released\n */\np5.prototype.mouseWentUp = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_WENT_UP);\n};\n\n\n/**\n * Detects if a mouse button was pressed during the last cycle.\n * It can be used to trigger events once, to be checked in the draw cycle\n *\n * @method mouseWentDown\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @return {Boolean} True if the button was just pressed\n */\np5.prototype.mouseWentDown = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_WENT_DOWN);\n};\n\n/**\n * Detects if a mouse button is in the given state during the last cycle.\n * Helper method encapsulating common mouse button state logic; it may be\n * preferable to call mouseWentUp, etc, directly.\n *\n * @private\n * @method _isMouseButtonInState\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @param {Number} state\n * @return {boolean} True if the button was in the given state\n */\np5.prototype._isMouseButtonInState = function(buttonCode, state) {\n  var mouseStates = this._p5play.mouseStates;\n\n  if(buttonCode === undefined)\n    buttonCode = this.LEFT;\n\n  //undefined = not tracked yet, start tracking\n  if(mouseStates[buttonCode]===undefined)\n  {\n  if(this.mouseIsPressed && this.mouseButton === buttonCode)\n    mouseStates[buttonCode] = KEY_IS_DOWN;\n  else\n    mouseStates[buttonCode] = KEY_IS_UP;\n  }\n\n  return (mouseStates[buttonCode] === state);\n};\n\n\n/**\n * An object storing all useful keys for easy access\n * Key.tab = 9\n *\n * @private\n * @property KEY\n * @type {Object}\n */\np5.prototype.KEY = {\n    'BACKSPACE': 8,\n    'TAB': 9,\n    'ENTER': 13,\n    'SHIFT': 16,\n    'CTRL': 17,\n    'ALT': 18,\n    'PAUSE': 19,\n    'CAPS_LOCK': 20,\n    'ESC': 27,\n    'SPACE': 32,\n    ' ': 32,\n    'PAGE_UP': 33,\n    'PAGE_DOWN': 34,\n    'END': 35,\n    'HOME': 36,\n    'LEFT_ARROW': 37,\n    'LEFT': 37,\n    'UP_ARROW': 38,\n    'UP': 38,\n    'RIGHT_ARROW': 39,\n    'RIGHT': 39,\n    'DOWN_ARROW': 40,\n    'DOWN': 40,\n    'INSERT': 45,\n    'DELETE': 46,\n    '0': 48,\n    '1': 49,\n    '2': 50,\n    '3': 51,\n    '4': 52,\n    '5': 53,\n    '6': 54,\n    '7': 55,\n    '8': 56,\n    '9': 57,\n    'A': 65,\n    'B': 66,\n    'C': 67,\n    'D': 68,\n    'E': 69,\n    'F': 70,\n    'G': 71,\n    'H': 72,\n    'I': 73,\n    'J': 74,\n    'K': 75,\n    'L': 76,\n    'M': 77,\n    'N': 78,\n    'O': 79,\n    'P': 80,\n    'Q': 81,\n    'R': 82,\n    'S': 83,\n    'T': 84,\n    'U': 85,\n    'V': 86,\n    'W': 87,\n    'X': 88,\n    'Y': 89,\n    'Z': 90,\n    '0NUMPAD': 96,\n    '1NUMPAD': 97,\n    '2NUMPAD': 98,\n    '3NUMPAD': 99,\n    '4NUMPAD': 100,\n    '5NUMPAD': 101,\n    '6NUMPAD': 102,\n    '7NUMPAD': 103,\n    '8NUMPAD': 104,\n    '9NUMPAD': 105,\n    'MULTIPLY': 106,\n    'PLUS': 107,\n    'MINUS': 109,\n    'DOT': 110,\n    'SLASH1': 111,\n    'F1': 112,\n    'F2': 113,\n    'F3': 114,\n    'F4': 115,\n    'F5': 116,\n    'F6': 117,\n    'F7': 118,\n    'F8': 119,\n    'F9': 120,\n    'F10': 121,\n    'F11': 122,\n    'F12': 123,\n    'EQUAL': 187,\n    'COMMA': 188,\n    'SLASH': 191,\n    'BACKSLASH': 220\n};\n\n/**\n * An object storing deprecated key aliases, which we still support but\n * should be mapped to valid aliases and generate warnings.\n *\n * @private\n * @property KEY_DEPRECATIONS\n * @type {Object}\n */\np5.prototype.KEY_DEPRECATIONS = {\n  'MINUT': 'MINUS',\n  'COMA': 'COMMA'\n};\n\n/**\n * Given a string key alias (as defined in the KEY property above), look up\n * and return the numeric JavaScript key code for that key.  If a deprecated\n * alias is passed (as defined in the KEY_DEPRECATIONS property) it will be\n * mapped to a valid key code, but will also generate a warning about use\n * of the deprecated alias.\n *\n * @private\n * @method _keyCodeFromAlias\n * @param {!string} alias - a case-insensitive key alias\n * @return {number|undefined} a numeric JavaScript key code, or undefined\n *          if no key code matching the given alias is found.\n */\np5.prototype._keyCodeFromAlias = function(alias) {\n  alias = alias.toUpperCase();\n  if (this.KEY_DEPRECATIONS[alias]) {\n    this._warn('Key literal \"' + alias + '\" is deprecated and may be removed ' +\n      'in a future version of p5.play. ' +\n      'Please use \"' + this.KEY_DEPRECATIONS[alias] + '\" instead.');\n    alias = this.KEY_DEPRECATIONS[alias];\n  }\n  return this.KEY[alias];\n};\n\n//pre draw: detect keyStates\np5.prototype.readPresses = function() {\n  var keyStates = this._p5play.keyStates;\n  var mouseStates = this._p5play.mouseStates;\n\n  for (var key in keyStates) {\n    if(this.keyIsDown(key)) //if is down\n    {\n      if(keyStates[key] === KEY_IS_UP)//and was up\n        keyStates[key] = KEY_WENT_DOWN;\n      else\n        keyStates[key] = KEY_IS_DOWN; //now is simply down\n    }\n    else //if it's up\n    {\n      if(keyStates[key] === KEY_IS_DOWN)//and was up\n        keyStates[key] = KEY_WENT_UP;\n      else\n        keyStates[key] = KEY_IS_UP; //now is simply down\n    }\n  }\n\n  //mouse\n  for (var btn in mouseStates) {\n\n    if(this.mouseIsPressed && this.mouseButton === btn) //if is down\n    {\n      if(mouseStates[btn] === KEY_IS_UP)//and was up\n        mouseStates[btn] = KEY_WENT_DOWN;\n      else\n        mouseStates[btn] = KEY_IS_DOWN; //now is simply down\n    }\n    else //if it's up\n    {\n      if(mouseStates[btn] === KEY_IS_DOWN)//and was up\n        mouseStates[btn] = KEY_WENT_UP;\n      else\n        mouseStates[btn] = KEY_IS_UP; //now is simply down\n    }\n  }\n\n};\n\n/**\n* Turns the quadTree on or off.\n* A quadtree is a data structure used to optimize collision detection.\n* It can improve performance when there is a large number of Sprites to be\n* checked continuously for overlapping.\n*\n* p5.play will create and update a quadtree automatically.\n*\n* @method useQuadTree\n* @param {Boolean} use Pass true to enable, false to disable\n*/\np5.prototype.useQuadTree = function(use) {\n\n  if(this.quadTree !== undefined)\n  {\n    if(use === undefined)\n      return this.quadTree.active;\n    else if(use)\n      this.quadTree.active = true;\n    else\n      this.quadTree.active = false;\n  }\n  else\n    return false;\n};\n\n//the actual quadTree\ndefineLazyP5Property('quadTree', function() {\n  return new Quadtree({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  }, 4);\n});\n\n/*\n//framerate independent delta, doesn't really work\np5.prototype.deltaTime = 1;\n\nvar now = Date.now();\nvar then = Date.now();\nvar INTERVAL_60 = 0.0166666; //60 fps\n\nfunction updateDelta() {\nthen = now;\nnow = Date.now();\ndeltaTime = ((now - then) / 1000)/INTERVAL_60; // seconds since last frame\n}\n*/\n\n/**\n   * A Sprite is the main building block of p5.play:\n   * an element able to store images or animations with a set of\n   * properties such as position and visibility.\n   * A Sprite can have a collider that defines the active area to detect\n   * collisions or overlappings with other sprites and mouse interactions.\n   *\n   * To create a Sprite, use\n   * {{#crossLink \"p5.play/createSprite:method\"}}{{/crossLink}}.\n   *\n   * @class Sprite\n   */\n\n// For details on why these docs aren't in a YUIDoc comment block, see:\n//\n// https://github.com/molleindustria/p5.play/pull/67\n//\n// @param {Number} x Initial x coordinate\n// @param {Number} y Initial y coordinate\n// @param {Number} width Width of the placeholder rectangle and of the\n//                       collider until an image or new collider are set\n// @param {Number} height Height of the placeholder rectangle and of the\n//                        collider until an image or new collider are set\nfunction Sprite(pInst, _x, _y, _w, _h) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n  var color = pInstBind('color');\n  var random = pInstBind('random');\n  var print = pInstBind('print');\n  var push = pInstBind('push');\n  var pop = pInstBind('pop');\n  var colorMode = pInstBind('colorMode');\n  var noStroke = pInstBind('noStroke');\n  var rectMode = pInstBind('rectMode');\n  var ellipseMode = pInstBind('ellipseMode');\n  var imageMode = pInstBind('imageMode');\n  var translate = pInstBind('translate');\n  var scale = pInstBind('scale');\n  var rotate = pInstBind('rotate');\n  var stroke = pInstBind('stroke');\n  var strokeWeight = pInstBind('strokeWeight');\n  var line = pInstBind('line');\n  var noFill = pInstBind('noFill');\n  var fill = pInstBind('fill');\n  var textAlign = pInstBind('textAlign');\n  var textSize = pInstBind('textSize');\n  var text = pInstBind('text');\n  var rect = pInstBind('rect');\n  var cos = pInstBind('cos');\n  var sin = pInstBind('sin');\n  var atan2 = pInstBind('atan2');\n\n  var quadTree = pInst.quadTree;\n  var camera = pInst.camera;\n\n\n  // These are p5 constants that we'd like easy access to.\n  var RGB = p5.prototype.RGB;\n  var CENTER = p5.prototype.CENTER;\n  var LEFT = p5.prototype.LEFT;\n  var BOTTOM = p5.prototype.BOTTOM;\n\n  /**\n  * The sprite's position of the sprite as a vector (x,y).\n  * @property position\n  * @type {p5.Vector}\n  */\n  this.position = createVector(_x, _y);\n\n  /**\n  * The sprite's position at the beginning of the last update as a vector (x,y).\n  * @property previousPosition\n  * @type {p5.Vector}\n  */\n  this.previousPosition = createVector(_x, _y);\n\n  /*\n  The sprite's position at the end of the last update as a vector (x,y).\n  Note: this will differ from position whenever the position is changed\n  directly by assignment.\n  */\n  this.newPosition = createVector(_x, _y);\n\n  //Position displacement on the x coordinate since the last update\n  this.deltaX = 0;\n  this.deltaY = 0;\n\n  /**\n  * The sprite's velocity as a vector (x,y)\n  * Velocity is speed broken down to its vertical and horizontal components.\n  *\n  * @property velocity\n  * @type {p5.Vector}\n  */\n  this.velocity = createVector(0, 0);\n\n  /**\n  * Set a limit to the sprite's scalar speed regardless of the direction.\n  * The value can only be positive. If set to -1, there's no limit.\n  *\n  * @property maxSpeed\n  * @type {Number}\n  * @default -1\n  */\n  this.maxSpeed = -1;\n\n  /**\n  * Friction factor, reduces the sprite's velocity.\n  * The friction should be close to 0 (eg. 0.01)\n  * 0: no friction\n  * 1: full friction\n  *\n  * @property friction\n  * @type {Number}\n  * @default 0\n  */\n  this.friction = 0;\n\n  /**\n  * The sprite's current collider.\n  * It can either be an Axis Aligned Bounding Box (a non-rotated rectangle)\n  * or a circular collider.\n  * If the sprite is checked for collision, bounce, overlapping or mouse events the\n  * collider is automatically created from the width and height\n  * of the sprite or from the image dimension in case of animate sprites\n  *\n  * You can set a custom collider with Sprite.setCollider\n  *\n  * @property collider\n  * @type {Object}\n  */\n  this.collider = undefined;\n\n  //internal use\n  //\"default\" - no image or custom collider is specified, use the shape width / height\n  //\"custom\" - specified with setCollider\n  //\"image\" - no collider is set with setCollider and an image is added\n  this.colliderType = 'none';\n\n  /**\n  * Object containing information about the most recent collision/overlapping\n  * To be typically used in combination with Sprite.overlap or Sprite.collide\n  * functions.\n  * The properties are touching.left, touching.right, touching.top,\n  * touching.bottom and are either true or false depending on the side of the\n  * collider.\n  *\n  * @property touching\n  * @type {Object}\n  */\n  this.touching = {};\n  this.touching.left = false;\n  this.touching.right = false;\n  this.touching.top = false;\n  this.touching.bottom = false;\n\n  /**\n  * The mass determines the velocity transfer when sprites bounce\n  * against each other. See Sprite.bounce\n  * The higher the mass the least the sprite will be affected by collisions.\n  *\n  * @property mass\n  * @type {Number}\n  * @default 1\n  */\n  this.mass = 1;\n\n  /**\n  * If set to true the sprite won't bounce or be displaced by collisions\n  * Simulates an infinite mass or an anchored object.\n  *\n  * @property immovable\n  * @type {Boolean}\n  * @default false\n  */\n  this.immovable = false;\n\n  //Coefficient of restitution - velocity lost in the bouncing\n  //0 perfectly inelastic , 1 elastic, > 1 hyper elastic\n\n  /**\n  * Coefficient of restitution. The velocity lost after bouncing.\n  * 1: perfectly elastic, no energy is lost\n  * 0: perfectly inelastic, no bouncing\n  * less than 1: inelastic, this is the most common in nature\n  * greater than 1: hyper elastic, energy is increased like in a pinball bumper\n  *\n  * @property restitution\n  * @type {Number}\n  * @default 1\n  */\n  this.restitution = 1;\n\n  /**\n  * Rotation in degrees of the visual element (image or animation)\n  * Note: this is not the movement's direction, see getDirection.\n  *\n  * @property rotation\n  * @type {Number}\n  * @default 0\n  */\n  Object.defineProperty(this, 'rotation', {\n    enumerable: true,\n    get: function() {\n      return this._rotation;\n    },\n    set: function(value) {\n      this._rotation = value;\n      if (this.rotateToDirection) {\n        this.setSpeed(this.getSpeed(), value);\n      }\n    }\n  });\n\n  /**\n  * Internal rotation variable (expressed in degrees).\n  * Note: external callers access this through the rotation property above.\n  *\n  * @private\n  * @property _rotation\n  * @type {Number}\n  * @default 0\n  */\n  this._rotation = 0;\n\n  /**\n  * Rotation change in degrees per frame of thevisual element (image or animation)\n  * Note: this is not the movement's direction, see getDirection.\n  *\n  * @property rotationSpeed\n  * @type {Number}\n  * @default 0\n  */\n  this.rotationSpeed = 0;\n\n\n  /**\n  * Automatically lock the rotation property of the visual element\n  * (image or animation) to the sprite's movement direction and vice versa.\n  *\n  * @property rotateToDirection\n  * @type {Boolean}\n  * @default false\n  */\n  this.rotateToDirection = false;\n\n\n  /**\n  * Determines the rendering order within a group: a sprite with\n  * lower depth will appear below the ones with higher depth.\n  *\n  * Note: drawing a group before another with drawSprites will make\n  * its members appear below the second one, like in normal p5 canvas\n  * drawing.\n  *\n  * @property depth\n  * @type {Number}\n  * @default One more than the greatest existing sprite depth, when calling\n  *          createSprite().  When calling new Sprite() directly, depth will\n  *          initialize to 0 (not recommended).\n  */\n  this.depth = 0;\n\n  /**\n  * Determines the sprite's scale.\n  * Example: 2 will be twice the native size of the visuals,\n  * 0.5 will be half. Scaling up may make images blurry.\n  *\n  * @property scale\n  * @type {Number}\n  * @default 1\n  */\n  this.scale = 1;\n\n  var dirX = 1;\n  var dirY = 1;\n\n  /**\n  * The sprite's visibility.\n  *\n  * @property visible\n  * @type {Boolean}\n  * @default true\n  */\n  this.visible = true;\n\n  /**\n  * If set to true sprite will track its mouse state.\n  * the properties mouseIsPressed and mouseIsOver will be updated.\n  * Note: automatically set to true if the functions\n  * onMouseReleased or onMousePressed are set.\n  *\n  * @property mouseActive\n  * @type {Boolean}\n  * @default false\n  */\n  this.mouseActive = false;\n\n  /**\n  * True if mouse is on the sprite's collider.\n  * Read only.\n  *\n  * @property mouseIsOver\n  * @type {Boolean}\n  */\n  this.mouseIsOver = false;\n\n  /**\n  * True if mouse is pressed on the sprite's collider.\n  * Read only.\n  *\n  * @property mouseIsPressed\n  * @type {Boolean}\n  */\n  this.mouseIsPressed = false;\n\n  /*\n  * Width of the sprite's current image.\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  * Used internally to make calculations and draw the sprite.\n  *\n  * @private\n  * @property _internalWidth\n  * @type {Number}\n  * @default 100\n  */\n  this._internalWidth = _w;\n\n  /*\n  * Height of the sprite's current image.\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  * Used internally to make calculations and draw the sprite.\n  *\n  * @private\n  * @property _internalHeight\n  * @type {Number}\n  * @default 100\n  */\n  this._internalHeight = _h;\n\n  /*\n   * _internalWidth and _internalHeight are used for all p5.play\n   * calculations, but width and height can be extended. For example,\n   * you may want users to always get and set a scaled width:\n      Object.defineProperty(this, 'width', {\n        enumerable: true,\n        configurable: true,\n        get: function() {\n          return this._internalWidth * this.scale;\n        },\n        set: function(value) {\n          this._internalWidth = value / this.scale;\n        }\n      });\n   */\n\n  /**\n  * Width of the sprite's current image.\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  *\n  * @property width\n  * @type {Number}\n  * @default 100\n  */\n  Object.defineProperty(this, 'width', {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return this._internalWidth;\n    },\n    set: function(value) {\n      this._internalWidth = value;\n    }\n  });\n\n  if(_w === undefined)\n    this.width = 100;\n  else\n    this.width = _w;\n\n  /**\n  * Height of the sprite's current image.\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  *\n  * @property height\n  * @type {Number}\n  * @default 100\n  */\n  Object.defineProperty(this, 'height', {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return this._internalHeight;\n    },\n    set: function(value) {\n      this._internalHeight = value;\n    }\n  });\n\n  if(_h === undefined)\n    this.height = 100;\n  else\n    this.height = _h;\n\n  /**\n  * Unscaled width of the sprite\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  *\n  * @property originalWidth\n  * @type {Number}\n  * @default 100\n  */\n  this.originalWidth = this._internalWidth;\n\n  /**\n  * Unscaled height of the sprite\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  *\n  * @property originalHeight\n  * @type {Number}\n  * @default 100\n  */\n  this.originalHeight = this._internalHeight;\n\n  /**\n  * True if the sprite has been removed.\n  *\n  * @property removed\n  * @type {Boolean}\n  */\n  this.removed = false;\n\n  /**\n  * Cycles before self removal.\n  * Set it to initiate a countdown, every draw cycle the property is\n  * reduced by 1 unit. At 0 it will call a sprite.remove()\n  * Disabled if set to -1.\n  *\n  * @property life\n  * @type {Number}\n  * @default -1\n  */\n  this.life = -1;\n\n  /**\n  * If set to true, draws an outline of the collider, the depth, and center.\n  *\n  * @property debug\n  * @type {Boolean}\n  * @default false\n  */\n  this.debug = false;\n\n  /**\n  * If no image or animations are set this is color of the\n  * placeholder rectangle\n  *\n  * @property shapeColor\n  * @type {color}\n  */\n  this.shapeColor = color(random(255), random(255), random(255));\n\n  /**\n  * Groups the sprite belongs to, including allSprites\n  *\n  * @property groups\n  * @type {Array}\n  */\n  this.groups = [];\n\n  var animations = {};\n\n  //The current animation's label.\n  var currentAnimation = '';\n\n  /**\n  * Reference to the current animation.\n  *\n  * @property animation\n  * @type {Animation}\n  */\n  this.animation = undefined;\n\n  /**\n  * Internal variable to keep track of whether this sprite is drawn while\n  * the camera is active.\n  * Used in Sprite.update() to know whether to use camera mouse coordinates.\n  * @see https://github.com/molleindustria/p5.play/issues/107\n  *\n  * @private\n  * @property _drawnWithCamera\n  * @type {Boolean}\n  * @default false\n  */\n  this._drawnWithCamera = false;\n\n  /*\n   * @private\n   * Keep animation properties in sync with how the animation changes.\n   */\n  this._syncAnimationSizes = function() {\n    //has an animation but the collider is still default\n    //the animation wasn't loaded. if the animation is not a 1x1 image\n    //it means it just finished loading\n    if(this.colliderType === 'default' &&\n      animations[currentAnimation].getWidth() !== 1 && animations[currentAnimation].getHeight() !== 1)\n    {\n      this.collider = this.getBoundingBox();\n      this.colliderType = 'image';\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n      //quadTree.insert(this);\n    }\n\n    //update size and collider\n    if(animations[currentAnimation].frameChanged || this.width === undefined || this.height === undefined)\n    {\n      //this.collider = this.getBoundingBox();\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n    }\n  };\n\n  /**\n  * Updates the sprite.\n  * Called automatically at the beginning of the draw cycle.\n  *\n  * @method update\n  */\n  this.update = function() {\n\n    if(!this.removed)\n    {\n      //if there has been a change somewhere after the last update\n      //the old position is the last position registered in the update\n      if(this.newPosition !== this.position)\n        this.previousPosition = createVector(this.newPosition.x, this.newPosition.y);\n      else\n        this.previousPosition = createVector(this.position.x, this.position.y);\n\n      this.velocity.x *= 1 - this.friction;\n      this.velocity.y *= 1 - this.friction;\n\n      if(this.maxSpeed !== -1)\n        this.limitSpeed(this.maxSpeed);\n\n      if(this.rotateToDirection && this.velocity.mag() > 0)\n        this._rotation = this.getDirection();\n\n      this.rotation += this.rotationSpeed;\n\n      this.position.x += this.velocity.x;\n      this.position.y += this.velocity.y;\n\n      this.newPosition = createVector(this.position.x, this.position.y);\n\n      this.deltaX = this.position.x - this.previousPosition.x;\n      this.deltaY = this.position.y - this.previousPosition.y;\n\n      //if there is an animation\n      if(animations[currentAnimation])\n      {\n        //update it\n        animations[currentAnimation].update();\n\n        this._syncAnimationSizes();\n      }\n\n      //a collider is created either manually with setCollider or\n      //when I check this sprite for collisions or overlaps\n      if(this.collider)\n      {\n        if(this.collider instanceof AABB)\n        {\n        //scale / rotate collider\n        var t;\n        if (pInst._angleMode === pInst.RADIANS) {\n          t = radians(this.rotation);\n        } else {\n          t = this.rotation;\n        }\n\n        if(this.colliderType === 'custom')\n          {\n          this.collider.extents.x = this.collider.originalExtents.x * abs(this._getScaleX()) * abs(cos(t)) +\n          this.collider.originalExtents.y * abs(this._getScaleY()) * abs(sin(t));\n\n          this.collider.extents.y = this.collider.originalExtents.x * abs(this._getScaleX()) * abs(sin(t)) +\n          this.collider.originalExtents.y * abs(this._getScaleY()) * abs(cos(t));\n          }\n        else if(this.colliderType === 'default')\n          {\n          this.collider.extents.x = this._internalWidth * abs(this._getScaleX()) * abs(cos(t)) +\n          this._internalHeight * abs(this._getScaleY()) * abs(sin(t));\n          this.collider.extents.y = this._internalWidth * abs(this._getScaleX()) * abs(sin(t)) +\n          this._internalHeight * abs(this._getScaleY()) * abs(cos(t));\n          }\n        else if(this.colliderType === 'image')\n          {\n          this.collider.extents.x = this._internalWidth * abs(cos(t)) +\n          this._internalHeight * abs(sin(t));\n\n          this.collider.extents.y = this._internalWidth * abs(sin(t)) +\n          this._internalHeight * abs(cos(t));\n          }\n        }\n\n        if(this.collider instanceof CircleCollider)\n        {\n        //print(this.scale);\n        this.collider.radius = this.collider.originalRadius * abs(this.scale);\n        }\n\n      }//end collider != null\n\n      //mouse actions\n      if (this.mouseActive)\n      {\n        //if no collider set it\n          if(!this.collider)\n            this.setDefaultCollider();\n\n        this.mouseUpdate();\n      }\n      else\n      {\n        if (typeof(this.onMouseOver) === 'function' ||\n            typeof(this.onMouseOut) === 'function' ||\n            typeof(this.onMousePressed) === 'function' ||\n            typeof(this.onMouseReleased) === 'function')\n        {\n          //if a mouse function is set\n          //it's implied we want to have it mouse active so\n          //we do this automatically\n          this.mouseActive = true;\n\n          //if no collider set it\n          if(!this.collider)\n            this.setDefaultCollider();\n\n          this.mouseUpdate();\n        }\n      }\n\n      //self destruction countdown\n      if (this.life>0)\n        this.life--;\n      if (this.life === 0)\n        this.remove();\n    }\n  };//end update\n\n  /**\n   * Creates a default collider matching the size of the\n   * placeholder rectangle or the bounding box of the image.\n   *\n   * @method setDefaultCollider\n   */\n  this.setDefaultCollider = function() {\n\n    //if has animation get the animation bounding box\n    //working only for preloaded images\n    if(animations[currentAnimation] && (animations[currentAnimation].getWidth() !== 1 && animations[currentAnimation].getHeight() !== 1))\n    {\n      this.collider = this.getBoundingBox();\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n      //quadTree.insert(this);\n      this.colliderType = 'image';\n      //print(\"IMAGE COLLIDER ADDED\");\n    }\n    else if(animations[currentAnimation] && animations[currentAnimation].getWidth() === 1 && animations[currentAnimation].getHeight() === 1)\n    {\n    //animation is still loading\n    //print(\"wait\");\n    }\n    else //get the with and height defined at the creation\n    {\n      this.collider = new AABB(pInst, this.position, createVector(this._internalWidth, this._internalHeight));\n      //quadTree.insert(this);\n      this.colliderType = 'default';\n    }\n\n    pInst.quadTree.insert(this);\n  };\n\n  /**\n   * Updates the sprite mouse states and triggers the mouse events:\n   * onMouseOver, onMouseOut, onMousePressed, onMouseReleased\n   *\n   * @method mouseUpdate\n   */\n  this.mouseUpdate = function() {\n\n    var mouseWasOver = this.mouseIsOver;\n    var mouseWasPressed = this.mouseIsPressed;\n\n    this.mouseIsOver = false;\n    this.mouseIsPressed = false;\n\n    var mousePosition;\n\n    if(this._drawnWithCamera)\n      mousePosition = createVector(camera.mouseX, camera.mouseY);\n    else\n      mousePosition = createVector(pInst.mouseX, pInst.mouseY);\n\n      //rollover\n      if(this.collider)\n      {\n\n        if (this.collider instanceof CircleCollider)\n        {\n          if (dist(mousePosition.x, mousePosition.y, this.collider.center.x, this.collider.center.y) < this.collider.radius)\n            this.mouseIsOver = true;\n        } else if (this.collider instanceof AABB)\n        {\n          if (mousePosition.x > this.collider.left() &&\n              mousePosition.y > this.collider.top() &&\n              mousePosition.x < this.collider.right() &&\n              mousePosition.y < this.collider.bottom())\n          {\n            this.mouseIsOver = true;\n          }\n        }\n\n        //global p5 var\n        if(this.mouseIsOver && pInst.mouseIsPressed)\n          this.mouseIsPressed = true;\n\n        //event change - call functions\n        if(!mouseWasOver && this.mouseIsOver && this.onMouseOver !== undefined)\n          if(typeof(this.onMouseOver) === 'function')\n            this.onMouseOver.call(this, this);\n          else\n            print('Warning: onMouseOver should be a function');\n\n        if(mouseWasOver && !this.mouseIsOver && this.onMouseOut !== undefined)\n          if(typeof(this.onMouseOut) === 'function')\n            this.onMouseOut.call(this, this);\n          else\n            print('Warning: onMouseOut should be a function');\n\n        if(!mouseWasPressed && this.mouseIsPressed && this.onMousePressed !== undefined)\n          if(typeof(this.onMousePressed) === 'function')\n            this.onMousePressed.call(this, this);\n          else\n            print('Warning: onMousePressed should be a function');\n\n        if(mouseWasPressed && !pInst.mouseIsPressed && !this.mouseIsPressed && this.onMouseReleased !== undefined)\n          if(typeof(this.onMouseReleased) === 'function')\n            this.onMouseReleased.call(this, this);\n          else\n            print('Warning: onMouseReleased should be a function');\n\n      }\n\n  };\n\n  /**\n  * Sets a collider for the sprite.\n  *\n  * In p5.play a Collider is an invisible circle or rectangle\n  * that can have any size or position relative to the sprite and which\n  * will be used to detect collisions and overlapping with other sprites,\n  * or the mouse cursor.\n  *\n  * If the sprite is checked for collision, bounce, overlapping or mouse events\n  * a collider is automatically created from the width and height parameter\n  * passed at the creation of the sprite or the from the image dimension in case\n  * of animated sprites.\n  *\n  * Often the image bounding box is not appropriate as the active area for\n  * collision detection so you can set a circular or rectangular sprite with\n  * different dimensions and offset from the sprite's center.\n  *\n  * There are four ways to call this method:\n  *\n  * 1. setCollider(\"rectangle\")\n  * 2. setCollider(\"rectangle\", offsetX, offsetY, width, height)\n  * 3. setCollider(\"circle\")\n  * 4. setCollider(\"circle\", offsetX, offsetY, radius)\n  *\n  * @method setCollider\n  * @param {String} type Either \"rectangle\" or \"circle\"\n  * @param {Number} offsetX Collider x position from the center of the sprite\n  * @param {Number} offsetY Collider y position from the center of the sprite\n  * @param {Number} width Collider width or radius\n  * @param {Number} height Collider height\n  * @throws {TypeError} if given invalid parameters.\n  */\n  this.setCollider = function(type, offsetX, offsetY, width, height) {\n    if (!(type === 'rectangle' || type === 'circle')) {\n      throw new TypeError('setCollider expects the first argument to be either \"circle\" or \"rectangle\"');\n    } else if (type === 'circle' && arguments.length > 1 && arguments.length < 4) {\n      throw new TypeError('Usage: setCollider(\"circle\") or setCollider(\"circle\", offsetX, offsetY, radius)');\n    } else if (type === 'circle' && arguments.length > 4) {\n      pInst._warn('Extra parameters to setCollider were ignored. Usage: setCollider(\"circle\") or setCollider(\"circle\", offsetX, offsetY, radius)');\n    } else if (type === 'rectangle' && arguments.length > 1 && arguments.length < 5) {\n      throw new TypeError('Usage: setCollider(\"rectangle\") or setCollider(\"rectangle\", offsetX, offsetY, width, height)');\n    } else if (type === 'rectangle' && arguments.length > 5) {\n      pInst._warn('Extra parameters to setCollider were ignored. Usage: setCollider(\"rectangle\") or setCollider(\"rectangle\", offsetX, offsetY, width, height)');\n    }\n\n    this.colliderType = 'custom';\n\n    var v = createVector(offsetX, offsetY);\n    if (type === 'rectangle' && arguments.length === 1) {\n      this.collider = new AABB(pInst, this.position, createVector(this.width, this.height));\n    } else if (type === 'rectangle' && arguments.length >= 5) {\n      this.collider = new AABB(pInst, this.position, createVector(width, height), v);\n    } else if (type === 'circle' && arguments.length === 1) {\n      this.collider = new CircleCollider(pInst, this.position, Math.floor(Math.max(this.width, this.height) / 2));\n    } else if (type === 'circle' && arguments.length >= 4) {\n      this.collider = new CircleCollider(pInst, this.position, width, v);\n    }\n\n    quadTree.insert(this);\n  };\n\n  /**\n   * Returns a the bounding box of the current image\n   * @method getBoundingBox\n   */\n  this.getBoundingBox = function() {\n\n    var w = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n    var h = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n\n    //if the bounding box is 1x1 the image is not loaded\n    //potential issue with actual 1x1 images\n    if(w === 1 && h === 1) {\n      //not loaded yet\n      return new AABB(pInst, this.position, createVector(w, h));\n    }\n    else {\n      return new AABB(pInst, this.position, createVector(w, h));\n    }\n  };\n\n  /**\n  * Sets the sprite's horizontal mirroring.\n  * If 1 the images displayed normally\n  * If -1 the images are flipped horizontally\n  * If no argument returns the current x mirroring\n  *\n  * @method mirrorX\n  * @param {Number} dir Either 1 or -1\n  * @return {Number} Current mirroring if no parameter is specified\n  */\n  this.mirrorX = function(dir) {\n    if(dir === 1 || dir === -1)\n      dirX = dir;\n    else\n      return dirX;\n  };\n\n  /**\n  * Sets the sprite's vertical mirroring.\n  * If 1 the images displayed normally\n  * If -1 the images are flipped vertically\n  * If no argument returns the current y mirroring\n  *\n  * @method mirrorY\n  * @param {Number} dir Either 1 or -1\n  * @return {Number} Current mirroring if no parameter is specified\n  */\n  this.mirrorY = function(dir) {\n    if(dir === 1 || dir === -1)\n      dirY = dir;\n    else\n      return dirY;\n  };\n\n  /*\n   * Returns the value the sprite should be scaled in the X direction.\n   * Used to calculate rendering and collisions.\n   * @private\n   */\n  this._getScaleX = function()\n  {\n    return this.scale;\n  };\n\n  /*\n   * Returns the value the sprite should be scaled in the Y direction.\n   * Used to calculate rendering and collisions.\n   * @private\n   */\n  this._getScaleY = function()\n  {\n    return this.scale;\n  };\n\n  /**\n   * Manages the positioning, scale and rotation of the sprite\n   * Called automatically, it should not be overridden\n   * @private\n   * @final\n   * @method display\n   */\n  this.display = function()\n  {\n    if (this.visible && !this.removed)\n    {\n      push();\n      colorMode(RGB);\n\n      noStroke();\n      rectMode(CENTER);\n      ellipseMode(CENTER);\n      imageMode(CENTER);\n\n      translate(this.position.x, this.position.y);\n      scale(this._getScaleX()*dirX, this._getScaleY()*dirY);\n      if (pInst._angleMode === pInst.RADIANS) {\n        rotate(radians(this.rotation));\n      } else {\n        rotate(this.rotation);\n      }\n      this.draw();\n      //draw debug info\n      pop();\n\n      this._drawnWithCamera = camera.active;\n\n      if(this.debug)\n      {\n        push();\n        //draw the anchor point\n        stroke(0, 255, 0);\n        strokeWeight(1);\n        line(this.position.x-10, this.position.y, this.position.x+10, this.position.y);\n        line(this.position.x, this.position.y-10, this.position.x, this.position.y+10);\n        noFill();\n\n        //depth number\n        noStroke();\n        fill(0, 255, 0);\n        textAlign(LEFT, BOTTOM);\n        textSize(16);\n        text(this.depth+'', this.position.x+4, this.position.y-2);\n\n        noFill();\n        stroke(0, 255, 0);\n\n        //bounding box\n        if(this.collider !== undefined)\n        {\n          this.collider.draw();\n        }\n        pop();\n      }\n\n    }\n  };\n\n\n  /**\n  * Manages the visuals of the sprite.\n  * It can be overridden with a custom drawing function.\n  * The 0,0 point will be the center of the sprite.\n  * Example:\n  * sprite.draw = function() { ellipse(0,0,10,10) }\n  * Will display the sprite as circle.\n  *\n  * @method draw\n  */\n  this.draw = function()\n  {\n    if(currentAnimation !== '' && animations)\n    {\n      if(animations[currentAnimation])\n        animations[currentAnimation].draw(0, 0, 0);\n    }\n    else\n    {\n      noStroke();\n      fill(this.shapeColor);\n      rect(0, 0, this._internalWidth, this._internalHeight);\n    }\n  };\n\n  /**\n   * Removes the Sprite from the sketch.\n   * The removed Sprite won't be drawn or updated anymore.\n   *\n   * @method remove\n   */\n  this.remove = function() {\n    this.removed = true;\n\n    quadTree.removeObject(this);\n\n    //when removed from the \"scene\" also remove all the references in all the groups\n    while (this.groups.length > 0) {\n      this.groups[0].remove(this);\n    }\n  };\n\n  /**\n  * Sets the velocity vector.\n  *\n  * @method setVelocity\n  * @param {Number} x X component\n  * @param {Number} y Y component\n  */\n  this.setVelocity = function(x, y) {\n    this.velocity.x = x;\n    this.velocity.y = y;\n  };\n\n  /**\n  * Calculates the scalar speed.\n  *\n  * @method getSpeed\n  * @return {Number} Scalar speed\n  */\n  this.getSpeed = function() {\n    return this.velocity.mag();\n  };\n\n  /**\n  * Calculates the movement's direction in degrees.\n  *\n  * @method getDirection\n  * @return {Number} Angle in degrees\n  */\n  this.getDirection = function() {\n\n    var direction = atan2(this.velocity.y, this.velocity.x);\n\n    if(isNaN(direction))\n      direction = 0;\n\n    // Unlike Math.atan2, the atan2 method above will return degrees if\n    // the current p5 angleMode is DEGREES, and radians if the p5 angleMode is\n    // RADIANS.  This method should always return degrees (for now).\n    // See https://github.com/molleindustria/p5.play/issues/94\n    if (pInst._angleMode === pInst.RADIANS) {\n      direction = degrees(direction);\n    }\n\n    return direction;\n  };\n\n  /**\n  * Adds the sprite to an existing group\n  *\n  * @method addToGroup\n  * @param {Object} group\n  */\n  this.addToGroup = function(group) {\n    if(group instanceof Array)\n      group.add(this);\n    else\n      print('addToGroup error: '+group+' is not a group');\n  };\n\n  /**\n  * Limits the scalar speed.\n  *\n  * @method limitSpeed\n  * @param {Number} max Max speed: positive number\n  */\n  this.limitSpeed = function(max) {\n\n    //update linear speed\n    var speed = this.getSpeed();\n\n    if(abs(speed)>max)\n    {\n      //find reduction factor\n      var k = max/abs(speed);\n      this.velocity.x *= k;\n      this.velocity.y *= k;\n    }\n  };\n\n  /**\n  * Set the speed and direction of the sprite.\n  * The action overwrites the current velocity.\n  * If direction is not supplied, the current direction is maintained.\n  * If direction is not supplied and there is no current velocity, the current\n  * rotation angle used for the direction.\n  *\n  * @method setSpeed\n  * @param {Number}  speed Scalar speed\n  * @param {Number}  [angle] Direction in degrees\n  */\n  this.setSpeed = function(speed, angle) {\n    var a;\n    if (typeof angle === 'undefined') {\n      if (this.velocity.x !== 0 || this.velocity.y !== 0) {\n        a = pInst.atan2(this.velocity.y, this.velocity.x);\n      } else {\n        if (pInst._angleMode === pInst.RADIANS) {\n          a = radians(this._rotation);\n        } else {\n          a = this._rotation;\n        }\n      }\n    } else {\n      if (pInst._angleMode === pInst.RADIANS) {\n        a = radians(angle);\n      } else {\n        a = angle;\n      }\n    }\n    this.velocity.x = cos(a)*speed;\n    this.velocity.y = sin(a)*speed;\n  };\n\n  /**\n  * Pushes the sprite in a direction defined by an angle.\n  * The force is added to the current velocity.\n  *\n  * @method addSpeed\n  * @param {Number}  speed Scalar speed to add\n  * @param {Number}  angle Direction in degrees\n  */\n  this.addSpeed = function(speed, angle) {\n    var a;\n    if (pInst._angleMode === pInst.RADIANS) {\n      a = radians(angle);\n    } else {\n      a = angle;\n    }\n    this.velocity.x += cos(a) * speed;\n    this.velocity.y += sin(a) * speed;\n  };\n\n  /**\n  * Pushes the sprite toward a point.\n  * The force is added to the current velocity.\n  *\n  * @method attractionPoint\n  * @param {Number}  magnitude Scalar speed to add\n  * @param {Number}  pointX Direction x coordinate\n  * @param {Number}  pointY Direction y coordinate\n  */\n  this.attractionPoint = function(magnitude, pointX, pointY) {\n    var angle = atan2(pointY-this.position.y, pointX-this.position.x);\n    this.velocity.x += cos(angle) * magnitude;\n    this.velocity.y += sin(angle) * magnitude;\n  };\n\n\n  /**\n  * Adds an image to the sprite.\n  * An image will be considered a one-frame animation.\n  * The image should be preloaded in the preload() function using p5 loadImage.\n  * Animations require a identifying label (string) to change them.\n  * The image is stored in the sprite but not necessarily displayed\n  * until Sprite.changeAnimation(label) is called\n  *\n  * Usages:\n  * - sprite.addImage(label, image);\n  * - sprite.addImage(image);\n  *\n  * If only an image is passed no label is specified\n  *\n  * @method addImage\n  * @param {String|p5.Image} label Label or image\n  * @param {p5.Image} [img] Image\n  */\n  this.addImage = function()\n  {\n    if(typeof arguments[0] === 'string' && arguments[1] instanceof p5.Image)\n      this.addAnimation(arguments[0], arguments[1]);\n    else if(arguments[0] instanceof p5.Image)\n      this.addAnimation('normal', arguments[0]);\n    else\n      throw('addImage error: allowed usages are <image> or <label>, <image>');\n  };\n\n  /**\n  * Adds an animation to the sprite.\n  * The animation should be preloaded in the preload() function\n  * using loadAnimation.\n  * Animations require a identifying label (string) to change them.\n  * Animations are stored in the sprite but not necessarily displayed\n  * until Sprite.changeAnimation(label) is called.\n  *\n  * Usage:\n  * - sprite.addAnimation(label, animation);\n  *\n  * Alternative usages. See Animation for more information on file sequences:\n  * - sprite.addAnimation(label, firstFrame, lastFrame);\n  * - sprite.addAnimation(label, frame1, frame2, frame3...);\n  *\n  * @method addAnimation\n  * @param {String} label Animation identifier\n  * @param {Animation} animation The preloaded animation\n  */\n  this.addAnimation = function(label)\n  {\n    var anim;\n\n    if(typeof label !== 'string')\n    {\n      print('Sprite.addAnimation error: the first argument must be a label (String)');\n      return -1;\n    }\n    else if(arguments.length < 2)\n    {\n      print('addAnimation error: you must specify a label and n frame images');\n      return -1;\n    }\n    else if(arguments[1] instanceof Animation)\n    {\n\n      var sourceAnimation = arguments[1];\n\n      var newAnimation = sourceAnimation.clone();\n\n      animations[label] = newAnimation;\n\n      if(currentAnimation === '')\n      {\n        currentAnimation = label;\n        this.animation = newAnimation;\n      }\n\n      newAnimation.isSpriteAnimation = true;\n\n      this._internalWidth = newAnimation.getWidth()*abs(this._getScaleX());\n      this._internalHeight = newAnimation.getHeight()*abs(this._getScaleY());\n\n      return newAnimation;\n    }\n    else\n    {\n      var animFrames = [];\n      for(var i=1; i<arguments.length; i++)\n        animFrames.push(arguments[i]);\n\n      anim = construct(pInst.Animation, animFrames);\n      animations[label] = anim;\n\n      if(currentAnimation === '')\n      {\n        currentAnimation = label;\n        this.animation = anim;\n      }\n      anim.isSpriteAnimation = true;\n\n      this._internalWidth = anim.getWidth()*abs(this._getScaleX());\n      this._internalHeight = anim.getHeight()*abs(this._getScaleY());\n\n      return anim;\n    }\n\n  };\n\n  /**\n  * Changes the displayed image/animation.\n  * Equivalent to changeAnimation\n  *\n  * @method changeImage\n  * @param {String} label Image/Animation identifier\n  */\n  this.changeImage = function(label) {\n    this.changeAnimation(label);\n  };\n\n   /**\n  * Returns the label of the current animation\n  *\n  * @method getAnimationLabel\n  * @return {String} label Image/Animation identifier\n  */\n  this.getAnimationLabel = function() {\n    return currentAnimation;\n  };\n\n  /**\n  * Changes the displayed animation.\n  * See Animation for more control over the sequence.\n  *\n  * @method changeAnimation\n  * @param {String} label Animation identifier\n  */\n  this.changeAnimation = function(label) {\n    if(!animations[label])\n      print('changeAnimation error: no animation labeled '+label);\n    else\n    {\n      currentAnimation = label;\n      this.animation = animations[label];\n    }\n  };\n\n  /**\n  * Checks if the given point corresponds to a transparent pixel\n  * in the sprite's current image. It can be used to check a point collision\n  * against only the visible part of the sprite.\n  *\n  * @method overlapPixel\n  * @param {Number} pointX x coordinate of the point to check\n  * @param {Number} pointY y coordinate of the point to check\n  * @return {Boolean} result True if non-transparent\n  */\n  this.overlapPixel = function(pointX, pointY) {\n    var point = createVector(pointX, pointY);\n\n    var img = this.animation.getFrameImage();\n\n    //convert point to img relative position\n    point.x -= this.position.x-img.width/2;\n    point.y -= this.position.y-img.height/2;\n\n    //out of the image entirely\n    if(point.x<0 || point.x>img.width || point.y<0 || point.y>img.height)\n      return false;\n    else if(this.rotation === 0 && this.scale === 1)\n    {\n      //true if full opacity\n      var values = img.get(point.x, point.y);\n      return values[3] === 255;\n    }\n    else\n    {\n      print('Error: overlapPixel doesn\\'t work with scaled or rotated sprites yet');\n      //offscreen printing to be implemented bleurch\n      return false;\n    }\n  };\n\n  /**\n  * Checks if the given point is inside the sprite's collider.\n  *\n  * @method overlapPoint\n  * @param {Number} pointX x coordinate of the point to check\n  * @param {Number} pointY y coordinate of the point to check\n  * @return {Boolean} result True if inside\n  */\n  this.overlapPoint = function(pointX, pointY) {\n    var point = createVector(pointX, pointY);\n\n    if(!this.collider)\n      this.setDefaultCollider();\n\n    if(this.collider !== undefined)\n    {\n      if(this.collider instanceof AABB)\n        return (point.x > this.collider.left() && point.x < this.collider.right() && point.y > this.collider.top() && point.y < this.collider.bottom());\n      if(this.collider instanceof CircleCollider)\n      {\n        var sqRadius = this.collider.radius * this.collider.radius;\n        var sqDist = pow(this.collider.center.x - point.x, 2) + pow(this.collider.center.y - point.y, 2);\n        return sqDist<sqRadius;\n      }\n      else\n        return false;\n    }\n    else\n      return false;\n\n  };\n\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * If the target is a group the function will be called for each single\n  * sprite overlapping. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.overlap(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method overlap\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.overlap = function(target, callback) {\n    //if(this.collider instanceof AABB && target.collider instanceof AABB)\n    return this.AABBops('overlap', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the current sprite will be displace by\n  * the colliding one in the closest non-overlapping position.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.collide(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method collide\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.collide = function(target, callback) {\n    //if(this.collider instanceof AABB && target.collider instanceof AABB)\n    return this.AABBops('collide', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the current sprite will displace\n  * the colliding one to the closest non-overlapping position.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.displace(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method displace\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.displace = function(target, callback) {\n    return this.AABBops('displace', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the sprites will bounce affecting each\n  * other's trajectories depending on their .velocity, .mass and .restitution\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.bounce(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method bounce\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.bounce = function(target, callback) {\n    return this.AABBops('bounce', target, callback);\n  };\n\n  // Internal collision detection function. Do not use directly.\n  this.AABBops = function(type, target, callback) {\n\n    this.touching.left = false;\n    this.touching.right = false;\n    this.touching.top = false;\n    this.touching.bottom = false;\n\n    var result = false;\n\n    //if single sprite turn into array anyway\n    var others = [];\n\n    if(target instanceof Sprite)\n      others.push(target);\n    else if(target instanceof Array)\n    {\n      if(quadTree !== undefined && quadTree.active)\n        others = quadTree.retrieveFromGroup( this, target);\n\n      if(others.length === 0)\n        others = target;\n\n    }\n    else\n      throw('Error: overlap can only be checked between sprites or groups');\n\n    for(var i=0; i<others.length; i++)\n      if(this !== others[i] && !this.removed) //you can check collisions within the same group but not on itself\n      {\n        var displacement;\n        var other = others[i];\n\n        if(this.collider === undefined)\n          this.setDefaultCollider();\n\n        if(other.collider === undefined)\n          other.setDefaultCollider();\n\n        /*\n        if(this.colliderType==\"default\" && animations[currentAnimation]!=null)\n        {\n          print(\"busted\");\n          return false;\n        }*/\n        if(this.collider !== undefined && other.collider !== undefined)\n        {\n        if(type === 'overlap') {\n            var over;\n\n            //if the other is a circle I calculate the displacement from here\n            if(this.collider instanceof CircleCollider)\n                over = other.collider.overlap(this.collider);\n            else\n                over = this.collider.overlap(other.collider);\n\n            if(over)\n            {\n\n              result = true;\n\n              if(callback !== undefined && typeof callback === 'function')\n                callback.call(this, this, other);\n            }\n          }\n        else if(type === 'collide' || type === 'displace' || type === 'bounce')\n          {\n            displacement = createVector(0, 0);\n\n            //if the sum of the speed is more than the collider i may\n            //have a tunnelling problem\n            var tunnelX = abs(this.velocity.x-other.velocity.x) >= other.collider.extents.x/2 && round(this.deltaX - this.velocity.x) === 0;\n\n            var tunnelY = abs(this.velocity.y-other.velocity.y) >= other.collider.size().y/2 && round(this.deltaY - this.velocity.y) === 0;\n\n\n            if(tunnelX || tunnelY)\n            {\n              //instead of using the colliders I use the bounding box\n              //around the previous position and current position\n              //this is regardless of the collider type\n\n              //the center is the average of the coll centers\n              var c = createVector(\n                (this.position.x+this.previousPosition.x)/2,\n                (this.position.y+this.previousPosition.y)/2);\n\n              //the extents are the distance between the coll centers\n              //plus the extents of both\n              var e = createVector(\n                abs(this.position.x -this.previousPosition.x) + this.collider.extents.x,\n                abs(this.position.y -this.previousPosition.y) + this.collider.extents.y);\n\n              var bbox = new AABB(pInst, c, e, this.collider.offset);\n\n              //bbox.draw();\n\n              if(bbox.overlap(other.collider))\n              {\n                if(tunnelX) {\n\n                  //entering from the right\n                  if(this.velocity.x < 0)\n                    displacement.x = other.collider.right() - this.collider.left() + 1;\n                  else if(this.velocity.x > 0 )\n                    displacement.x = other.collider.left() - this.collider.right() -1;\n                  }\n\n                if(tunnelY) {\n                  //from top\n                  if(this.velocity.y > 0)\n                    displacement.y = other.collider.top() - this.collider.bottom() - 1;\n                  else if(this.velocity.y < 0 )\n                    displacement.y = other.collider.bottom() - this.collider.top() + 1;\n\n                  }\n\n              }//end overlap\n\n            }\n            else //non tunnel overlap\n            {\n\n              //if the other is a circle I calculate the displacement from here\n              //and reverse it\n              if(this.collider instanceof CircleCollider)\n                {\n                displacement = other.collider.collide(this.collider).mult(-1);\n                }\n              else\n                displacement = this.collider.collide(other.collider);\n\n            }\n\n            if(displacement.x !== 0 || displacement.y !== 0)\n            {\n              var newVelX1, newVelY1, newVelX2, newVelY2;\n\n              if (type === 'displace' && !other.immovable) {\n                other.position.sub(displacement);\n              } else if ((type === 'collide' || type === 'bounce') && !this.immovable) {\n                this.position.add(displacement);\n                this.previousPosition = createVector(this.position.x, this.position.y);\n                this.newPosition = createVector(this.position.x, this.position.y);\n              }\n\n              if(displacement.x > 0)\n                this.touching.left = true;\n              if(displacement.x < 0)\n                this.touching.right = true;\n              if(displacement.y < 0)\n                this.touching.bottom = true;\n              if(displacement.y > 0)\n                this.touching.top = true;\n\n              if(type === 'bounce')\n              {\n                if (this.collider instanceof CircleCollider && other.collider instanceof CircleCollider) {\n                  var dx1 = p5.Vector.sub(this.position, other.position);\n                  var dx2 = p5.Vector.sub(other.position, this.position);\n                  var magnitude = dx1.magSq();\n                  var totalMass = this.mass + other.mass;\n                  var m1 = 0, m2 = 0;\n                  if (this.immovable) {\n                    m2 = 2;\n                  } else if (other.immovable) {\n                    m1 = 2;\n                  } else {\n                    m1 = 2 * other.mass / totalMass;\n                    m2 = 2 * this.mass / totalMass;\n                  }\n                  var newVel1 = dx1.mult(m1 * p5.Vector.sub(this.velocity, other.velocity).dot(dx1) / magnitude);\n                  var newVel2 = dx2.mult(m2 * p5.Vector.sub(other.velocity, this.velocity).dot(dx2) / magnitude);\n\n                  this.velocity.sub(newVel1.mult(this.restitution));\n                  other.velocity.sub(newVel2.mult(other.restitution));\n                }\n                else {\n                if(other.immovable)\n                {\n                  newVelX1 = -this.velocity.x+other.velocity.x;\n                  newVelY1 = -this.velocity.y+other.velocity.y;\n                }\n                else\n                {\n                  newVelX1 = (this.velocity.x * (this.mass - other.mass) + (2 * other.mass * other.velocity.x)) / (this.mass + other.mass);\n                  newVelY1 = (this.velocity.y * (this.mass - other.mass) + (2 * other.mass * other.velocity.y)) / (this.mass + other.mass);\n                  newVelX2 = (other.velocity.x * (other.mass - this.mass) + (2 * this.mass * this.velocity.x)) / (this.mass + other.mass);\n                  newVelY2 = (other.velocity.y * (other.mass - this.mass) + (2 * this.mass * this.velocity.y)) / (this.mass + other.mass);\n                }\n\n                //var bothCircles = (this.collider instanceof CircleCollider &&\n                //                   other.collider  instanceof CircleCollider);\n\n                //if(this.touching.left || this.touching.right || this.collider instanceof CircleCollider)\n\n                //print(displacement);\n\n                if(abs(displacement.x)>abs(displacement.y))\n                {\n\n\n                  if(!this.immovable)\n                  {\n                    this.velocity.x = newVelX1*this.restitution;\n\n                  }\n\n                  if(!other.immovable)\n                    other.velocity.x = newVelX2*other.restitution;\n\n                }\n                //if(this.touching.top || this.touching.bottom || this.collider instanceof CircleCollider)\n                if(abs(displacement.x)<abs(displacement.y))\n                {\n\n                  if(!this.immovable)\n                    this.velocity.y = newVelY1*this.restitution;\n\n                  if(!other.immovable)\n                    other.velocity.y = newVelY2*other.restitution;\n                }\n                }\n              }\n              //else if(type == \"collide\")\n                //this.velocity = createVector(0,0);\n\n              if(callback !== undefined && typeof callback === 'function')\n                callback.call(this, this, other);\n\n              result = true;\n            }\n          }\n        }//end collider exists\n      }\n\n    return result;\n  };\n} //end Sprite class\n\ndefineLazyP5Property('Sprite', boundConstructorFactory(Sprite));\n\n/**\n   * A camera facilitates scrolling and zooming for scenes extending beyond\n   * the canvas. A camera has a position, a zoom factor, and the mouse\n   * coordinates relative to the view.\n   * The camera is automatically created on the first draw cycle.\n   *\n   * In p5.js terms the camera wraps the whole drawing cycle in a\n   * transformation matrix but it can be disable anytime during the draw\n   * cycle for example to draw interface elements in an absolute position.\n   *\n   * @class Camera\n   * @constructor\n   * @param {Number} x Initial x coordinate\n   * @param {Number} y Initial y coordinate\n   * @param {Number} zoom magnification\n   **/\nfunction Camera(pInst, x, y, zoom) {\n  /**\n  * Camera position. Defines the global offset of the sketch.\n  *\n  * @property position\n  * @type {p5.Vector}\n  */\n  this.position = pInst.createVector(x, y);\n\n  /**\n  * Camera zoom. Defines the global scale of the sketch.\n  * A scale of 1 will be the normal size. Setting it to 2 will make everything\n  * twice the size. .5 will make everything half size.\n  *\n  * @property zoom\n  * @type {Number}\n  */\n  this.zoom = zoom;\n\n  /**\n  * MouseX translated to the camera view.\n  * Offsetting and scaling the canvas will not change the sprites' position\n  * nor the mouseX and mouseY variables. Use this property to read the mouse\n  * position if the camera moved or zoomed.\n  *\n  * @property mouseX\n  * @type {Number}\n  */\n  this.mouseX = pInst.mouseX;\n\n  /**\n  * MouseY translated to the camera view.\n  * Offsetting and scaling the canvas will not change the sprites' position\n  * nor the mouseX and mouseY variables. Use this property to read the mouse\n  * position if the camera moved or zoomed.\n  *\n  * @property mouseY\n  * @type {Number}\n  */\n  this.mouseY = pInst.mouseY;\n\n  /**\n  * True if the camera is active.\n  * Read only property. Use the methods Camera.on() and Camera.off()\n  * to enable or disable the camera.\n  *\n  * @property active\n  * @type {Boolean}\n  */\n  this.active = false;\n\n  /**\n  * Activates the camera.\n  * The canvas will be drawn according to the camera position and scale until\n  * Camera.off() is called\n  *\n  * @method on\n  */\n  this.on = function() {\n    if(!this.active)\n    {\n      cameraPush.call(pInst);\n      this.active = true;\n    }\n  };\n\n  /**\n  * Deactivates the camera.\n  * The canvas will be drawn normally, ignoring the camera's position\n  * and scale until Camera.on() is called\n  *\n  * @method off\n  */\n  this.off = function() {\n    if(this.active)\n    {\n      cameraPop.call(pInst);\n      this.active = false;\n    }\n  };\n} //end camera class\n\ndefineLazyP5Property('Camera', boundConstructorFactory(Camera));\n\n//called pre draw by default\nfunction cameraPush() {\n  var pInst = this;\n  var camera = pInst.camera;\n\n  //awkward but necessary in order to have the camera at the center\n  //of the canvas by default\n  if(!camera.init && camera.position.x === 0 && camera.position.y === 0)\n    {\n    camera.position.x=pInst.width/2;\n    camera.position.y=pInst.height/2;\n    camera.init = true;\n    }\n\n  camera.mouseX = pInst.mouseX+camera.position.x-pInst.width/2;\n  camera.mouseY = pInst.mouseY+camera.position.y-pInst.height/2;\n\n  if(!camera.active)\n  {\n    camera.active = true;\n    pInst.push();\n    pInst.scale(camera.zoom);\n    pInst.translate(-camera.position.x+pInst.width/2/camera.zoom, -camera.position.y+pInst.height/2/camera.zoom);\n  }\n}\n\n//called postdraw by default\nfunction cameraPop() {\n  var pInst = this;\n\n  if(pInst.camera.active)\n  {\n    pInst.pop();\n    pInst.camera.active = false;\n  }\n}\n\n\n\n\n/**\n   * In p5.play groups are collections of sprites with similar behavior.\n   * For example a group may contain all the sprites in the background\n   * or all the sprites that \"kill\" the player.\n   *\n   * Groups are \"extended\" arrays and inherit all their properties\n   * e.g. group.length\n   *\n   * Since groups contain only references, a sprite can be in multiple\n   * groups and deleting a group doesn't affect the sprites themselves.\n   *\n   * Sprite.remove() will also remove the sprite from all the groups\n   * it belongs to.\n   *\n   * @class Group\n   * @constructor\n   */\nfunction Group() {\n\n  //basically extending the array\n  var array = [];\n\n  /**\n  * Gets the member at index i.\n  *\n  * @method get\n  * @param {Number} i The index of the object to retrieve\n  */\n  array.get = function(i) {\n    return array[i];\n  };\n\n  /**\n  * Checks if the group contains a sprite.\n  *\n  * @method contains\n  * @param {Sprite} sprite The sprite to search\n  * @return {Number} Index or -1 if not found\n  */\n  array.contains = function(sprite) {\n    return this.indexOf(sprite)>-1;\n  };\n\n  /**\n   * Same as Group.contains\n   * @method indexOf\n   */\n  array.indexOf = function(item) {\n    for (var i = 0, len = array.length; i < len; ++i) {\n      if (virtEquals(item, array[i])) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  /**\n  * Adds a sprite to the group.\n  *\n  * @method add\n  * @param {Sprite} s The sprite to be added\n  */\n  array.add = function(s) {\n    if(!(s instanceof Sprite)) {\n      throw('Error: you can only add sprites to a group');\n    }\n\n    if (-1 === this.indexOf(s)) {\n      array.push(s);\n      s.groups.push(this);\n    }\n  };\n\n  /**\n   * Same as group.length\n   * @method size\n   */\n  array.size = function() {\n    return array.length;\n  };\n\n  /**\n  * Removes all the sprites in the group\n  * from the scene.\n  *\n  * @method removeSprites\n  */\n  array.removeSprites = function() {\n    while (array.length > 0) {\n      array[0].remove();\n    }\n  };\n\n  /**\n  * Removes all references to the group.\n  * Does not remove the actual sprites.\n  *\n  * @method clear\n  */\n  array.clear = function() {\n    array.length = 0;\n  };\n\n  /**\n  * Removes a sprite from the group.\n  * Does not remove the actual sprite, only the affiliation (reference).\n  *\n  * @method remove\n  * @param {Sprite} item The sprite to be removed\n  * @return {Boolean} True if sprite was found and removed\n  */\n  array.remove = function(item) {\n    if(!(item instanceof Sprite)) {\n      throw('Error: you can only remove sprites from a group');\n    }\n\n    var i, removed = false;\n    for (i = array.length - 1; i >= 0; i--) {\n      if (array[i] === item) {\n        array.splice(i, 1);\n        removed = true;\n      }\n    }\n\n    if (removed) {\n      for (i = item.groups.length - 1; i >= 0; i--) {\n        if (item.groups[i] === this) {\n          item.groups.splice(i, 1);\n        }\n      }\n    }\n\n    return removed;\n  };\n\n  /**\n   * Returns a copy of the group as standard array.\n   * @method toArray\n   */\n  array.toArray = function() {\n    return array.slice(0);\n  };\n\n  /**\n  * Returns the highest depth in a group\n  *\n  * @method maxDepth\n  * @return {Number} The depth of the sprite drawn on the top\n  */\n  array.maxDepth = function() {\n    if (array.length === 0) {\n      return 0;\n    }\n\n    return array.reduce(function(maxDepth, sprite) {\n      return Math.max(maxDepth, sprite.depth);\n    }, -Infinity);\n  };\n\n  /**\n  * Returns the lowest depth in a group\n  *\n  * @method minDepth\n  * @return {Number} The depth of the sprite drawn on the bottom\n  */\n  array.minDepth = function() {\n    if (array.length === 0) {\n      return 99999;\n    }\n\n    return array.reduce(function(minDepth, sprite) {\n      return Math.min(minDepth, sprite.depth);\n    }, Infinity);\n  };\n\n  /**\n  * Draws all the sprites in the group.\n  *\n  * @method draw\n  */\n  array.draw = function() {\n\n    //sort by depth\n    this.sort(function(a, b) {\n      return a.depth - b.depth;\n    });\n\n    for(var i = 0; i<this.size(); i++)\n    {\n      this.get(i).display();\n    }\n  };\n\n  //internal use\n  function virtEquals(obj, other) {\n    if (obj === null || other === null) {\n      return (obj === null) && (other === null);\n    }\n    if (typeof (obj) === 'string') {\n      return obj === other;\n    }\n    if (typeof(obj) !== 'object') {\n      return obj === other;\n    }\n    if (obj.equals instanceof Function) {\n      return obj.equals(other);\n    }\n    return obj === other;\n  }\n\n  /**\n   * Collide each member of group against the target using the given collision\n   * type.  Return true if any collision occurred.\n   * Internal use\n   *\n   * @private\n   * @method _groupCollide\n   * @param {!string} type one of 'overlap', 'collide', 'displace', 'bounce'\n   * @param {Object} target Group or Sprite\n   * @param {Function} [callback] on collision.\n   * @return {boolean} True if any collision/overlap occurred\n   */\n  function _groupCollide(type, target, callback) {\n    var didCollide = false;\n    for(var i = 0; i<this.size(); i++)\n      didCollide = this.get(i).AABBops(type, target, callback) || didCollide;\n    return didCollide;\n  }\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occurs.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.overlap(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method overlap\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.overlap = _groupCollide.bind(array, 'overlap');\n\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites in the group will be displaced\n  * by the colliding one to the closest non-overlapping positions.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.collide(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method collide\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.collide = _groupCollide.bind(array, 'collide');\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites in the group will displace\n  * the colliding ones to the closest non-overlapping positions.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occurs.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.displace(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method displace\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.displace = _groupCollide.bind(array, 'displace');\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites will bounce affecting each\n  * other's trajectories depending on their .velocity, .mass and .restitution.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.bounce(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method bounce\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.bounce = _groupCollide.bind(array, 'bounce');\n\n  return array;\n}\n\np5.prototype.Group = Group;\n\n//circle collider - used internally\nfunction CircleCollider(pInst, _center, _radius, _offset) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n\n  var CENTER = p5.prototype.CENTER;\n\n  this.center = _center;\n  this.radius = _radius;\n  this.originalRadius = _radius;\n\n  if(_offset === undefined)\n    this.offset = createVector(0, 0);\n  else\n    this.offset = _offset;\n  this.extents = createVector(_radius*2, _radius*2);\n\n  this.draw = function()\n  {\n    pInst.noFill();\n    pInst.stroke(0, 255, 0);\n    pInst.rectMode(CENTER);\n    pInst.ellipse(this.center.x+this.offset.x, this.center.y+this.offset.y, this.radius*2, this.radius*2);\n  };\n\n  //should be called only for circle vs circle\n  this.overlap = function(other)\n  {\n    //square dist\n    var r = this.radius + other.radius;\n    r *= r;\n    var thisCenterX = this.center.x + this.offset.x;\n    var thisCenterY = this.center.y + this.offset.y;\n    var otherCenterX = other.center.x + other.offset.x;\n    var otherCenterY = other.center.y + other.offset.y;\n    var sqDist = pow(thisCenterX - otherCenterX, 2) + pow(thisCenterY - otherCenterY, 2);\n    return r > sqDist;\n  };\n\n  //should be called only for circle vs circle\n  this.collide = function(other)\n  {\n    if(this.overlap(other)) {\n      var thisCenterX = this.center.x + this.offset.x;\n      var thisCenterY = this.center.y + this.offset.y;\n      var otherCenterX = other.center.x + other.offset.x;\n      var otherCenterY = other.center.y + other.offset.y;\n      var a = pInst.atan2(thisCenterY-otherCenterY, thisCenterX-otherCenterX);\n      var radii = this.radius+other.radius;\n      var intersection = abs(radii - dist(thisCenterX, thisCenterY, otherCenterX, otherCenterY));\n\n      var displacement = createVector(pInst.cos(a)*intersection, pInst.sin(a)*intersection);\n\n      return displacement;\n    } else {\n      return createVector(0, 0);\n    }\n  };\n\n  this.size = function()\n  {\n    return createVector(this.radius*2, this.radius*2);\n  };\n\n  this.left = function()\n  {\n    return this.center.x+this.offset.x - this.radius;\n  };\n\n  this.right = function()\n  {\n    return this.center.x+this.offset.x + this.radius;\n  };\n\n  this.top = function()\n  {\n    return this.center.y+this.offset.y - this.radius;\n  };\n\n  this.bottom = function()\n  {\n    return this.center.y+this.offset.y + this.radius;\n  };\n\n\n\n}\ndefineLazyP5Property('CircleCollider', boundConstructorFactory(CircleCollider));\n\n//axis aligned bounding box - extents are the half sizes - used internally\nfunction AABB(pInst, _center, _extents, _offset) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n\n  var CENTER = p5.prototype.CENTER;\n  var PI = p5.prototype.PI;\n\n  this.center = _center;\n  this.extents = _extents;\n  this.originalExtents = _extents.copy();\n\n  if(_offset === undefined)\n    this.offset = createVector(0, 0);\n  else\n    this.offset = _offset;\n\n  this.min = function()\n  {\n    return createVector(this.center.x+this.offset.x - this.extents.x, this.center.y+this.offset.y - this.extents.y);\n  };\n\n  this.max = function()\n  {\n    return createVector(this.center.x+this.offset.x + this.extents.x, this.center.y+this.offset.y + this.extents.y);\n  };\n\n  this.right = function()\n  {\n    return this.center.x+this.offset.x + this.extents.x/2;\n  };\n\n  this.left = function()\n  {\n    return this.center.x+this.offset.x - this.extents.x/2;\n  };\n\n  this.top = function()\n  {\n    return this.center.y+this.offset.y - this.extents.y/2;\n  };\n\n  this.bottom = function()\n  {\n    return this.center.y+this.offset.y + this.extents.y/2;\n  };\n\n  this.size = function()\n  {\n    return createVector(this.extents.x * 2, this.extents.y * 2);\n  };\n\n  this.rotate = function(r)\n  {\n    //rotate the bbox\n    var t;\n    if (pInst._angleMode === pInst.RADIANS) {\n      t = radians(r);\n    } else {\n      t = r;\n    }\n\n    var w2 = this.extents.x * abs(pInst.cos(t)) + this.extents.y * abs(pInst.sin(t));\n    var h2 = this.extents.x * abs(pInst.sin(t)) + this.extents.y * abs(pInst.cos(t));\n\n    this.extents.x = w2;\n    this.extents.y = h2;\n\n  };\n\n  this.draw = function()\n  {\n    //fill(col);\n    pInst.noFill();\n    pInst.stroke(0, 255, 0);\n    pInst.rectMode(CENTER);\n    pInst.rect(this.center.x+this.offset.x, this.center.y+this.offset.y, this.size().x/2, this.size().y/2);\n  };\n\n  this.overlap = function(other)\n  {\n    //box vs box\n    if(other instanceof AABB)\n    {\n      var md = other.minkowskiDifference(this);\n\n      if (md.min().x <= 0 &&\n          md.max().x >= 0 &&\n          md.min().y <= 0 &&\n          md.max().y >= 0)\n      {\n        return true;\n      }\n      else\n        return false;\n    }\n    //box vs circle\n    else if(other instanceof CircleCollider)\n    {\n\n      //find closest point to the circle on the box\n      var pt = createVector(other.center.x, other.center.y);\n\n      //I don't know what's going o try to trace a line from centers to see\n      if( other.center.x < this.left() )\n        pt.x = this.left();\n      else if( other.center.x > this.right())\n        pt.x = this.right();\n\n      if( other.center.y < this.top() )\n        pt.y = this.top();\n      else if( other.center.y > this.bottom())\n        pt.y = this.bottom();\n\n      var distance = pt.dist(other.center);\n\n      return distance<other.radius;\n    }\n  };\n\n  this.collide = function(other)\n  {\n\n    if(other instanceof AABB)\n    {\n      var md = other.minkowskiDifference(this);\n\n      if (md.min().x <= 0 &&\n          md.max().x >= 0 &&\n          md.min().y <= 0 &&\n          md.max().y >= 0)\n      {\n        var boundsPoint = md.closestPointOnBoundsToPoint(createVector(0, 0));\n\n        return boundsPoint;\n      }\n      else\n        return createVector(0, 0);\n    }\n    //box vs circle\n    else if(other instanceof CircleCollider)\n    {\n\n      //find closest point to the circle on the box\n      var pt = createVector(other.center.x, other.center.y);\n\n      //I don't know what's going o try to trace a line from centers to see\n      if( other.center.x < this.left() )\n        pt.x = this.left();\n      else if( other.center.x > this.right())\n        pt.x = this.right();\n\n      if( other.center.y < this.top() )\n        pt.y = this.top();\n      else if( other.center.y > this.bottom())\n        pt.y = this.bottom();\n\n\n      var distance = pt.dist(other.center);\n      var a;\n\n      if(distance<other.radius)\n      {\n        //reclamp point\n        if(pt.x === other.center.x && pt.y === other.center.y)\n        {\n          var xOverlap = pt.x - this.center.x;\n          var yOverlap = pt.y - this.center.y;\n\n\n          if(abs(xOverlap) < abs(yOverlap))\n          {\n            if(xOverlap > 0 )\n              pt.x = this.right();\n            else\n              pt.x = this.left();\n          }\n          else\n          {\n            if(yOverlap < 0 )\n              pt.y = this.top();\n            else\n              pt.y = this.bottom();\n          }\n\n          a = pInst.atan2(other.center.y-pt.y, other.center.x-pt.x);\n\n          //fix exceptions\n          if(a === 0)\n          {\n            if(pt.x === this.right()) a = PI;\n            if(pt.y === this.top()) a = PI/2;\n            if(pt.y === this.bottom()) a = -PI/2;\n          }\n        }\n        else\n        {\n          //angle bw point and center\n          a = pInst.atan2(pt.y-other.center.y, pt.x-other.center.x);\n          //project the normal (line between pt and center) onto the circle\n        }\n\n        var d = createVector(pt.x-other.center.x, pt.y-other.center.y);\n        var displacement = createVector(pInst.cos(a)*other.radius-d.x, pInst.sin(a)*other.radius-d.y);\n\n        //if(pt.x === other.center.x && pt.y === other.center.y)\n        //displacement = displacement.mult(-1);\n\n        return displacement;\n        //return createVector(0,0);\n      }\n      else\n        return createVector(0, 0);\n    }\n  };\n\n  this.minkowskiDifference = function(other)\n  {\n    var topLeft = this.min().sub(other.max());\n    var fullSize = this.size().add(other.size());\n    return new AABB(pInst, topLeft.add(fullSize.div(2)), fullSize.div(2));\n  };\n\n\n  this.closestPointOnBoundsToPoint = function(point)\n  {\n    // test x first\n    var minDist = abs(point.x - this.min().x);\n    var boundsPoint = createVector(this.min().x, point.y);\n\n    if (abs(this.max().x - point.x) < minDist)\n    {\n      minDist = abs(this.max().x - point.x);\n      boundsPoint = createVector(this.max().x, point.y);\n    }\n\n    if (abs(this.max().y - point.y) < minDist)\n    {\n      minDist = abs(this.max().y - point.y);\n      boundsPoint = createVector(point.x, this.max().y);\n    }\n\n    if (abs(this.min().y - point.y) < minDist)\n    {\n      minDist = abs(this.min.y - point.y);\n      boundsPoint = createVector(point.x, this.min().y);\n    }\n\n    return boundsPoint;\n  };\n\n\n}//end AABB\ndefineLazyP5Property('AABB', boundConstructorFactory(AABB));\n\n\n\n/**\n * An Animation object contains a series of images (p5.Image) that\n * can be displayed sequentially.\n *\n * All files must be png images. You must include the directory from the sketch root,\n * and the extension .png\n *\n * A sprite can have multiple labeled animations, see Sprite.addAnimation\n * and Sprite.changeAnimation, however an animation can be used independently.\n *\n * An animation can be created either by passing a series of file names,\n * no matter how many or by passing the first and the last file name\n * of a numbered sequence.\n * p5.play will try to detect the sequence pattern.\n *\n * For example if the given filenames are\n * \"data/file0001.png\" and \"data/file0005.png\" the images\n * \"data/file0003.png\" and \"data/file0004.png\" will be loaded as well.\n *\n * @example\n *     var sequenceAnimation;\n *     var glitch;\n *\n *     function preload() {\n *       sequenceAnimation = loadAnimation(\"data/walking0001.png\", \"data/walking0005.png\");\n *       glitch = loadAnimation(\"data/dog.png\", \"data/horse.png\", \"data/cat.png\", \"data/snake.png\");\n *     }\n *\n *     function setup() {\n *       createCanvas(800, 600);\n *     }\n *\n *     function draw() {\n *       background(0);\n *       animation(sequenceAnimation, 100, 100);\n *       animation(glitch, 200, 100);\n *     }\n *\n * @class Animation\n * @constructor\n * @param {String} fileName1 First file in a sequence OR first image file\n * @param {String} fileName2 Last file in a sequence OR second image file\n * @param {String} [...fileNameN] Any number of image files after the first two\n */\nfunction Animation(pInst) {\n  var frameArguments = Array.prototype.slice.call(arguments, 1);\n  var i;\n\n  var CENTER = p5.prototype.CENTER;\n\n  /**\n  * Array of frames (p5.Image)\n  *\n  * @property images\n  * @type {Array}\n  */\n  this.images = [];\n\n  var frame = 0;\n  var cycles = 0;\n  var targetFrame = -1;\n\n  this.offX = 0;\n  this.offY = 0;\n\n  /**\n  * Delay between frames in number of draw cycles.\n  * If set to 4 the framerate of the animation would be the\n  * sketch framerate divided by 4 (60fps = 15fps)\n  *\n  * @property frameDelay\n  * @type {Number}\n  * @default 4\n  */\n  this.frameDelay = 4;\n\n  /**\n  * True if the animation is currently playing.\n  *\n  * @property playing\n  * @type {Boolean}\n  * @default true\n  */\n  this.playing = true;\n\n  /**\n  * Animation visibility.\n  *\n  * @property visible\n  * @type {Boolean}\n  * @default true\n  */\n  this.visible = true;\n\n  /**\n  * If set to false the animation will stop after reaching the last frame\n  *\n  * @property looping\n  * @type {Boolean}\n  * @default true\n  */\n  this.looping = true;\n\n  /**\n  * True if frame changed during the last draw cycle\n  *\n  * @property frameChanged\n  * @type {Boolean}\n  */\n  this.frameChanged = false;\n\n  //is the collider defined manually or defined\n  //by the current frame size\n  this.imageCollider = false;\n\n\n  //sequence mode\n  if(frameArguments.length === 2 && typeof frameArguments[0] === 'string' && typeof frameArguments[1] === 'string')\n  {\n    var from = frameArguments[0];\n    var to = frameArguments[1];\n\n    //print(\"sequence mode \"+from+\" -> \"+to);\n\n    //make sure the extensions are fine\n    var ext1 = from.substring(from.length-4, from.length);\n    if(ext1 !== '.png')\n    {\n      pInst.print('Animation error: you need to use .png files (filename '+from+')');\n      from = -1;\n    }\n\n    var ext2 = to.substring(to.length-4, to.length);\n    if(ext2 !== '.png')\n    {\n      pInst.print('Animation error: you need to use .png files (filename '+to+')');\n      to = -1;\n    }\n\n    //extensions are fine\n    if(from !== -1 && to !== -1)\n    {\n      var digits1 = 0;\n      var digits2 = 0;\n\n      //skip extension work backwards to find the numbers\n      for (i = from.length-5; i >= 0; i--) {\n        if(from.charAt(i) >= '0' && from.charAt(i) <= '9')\n          digits1++;\n      }\n\n      for (i = to.length-5; i >= 0; i--) {\n        if(to.charAt(i) >= '0' && to.charAt(i) <= '9')\n          digits2++;\n      }\n\n      var prefix1 = from.substring(0, from.length-(4+digits1));\n      var prefix2 = to.substring(0, to.length-(4+digits2) );\n\n      // Our numbers likely have leading zeroes, which means that some\n      // browsers (e.g., PhantomJS) will interpret them as base 8 (octal)\n      // instead of decimal. To fix this, we'll explicity tell parseInt to\n      // use a base of 10 (decimal). For more details on this issue, see\n      // http://stackoverflow.com/a/8763427/2422398.\n      var number1 = parseInt(from.substring(from.length-(4+digits1), from.length-4), 10);\n      var number2 = parseInt(to.substring(to.length-(4+digits2), to.length-4), 10);\n\n      //swap if inverted\n      if(number2<number1)\n      {\n        var t = number2;\n        number2 = number1;\n        number1 = t;\n      }\n\n      //two different frames\n      if(prefix1 !== prefix2 )\n      {\n        //print(\"2 separate images\");\n        this.images.push(pInst.loadImage(from));\n        this.images.push(pInst.loadImage(to));\n      }\n      //same digits: case img0001, img0002\n      else\n      {\n        var fileName;\n        if(digits1 === digits2)\n        {\n\n          //load all images\n          for (i = number1; i <= number2; i++) {\n            // Use nf() to number format 'i' into four digits\n            fileName = prefix1 + pInst.nf(i, digits1) + '.png';\n            this.images.push(pInst.loadImage(fileName));\n\n          }\n\n        }\n        else //case: case img1, img2\n        {\n          //print(\"from \"+prefix1+\" \"+number1 +\" to \"+number2);\n          for (i = number1; i <= number2; i++) {\n            // Use nf() to number format 'i' into four digits\n            fileName = prefix1 + i + '.png';\n            this.images.push(pInst.loadImage(fileName));\n\n          }\n\n        }\n      }\n\n    }//end no ext error\n\n  }//end sequence mode\n  // Sprite sheet mode\n  else if (frameArguments.length === 1 && (frameArguments[0] instanceof SpriteSheet))\n  {\n    this.spriteSheet = frameArguments[0];\n    this.images = this.spriteSheet.frames;\n  }\n  else if(frameArguments.length !== 0)//arbitrary list of images\n  {\n    //print(\"Animation arbitrary mode\");\n    for (i = 0; i < frameArguments.length; i++) {\n      //print(\"loading \"+fileNames[i]);\n      if(frameArguments[i] instanceof p5.Image)\n        this.images.push(frameArguments[i]);\n      else\n        this.images.push(pInst.loadImage(frameArguments[i]));\n    }\n  }\n\n  /**\n  * Objects are passed by reference so to have different sprites\n  * using the same animation you need to clone it.\n  *\n  * @method clone\n  * @return {Animation} A clone of the current animation\n  */\n  this.clone = function() {\n    var myClone = new Animation(pInst); //empty\n    myClone.images = [];\n\n    if (this.spriteSheet) {\n      myClone.spriteSheet = this.spriteSheet.clone();\n    }\n    myClone.images = this.images.slice();\n\n    myClone.offX = this.offX;\n    myClone.offY = this.offY;\n    myClone.frameDelay = this.frameDelay;\n    myClone.playing = this.playing;\n    myClone.looping = this.looping;\n\n    return myClone;\n  };\n\n  /**\n   * Draws the animation at coordinate x and y.\n   * Updates the frames automatically.\n   *\n   * @method draw\n   * @param {Number} x x coordinate\n   * @param {Number} y y coordinate\n   * @param {Number} [r=0] rotation\n   */\n  this.draw = function(x, y, r) {\n    this.xpos = x;\n    this.ypos = y;\n    this.rotation = r || 0;\n\n    if (this.visible)\n    {\n\n      //only connection with the sprite class\n      //if animation is used independently draw and update are the sam\n      if(!this.isSpriteAnimation)\n        this.update();\n\n      //this.currentImageMode = g.imageMode;\n      pInst.push();\n      pInst.imageMode(CENTER);\n\n      pInst.translate(this.xpos, this.ypos);\n      if (pInst._angleMode === pInst.RADIANS) {\n        pInst.rotate(radians(this.rotation));\n      } else {\n        pInst.rotate(this.rotation);\n      }\n\n      if(this.images[frame] !== undefined)\n      {\n        if (this.spriteSheet) {\n          var frame_info = this.images[frame].frame;\n          pInst.image(this.spriteSheet.image, this.offX, this.offY, frame_info.width, frame_info.height,\n            frame_info.x, frame_info.y, frame_info.width, frame_info.height);\n        } else {\n          pInst.image(this.images[frame], this.offX, this.offY);\n        }\n      }\n      else\n      {\n        pInst.print('Warning undefined frame '+frame);\n        //this.isActive = false;\n      }\n\n      pInst.pop();\n    }\n  };\n\n  //called by draw\n  this.update = function() {\n    cycles++;\n    var previousFrame = frame;\n    this.frameChanged = false;\n\n\n    //go to frame\n    if(this.images.length === 1)\n    {\n      this.playing = false;\n      frame = 0;\n    }\n\n    if ( this.playing && cycles%this.frameDelay === 0)\n    {\n      //going to target frame up\n      if(targetFrame>frame && targetFrame !== -1)\n      {\n        frame++;\n      }\n      //going to taget frame down\n      else if(targetFrame<frame && targetFrame !== -1)\n      {\n        frame--;\n      }\n      else if(targetFrame === frame && targetFrame !== -1)\n      {\n        this.playing=false;\n      }\n      else if (this.looping) //advance frame\n      {\n        //if next frame is too high\n        if (frame>=this.images.length-1)\n          frame = 0;\n        else\n          frame++;\n      } else\n      {\n        //if next frame is too high\n        if (frame<this.images.length-1)\n          frame++;\n      }\n    }\n    if (frame == this.images.length - 1 && this.onComplete != undefined)\n      this.onComplete(); //fire when on last frame\n\n    if(previousFrame !== frame)\n      this.frameChanged = true;\n\n    \n\n  };//end update\n\n  /**\n  * Plays the animation.\n  *\n  * @method play\n  */\n  this.play = function() {\n    this.playing = true;\n    targetFrame = -1;\n  };\n\n  /**\n  * Stops the animation.\n  *\n  * @method stop\n  */\n  this.stop = function(){\n    this.playing = false;\n  };\n\n  /**\n  * Rewinds the animation to the first frame.\n  *\n  * @method rewind\n  */\n  this.rewind = function() {\n    frame = 0;\n  };\n\n  /**\n  * fire when animation ends\n  *\n  * @method onComplete\n  * @return {Animation} \n  */\n  this.onComplete = function () {\n    return undefined;\n  };\n\n  /**\n  * Changes the current frame.\n  *\n  * @method changeFrame\n  * @param {Number} frame Frame number (starts from 0).\n  */\n  this.changeFrame = function(f) {\n    if (f<this.images.length)\n      frame = f;\n    else\n      frame = this.images.length - 1;\n\n    targetFrame = -1;\n    //this.playing = false;\n  };\n\n   /**\n  * Goes to the next frame and stops.\n  *\n  * @method nextFrame\n  */\n  this.nextFrame = function() {\n\n    if (frame<this.images.length-1)\n      frame = frame+1;\n    else if(this.looping)\n      frame = 0;\n\n    targetFrame = -1;\n    this.playing = false;\n  };\n\n   /**\n  * Goes to the previous frame and stops.\n  *\n  * @method previousFrame\n  */\n  this.previousFrame = function() {\n\n    if (frame>0)\n      frame = frame-1;\n    else if(this.looping)\n      frame = this.images.length-1;\n\n    targetFrame = -1;\n    this.playing = false;\n  };\n\n  /**\n  * Plays the animation forward or backward toward a target frame.\n  *\n  * @method goToFrame\n  * @param {Number} toFrame Frame number destination (starts from 0)\n  */\n  this.goToFrame = function(toFrame) {\n    if(toFrame < 0 || toFrame >= this.images.length) {\n      return;\n    }\n\n    // targetFrame gets used by the update() method to decide what frame to\n    // select next.  When it's not being used it gets set to -1.\n    targetFrame = toFrame;\n\n    if(targetFrame !== frame) {\n      this.playing = true;\n    }\n  };\n\n  /**\n  * Returns the current frame number.\n  *\n  * @method getFrame\n  * @return {Number} Current frame (starts from 0)\n  */\n  this.getFrame = function() {\n    return frame;\n  };\n\n  /**\n  * Returns the last frame number.\n  *\n  * @method getLastFrame\n  * @return {Number} Last frame number (starts from 0)\n  */\n  this.getLastFrame = function() {\n    return this.images.length-1;\n  };\n\n  /**\n  * Returns the current frame image as p5.Image.\n  *\n  * @method getFrameImage\n  * @return {p5.Image} Current frame image\n  */\n  this.getFrameImage = function() {\n    return this.images[frame];\n  };\n\n  /**\n  * Returns the frame image at the specified frame number.\n  *\n  * @method getImageAt\n  * @param {Number} frame Frame number\n  * @return {p5.Image} Frame image\n  */\n  this.getImageAt = function(f) {\n    return this.images[f];\n  };\n\n  /**\n  * Returns the current frame width in pixels.\n  * If there is no image loaded, returns 1.\n  *\n  * @method getWidth\n  * @return {Number} Frame width\n  */\n  this.getWidth = function() {\n    if (this.images[frame] instanceof p5.Image) {\n      return this.images[frame].width;\n    } else if (this.images[frame]) {\n      // Special case: Animation-from-spritesheet treats its images array differently.\n      return this.images[frame].frame.width;\n    } else {\n      return 1;\n    }\n  };\n\n  /**\n  * Returns the current frame height in pixels.\n  * If there is no image loaded, returns 1.\n  *\n  * @method getHeight\n  * @return {Number} Frame height\n  */\n  this.getHeight = function() {\n    if (this.images[frame] instanceof p5.Image) {\n      return this.images[frame].height;\n    } else if (this.images[frame]) {\n      // Special case: Animation-from-spritesheet treats its images array differently.\n      return this.images[frame].frame.height;\n    } else {\n      return 1;\n    }\n  };\n\n}\n\ndefineLazyP5Property('Animation', boundConstructorFactory(Animation));\n\n/**\n * Represents a sprite sheet and all it's frames.  To be used with Animation,\n * or static drawing single frames.\n *\n *  There are two different ways to load a SpriteSheet\n *\n * 1. Given width, height that will be used for every frame and the\n *    number of frames to cycle through. The sprite sheet must have a\n *    uniform grid with consistent rows and columns.\n *\n * 2. Given an array of frame objects that define the position and\n *    dimensions of each frame.  This is Flexible because you can use\n *    sprite sheets that don't have uniform rows and columns.\n *\n * @example\n *     // Method 1 - Using width, height for each frame and number of frames\n *     explode_sprite_sheet = loadSpriteSheet('assets/explode_sprite_sheet.png', 171, 158, 11);\n *\n *     // Method 2 - Using an array of objects that define each frame\n *     var player_frames = loadJSON('assets/tiles.json');\n *     player_sprite_sheet = loadSpriteSheet('assets/player_spritesheet.png', player_frames);\n *\n * @class SpriteSheet\n * @constructor\n * @param image String image path or p5.Image object\n */\nfunction SpriteSheet(pInst) {\n  var spriteSheetArgs = Array.prototype.slice.call(arguments, 1);\n\n  this.image = null;\n  this.frames = [];\n  this.frame_width = 0;\n  this.frame_height = 0;\n  this.num_frames = 0;\n\n  /**\n   * Generate the frames data for this sprite sheet baesd on user params\n   * @private\n   * @method _generateSheetFrames\n   */\n  this._generateSheetFrames = function() {\n    var sX = 0, sY = 0;\n    for (var i = 0; i < this.num_frames; i++) {\n      this.frames.push(\n        {\n          'name': i,\n          'frame': {\n            'x': sX,\n            'y': sY,\n            'width': this.frame_width,\n            'height': this.frame_height\n          }\n        });\n      sX += this.frame_width;\n      if (sX >= this.image.width) {\n        sX = 0;\n        sY += this.frame_height;\n        if (sY >= this.image.height) {\n          sY = 0;\n        }\n      }\n    }\n  };\n\n  if (spriteSheetArgs.length === 2 && Array.isArray(spriteSheetArgs[1])) {\n    this.frames = spriteSheetArgs[1];\n    this.num_frames = this.frames.length;\n  } else if (spriteSheetArgs.length === 4 &&\n    (typeof spriteSheetArgs[1] === 'number') &&\n    (typeof spriteSheetArgs[2] === 'number') &&\n    (typeof spriteSheetArgs[3] === 'number')) {\n    this.frame_width = spriteSheetArgs[1];\n    this.frame_height = spriteSheetArgs[2];\n    this.num_frames = spriteSheetArgs[3];\n  }\n\n  if(spriteSheetArgs[0] instanceof p5.Image) {\n    this.image = spriteSheetArgs[0];\n    if (spriteSheetArgs.length === 4) {\n      this._generateSheetFrames();\n    }\n  } else {\n    if (spriteSheetArgs.length === 2) {\n      this.image = pInst.loadImage(spriteSheetArgs[0]);\n    } else if (spriteSheetArgs.length === 4) {\n      this.image = pInst.loadImage(spriteSheetArgs[0], this._generateSheetFrames.bind(this));\n    }\n  }\n\n  /**\n   * Draws a specific frame to the canvas.\n   * @param frame_name  Can either be a string name, or a numeric index.\n   * @param x   x position to draw the frame at\n   * @param y   y position to draw the frame at\n   * @param [width]   optional width to draw the frame\n   * @param [height]  optional height to draw the frame\n   * @method drawFrame\n   */\n  this.drawFrame = function(frame_name, x, y, width, height) {\n    var frameToDraw;\n    if (typeof frame_name === 'number') {\n      frameToDraw = this.frames[frame_name].frame;\n    } else {\n      for (var i = 0; i < this.frames.length; i++) {\n        if (this.frames[i].name === frame_name) {\n          frameToDraw = this.frames[i].frame;\n          break;\n        }\n      }\n    }\n    var dWidth = width || frameToDraw.width;\n    var dHeight = height || frameToDraw.height;\n    pInst.image(this.image, frameToDraw.x, frameToDraw.y,\n      frameToDraw.width, frameToDraw.height, x, y, dWidth, dHeight);\n  };\n\n  /**\n   * Objects are passed by reference so to have different sprites\n   * using the same animation you need to clone it.\n   *\n   * @method clone\n   * @return {SpriteSheet} A clone of the current SpriteSheet\n   */\n  this.clone = function() {\n    var myClone = new SpriteSheet(pInst); //empty\n\n    // Deep clone the frames by value not reference\n    for(var i = 0; i < this.frames.length; i++) {\n      var frame = this.frames[i].frame;\n      var cloneFrame = {\n        'name':frame.name,\n        'frame': {\n          'x':frame.x,\n          'y':frame.y,\n          'width':frame.width,\n          'height':frame.height\n        }\n      };\n      myClone.frames.push(cloneFrame);\n    }\n\n    // clone other fields\n    myClone.image = this.image;\n    myClone.frame_width = this.frame_width;\n    myClone.frame_height = this.frame_height;\n    myClone.num_frames = this.num_frames;\n\n    return myClone;\n  };\n}\n\ndefineLazyP5Property('SpriteSheet', boundConstructorFactory(SpriteSheet));\n\n//general constructor to be able to feed arguments as array\nfunction construct(constructor, args) {\n  function F() {\n    return constructor.apply(this, args);\n  }\n  F.prototype = constructor.prototype;\n  return new F();\n}\n\n\n\n\n\n/*\n * Javascript Quadtree\n * based on\n * https://github.com/timohausmann/quadtree-js/\n * Copyright © 2012 Timo Hausmann\n*/\n\nfunction Quadtree( bounds, max_objects, max_levels, level ) {\n\n  this.active = true;\n  this.max_objects\t= max_objects || 10;\n  this.max_levels\t\t= max_levels || 4;\n\n  this.level \t\t\t= level || 0;\n  this.bounds \t\t= bounds;\n\n  this.objects \t\t= [];\n  this.object_refs\t= [];\n  this.nodes \t\t\t= [];\n}\n\nQuadtree.prototype.updateBounds = function() {\n\n  //find maximum area\n  var objects = this.getAll();\n  var x = 10000;\n  var y = 10000;\n  var w = -10000;\n  var h = -10000;\n\n  for( var i=0; i < objects.length; i++ )\n    {\n      if(objects[i].position.x < x)\n        x = objects[i].position.x;\n      if(objects[i].position.y < y)\n        y = objects[i].position.y;\n      if(objects[i].position.x > w)\n        w = objects[i].position.x;\n      if(objects[i].position.y > h)\n        h = objects[i].position.y;\n    }\n\n\n  this.bounds = {\n    x:x,\n    y:y,\n    width:w,\n    height:h\n  };\n  //print(this.bounds);\n};\n\n/*\n\t * Split the node into 4 subnodes\n\t */\nQuadtree.prototype.split = function() {\n\n  var nextLevel\t= this.level + 1,\n      subWidth\t= Math.round( this.bounds.width / 2 ),\n      subHeight \t= Math.round( this.bounds.height / 2 ),\n      x \t\t\t= Math.round( this.bounds.x ),\n      y \t\t\t= Math.round( this.bounds.y );\n\n  //top right node\n  this.nodes[0] = new Quadtree({\n    x\t: x + subWidth,\n    y\t: y,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //top left node\n  this.nodes[1] = new Quadtree({\n    x\t: x,\n    y\t: y,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //bottom left node\n  this.nodes[2] = new Quadtree({\n    x\t: x,\n    y\t: y + subHeight,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //bottom right node\n  this.nodes[3] = new Quadtree({\n    x\t: x + subWidth,\n    y\t: y + subHeight,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n};\n\n\n/*\n\t * Determine the quadtrant for an area in this node\n\t */\nQuadtree.prototype.getIndex = function( pRect ) {\n  if(!pRect.collider)\n    return -1;\n  else\n  {\n    var index \t\t\t\t= -1,\n        verticalMidpoint \t= this.bounds.x + (this.bounds.width / 2),\n        horizontalMidpoint \t= this.bounds.y + (this.bounds.height / 2),\n\n        //pRect can completely fit within the top quadrants\n        topQuadrant = (pRect.collider.top() < horizontalMidpoint && pRect.collider.top() + pRect.collider.size().y < horizontalMidpoint),\n\n        //pRect can completely fit within the bottom quadrants\n        bottomQuadrant = (pRect.collider.top() > horizontalMidpoint);\n\n    //pRect can completely fit within the left quadrants\n    if( pRect.collider.left() < verticalMidpoint && pRect.collider.left() + pRect.collider.size().x < verticalMidpoint ) {\n      if( topQuadrant ) {\n        index = 1;\n      } else if( bottomQuadrant ) {\n        index = 2;\n      }\n\n      //pRect can completely fit within the right quadrants\n    } else if( pRect.collider.left() > verticalMidpoint ) {\n      if( topQuadrant ) {\n        index = 0;\n      } else if( bottomQuadrant ) {\n        index = 3;\n      }\n    }\n\n    return index;\n  }\n};\n\n\n/*\n\t * Insert an object into the node. If the node\n\t * exceeds the capacity, it will split and add all\n\t * objects to their corresponding subnodes.\n\t */\nQuadtree.prototype.insert = function( obj ) {\n  //avoid double insertion\n  if(this.objects.indexOf(obj) === -1)\n  {\n\n    var i = 0,\n        index;\n\n    //if we have subnodes ...\n    if( typeof this.nodes[0] !== 'undefined' ) {\n      index = this.getIndex( obj );\n\n      if( index !== -1 ) {\n        this.nodes[index].insert( obj );\n        return;\n      }\n    }\n\n    this.objects.push( obj );\n\n    if( this.objects.length > this.max_objects && this.level < this.max_levels ) {\n\n      //split if we don't already have subnodes\n      if( typeof this.nodes[0] === 'undefined' ) {\n        this.split();\n      }\n\n      //add all objects to there corresponding subnodes\n      while( i < this.objects.length ) {\n\n        index = this.getIndex( this.objects[i] );\n\n        if( index !== -1 ) {\n          this.nodes[index].insert( this.objects.splice(i, 1)[0] );\n        } else {\n          i = i + 1;\n        }\n      }\n    }\n  }\n};\n\n\n/*\n\t * Return all objects that could collide with a given area\n\t */\nQuadtree.prototype.retrieve = function( pRect ) {\n\n\n  var index = this.getIndex( pRect ),\n      returnObjects = this.objects;\n\n  //if we have subnodes ...\n  if( typeof this.nodes[0] !== 'undefined' ) {\n\n    //if pRect fits into a subnode ..\n    if( index !== -1 ) {\n      returnObjects = returnObjects.concat( this.nodes[index].retrieve( pRect ) );\n\n      //if pRect does not fit into a subnode, check it against all subnodes\n    } else {\n      for( var i=0; i < this.nodes.length; i=i+1 ) {\n        returnObjects = returnObjects.concat( this.nodes[i].retrieve( pRect ) );\n      }\n    }\n  }\n\n  return returnObjects;\n};\n\nQuadtree.prototype.retrieveFromGroup = function( pRect, group ) {\n\n  var results = [];\n  var candidates = this.retrieve(pRect);\n\n  for(var i=0; i<candidates.length; i++)\n    if(group.contains(candidates[i]))\n    results.push(candidates[i]);\n\n  return results;\n};\n\n/*\n\t * Get all objects stored in the quadtree\n\t */\nQuadtree.prototype.getAll = function() {\n\n  var objects = this.objects;\n\n  for( var i=0; i < this.nodes.length; i=i+1 ) {\n    objects = objects.concat( this.nodes[i].getAll() );\n  }\n\n  return objects;\n};\n\n\n/*\n\t * Get the node in which a certain object is stored\n\t */\nQuadtree.prototype.getObjectNode = function( obj ) {\n\n  var index;\n\n  //if there are no subnodes, object must be here\n  if( !this.nodes.length ) {\n\n    return this;\n\n  } else {\n\n    index = this.getIndex( obj );\n\n    //if the object does not fit into a subnode, it must be here\n    if( index === -1 ) {\n\n      return this;\n\n      //if it fits into a subnode, continue deeper search there\n    } else {\n      var node = this.nodes[index].getObjectNode( obj );\n      if( node ) return node;\n    }\n  }\n\n  return false;\n};\n\n\n/*\n\t * Removes a specific object from the quadtree\n\t * Does not delete empty subnodes. See cleanup-function\n\t */\nQuadtree.prototype.removeObject = function( obj ) {\n\n  var node = this.getObjectNode( obj ),\n      index = node.objects.indexOf( obj );\n\n  if( index === -1 ) return false;\n\n  node.objects.splice( index, 1);\n};\n\n\n/*\n\t * Clear the quadtree and delete all objects\n\t */\nQuadtree.prototype.clear = function() {\n\n  this.objects = [];\n\n  if( !this.nodes.length ) return;\n\n  for( var i=0; i < this.nodes.length; i=i+1 ) {\n\n    this.nodes[i].clear();\n  }\n\n  this.nodes = [];\n};\n\n\n/*\n\t * Clean up the quadtree\n\t * Like clear, but objects won't be deleted but re-inserted\n\t */\nQuadtree.prototype.cleanup = function() {\n\n  var objects = this.getAll();\n\n  this.clear();\n\n  for( var i=0; i < objects.length; i++ ) {\n    this.insert( objects[i] );\n  }\n};\n\n\n\nfunction updateTree() {\n  if(this.quadTree.active)\n  {\n    this.quadTree.updateBounds();\n    this.quadTree.cleanup();\n  }\n}\n\n//keyboard input\np5.prototype.registerMethod('pre', p5.prototype.readPresses);\n\n//automatic sprite update\np5.prototype.registerMethod('pre', p5.prototype.updateSprites);\n\n//quadtree update\np5.prototype.registerMethod('post', updateTree);\n\n//camera push and pop\np5.prototype.registerMethod('pre', cameraPush);\np5.prototype.registerMethod('post', cameraPop);\n\n//deltaTime\n//p5.prototype.registerMethod('pre', updateDelta);\n\n/**\n * Log a warning message to the host console, using native `console.warn`\n * if it is available but falling back on `console.log` if not.  If no\n * console is available, this method will fail silently.\n * @method _warn\n * @param {!string} message\n * @private\n */\np5.prototype._warn = function(message) {\n  var console = window.console;\n\n  if(console)\n  {\n    if('function' === typeof console.warn)\n    {\n      console.warn(message);\n    }\n    else if('function' === typeof console.log)\n    {\n      console.log('Warning: ' + message);\n    }\n  }\n};\n\n}));\n",
        "children": [],
        "fileType": "file",
        "_id": "5faa91309c291f201404f409",
        "isSelectedFile": false,
        "updatedAt": "2020-11-10T13:13:26.100Z",
        "createdAt": "2020-11-10T13:13:26.100Z",
        "id": "5faa91309c291f201404f409"
      },
      {
        "name": "assets",
        "content": "class MainGuy {\n  constructor(x, y, size) {\n    this.sprite = createSprite(x, y, size, size);\n    //this.sprite.debug = true;\n\n  }\n}",
        "children": [
          "5faa91309c291f201404f403",
          "5faa91309c291f201404f404",
          "5faa91309c291f201404f405",
          "5faa916a378e260024493481",
          "5faa91309c291f201404f406"
        ],
        "fileType": "folder",
        "_id": "5faa91309c291f201404f402",
        "updatedAt": "2020-11-10T13:13:26.100Z",
        "createdAt": "2020-11-10T13:13:26.100Z",
        "isSelectedFile": false,
        "id": "5faa91309c291f201404f402"
      },
      {
        "name": "background.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5faa91309c291f201404f404",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/b20a3756-f33f-4210-970d-de3345ddef34.png",
        "isSelectedFile": false,
        "updatedAt": "2020-11-10T13:13:26.100Z",
        "createdAt": "2020-11-10T13:13:26.100Z",
        "id": "5faa91309c291f201404f404"
      },
      {
        "name": "mainGuy.js",
        "content": "class MainGuy {\n  constructor(x, y, size) {\n    this.sprite = createSprite(x, y, size, size);\n    //this.sprite.debug = true;\n\n  }\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "5faa91309c291f201404f40a",
        "isSelectedFile": false,
        "updatedAt": "2020-11-10T13:13:26.100Z",
        "createdAt": "2020-11-10T13:13:26.100Z",
        "id": "5faa91309c291f201404f40a"
      },
      {
        "name": "Foreground_1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5faa91309c291f201404f403",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/fe71a0f8-7e67-488f-87e0-8e2675dbfc0b.png",
        "isSelectedFile": false,
        "updatedAt": "2020-11-10T13:13:26.100Z",
        "createdAt": "2020-11-10T13:13:26.100Z",
        "id": "5faa91309c291f201404f403"
      },
      {
        "name": "foreground.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5faa91309c291f201404f406",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/187ae42f-d6a7-4228-aef1-f3dcc6d67b1d.png",
        "isSelectedFile": false,
        "updatedAt": "2020-11-10T13:13:26.100Z",
        "createdAt": "2020-11-10T13:13:26.100Z",
        "id": "5faa91309c291f201404f406"
      },
      {
        "name": "bug.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5faa91309c291f201404f405",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/7d1d05b2-41e2-4e8b-a5a5-0c9e3b4f1294.png",
        "isSelectedFile": false,
        "updatedAt": "2020-11-10T13:13:26.100Z",
        "createdAt": "2020-11-10T13:13:26.100Z",
        "id": "5faa91309c291f201404f405"
      },
      {
        "name": "bug2.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5faa916a378e260024493481",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/fa4cc827-dcf4-4b8d-9f53-b128d5840116.png",
        "isSelectedFile": false,
        "updatedAt": "2020-11-10T13:13:26.100Z",
        "createdAt": "2020-11-10T13:13:26.100Z",
        "id": "5faa916a378e260024493481"
      }
    ],
    "createdAt": "2020-11-10T13:10:10.566Z",
    "updatedAt": "2020-11-10T13:13:26.100Z",
    "id": "uN_WohNAF"
  },
  {
    "name": "Asia final project v3 (upload issue)",
    "_id": "pjQ1Z2pd1",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61a3558319b00b1651befca2",
          "61a3558319b00b1651befca8",
          "61a3558319b00b1651befca9",
          "61a3558319b00b1651befcaa",
          "61a3558319b00b1651befcab"
        ],
        "fileType": "folder",
        "_id": "61a3558319b00b1651befca1",
        "createdAt": "2021-11-28T10:12:33.549Z",
        "updatedAt": "2021-11-28T10:12:33.549Z",
        "isSelectedFile": false,
        "id": "61a3558319b00b1651befca1"
      },
      {
        "name": "sketch.js",
        "content": "let malcolmImage;\n\nlet myFont;\nlet audioFiles;\nlet quotes;\nlet currentText =\"\";\nlet newText =\"\"\n\n\nfunction preload() {\n  myFont = loadFont(\"assets/BebasNeue-Regular.ttf\");\n\n  malcolmImage = loadImage(\"assets/malcolm-x.png\");\n\n  // load all the audio into a temporary array\n  \n  audioFiles = [];\n\n  audioFiles.push(loadSound(\"assets/audio00.mp3\"));      // 0\n  audioFiles.push(loadSound('assets/audio01.mp3'));      // 1\n  audioFiles.push(loadSound('assets/audio02.mp3'));      // 2\n  // audioFiles.push(loadSound('assets/audio03.mp3'));      // 3\n  // audioFiles.push(loadSound('assets/audio03.mp3'));      // 4\n\n}\n\nfunction setup() {\n  createCanvas(600, 600);\n\n  quotes = [];\n  newText = [];\n  \n // create quotes with audio and text\n\n  quotes.push(new Quote(audioFiles[0], \"But I do believe that the black man in the United States, and any human being, anywhere, is well within his right, to do whatever is necessary, by any means necessary, to protect his life and property.\"));\n  quotes.push(new Quote(audioFiles[1], \"In fact I think we'd be fooling ourselves if we had an audience this large and didn't realise that there were some enemies present.\"));\n quotes.push(new Quote(audioFiles[2], \"At present I'm the minister of newly founded Muslims mosque incorporated , which has its offices  in the Teresa hotel right in the heart of Harlem that's the black belt in New York  city. And when we realised thet Adam Clayton Powell is a Christian minister, he's the heads of Abyssinian Baptist Church,but at the same time he's more famous for his political struggling   2\"));\n  // quotes.push(new Quote(audioFiles[3], \"the quoted text 3\"));\n  // quotes.push(new Quote(audioFiles[4], \"the quoted text 4\"));\n\n}\n\nfunction draw() {\n  background(255);\n\n  image(malcolmImage, width - malcolmImage.width, height - malcolmImage.height);\n\n  rectMode(CENTER);\n  textAlign(CENTER, CENTER);\n  textSize(20);\n  textWrap(WORD);\n  textFont(myFont);\n  text(currentText, width / 2, (height - malcolmImage.height) / 2, width - 100);\n}\n\nfunction mousePressed() {\n  print(\"mouse was pressed!\");\n\n  // loop all quotes and stop their audio\n  for (let i = 0; i < quotes.length; i++) {\n    quotes[i].audio.stop();\n  }\n\n  let randomQuote = random(quotes);\n\n  // set the quote that the draw function will show\n  currentText = randomQuote.text;\n\n  randomQuote.audio.play();\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61a3558319b00b1651befcaa",
        "isSelectedFile": true,
        "createdAt": "2021-11-28T10:12:33.549Z",
        "updatedAt": "2021-11-28T10:12:33.549Z",
        "id": "61a3558319b00b1651befcaa"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"quote.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61a3558319b00b1651befca8",
        "createdAt": "2021-11-28T10:12:33.549Z",
        "updatedAt": "2021-11-28T10:12:33.549Z",
        "isSelectedFile": false,
        "id": "61a3558319b00b1651befca8"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61a3558319b00b1651befcab",
        "createdAt": "2021-11-28T10:12:33.549Z",
        "updatedAt": "2021-11-28T10:12:33.549Z",
        "isSelectedFile": false,
        "id": "61a3558319b00b1651befcab"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "61a3558319b00b1651befca3",
          "61a3558319b00b1651befca4",
          "61a3558319b00b1651befca5",
          "61a355b9bc2005002409843b",
          "61a3558319b00b1651befca6"
        ],
        "fileType": "folder",
        "_id": "61a3558319b00b1651befca2",
        "updatedAt": "2021-11-28T10:12:33.549Z",
        "createdAt": "2021-11-28T10:12:33.549Z",
        "isSelectedFile": false,
        "id": "61a3558319b00b1651befca2"
      },
      {
        "name": "malcolm-x.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61a3558319b00b1651befca6",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/42f69f95-c92d-4db8-8c89-374c10593036.png",
        "updatedAt": "2021-11-28T10:12:33.549Z",
        "createdAt": "2021-11-28T10:12:33.549Z",
        "isSelectedFile": false,
        "id": "61a3558319b00b1651befca6"
      },
      {
        "name": "audio00.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61a3558319b00b1651befca4",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/10547e7c-13d1-4050-9891-b5c1ef0f2f72.mp3",
        "isSelectedFile": false,
        "updatedAt": "2021-11-28T10:12:33.549Z",
        "createdAt": "2021-11-28T10:12:33.549Z",
        "id": "61a3558319b00b1651befca4"
      },
      {
        "name": "quote.js",
        "content": "class Quote {\n  \n  constructor(audio, text) {\n    this.text = text;\n    this.audio = audio;\n  }\n  \n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61a3558319b00b1651befca9",
        "isSelectedFile": false,
        "updatedAt": "2021-11-28T10:12:33.549Z",
        "createdAt": "2021-11-28T10:12:33.549Z",
        "id": "61a3558319b00b1651befca9"
      },
      {
        "name": "BebasNeue-Regular.ttf",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61a3558319b00b1651befca3",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/f86ac20a-8a7a-4990-83c5-0b8940e66083.ttf",
        "updatedAt": "2021-11-28T10:12:33.549Z",
        "createdAt": "2021-11-28T10:12:33.549Z",
        "isSelectedFile": false,
        "id": "61a3558319b00b1651befca3"
      },
      {
        "name": "audio01.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61a3558319b00b1651befca5",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/89784c3a-6a82-4e8e-8e39-63190242386e.mp3",
        "updatedAt": "2021-11-28T10:12:33.549Z",
        "createdAt": "2021-11-28T10:12:33.549Z",
        "isSelectedFile": false,
        "id": "61a3558319b00b1651befca5"
      },
      {
        "name": "audio02.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61a355b9bc2005002409843b",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/7d8ddd07-d0f9-4820-b616-ddb41ae8a786.mp3",
        "isSelectedFile": false,
        "updatedAt": "2021-11-28T10:12:33.549Z",
        "createdAt": "2021-11-28T10:12:33.549Z",
        "id": "61a355b9bc2005002409843b"
      }
    ],
    "createdAt": "2021-11-28T10:10:13.222Z",
    "updatedAt": "2021-11-28T10:12:33.549Z",
    "id": "pjQ1Z2pd1"
  },
  {
    "name": "azulejos",
    "_id": "1zx9eZOW6",
    "updatedAt": "2023-03-24T03:31:48.159Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "641c9066d2b23d00191b9ee4",
          "641c7e774759263217f57404",
          "641c7e774759263217f57403",
          "641c7e774759263217f57405"
        ],
        "fileType": "folder",
        "_id": "641c7e774759263217f57406",
        "isSelectedFile": false,
        "createdAt": "2023-03-24T03:31:48.159Z",
        "updatedAt": "2023-03-24T03:31:48.159Z",
        "id": "641c7e774759263217f57406"
      },
      {
        "name": "sketch.js",
        "content": "/*\n*  Azulezos\n*  by @ktorn\n*  24.03.2023\n*\n*  Only draws a few random circles, everthing else is just tiling.\n*  Click canvas to cycle seeds. The first few seeds are curated.\n*/\n\nlet tile1;\nlet tile2;\nlet tile3;\nlet tile4;\n\nlet tileDensity;\nlet tileSize;\nlet dim;\n\nlet originalTile;\n\nconst RENDER_ORIGINAL_TILE = false;  // set to true to render original tile\n\nlet curatedSeeds = [837568, 28428418, 69824745, 37843173, 30306240, 39886816, 57654758];\n\n// this is the only function that draws any shapes in this sketch.\n// make sure to draw onto t1 graphics\nfunction drawShapes(t1) {\n  \n  if(RENDER_ORIGINAL_TILE) {\n    t1.image(originalTile, 0, 0, t1.width, t1.height);\n    return;\n  }\n  \n  t1.background(244, 240, 229);\n  t1.stroke(88, 88, 126);\n  t1.noFill();\n  \n  let circles = floor(random(10, 50));\n  print(\"circles: \" + circles)\n  for(let i = 0; i < circles; i++) {\n    t1.strokeWeight(random(1, 8))\n    t1.circle(random(-t1.width/2, t1.width*2),\n              random(-t1.height/2, t1.height*2),\n              random(t1.width/50, t1.width*10));\n  }\n\n}\n\nfunction setup() {\n  createCanvas(1600, 1600);\n  \n  let seed = floor(random()*99999999);\n  if (curatedSeeds.length > 0) {\n    seed = curatedSeeds.shift();\n  }\n  print(\"seed: \" + seed);\n  randomSeed(seed);\n  \n  tileDensity = floor(random(5, 10));\n  tileDensity = 6\n  tileSize = width / tileDensity;\n\n  tile1 = createGraphics(tileSize/2, tileSize/2);       // 1/8 of a tile\n  tile2 = createGraphics(tile1.width, tile1.height);    // 1/4 of a tile\n  tile3 = createGraphics(tile2.width, tile2.height*2);  // 1/2 of a tile\n  tile4 = createGraphics(tile3.width*2, tile3.height);  // whole tile\n  \n  drawShapes(tile1);\n  doTiling();\n\n  noLoop();\n  \n  print(\"-----------------\")\n}\n\nfunction doTiling() {\n  tile1.noStroke();\n  tile1.fill(255);\n  tile1.erase();\n  tile1.triangle(0, tile1.height, tile1.width, 0, tile1.width, tile1.height);\n  tile1.noErase();\n  \n  tile2.image(tile1, 0, 0);\n  tile2.translate(0, tile1.height)\n  tile2.rotate(PI/2)\n  tile2.scale(-1, 1);\n  tile2.image(tile1, 0, -tile1.height);\n  \n  tile3.image(tile2, 0, 0);\n  tile3.translate(0, tile2.height);\n  tile3.rotate(PI/2)\n  tile3.image(tile2, 0, -tile2.height);\n  \n  tile4.clear();\n  tile4.push();\n  tile4.translate(tile3.width, 0);\n  tile4.image(tile3, 0, 0);\n  tile4.scale(-1, 1)\n  tile4.image(tile3, 0, 0);\n  tile4.pop();\n  \n  for(let x = 0; x < width; x += tileSize) {\n    for(let y = 0; y < height; y += tileSize) {\n       image(tile4, x, y);\n    }\n  }\n}\n\nfunction preload() {\n  if(RENDER_ORIGINAL_TILE) {\n    // the inspiration for this tiling pattern\n    // source: https://www.portugalnummapa.com/azulejos/\n    originalTile = loadImage(\"assets/tile.png\");\n  }\n}\n\n\nfunction mousePressed() {\n  setup();\n}",
        "children": [],
        "fileType": "file",
        "_id": "641c7e774759263217f57403",
        "isSelectedFile": true,
        "createdAt": "2023-03-24T03:31:48.159Z",
        "updatedAt": "2023-03-24T03:31:48.159Z",
        "id": "641c7e774759263217f57403"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "641c7e774759263217f57404",
        "isSelectedFile": false,
        "createdAt": "2023-03-24T03:31:48.159Z",
        "updatedAt": "2023-03-24T03:31:48.159Z",
        "id": "641c7e774759263217f57404"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "641c7e774759263217f57405",
        "isSelectedFile": false,
        "createdAt": "2023-03-24T03:31:48.159Z",
        "updatedAt": "2023-03-24T03:31:48.159Z",
        "id": "641c7e774759263217f57405"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "641c90714bcbd2001a516932"
        ],
        "fileType": "folder",
        "_id": "641c9066d2b23d00191b9ee4",
        "updatedAt": "2023-03-24T03:31:48.159Z",
        "createdAt": "2023-03-24T03:31:48.159Z",
        "isSelectedFile": false,
        "id": "641c9066d2b23d00191b9ee4"
      },
      {
        "name": "tile.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "641c90714bcbd2001a516932",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/74065105-357e-40c2-bf14-1873bb4b5b5b.png",
        "updatedAt": "2023-03-24T03:31:48.159Z",
        "createdAt": "2023-03-24T03:31:48.159Z",
        "isSelectedFile": false,
        "id": "641c90714bcbd2001a516932"
      }
    ],
    "createdAt": "2023-03-23T16:45:37.183Z",
    "id": "1zx9eZOW6"
  },
  {
    "name": "Basic Geometry 1",
    "_id": "ByN0tfYRX",
    "createdAt": "2018-11-26T06:59:24.109Z",
    "updatedAt": "2022-07-26T13:44:46.050Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5bfb99826a479c85f61e107a",
          "5bfb99826a479c85f61e1079",
          "5bfb99826a479c85f61e107b"
        ],
        "fileType": "folder",
        "_id": "5bfb99826a479c85f61e107c",
        "updatedAt": "2022-07-26T13:44:46.050Z",
        "createdAt": "2022-07-26T13:44:46.050Z",
        "id": "5bfb99826a479c85f61e107c"
      },
      {
        "name": "sketch.js",
        "content": "class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n  \n    setLabelBottom() {\n      this.labelTop = false;\n    }\n  \n    setLabelTop() {\n      this.labelTop = true;\n    }\n  \n    distance(p2) {\n      var result = Math.sqrt( (p2.x - this.x)**2 + (p2.y - this.y)**2);\n      return result;\n    }\n  \n    draw() {\n      point(this.x, this.y);\n      textAlign(CENTER);\n\n      var labelYoffset = 0;\n      if (this.labelTop) {\n        labelYoffset = -20;\n      } else {\n        labelYoffset = 20;\n      }\n      text(\"(\"+ this.x + \", \" + this.y + \")\", this.x, this.y + labelYoffset);\n    }\n}\n\nclass Line {\n    constructor(p1, p2) {\n        this.p1 = p1;\n        this.p2 = p2;\n    }\n  \n    draw() {\n      line(this.p1.x, this.p1.y, this.p2.x, this.p2.y);\n    }\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n\n  p1 = new Point(100,300);\n  p1.draw();\n  \n  p2 = new Point(300,300);\n  p2.draw();\n  \n  l1 = new Line(p1, p2);\n  l1.draw();\n  \n  dp1p2 = dist(p1.x, p1.y, p2.x, p2.y);\n  print(\"dist library: \" + dp1p2);\n  dd = p1.distance(p2);\n  print(\"dist our    : \" + dd);\n  \n  p3 = new Point(200, 127);\n  p3.draw();\n  l2 = new Line(p1, p3);\n  l2.draw();\n  l3 = new Line(p2,p3);\n  l3.draw();\n\n  d12 = p1.distance(p2);\n  print(\"Dist p1 p2: \" + d12);\n  d13 = p1.distance(p3);\n  print(\"Dist p1 p3: \" + d13);\n  d23 = p2.distance(p3);\n  print(\"Dist p2 p3: \" + d23);\n\n}",
        "children": [],
        "fileType": "file",
        "_id": "5bfb99826a479c85f61e1079",
        "updatedAt": "2022-07-26T13:44:46.050Z",
        "createdAt": "2022-07-26T13:44:46.050Z",
        "isSelectedFile": true,
        "id": "5bfb99826a479c85f61e1079"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "5bfb99826a479c85f61e107a",
        "updatedAt": "2022-07-26T13:44:46.050Z",
        "createdAt": "2022-07-26T13:44:46.050Z",
        "id": "5bfb99826a479c85f61e107a"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5bfb99826a479c85f61e107b",
        "updatedAt": "2022-07-26T13:44:46.050Z",
        "createdAt": "2022-07-26T13:44:46.050Z",
        "id": "5bfb99826a479c85f61e107b"
      }
    ],
    "id": "ByN0tfYRX"
  },
  {
    "name": "Biased die",
    "_id": "rBtNpqJAC",
    "updatedAt": "2022-02-07T20:42:24.638Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6200fb57407eb4b16d343e23",
          "6200fb57407eb4b16d343e22",
          "6200fb57407eb4b16d343e24"
        ],
        "fileType": "folder",
        "_id": "6200fb57407eb4b16d343e25",
        "createdAt": "2022-02-07T20:42:24.638Z",
        "updatedAt": "2022-02-07T20:42:24.638Z",
        "isSelectedFile": false,
        "id": "6200fb57407eb4b16d343e25"
      },
      {
        "name": "sketch.js",
        "content": "const MAX_BUCKETS = 100;\nlet buckets = [];\nlet bucketWidth;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  bucketWidth = width / MAX_BUCKETS;\n  \n  for (let i = 0; i < MAX_BUCKETS; i++) {\n    buckets[i] = {count: 0};\n  }\n  \n  stroke(0);\n  fill(0);\n}\n\nfunction draw() {\n  background(220);\n  \n  let pick = random(0, MAX_BUCKETS);\n  pick = floor(Math.pow(pick, 2) / MAX_BUCKETS);\n  let bucket = buckets[pick];\n  \n  bucket.count++;\n  \n  for (let i = 0; i < buckets.length; i++) {\n    bucket = buckets[i];\n    for(let k = 0; k < bucket.count; k++) {\n      rect(i * bucketWidth, k * 2, bucketWidth, 2);\n    }\n  }\n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "6200fb57407eb4b16d343e22",
        "isSelectedFile": true,
        "createdAt": "2022-02-07T20:42:24.638Z",
        "updatedAt": "2022-02-07T20:42:24.638Z",
        "id": "6200fb57407eb4b16d343e22"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6200fb57407eb4b16d343e23",
        "createdAt": "2022-02-07T20:42:24.638Z",
        "updatedAt": "2022-02-07T20:42:24.638Z",
        "isSelectedFile": false,
        "id": "6200fb57407eb4b16d343e23"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6200fb57407eb4b16d343e24",
        "createdAt": "2022-02-07T20:42:24.638Z",
        "updatedAt": "2022-02-07T20:42:24.638Z",
        "isSelectedFile": false,
        "id": "6200fb57407eb4b16d343e24"
      }
    ],
    "createdAt": "2022-02-07T11:00:16.582Z",
    "id": "rBtNpqJAC"
  },
  {
    "name": "blendMode(ADD)",
    "_id": "nrMr34MDo",
    "updatedAt": "2022-07-26T13:37:13.572Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "62dfbadd95137d7cec1eed9b",
          "62dfbadd95137d7cec1eed9a",
          "62dfbadd95137d7cec1eed9c"
        ],
        "fileType": "folder",
        "_id": "62dfbadd95137d7cec1eed9d",
        "createdAt": "2022-07-26T13:37:13.572Z",
        "updatedAt": "2022-07-26T13:37:13.572Z",
        "id": "62dfbadd95137d7cec1eed9d"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n  noStroke();\n  blendMode(ADD);\n}\n\nfunction draw() {\n  background(0);\n  \n  fill(255,0,0);\n  circle(100, 300, 300);\n  \n  fill(0, 255, 0);\n  circle(200, 100, 300);\n  \n  fill(0, 0, 255);\n  circle(300, 300, 300);\n}",
        "children": [],
        "fileType": "file",
        "_id": "62dfbadd95137d7cec1eed9a",
        "isSelectedFile": true,
        "createdAt": "2022-07-26T13:37:13.572Z",
        "updatedAt": "2022-07-26T13:37:13.572Z",
        "id": "62dfbadd95137d7cec1eed9a"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "62dfbadd95137d7cec1eed9b",
        "createdAt": "2022-07-26T13:37:13.572Z",
        "updatedAt": "2022-07-26T13:37:13.572Z",
        "id": "62dfbadd95137d7cec1eed9b"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "62dfbadd95137d7cec1eed9c",
        "createdAt": "2022-07-26T13:37:13.572Z",
        "updatedAt": "2022-07-26T13:37:13.572Z",
        "id": "62dfbadd95137d7cec1eed9c"
      }
    ],
    "createdAt": "2022-07-26T10:20:03.510Z",
    "id": "nrMr34MDo"
  },
  {
    "name": "Camera Capture",
    "_id": "rkEK-6xkN",
    "createdAt": "2018-12-02T02:20:43.719Z",
    "updatedAt": "2018-12-02T06:37:45.170Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5c02a5d5b468571463cda108",
          "5c02a5d5b468571463cda109",
          "5c02a5d5b468571463cda10a"
        ],
        "fileType": "folder",
        "_id": "5c02a5d5b468571463cda10b",
        "createdAt": "2018-12-02T06:37:45.170Z",
        "updatedAt": "2018-12-02T06:37:45.170Z",
        "id": "5c02a5d5b468571463cda10b"
      },
      {
        "name": "sketch.js",
        "content": "var video;\n\nfunction setup() {\n  createCanvas(320, 240);\n  background(51);\n  video = createCapture(VIDEO);\n  video.size(width, height);\n  video.hide();\n}\n\nfunction draw() {\n  image(video, 0, 0);\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "5c02a5d5b468571463cda108",
        "createdAt": "2018-12-02T06:37:45.170Z",
        "updatedAt": "2018-12-02T06:37:45.170Z",
        "id": "5c02a5d5b468571463cda108"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "5c02a5d5b468571463cda109",
        "createdAt": "2018-12-02T06:37:45.170Z",
        "updatedAt": "2018-12-02T06:37:45.170Z",
        "id": "5c02a5d5b468571463cda109"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5c02a5d5b468571463cda10a",
        "createdAt": "2018-12-02T06:37:45.170Z",
        "updatedAt": "2018-12-02T06:37:45.170Z",
        "id": "5c02a5d5b468571463cda10a"
      }
    ],
    "id": "rkEK-6xkN"
  },
  {
    "name": "carrousel",
    "_id": "ulAfa_EnG",
    "updatedAt": "2023-02-17T13:39:59.149Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63ef661e298eacbd749d01e1",
          "63ef661e298eacbd749d01e0",
          "63ef661e298eacbd749d01e2"
        ],
        "fileType": "folder",
        "_id": "63ef661e298eacbd749d01e3",
        "createdAt": "2023-02-17T13:39:59.149Z",
        "updatedAt": "2023-02-17T13:39:59.149Z",
        "id": "63ef661e298eacbd749d01e3"
      },
      {
        "name": "sketch.js",
        "content": "// carrousel\n// coded by @ktorn\n// \n// a reproduction of https://twitter.com/newrafael/status/1626389747688939521\n// by @newrafael\n//\n\nconst PAGE_COUNT = 6;\nlet pagesX = [];\nlet pageSpacing;\nlet startX;\nlet endX;\n\nlet insideMargin = 0.2;\nlet insideTopX;\nlet insideTopY;\nlet insideBottomX;\nlet insideBottomY;\n\nlet startColor = 270;\nlet endColor = 360;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  colorMode(HSB);\n  noStroke();\n  \n  insideTopX = width / 2;\n  insideTopY = height * insideMargin;\n  insideBottomX = width / 2;\n  insideBottomY = height - insideTopY;\n  \n  print(insideTopY, insideBottomY);\n  \n  pageSpacing = width  / (PAGE_COUNT - 1);\n  startX = -pageSpacing;\n  endX = startX + (PAGE_COUNT + 2) * pageSpacing;\n  \n  let halfPages = floor((PAGE_COUNT + 2) / 2);\n  \n  for (let i = 0; i < (PAGE_COUNT + 2); i++) {\n    pagesX.push(startX + (i * pageSpacing));\n  }\n  \n  \n}\n\nfunction draw() {\n  background(0);\n  \n  for(let i = pagesX.length - 1; i >= 0; i--) {\n    pagesX[i]++;\n    \n    if (pagesX[i] > endX) {\n      pagesX.splice(i, 1);\n    }\n  }\n  \n  if (pagesX.length < PAGE_COUNT + 2 && pagesX[0] >= startX + pageSpacing ) {\n    pagesX.unshift(startX);\n  }\n\n  let i = 0;\n  let x = pagesX[i];\n  \n  while (x < width / 2) {\n    drawPage(x);\n    i++;\n    x = pagesX[i];\n  }\n  \n  for (let k = pagesX.length - 1; k >= i; k--) {\n    x = pagesX[k];\n    drawPage(x);\n  }\n}\n\nfunction drawPage(x) {\n  \n    let pageColor = map(x, 0, width, startColor, endColor, true);\n  \n    let pageSat;\n    let pageBrit;\n  \n    if (x < width / 2) {\n      pageSat = map(x, 0, width / 2, 100, 80, true);\n    } else {\n      pageSat = map(x, width / 2, width , 80, 100, true);\n    }\n  \n  \n    if (x < width / 2) {\n      pageBrit = map(x, 0, width / 2, 100, 80, true);\n    } else {\n      pageBrit = map(x, width / 2, width, 80, 100, true);\n    }\n  \n  \n    fill(pageColor, pageSat, pageBrit);\n    beginShape();\n    vertex(x, 0);\n    vertex(x, height);\n    vertex(insideBottomX, insideBottomY);\n    vertex(insideTopX, insideTopY);\n    vertex(x, 0);\n    endShape();\n}",
        "children": [],
        "fileType": "file",
        "_id": "63ef661e298eacbd749d01e0",
        "isSelectedFile": true,
        "createdAt": "2023-02-17T13:39:59.149Z",
        "updatedAt": "2023-02-17T13:39:59.149Z",
        "id": "63ef661e298eacbd749d01e0"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63ef661e298eacbd749d01e1",
        "createdAt": "2023-02-17T13:39:59.149Z",
        "updatedAt": "2023-02-17T13:39:59.149Z",
        "id": "63ef661e298eacbd749d01e1"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63ef661e298eacbd749d01e2",
        "createdAt": "2023-02-17T13:39:59.149Z",
        "updatedAt": "2023-02-17T13:39:59.149Z",
        "id": "63ef661e298eacbd749d01e2"
      }
    ],
    "createdAt": "2023-02-17T13:38:57.994Z",
    "id": "ulAfa_EnG"
  },
  {
    "name": "chatbot",
    "_id": "SJ2pAJJeN",
    "createdAt": "2018-12-12T20:25:40.105Z",
    "updatedAt": "2018-12-13T01:36:53.436Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5c116e600f53f71130f31e87",
          "5c116e600f53f71130f31e88",
          "5c116e600f53f71130f31e89",
          "5c116ebe0f53f71130f31e8b",
          "5c116f0cfc24ba0015a7ed5e"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "5c116e600f53f71130f31e8a",
        "createdAt": "2018-12-13T01:36:53.436Z",
        "updatedAt": "2018-12-13T01:36:53.436Z",
        "id": "5c116e600f53f71130f31e8a"
      },
      {
        "name": "sketch.js",
        "content": "// Daniel Shiffman\n// http://codingtra.in\n// http://patreon.com/codingtrain\n\n// Voice Chatbot with p5.Speech\n// Edited Video: https://youtu.be/iFTgphKCP9U\n\nfunction setup() {\n  noCanvas();\n  let speech = new p5.Speech();\n  let speechRec = new p5.SpeechRec('en-US', gotSpeech);\n  let continuous = true;\n  let interim = false;\n  speechRec.start(continuous, interim);\n\n  let bot = new RiveScript();\n  bot.loadFile(\"brain.rive\", brainReady, brainError);\n\n  function brainReady() {\n    console.log('Chatbot ready!');\n    bot.sortReplies();\n  }\n\n  function brainError() {\n    console.log('Chatbot error!')\n  }\n\n\n  let button = select('#submit');\n  let user_input = select('#user_input');\n  let output = select('#output');\n\n  // button.mousePressed(chat);\n\n  function gotSpeech() {\n    if (speechRec.resultValue) {\n      let input = speechRec.resultString;\n      //user_input.value(input);\n      let reply = bot.reply(\"local-user\", input);\n      speech.speak(reply);\n      //output.html(reply);\n    }\n  }\n\n  // function chat() {\n  //   let input = user_input.value();\n  // }\n\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "5c116e600f53f71130f31e87",
        "createdAt": "2018-12-13T01:36:53.436Z",
        "updatedAt": "2018-12-13T01:36:53.436Z",
        "id": "5c116e600f53f71130f31e87"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n\n<head>\n\t<meta charset=\"UTF-8\">\n\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n\t<title>chatbot1</title>\n\t<script type=\"text/javascript\" src=\"https://unpkg.com/rivescript@latest/dist/rivescript.min.js\"></script>\n\t<script\n\t  src=\"https://code.jquery.com/jquery-3.2.1.min.js\"\n\t  integrity=\"sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=\"\n\t  crossorigin=\"anonymous\"></script>\n\t<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/p5.js\"></script>\n\t<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/addons/p5.dom.js\"></script>\n\t<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/addons/p5.sound.js\"></script>\n\t<script type=\"text/javascript\" src=\"libraries/p5.speech.js\"></script>\n</head>\n\n<body>\n  \n\t<h1>Chatbot</h1>\n\n\t<p>\n\t\tsay: <input id=\"user_input\"></input>\n\t\t<button id=\"submit\">submit</button>\n\t</p>\n\n\t<p>\n\t\treply: <span id=\"output\"></span>\n\t</p>\n\n\n    <script src=\"sketch.js\"></script>\n\n</body>\n\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "5c116e600f53f71130f31e88",
        "createdAt": "2018-12-13T01:36:53.436Z",
        "updatedAt": "2018-12-13T01:36:53.436Z",
        "id": "5c116e600f53f71130f31e88"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "5c116e600f53f71130f31e89",
        "createdAt": "2018-12-13T01:36:53.436Z",
        "updatedAt": "2018-12-13T01:36:53.436Z",
        "id": "5c116e600f53f71130f31e89"
      },
      {
        "name": "brain.txt",
        "content": "// Chatbot's brain\n! version = 2.0\n\n! sub who's = who is\n\n+ *\n- try saying knock knock\n\n+ [*] knock knock [*]\n- Who's there?\n\n+ *\n% who is there\n- <star1> who\n\n+ *\n% * who\n- hahahahahahah\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "5c116ebe0f53f71130f31e8b",
        "createdAt": "2018-12-13T01:36:53.436Z",
        "updatedAt": "2018-12-13T01:36:53.436Z",
        "id": "5c116ebe0f53f71130f31e8b"
      },
      {
        "name": "libraries",
        "content": "",
        "children": [
          "5c116f1dfc24ba0015a7ed5f"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "5c116f0cfc24ba0015a7ed5e",
        "updatedAt": "2018-12-13T01:36:53.436Z",
        "createdAt": "2018-12-13T01:36:53.436Z",
        "id": "5c116f0cfc24ba0015a7ed5e"
      },
      {
        "name": "p5.speech.js",
        "content": "/*! p5.speech.js v0.0.1 2015-06-12 */\n/* updated v0.0.2 2017-10-17 */\n/**\n * @module p5.speech\n * @submodule p5.speech\n * @for p5.speech\n * @main\n */\n/**\n *  p5.speech\n *  R. Luke DuBois (dubois@nyu.edu)\n *  ABILITY Lab / Brooklyn Experimental Media Center\n *  New York University\n *  The MIT License (MIT).\n *  \n *  https://github.com/IDMNYU/p5.js-speech\n *\n *  Web Speech API: https://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html\n *  Web Speech Recognition API: https://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html\n */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd)\n    define('p5.speech', ['p5'], function (p5) { (factory(p5));});\n  else if (typeof exports === 'object')\n    factory(require('../p5'));\n  else\n    factory(root['p5']);\n}(this, function (p5) {\n// =============================================================================\n//                         p5.Speech\n// =============================================================================\n\n\n  /**\n   * Base class for a Speech Synthesizer\n   *\n   * @class p5.Speech\n   * @constructor\n   */\n  p5.Speech = function(_dv, _callback) {\n\n    //\n    // speech synthesizers consist of a single synthesis engine\n    // per window instance, and a variable number of 'utterance'\n    // objects, which can be cached and re-used for, e.g.\n    // auditory UI.\n    //\n    // this implementation assumes a monolithic (one synth, \n    // one phrase at a time) system.\n    //\n\n    // make a speech synthizer (this will load voices):\n    this.synth = window.speechSynthesis;\n\n    // make an utterance to use with this synthesizer:\n    this.utterance = new SpeechSynthesisUtterance();\n\n    this.isLoaded = 0; // do we have voices yet?\n\n    // do we queue new utterances upon firing speak() \n    // or interrupt what's speaking:\n    this.interrupt = false; \n\n    // callback properties to be filled in within the p5 sketch\n    // if the author needs custom callbacks:\n    this.onLoad; // fires when voices are loaded and synth is ready\n    this.onStart; // fires when an utterance begins...\n    this.onPause; // ...is paused...\n    this.onResume; // ...resumes...\n    this.onEnd; // ...and ends.\n\n    this.voices = []; // array of available voices (dependent on browser/OS)\n\n    // first parameter of constructor is an initial voice selector\n    this.initvoice;\n    if(_dv !== undefined) this.initvoice=_dv;\n    if(_callback !== undefined) this.onLoad =_callback;\n\n    var that = this; // some bullshit\n\n    // onvoiceschanged() fires automatically when the synthesizer\n    // is configured and has its voices loaded.  you don't need\n    // to wait for this if you're okay with the default voice.\n    // \n    // we use this function to load the voice array and bind our\n    // custom callback functions.\n    window.speechSynthesis.onvoiceschanged = function() {\n      if(that.isLoaded==0) { // run only once\n        that.voices = window.speechSynthesis.getVoices();\n        that.isLoaded = 1; // we're ready\n        console.log(\"p5.Speech: voices loaded!\");\n\n        if(that.initvoice!=undefined) {\n          that.setVoice(that.initvoice); // set a custom initial voice\n          console.log(\"p5.Speech: initial voice: \" + that.initvoice);\n        }\n\n        // fire custom onLoad() callback, if it exists:\n        if(that.onLoad!=undefined) that.onLoad();\n\n        //\n        // bind other custom callbacks:\n        //\n\n        that.utterance.onstart = function(e) {\n          //console.log(\"STARTED\");\n          if(that.onStart!=undefined) that.onStart(e);     \n        };\n        that.utterance.onpause = function(e) {\n          //console.log(\"PAUSED\");\n          if(that.onPause!=undefined) that.onPause(e);\n        };\n        that.utterance.onresume = function(e) {\n          //console.log(\"RESUMED\");\n          if(that.onResume!=undefined) that.onResume(e);\n        };\n        that.utterance.onend = function(e) {\n          //console.log(\"ENDED\");\n          if(that.onEnd!=undefined) that.onEnd(e); \n        };\n      }\n    };\n\n  };     // end p5.Speech constructor\n\n\n  // listVoices() - dump voice names to javascript console:\n  p5.Speech.prototype.listVoices = function() {\n    if(this.isLoaded)\n    {\n      for(var i = 0;i<this.voices.length;i++)\n      {\n        console.log(this.voices[i].name);\n      }\n    }\n    else\n    {\n    \tconsole.log(\"p5.Speech: voices not loaded yet!\")\n    }\n  };\n\n  // setVoice() - assign voice to speech synthesizer, by name\n  // (using voices found in the voices[] array), or by index.\n  p5.Speech.prototype.setVoice = function(_v) {\n    // type check so you can set by label or by index:\n    if(typeof(_v)=='string') this.utterance.voice = this.voices.filter(function(v) { return v.name == _v; })[0];\n    else if(typeof(_v)=='number') this.utterance.voice = this.voices[Math.min(Math.max(_v,0),this.voices.length-1)];\n  };\n\n  // volume of voice. API range 0.0-1.0.\n  p5.Speech.prototype.setVolume = function(_v) {\n    this.utterance.volume = Math.min(Math.max(_v, 0.0), 1.0);\n  };\n\n  // rate of voice.  not all voices support this feature.\n  // API range 0.1-2.0.  voice will crash out of bounds.\n  p5.Speech.prototype.setRate = function(_v) {\n    this.utterance.rate = Math.min(Math.max(_v, 0.1), 2.0);\n  };\n\n  // pitch of voice.  not all voices support this feature.\n  // API range >0.0-2.0.  voice will crash out of bounds.\n  p5.Speech.prototype.setPitch = function(_v) {\n    this.utterance.pitch = Math.min(Math.max(_v, 0.01), 2.0);\n  };\n\n  // sets the language of the voice.\n  p5.Speech.prototype.setLang = function(_lang) {\n    this.utterance.lang = _lang;\n}\n\n  // speak a phrase through the current synthesizer:\n  p5.Speech.prototype.speak = function(_phrase) {\n    if(this.interrupt) this.synth.cancel();\n    this.utterance.text = _phrase;\n\n    this.synth.speak(this.utterance);\n  };\n\n  // not working...\n  p5.Speech.prototype.pause = function() {\n    this.synth.pause();\n  };\n\n  // not working...\n  p5.Speech.prototype.resume = function() {\n    this.synth.resume();\n  };\n\n  // stop current utterance:\n  p5.Speech.prototype.stop = function() {\n    // not working...\n    //this.synth.stop();\n    this.synth.cancel();\n  };\n\n  // kill synthesizer completely, clearing any queued utterances:\n  p5.Speech.prototype.cancel = function() {\n    this.synth.cancel(); // KILL SYNTH\n  };\n\n  // Setting callbacks with functions instead\n  p5.Speech.prototype.started = function(_cb) {\n   this.onStart = _cb;\n  }\n\n  p5.Speech.prototype.ended = function(_cb) {\n    this.onEnd = _cb;\n  }\n\n  p5.Speech.prototype.paused = function(_cb) {\n    this.onPause = _cb;\n  }\n\n  p5.Speech.prototype.resumed = function(_cb) {\n    this.onResume = _cb;\n  }\n\n// =============================================================================\n//                         p5.SpeechRec\n// =============================================================================\n\n\n  /**\n   * Base class for a Speech Recognizer\n   *\n   * @class p5.SpeechRec\n   * @constructor\n   */\n  p5.SpeechRec = function(_lang, _callback) {\n\n    //\n    // speech recognition consists of a recognizer object per \n    // window instance that returns a JSON object containing\n    // recognition.  this JSON object grows when the synthesizer\n    // is in 'continuous' mode, with new recognized phrases\n    // appended into an internal array.\n    //\n    // this implementation returns the full JSON, but also a set\n    // of simple, query-ready properties containing the most\n    // recently recognized speech.\n    //\n\n    // make a recognizer object.\n    if('webkitSpeechRecognition' in window) {\n      this.rec = new webkitSpeechRecognition();\n    }\n    else {\n      this.rec = new Object();\n      console.log(\"p5.SpeechRec: webkitSpeechRecognition not supported in this browser.\");\n    }\n\n    // first parameter is language model (defaults to empty=U.S. English)\n    // no list of valid models in API, but it must use BCP-47.\n    // here's some hints:\n    // http://stackoverflow.com/questions/14257598/what-are-language-codes-for-voice-recognition-languages-in-chromes-implementati\n    if(_lang !== undefined) this.rec.lang=_lang;\n\n    // callback properties to be filled in within the p5 sketch\n    // if the author needs custom callbacks:\n    this.onResult; // fires when something has been recognized\n    this.onStart; // fires when the recognition system is started...\n    this.onError; // ...has a problem (e.g. the mic is shut off)...\n    this.onEnd; // ...and ends (in non-continuous mode).\n    if(_callback !== undefined) this.onResult=_callback;\n\n    // recognizer properties:\n\n    // continous mode means the object keeps recognizing speech,\n    // appending new tokens to the internal JSON.\n    this.continuous = false; \n    // interimResults means the object will report (i.e. fire its\n    // onresult() callback) more frequently, rather than at pauses\n    // in microphone input.  this gets you quicker, but less accurate,\n    // results.\n    this.interimResults = false;\n\n    // result data:\n\n    // resultJSON:\n    // this is a full JSON returned by onresult().  it consists of a \n    // SpeechRecognitionEvent object, which contains a (wait for it)\n    // SpeechRecognitionResultList.  this is an array.  in continuous\n    // mode, it will be appended to, not cleared.  each element is a \n    // SpeechRecognition result, which contains a (groan)\n    // SpeechRecognitionAlternative, containing a 'transcript' property.\n    // the 'transcript' is the recognized phrase.  have fun.\n    this.resultJSON; \n    // resultValue:\n    // validation flag which indicates whether the recognizer succeeded.  \n    // this is *not* a metric of speech clarity, but rather whether the\n    // speech recognition system successfully connected to and received\n    // a response from the server.  you can construct an if() around this\n    // if you're feeling worried.\n    this.resultValue; \n    // resultValue:\n    // the 'transcript' of the most recently recognized speech as a simple\n    // string.  this will be blown out and replaced at every firing of the\n    // onresult() callback.\n    this.resultString; \n    // resultConfidence:\n    // the 'confidence' (0-1) of the most recently recognized speech, e.g.\n    // that it reflects what was actually spoken.  you can use this to filter\n    // out potentially bogus recognition tokens.\n    this.resultConfidence; \n\n    var that = this; // some bullshit\n\n    // onresult() fires automatically when the recognition engine\n    // detects speech, or times out trying.\n    // \n    // it fills up a JSON array internal to the webkitSpeechRecognition\n    // object.  we reference it over in our struct here, and also copy \n    // out the most recently detected phrase and confidence value.\n    this.rec.onresult = function(e) { \n      that.resultJSON = e; // full JSON of callback event\n      that.resultValue = e.returnValue; // was successful?\n      // store latest result in top-level object struct\n      that.resultString = e.results[e.results.length-1][0].transcript.trim();\n      that.resultConfidence = e.results[e.results.length-1][0].confidence;\n      if(that.onResult!=undefined) that.onResult();\n    };\n\n    // fires when the recognition system starts (i.e. when you 'allow'\n    // the mic to be used in the browser).\n    this.rec.onstart = function(e) {\n      if(that.onStart!=undefined) that.onStart(e);\n    };\n    // fires on a client-side error (server-side errors are expressed \n    // by the resultValue in the JSON coming back as 'false').\n    this.rec.onerror = function(e) {\n      if(that.onError!=undefined) that.onError(e);\n    };\n    // fires when the recognition finishes, in non-continuous mode.\n    this.rec.onend = function() {\n      if(that.onEnd!=undefined) that.onEnd();\n    };\n\n  }; // end p5.SpeechRec constructor\n\n  // start the speech recognition engine.  this will prompt a \n  // security dialog in the browser asking for permission to \n  // use the microphone.  this permission will persist throughout\n  // this one 'start' cycle.  if you need to recognize speech more\n  // than once, use continuous mode rather than firing start() \n  // multiple times in a single script.\n  p5.SpeechRec.prototype.start = function(_continuous, _interim) {\n    if('webkitSpeechRecognition' in window) {\n      if(_continuous !== undefined) this.continuous = _continuous;\n      if(_interim !== undefined) this.interimResults = _interim;\n      this.rec.continuous = this.continuous;\n      this.rec.interimResults = this.interimResults;\n      this.rec.start();\n    }\n  };\n\n}));\n\n/*\ntodo:\n* fix callbacks (pause, resume) in synthesizer.\n* support speech grammar models for scoped auditory UI.\n* support markdown, boundaries, etc for better synthesis tracking.\n* support utterance parser for long phrases.\n*/\n\n// EOF\n\n\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "5c116f1dfc24ba0015a7ed5f",
        "updatedAt": "2018-12-13T01:36:53.436Z",
        "createdAt": "2018-12-13T01:36:53.436Z",
        "id": "5c116f1dfc24ba0015a7ed5f"
      }
    ],
    "id": "SJ2pAJJeN"
  },
  {
    "name": "chatbot 2",
    "_id": "SkfWdVJl4",
    "createdAt": "2018-12-13T01:38:02.211Z",
    "updatedAt": "2018-12-13T01:47:06.898Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5c11b6b00d2c594eca7ffd2b",
          "5c11b6b00d2c594eca7ffd2c",
          "5c11b6b00d2c594eca7ffd2d",
          "5c11b84cfc24ba0015a7ee47",
          "5c11b8d2fc24ba0015a7ee49"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "5c11b6b00d2c594eca7ffd2e",
        "createdAt": "2018-12-13T01:47:06.898Z",
        "updatedAt": "2018-12-13T01:47:06.898Z",
        "id": "5c11b6b00d2c594eca7ffd2e"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  noCanvas();\n\n  let speech = new p5.Speech();\n  let speechRec = new p5.SpeechRec('en-US', gotSpeech);\n  let continuous = true;\n  let interim = false;\n  speechRec.start(continuous, interim);\n  let bot = new RiveScript();\n  bot.loadFile(\"brain.txt\").then(function() {\n    console.log(\"Chatbot ready!\");\n    bot.sortReplies();\n  }).catch(function(err, filename, lineno) {\n    console.error(\"An error occurred!\");\n  });\n\n\n  function gotSpeech() {\n    print(\"got speech!\");\n  }\n}\n\nfunction draw() {\n  background(220);\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "5c11b6b00d2c594eca7ffd2b",
        "createdAt": "2018-12-13T01:47:06.898Z",
        "updatedAt": "2018-12-13T01:47:06.898Z",
        "id": "5c11b6b00d2c594eca7ffd2b"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n\n<head>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n  <script type=\"text/javascript\" src=\"https://unpkg.com/rivescript@latest/dist/rivescript.min.js\"></script>\n  <script src=\"https://code.jquery.com/jquery-3.2.1.min.js\" integrity=\"sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=\" crossorigin=\"anonymous\"></script>\n  <script type=\"text/javascript\" src=\"libraries/p5.speech.js\"></script>\n\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n  <meta charset=\"utf-8\" />\n\n</head>\n\n<body>\n\n  <h1>Chatbot</h1>\n\n  <p>\n    say: <input id=\"user_input\"></input>\n    <button id=\"submit\">submit</button>\n  </p>\n\n  <p>\n    reply: <span id=\"output\"></span>\n  </p>\n\n\n  <script src=\"sketch.js\"></script>\n</body>\n\n</html>\n\n\n\n\n\n\n\n<!--\n<!DOCTYPE html>\n<html>\n\n<head>\n\t<meta charset=\"UTF-8\">\n\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n\t<title>chatbot1</title>\n\t<script type=\"text/javascript\" src=\"https://unpkg.com/rivescript@latest/dist/rivescript.min.js\"></script>\n\t<script\n\t  src=\"https://code.jquery.com/jquery-3.2.1.min.js\"\n\t  integrity=\"sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=\"\n\t  crossorigin=\"anonymous\"></script>\n\t<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/p5.js\"></script>\n\t<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/addons/p5.dom.js\"></script>\n\t<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/addons/p5.sound.js\"></script>\n\t<script type=\"text/javascript\" src=\"libraries/p5.speech.js\"></script>\n</head>\n\n<body>\n  \n\t<h1>Chatbot</h1>\n\n\t<p>\n\t\tsay: <input id=\"user_input\"></input>\n\t\t<button id=\"submit\">submit</button>\n\t</p>\n\n\t<p>\n\t\treply: <span id=\"output\"></span>\n\t</p>\n\n\n    <script src=\"sketch.js\"></script>\n\n</body>\n\n</html>\n-->",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "5c11b6b00d2c594eca7ffd2c",
        "createdAt": "2018-12-13T01:47:06.898Z",
        "updatedAt": "2018-12-13T01:47:06.898Z",
        "id": "5c11b6b00d2c594eca7ffd2c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "5c11b6b00d2c594eca7ffd2d",
        "createdAt": "2018-12-13T01:47:06.898Z",
        "updatedAt": "2018-12-13T01:47:06.898Z",
        "id": "5c11b6b00d2c594eca7ffd2d"
      },
      {
        "name": "libraries",
        "content": "",
        "children": [
          "5c11b85bfc24ba0015a7ee48"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "5c11b84cfc24ba0015a7ee47",
        "updatedAt": "2018-12-13T01:47:06.898Z",
        "createdAt": "2018-12-13T01:47:06.898Z",
        "id": "5c11b84cfc24ba0015a7ee47"
      },
      {
        "name": "p5.speech.js",
        "content": "/*! p5.speech.js v0.0.1 2015-06-12 */\n/* updated v0.0.2 2017-10-17 */\n/**\n * @module p5.speech\n * @submodule p5.speech\n * @for p5.speech\n * @main\n */\n/**\n *  p5.speech\n *  R. Luke DuBois (dubois@nyu.edu)\n *  ABILITY Lab / Brooklyn Experimental Media Center\n *  New York University\n *  The MIT License (MIT).\n *  \n *  https://github.com/IDMNYU/p5.js-speech\n *\n *  Web Speech API: https://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html\n *  Web Speech Recognition API: https://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html\n */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd)\n    define('p5.speech', ['p5'], function (p5) { (factory(p5));});\n  else if (typeof exports === 'object')\n    factory(require('../p5'));\n  else\n    factory(root['p5']);\n}(this, function (p5) {\n// =============================================================================\n//                         p5.Speech\n// =============================================================================\n\n\n  /**\n   * Base class for a Speech Synthesizer\n   *\n   * @class p5.Speech\n   * @constructor\n   */\n  p5.Speech = function(_dv, _callback) {\n\n    //\n    // speech synthesizers consist of a single synthesis engine\n    // per window instance, and a variable number of 'utterance'\n    // objects, which can be cached and re-used for, e.g.\n    // auditory UI.\n    //\n    // this implementation assumes a monolithic (one synth, \n    // one phrase at a time) system.\n    //\n\n    // make a speech synthizer (this will load voices):\n    this.synth = window.speechSynthesis;\n\n    // make an utterance to use with this synthesizer:\n    this.utterance = new SpeechSynthesisUtterance();\n\n    this.isLoaded = 0; // do we have voices yet?\n\n    // do we queue new utterances upon firing speak() \n    // or interrupt what's speaking:\n    this.interrupt = false; \n\n    // callback properties to be filled in within the p5 sketch\n    // if the author needs custom callbacks:\n    this.onLoad; // fires when voices are loaded and synth is ready\n    this.onStart; // fires when an utterance begins...\n    this.onPause; // ...is paused...\n    this.onResume; // ...resumes...\n    this.onEnd; // ...and ends.\n\n    this.voices = []; // array of available voices (dependent on browser/OS)\n\n    // first parameter of constructor is an initial voice selector\n    this.initvoice;\n    if(_dv !== undefined) this.initvoice=_dv;\n    if(_callback !== undefined) this.onLoad =_callback;\n\n    var that = this; // some bullshit\n\n    // onvoiceschanged() fires automatically when the synthesizer\n    // is configured and has its voices loaded.  you don't need\n    // to wait for this if you're okay with the default voice.\n    // \n    // we use this function to load the voice array and bind our\n    // custom callback functions.\n    window.speechSynthesis.onvoiceschanged = function() {\n      if(that.isLoaded==0) { // run only once\n        that.voices = window.speechSynthesis.getVoices();\n        that.isLoaded = 1; // we're ready\n        console.log(\"p5.Speech: voices loaded!\");\n\n        if(that.initvoice!=undefined) {\n          that.setVoice(that.initvoice); // set a custom initial voice\n          console.log(\"p5.Speech: initial voice: \" + that.initvoice);\n        }\n\n        // fire custom onLoad() callback, if it exists:\n        if(that.onLoad!=undefined) that.onLoad();\n\n        //\n        // bind other custom callbacks:\n        //\n\n        that.utterance.onstart = function(e) {\n          //console.log(\"STARTED\");\n          if(that.onStart!=undefined) that.onStart(e);     \n        };\n        that.utterance.onpause = function(e) {\n          //console.log(\"PAUSED\");\n          if(that.onPause!=undefined) that.onPause(e);\n        };\n        that.utterance.onresume = function(e) {\n          //console.log(\"RESUMED\");\n          if(that.onResume!=undefined) that.onResume(e);\n        };\n        that.utterance.onend = function(e) {\n          //console.log(\"ENDED\");\n          if(that.onEnd!=undefined) that.onEnd(e); \n        };\n      }\n    };\n\n  };     // end p5.Speech constructor\n\n\n  // listVoices() - dump voice names to javascript console:\n  p5.Speech.prototype.listVoices = function() {\n    if(this.isLoaded)\n    {\n      for(var i = 0;i<this.voices.length;i++)\n      {\n        console.log(this.voices[i].name);\n      }\n    }\n    else\n    {\n    \tconsole.log(\"p5.Speech: voices not loaded yet!\")\n    }\n  };\n\n  // setVoice() - assign voice to speech synthesizer, by name\n  // (using voices found in the voices[] array), or by index.\n  p5.Speech.prototype.setVoice = function(_v) {\n    // type check so you can set by label or by index:\n    if(typeof(_v)=='string') this.utterance.voice = this.voices.filter(function(v) { return v.name == _v; })[0];\n    else if(typeof(_v)=='number') this.utterance.voice = this.voices[Math.min(Math.max(_v,0),this.voices.length-1)];\n  };\n\n  // volume of voice. API range 0.0-1.0.\n  p5.Speech.prototype.setVolume = function(_v) {\n    this.utterance.volume = Math.min(Math.max(_v, 0.0), 1.0);\n  };\n\n  // rate of voice.  not all voices support this feature.\n  // API range 0.1-2.0.  voice will crash out of bounds.\n  p5.Speech.prototype.setRate = function(_v) {\n    this.utterance.rate = Math.min(Math.max(_v, 0.1), 2.0);\n  };\n\n  // pitch of voice.  not all voices support this feature.\n  // API range >0.0-2.0.  voice will crash out of bounds.\n  p5.Speech.prototype.setPitch = function(_v) {\n    this.utterance.pitch = Math.min(Math.max(_v, 0.01), 2.0);\n  };\n\n  // sets the language of the voice.\n  p5.Speech.prototype.setLang = function(_lang) {\n    this.utterance.lang = _lang;\n}\n\n  // speak a phrase through the current synthesizer:\n  p5.Speech.prototype.speak = function(_phrase) {\n    if(this.interrupt) this.synth.cancel();\n    this.utterance.text = _phrase;\n\n    this.synth.speak(this.utterance);\n  };\n\n  // not working...\n  p5.Speech.prototype.pause = function() {\n    this.synth.pause();\n  };\n\n  // not working...\n  p5.Speech.prototype.resume = function() {\n    this.synth.resume();\n  };\n\n  // stop current utterance:\n  p5.Speech.prototype.stop = function() {\n    // not working...\n    //this.synth.stop();\n    this.synth.cancel();\n  };\n\n  // kill synthesizer completely, clearing any queued utterances:\n  p5.Speech.prototype.cancel = function() {\n    this.synth.cancel(); // KILL SYNTH\n  };\n\n  // Setting callbacks with functions instead\n  p5.Speech.prototype.started = function(_cb) {\n   this.onStart = _cb;\n  }\n\n  p5.Speech.prototype.ended = function(_cb) {\n    this.onEnd = _cb;\n  }\n\n  p5.Speech.prototype.paused = function(_cb) {\n    this.onPause = _cb;\n  }\n\n  p5.Speech.prototype.resumed = function(_cb) {\n    this.onResume = _cb;\n  }\n\n// =============================================================================\n//                         p5.SpeechRec\n// =============================================================================\n\n\n  /**\n   * Base class for a Speech Recognizer\n   *\n   * @class p5.SpeechRec\n   * @constructor\n   */\n  p5.SpeechRec = function(_lang, _callback) {\n\n    //\n    // speech recognition consists of a recognizer object per \n    // window instance that returns a JSON object containing\n    // recognition.  this JSON object grows when the synthesizer\n    // is in 'continuous' mode, with new recognized phrases\n    // appended into an internal array.\n    //\n    // this implementation returns the full JSON, but also a set\n    // of simple, query-ready properties containing the most\n    // recently recognized speech.\n    //\n\n    // make a recognizer object.\n    if('webkitSpeechRecognition' in window) {\n      this.rec = new webkitSpeechRecognition();\n    }\n    else {\n      this.rec = new Object();\n      console.log(\"p5.SpeechRec: webkitSpeechRecognition not supported in this browser.\");\n    }\n\n    // first parameter is language model (defaults to empty=U.S. English)\n    // no list of valid models in API, but it must use BCP-47.\n    // here's some hints:\n    // http://stackoverflow.com/questions/14257598/what-are-language-codes-for-voice-recognition-languages-in-chromes-implementati\n    if(_lang !== undefined) this.rec.lang=_lang;\n\n    // callback properties to be filled in within the p5 sketch\n    // if the author needs custom callbacks:\n    this.onResult; // fires when something has been recognized\n    this.onStart; // fires when the recognition system is started...\n    this.onError; // ...has a problem (e.g. the mic is shut off)...\n    this.onEnd; // ...and ends (in non-continuous mode).\n    if(_callback !== undefined) this.onResult=_callback;\n\n    // recognizer properties:\n\n    // continous mode means the object keeps recognizing speech,\n    // appending new tokens to the internal JSON.\n    this.continuous = false; \n    // interimResults means the object will report (i.e. fire its\n    // onresult() callback) more frequently, rather than at pauses\n    // in microphone input.  this gets you quicker, but less accurate,\n    // results.\n    this.interimResults = false;\n\n    // result data:\n\n    // resultJSON:\n    // this is a full JSON returned by onresult().  it consists of a \n    // SpeechRecognitionEvent object, which contains a (wait for it)\n    // SpeechRecognitionResultList.  this is an array.  in continuous\n    // mode, it will be appended to, not cleared.  each element is a \n    // SpeechRecognition result, which contains a (groan)\n    // SpeechRecognitionAlternative, containing a 'transcript' property.\n    // the 'transcript' is the recognized phrase.  have fun.\n    this.resultJSON; \n    // resultValue:\n    // validation flag which indicates whether the recognizer succeeded.  \n    // this is *not* a metric of speech clarity, but rather whether the\n    // speech recognition system successfully connected to and received\n    // a response from the server.  you can construct an if() around this\n    // if you're feeling worried.\n    this.resultValue; \n    // resultValue:\n    // the 'transcript' of the most recently recognized speech as a simple\n    // string.  this will be blown out and replaced at every firing of the\n    // onresult() callback.\n    this.resultString; \n    // resultConfidence:\n    // the 'confidence' (0-1) of the most recently recognized speech, e.g.\n    // that it reflects what was actually spoken.  you can use this to filter\n    // out potentially bogus recognition tokens.\n    this.resultConfidence; \n\n    var that = this; // some bullshit\n\n    // onresult() fires automatically when the recognition engine\n    // detects speech, or times out trying.\n    // \n    // it fills up a JSON array internal to the webkitSpeechRecognition\n    // object.  we reference it over in our struct here, and also copy \n    // out the most recently detected phrase and confidence value.\n    this.rec.onresult = function(e) { \n      that.resultJSON = e; // full JSON of callback event\n      that.resultValue = e.returnValue; // was successful?\n      // store latest result in top-level object struct\n      that.resultString = e.results[e.results.length-1][0].transcript.trim();\n      that.resultConfidence = e.results[e.results.length-1][0].confidence;\n      if(that.onResult!=undefined) that.onResult();\n    };\n\n    // fires when the recognition system starts (i.e. when you 'allow'\n    // the mic to be used in the browser).\n    this.rec.onstart = function(e) {\n      if(that.onStart!=undefined) that.onStart(e);\n    };\n    // fires on a client-side error (server-side errors are expressed \n    // by the resultValue in the JSON coming back as 'false').\n    this.rec.onerror = function(e) {\n      if(that.onError!=undefined) that.onError(e);\n    };\n    // fires when the recognition finishes, in non-continuous mode.\n    this.rec.onend = function() {\n      if(that.onEnd!=undefined) that.onEnd();\n    };\n\n  }; // end p5.SpeechRec constructor\n\n  // start the speech recognition engine.  this will prompt a \n  // security dialog in the browser asking for permission to \n  // use the microphone.  this permission will persist throughout\n  // this one 'start' cycle.  if you need to recognize speech more\n  // than once, use continuous mode rather than firing start() \n  // multiple times in a single script.\n  p5.SpeechRec.prototype.start = function(_continuous, _interim) {\n    if('webkitSpeechRecognition' in window) {\n      if(_continuous !== undefined) this.continuous = _continuous;\n      if(_interim !== undefined) this.interimResults = _interim;\n      this.rec.continuous = this.continuous;\n      this.rec.interimResults = this.interimResults;\n      this.rec.start();\n    }\n  };\n\n}));\n\n/*\ntodo:\n* fix callbacks (pause, resume) in synthesizer.\n* support speech grammar models for scoped auditory UI.\n* support markdown, boundaries, etc for better synthesis tracking.\n* support utterance parser for long phrases.\n*/\n\n// EOF\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "5c11b85bfc24ba0015a7ee48",
        "updatedAt": "2018-12-13T01:47:06.898Z",
        "createdAt": "2018-12-13T01:47:06.898Z",
        "id": "5c11b85bfc24ba0015a7ee48"
      },
      {
        "name": "brain.txt",
        "content": "// Chatbot's brain\n! version = 2.0\n\n! sub who's = who is\n\n+ *\n- try saying knock knock\n\n+ [*] knock knock [*]\n- Who's there?\n\n+ *\n% who is there\n- <star1> who\n\n+ *\n% * who\n- hahahahahahah\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "5c11b8d2fc24ba0015a7ee49",
        "updatedAt": "2018-12-13T01:47:06.898Z",
        "createdAt": "2018-12-13T01:47:06.898Z",
        "id": "5c11b8d2fc24ba0015a7ee49"
      }
    ],
    "id": "SkfWdVJl4"
  },
  {
    "name": "Clear Fill v1",
    "_id": "SNzElfXml",
    "updatedAt": "2021-12-08T05:12:00.135Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61b039e187e4187d5b5664fc",
          "61b039e187e4187d5b5664fb",
          "61b039e187e4187d5b5664fd"
        ],
        "fileType": "folder",
        "_id": "61b039e187e4187d5b5664fe",
        "createdAt": "2021-12-08T05:12:00.135Z",
        "updatedAt": "2021-12-08T05:12:00.135Z",
        "id": "61b039e187e4187d5b5664fe"
      },
      {
        "name": "sketch.js",
        "content": "let layer1, layer2\n\nlet hue = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  layer1 = createGraphics(width, height);\n  layer2 = createGraphics(width, height);\n  \n  layer1.colorMode(HSB);\n}\n\nfunction draw() {\n  //background(0);\n  \n  layer1.background(hue++, 50, 100);\n  \n  if(hue > 360) hue = 0;\n  \n  layer2.fill(255, 255);\n  layer2.circle(width/2, height/2, 100);\n  layer2.fill(255, 0);\n  // layer2.noFill();\n  layer2.circle(width/2, height/2, 50);\n\n  \n  image(layer1, 0, 0);\n  image(layer2, -width/2+mouseX, -height/2+mouseY);\n}",
        "children": [],
        "fileType": "file",
        "_id": "61b039e187e4187d5b5664fb",
        "isSelectedFile": true,
        "createdAt": "2021-12-08T05:12:00.135Z",
        "updatedAt": "2021-12-08T05:12:00.135Z",
        "id": "61b039e187e4187d5b5664fb"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61b039e187e4187d5b5664fc",
        "createdAt": "2021-12-08T05:12:00.135Z",
        "updatedAt": "2021-12-08T05:12:00.135Z",
        "id": "61b039e187e4187d5b5664fc"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61b039e187e4187d5b5664fd",
        "createdAt": "2021-12-08T05:12:00.135Z",
        "updatedAt": "2021-12-08T05:12:00.135Z",
        "id": "61b039e187e4187d5b5664fd"
      }
    ],
    "createdAt": "2021-12-08T05:12:00.135Z",
    "id": "SNzElfXml"
  },
  {
    "name": "Clear Fill v2",
    "_id": "eeRJjy1qq",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61b03ea287e4187d5b566500",
          "61b03ea287e4187d5b566501",
          "61b03ea287e4187d5b566502"
        ],
        "fileType": "folder",
        "_id": "61b03ea287e4187d5b5664ff",
        "createdAt": "2021-12-08T06:23:10.005Z",
        "updatedAt": "2021-12-08T06:23:10.005Z",
        "isSelectedFile": false,
        "id": "61b03ea287e4187d5b5664ff"
      },
      {
        "name": "sketch.js",
        "content": "// inneficient way to use fill() as a clear()\n// by @ktorn\n\nlet layer1, layer2;\nlet hue = 0;\nlet transparencyColor;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  transparencyColor = color(0, 255, 0); // use \"green screen\" for transparency\n\n  layer1 = createGraphics(width, height);\n  layer2 = createGraphics(100, 100);\n\n  layer1.colorMode(HSB);\n  layer1.noStroke();\n  \n  layer2.noStroke();\n  \n  updateLayer1();\n  updateLayer2();\n}\n\nfunction draw() {\n  \n  // actual canvas background is black\n  background(0);\n\n  // render layer1\n  image(layer1, 0, 0);\n  \n  // render layer2 - which follows the mouse movement\n  image(layer2, -layer2.width / 2 + mouseX, -layer2.height / 2 + mouseY);\n  \n}\n\nfunction updateLayer1() {\n  // layer 1 (base) draws a horizontal rainbow\n  for(let i = 0; i < layer1.height; i += layer1.height/7) {\n    layer1.fill(hue, 50, 100);\n    layer1.rect(0, i, layer1.width, layer1.height/7);\n    hue += 360/7;\n  }\n  if (hue > 360) hue = 0;\n}\n\n\nfunction updateLayer2() {\n  // layer2 draws 2 concentric circles.\n  \n  // the outer circle is white\n  layer2.fill(255, 255);\n  layer2.circle(layer2.width / 2, layer2.height / 2, 100);\n  \n  // the inner circle should be filled with a cross-layer transparency\n  // so that we can see through to layer1 (through the white of the outer circle)\n  layer2.fill(transparencyColor);\n  layer2.circle(layer2.width / 2, layer2.height / 2, 50);\n\n  // this replaces the temporary 'transparencyColor' with actual layer transparency\n  processTransparency(layer2, transparencyColor);\n}\n\n\n// this function takes a p5.Graphics and transparency colour\n// and sets any pixels that match that colour to be fully transparent\nfunction processTransparency(g, tColor) {\n  g.loadPixels();\n\n  let tx = tColor.levels; // transparency 'screen' colour\n  let px;\n\n  for (let i = 0; i < g.width; i++) {\n    for (let j = 0; j < g.height; j++) {\n      px = g.get(i, j);\n      \n      if(px.toString() == tx.toString()) {\n        g.set(i, j, color(0, 0));\n      }\n    }\n  }\n\n  g.updatePixels();\n}",
        "children": [],
        "fileType": "file",
        "_id": "61b03ea287e4187d5b566501",
        "isSelectedFile": true,
        "createdAt": "2021-12-08T06:23:10.005Z",
        "updatedAt": "2021-12-08T06:23:10.005Z",
        "id": "61b03ea287e4187d5b566501"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61b03ea287e4187d5b566500",
        "createdAt": "2021-12-08T06:23:10.005Z",
        "updatedAt": "2021-12-08T06:23:10.005Z",
        "isSelectedFile": false,
        "id": "61b03ea287e4187d5b566500"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61b03ea287e4187d5b566502",
        "createdAt": "2021-12-08T06:23:10.005Z",
        "updatedAt": "2021-12-08T06:23:10.005Z",
        "isSelectedFile": false,
        "id": "61b03ea287e4187d5b566502"
      }
    ],
    "createdAt": "2021-12-08T05:12:02.513Z",
    "updatedAt": "2021-12-08T06:23:10.005Z",
    "id": "eeRJjy1qq"
  },
  {
    "name": "Clear Fill v3",
    "_id": "IwynEr8g5",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61b077cd256a7954656d568c",
          "61b077cd256a7954656d568d",
          "61b077cd256a7954656d568e"
        ],
        "fileType": "folder",
        "_id": "61b077cd256a7954656d568b",
        "createdAt": "2021-12-10T05:23:33.674Z",
        "updatedAt": "2021-12-10T05:23:33.674Z",
        "isSelectedFile": false,
        "id": "61b077cd256a7954656d568b"
      },
      {
        "name": "sketch.js",
        "content": "// draws a shape whose 'fill' actually clears the pixels, creating a transparency which reveals the layer beneath it\n// v3 is a vast improvement on v2, thanks to @sableraph for letting me know about the erase() function\n//\n// code by @ktorn\n\nlet layer1, layer2\n\nlet hue = 0;\n\nlet rainbowStripes = 7;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  layer1 = createGraphics(width, height);\n  layer2 = createGraphics(width, height);\n  \n  layer1.colorMode(HSB);\n  layer1.noStroke();\n}\n\nfunction draw() {\n  //background(0);\n  \n  hue = 0;\n  \n  // layer 1 (base) draws a horizontal rainbow\n  for(let i = 0; i < layer1.height; i += layer1.height/rainbowStripes) {\n    layer1.fill(hue, 50, 100);\n    layer1.rect(0, i, layer1.width, layer1.height/rainbowStripes);\n    hue += 360/rainbowStripes;\n  }\n  \n  layer2.noStroke();\n  layer2.fill(255, 255);\n  layer2.circle(width/2, height/2, 100);\n  layer2.erase();\n  layer2.circle(width/2, height/2, 50);\n  layer2.noErase();\n  \n  image(layer1, 0, 0);\n  image(layer2, -width/2+mouseX, -height/2+mouseY);\n}",
        "children": [],
        "fileType": "file",
        "_id": "61b077cd256a7954656d568d",
        "isSelectedFile": true,
        "createdAt": "2021-12-10T05:23:33.674Z",
        "updatedAt": "2021-12-10T05:23:33.674Z",
        "id": "61b077cd256a7954656d568d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61b077cd256a7954656d568c",
        "createdAt": "2021-12-10T05:23:33.674Z",
        "updatedAt": "2021-12-10T05:23:33.674Z",
        "isSelectedFile": false,
        "id": "61b077cd256a7954656d568c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61b077cd256a7954656d568e",
        "createdAt": "2021-12-10T05:23:33.674Z",
        "updatedAt": "2021-12-10T05:23:33.674Z",
        "isSelectedFile": false,
        "id": "61b077cd256a7954656d568e"
      }
    ],
    "createdAt": "2021-12-08T09:15:58.018Z",
    "updatedAt": "2021-12-10T05:23:33.674Z",
    "id": "IwynEr8g5"
  },
  {
    "name": "colony - teia edition",
    "_id": "eHUCQNQBV",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6287474f355a4a59d786204e",
          "6287474f355a4a59d786204f",
          "6287474f355a4a59d7862050",
          "6287474f355a4a59d7862051"
        ],
        "fileType": "folder",
        "_id": "6287474f355a4a59d786204d",
        "updatedAt": "2022-05-20T08:05:10.912Z",
        "createdAt": "2022-05-20T08:05:10.912Z",
        "isSelectedFile": false,
        "id": "6287474f355a4a59d786204d"
      },
      {
        "name": "sketch.js",
        "content": "/* inspired in bubble-intercepting concept by Casey Reas\n*   \n*  code by ktorn\n*\n*  strokes start white, and gain darker colour over time\n*  creating the effect of depth\n*  bubbles decrease over time, until none are left\n*\n* TODO: * make it fully responsive (ditch square for golden ratio)\n*         (add bubbles until right 'ratio' achieved before running simulation)\n*       * make it light/dark theme responsive\n*       * Immediately remove bubbles whose centers fall within hidden TEIA type\n          (or which are entirely contained within such type, or make them bounce off of the type boundaries)\n          (possibly try only with 'T')\n*/\n\n\nvar totalBubbles;\nvar bubbles;\n\nfunction setup() {\n  totalBubbles = 500;\n  var w = windowWidth;\n\tvar h = windowHeight;\n\t\n  var virtSize;\n\t\n  // take smaller screen dimension\n  // create a square 'virtual' canvas based on it\n  w > h ? virtSize = h : virtSize = w;\n\n  // actual canvas takes up all screen\n\tcreateCanvas(windowWidth, windowHeight);\n  \n    background(255);\n\t\n\tvar bubbleSize = virtSize / 10;\n\t\n\tbubbles = [];\n  \n  var wPad = floor((w - virtSize)/2);\n  var hPad = floor((h - virtSize)/2);\n\n\tfor (var i = 0; i < totalBubbles; i++) {\n    // create bubbles, randomly positioned within virtual canvas\n\t\tbubbles[i] = createRandomBubble(bubbleSize, wPad, hPad, virtSize);\n\t}\n}\n\nfunction draw() {\n\t\n\tvar overlaps = 0;\n\t\n  // noprotect\n\tfor (var i = 0; i < bubbles.length; i++) {\n\t\tbubbles[i].move();\n    for(var j = i+1; j < bubbles.length; j++) {\n      var b1 = bubbles[i];\n      var b2 = bubbles[j];\n      if(dist(b1.x, b1.y, b2.x, b2.y) < b1.size) {\n        stroke(map(bubbles.length, 0, totalBubbles, 100, 255));\n        line(b1.x, b1.y, b2.x, b2.y);\n\t\t\t\toverlaps++;\n      }\n    }\n\t}\n\n  bubbles.pop();\n\t\n  // stop looping when no more bubbles\n\tif(bubbles.length == 0) {\n\t\tnoLoop();\n\t}\n  \n}\n\nfunction createRandomBubble(bubbleSize, wPad, hPad, virtSize) {\n  \n\treturn new Bubble(random(wPad, virtSize + wPad),\n\t\t                random(hPad, virtSize + hPad),\n\t\t\t\t\t\t\t\t\t\tbubbleSize);\n}",
        "children": [],
        "fileType": "file",
        "_id": "6287474f355a4a59d7862050",
        "updatedAt": "2022-05-20T08:05:10.912Z",
        "createdAt": "2022-05-20T08:05:10.912Z",
        "isSelectedFile": true,
        "id": "6287474f355a4a59d7862050"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n\t\t<script src=\"bubble.js\"></script>\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n\t\t<center>\n    \t<script src=\"sketch.js\"></script>\n\t\t</center>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6287474f355a4a59d786204f",
        "updatedAt": "2022-05-20T08:05:10.912Z",
        "createdAt": "2022-05-20T08:05:10.912Z",
        "isSelectedFile": false,
        "id": "6287474f355a4a59d786204f"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n\theight: 100%;\n}\n\ncanvas {\n  display: block;\n}\n\nbody {\n  margin: 0;\n  display: flex;\n\n  /* This centers our sketch horizontally. */\n  justify-content: center;\n\n  /* This centers our sketch vertically. */\n  align-items: center;\n}",
        "children": [],
        "fileType": "file",
        "_id": "6287474f355a4a59d7862051",
        "updatedAt": "2022-05-20T08:05:10.912Z",
        "createdAt": "2022-05-20T08:05:10.912Z",
        "isSelectedFile": false,
        "id": "6287474f355a4a59d7862051"
      },
      {
        "name": "bubble.js",
        "content": "class Bubble {\n\tconstructor(x, y, size) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.size = size;\n\t}\n\t\n\tshow() {\n\t\tfill(0, 50);\n\t\tellipse(this.x, this.y, this.size, this.size);\n\t}\n\t\n\tmove() {\n\t\tthis.x = this.x + random(-2, 2);\n\t\tthis.y = this.y + random(-2, 2);\n\t}\n}",
        "children": [],
        "fileType": "file",
        "_id": "6287474f355a4a59d786204e",
        "updatedAt": "2022-05-20T08:05:10.912Z",
        "createdAt": "2022-05-20T08:05:10.912Z",
        "isSelectedFile": false,
        "id": "6287474f355a4a59d786204e"
      }
    ],
    "createdAt": "2022-05-20T07:46:23.796Z",
    "updatedAt": "2022-05-20T08:05:10.912Z",
    "id": "eHUCQNQBV"
  },
  {
    "name": "color rects",
    "_id": "uYNZ7W2C7",
    "updatedAt": "2022-11-19T03:41:52.567Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63784dff2f67173a76a68236",
          "63784dff2f67173a76a68235",
          "63784dff2f67173a76a68237"
        ],
        "fileType": "folder",
        "_id": "63784dff2f67173a76a68238",
        "createdAt": "2022-11-19T03:41:52.567Z",
        "updatedAt": "2022-11-19T03:41:52.567Z",
        "id": "63784dff2f67173a76a68238"
      },
      {
        "name": "sketch.js",
        "content": "let startSize;\nlet endSize;\nlet displacementAmount;\nlet maxRects;\nlet hue;\n\nfunction setup() {\n  createCanvas(400, 400);\n  rectMode(CENTER);\n  colorMode(HSB);\n  \n  hue = random(360);\n  noStroke();\n  \n  startSize = width - 50;\n  endSize = 50;\n  maxRects = 5;\n  displacementAmount = (startSize - endSize) / maxRects;\n}\n\nfunction draw() {\n  background(220);\n  \n  let x = width/2;\n  let y = height / 2;\n  \n  let b = 90;\n  let s = 100;\n  \n  for(let i = startSize; i > endSize; i -= displacementAmount) {\n    fill(hue, s, b);\n    rect(x, y, i, i, 10);\n    x += 20;\n    y += 20;\n    s -= 20;\n  }\n}\n\nfunction mousePressed() {\n  hue = random(360);\n}",
        "children": [],
        "fileType": "file",
        "_id": "63784dff2f67173a76a68235",
        "isSelectedFile": true,
        "createdAt": "2022-11-19T03:41:52.567Z",
        "updatedAt": "2022-11-19T03:41:52.567Z",
        "id": "63784dff2f67173a76a68235"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63784dff2f67173a76a68236",
        "createdAt": "2022-11-19T03:41:52.567Z",
        "updatedAt": "2022-11-19T03:41:52.567Z",
        "id": "63784dff2f67173a76a68236"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63784dff2f67173a76a68237",
        "createdAt": "2022-11-19T03:41:52.567Z",
        "updatedAt": "2022-11-19T03:41:52.567Z",
        "id": "63784dff2f67173a76a68237"
      }
    ],
    "createdAt": "2022-11-19T03:41:52.567Z",
    "id": "uYNZ7W2C7"
  },
  {
    "name": "Column circle packing",
    "_id": "Osh_-59V6",
    "updatedAt": "2023-01-31T14:06:03.449Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "627163636afe51e3324ad6d2",
          "627163636afe51e3324ad6d1",
          "627163636afe51e3324ad6d3"
        ],
        "fileType": "folder",
        "_id": "627163636afe51e3324ad6d4",
        "isSelectedFile": false,
        "createdAt": "2023-01-31T14:06:03.449Z",
        "updatedAt": "2023-01-31T14:06:03.449Z",
        "id": "627163636afe51e3324ad6d4"
      },
      {
        "name": "sketch.js",
        "content": "// Saw something similar yesterday on @sableraph's stream\n// and wanted to replicate it. it kind of works.\n// did it from memory, so not sure how close it's to the original, or even who was the original author.\n//\n// by @ktorn\n// 04.05.2022\n\nfunction setup() {\n  createCanvas(800, 200);\n  fill(255);\n  stroke(255);\n}\n\nfunction draw() {\n  background(0);\n  \n  circle(height/2, height/2, height);\n  getNextColumn(height, height/2, 1);\n}\n\nfunction getNextColumn(canvasHeight, prevX, colCount) {\n  \n  if(prevX > width) {\n    return;\n  }\n  \n  let diameter = canvasHeight / (colCount + 1);\n  let radius = diameter / 2;\n  \n  let prevDiameter = canvasHeight / colCount;\n  let prevRadius = prevDiameter / 2;\n  \n  let h = prevRadius + radius;\n  let c1 = prevRadius / (colCount + 1);\n  \n  // good old pythagorean theorem seems to help here\n  \n  let c2 = sqrt(h**2 - c1**2);\n  \n  let x = prevX + c2;\n  \n  let d = dist(prevX, prevRadius, x, radius);\n\n  \n  for(let i = 0; i < colCount + 1; i++) {\n    circle(x, (i * radius*2) + radius, diameter);\n  }\n  \n  \n  // only did this sketch because I knew I'd use recursion\n  getNextColumn(canvasHeight, x, colCount+1);\n  \n} \n\n",
        "children": [],
        "fileType": "file",
        "_id": "627163636afe51e3324ad6d1",
        "isSelectedFile": true,
        "createdAt": "2023-01-31T14:06:03.449Z",
        "updatedAt": "2023-01-31T14:06:03.449Z",
        "id": "627163636afe51e3324ad6d1"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "627163636afe51e3324ad6d2",
        "isSelectedFile": false,
        "createdAt": "2023-01-31T14:06:03.449Z",
        "updatedAt": "2023-01-31T14:06:03.449Z",
        "id": "627163636afe51e3324ad6d2"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "627163636afe51e3324ad6d3",
        "isSelectedFile": false,
        "createdAt": "2023-01-31T14:06:03.449Z",
        "updatedAt": "2023-01-31T14:06:03.449Z",
        "id": "627163636afe51e3324ad6d3"
      }
    ],
    "createdAt": "2022-05-04T06:22:50.357Z",
    "id": "Osh_-59V6"
  },
  {
    "name": "Column circle v2",
    "_id": "sbzc_aA5A",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63d903f4547a2d9c7ec026ff",
          "63d903f4547a2d9c7ec02700",
          "63d903f4547a2d9c7ec02701"
        ],
        "fileType": "folder",
        "_id": "63d903f4547a2d9c7ec026fe",
        "isSelectedFile": false,
        "createdAt": "2023-02-28T06:43:36.227Z",
        "updatedAt": "2023-02-28T06:43:36.227Z",
        "id": "63d903f4547a2d9c7ec026fe"
      },
      {
        "name": "sketch.js",
        "content": "// Saw something similar yesterday on @sableraph's stream\n// and wanted to replicate it. it kind of works.\n// did it from memory, so not sure how close it's to the original, or even who was the original author.\n//\n// 28.02.2023 update: it was a tweet by @MauriceMeilleur:\n// https://twitter.com/MauriceMeilleur/status/1519367044721954817\n// original work by Asao Tokolo\n//\n// by @ktorn\n// 04.05.2022\n\nconst WINDOW_RATIO = 2.11;\nconst H_MARGIN = 0.08;\nconst V_MARGIN = 0.33;\nconst CANVAS_RATIO = 5.11\n\nlet originX = 0;\nlet originY = 0;\nlet w = 1;\nlet y = 1;\n\nfunction setup() {\n  createCanvas(1, 1);\n  fill(255);\n  noStroke();\n  windowResized();\n  noLoop();\n}\n\nfunction draw() {\n  background(0);\n  \n  translate(originX, originY);\n  \n  circle(h/2, h/2, h);\n  getNextColumn(h, h/2, 1);\n}\n\nfunction getNextColumn(canvasHeight, prevX, colCount) {\n  \n  if(prevX > w) {\n    return;\n  }\n  \n  let diameter = canvasHeight / (colCount + 1);\n  let radius = diameter / 2;\n  \n  let prevDiameter = canvasHeight / colCount;\n  let prevRadius = prevDiameter / 2;\n  \n  let h = prevRadius + radius;\n  let c1 = prevRadius / (colCount + 1);\n  \n  // good old pythagorean theorem seems to help here\n  \n  let c2 = sqrt(h**2 - c1**2);\n  \n  let x = prevX + c2;\n  \n  let d = dist(prevX, prevRadius, x, radius);\n\n  \n  for(let i = 0; i < colCount + 1; i++) {\n    circle(x, (i * radius*2) + radius, diameter);\n  }\n  \n  \n  // only did this sketch because I knew I'd use recursion\n  getNextColumn(canvasHeight, x, colCount+1);\n}\n\n\nfunction calculateDimensions() {\n  \n  originX = width * H_MARGIN;\n  originY = height * V_MARGIN;\n  \n  w = width - (width * H_MARGIN * 2);\n  h = height - (height * V_MARGIN * 2);\n  \n//   print(\"width: \" + width);\n//   print(\"height: \" + height);\n  \n//   print(\"w: \" + w);\n//   print(\"h: \" + h);\n}\n\nfunction windowResized() {\n  \n  let ratio = windowWidth / windowHeight;\n  \n  if(ratio < WINDOW_RATIO) {\n    resizeCanvas(windowWidth, windowWidth / WINDOW_RATIO);\n  } else {\n    resizeCanvas(windowHeight * WINDOW_RATIO, windowHeight)\n  }\n  \n  calculateDimensions();\n}\n\nfunction keyPressed() {\n  if (key == 's') {\n    save(\"circles\");\n  }\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "63d903f4547a2d9c7ec02700",
        "isSelectedFile": true,
        "createdAt": "2023-02-28T06:43:36.227Z",
        "updatedAt": "2023-02-28T06:43:36.227Z",
        "id": "63d903f4547a2d9c7ec02700"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/p5.js-svg@1.3.1\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63d903f4547a2d9c7ec026ff",
        "isSelectedFile": false,
        "createdAt": "2023-02-28T06:43:36.227Z",
        "updatedAt": "2023-02-28T06:43:36.227Z",
        "id": "63d903f4547a2d9c7ec026ff"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63d903f4547a2d9c7ec02701",
        "isSelectedFile": false,
        "createdAt": "2023-02-28T06:43:36.227Z",
        "updatedAt": "2023-02-28T06:43:36.227Z",
        "id": "63d903f4547a2d9c7ec02701"
      }
    ],
    "createdAt": "2023-01-31T12:05:08.346Z",
    "updatedAt": "2023-02-28T06:43:36.227Z",
    "id": "sbzc_aA5A"
  },
  {
    "name": "delayed features",
    "_id": "Q-qi9tz53",
    "updatedAt": "2022-12-27T10:40:27.224Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63aaaa9fa90506295d978b7a",
          "63aaaa9fa90506295d978b79",
          "63aaaa9fa90506295d978b7b"
        ],
        "fileType": "folder",
        "_id": "63aaaa9fa90506295d978b7c",
        "isSelectedFile": false,
        "createdAt": "2022-12-27T10:40:27.224Z",
        "updatedAt": "2022-12-27T10:40:27.224Z",
        "id": "63aaaa9fa90506295d978b7c"
      },
      {
        "name": "sketch.js",
        "content": "let start = 0;\nlet featuresDone = false;\n\n  let handler = {\n    get: (obj, prop) => {\n      if(prop == \"test2\") {\n        return waitForLoaded();\n      }\n      return obj[prop];\n    }\n  }\n\nfunction setup() {\n  noLoop();\n  createCanvas(400, 400);\n  background(0);\n\n  \n  start = millis();\n  \n\n\n  window.$fxhashFeatures = { \"init\" : 3,\n                             test: \"loading\",\n                             test2: \"ik\"\n                           };\n\n  window.$fxhashFeatures = new Proxy(window.$fxhashFeatures, handler);\n  \n  print(start);\n  \n}\n\nfunction draw() {\n  background(220);\n  \n  if(frameCount > 500) {\n    loading = false;\n  }\n}\n\nfunction waitForLoaded() {\n\n  stroke(0);\n  noFill();\n  rect(100, 200, 100, 10);\n  \n  let d = 0;\n  \n  fill(0);\n  \n  while(d < 100000) {\n    rect(100, 200, d, 10);\n    d++;  \n  }\n  \n  featuresDone = true;\n  \n\n  \n  return d;\n}",
        "children": [],
        "fileType": "file",
        "_id": "63aaaa9fa90506295d978b79",
        "isSelectedFile": true,
        "createdAt": "2022-12-27T10:40:27.224Z",
        "updatedAt": "2022-12-27T10:40:27.224Z",
        "id": "63aaaa9fa90506295d978b79"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n    \n    <script src=\"sketch.js\"></script>\n    \n        <script type=\"text/javascript\">\n          \n          function getFeatures() {\n            console.log(\"getFeatures called\");\n            console.log(window.$fxhashFeatures);\n          }\n          \n\n          setTimeout(getFeatures, 1000);\n          \n        </script>\n\n  </head>\n  <body>\n    <main>\n    </main>\n    \n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63aaaa9fa90506295d978b7a",
        "isSelectedFile": false,
        "createdAt": "2022-12-27T10:40:27.224Z",
        "updatedAt": "2022-12-27T10:40:27.224Z",
        "id": "63aaaa9fa90506295d978b7a"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63aaaa9fa90506295d978b7b",
        "isSelectedFile": false,
        "createdAt": "2022-12-27T10:40:27.224Z",
        "updatedAt": "2022-12-27T10:40:27.224Z",
        "id": "63aaaa9fa90506295d978b7b"
      }
    ],
    "createdAt": "2022-12-27T08:21:04.651Z",
    "id": "Q-qi9tz53"
  },
  {
    "name": "device rotation test",
    "_id": "RldP5QzkCE",
    "updatedAt": "2024-01-30T20:32:52.696Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "65b9562dd0a761001a2c4cd8",
          "65b949ff3fc4e9aec05622f7",
          "65b949ff3fc4e9aec05622f6",
          "65b949ff3fc4e9aec05622f8"
        ],
        "fileType": "folder",
        "_id": "65b949ff3fc4e9aec05622f9",
        "createdAt": "2024-01-30T20:32:52.696Z",
        "updatedAt": "2024-01-30T20:32:52.696Z",
        "isSelectedFile": false,
        "id": "65b949ff3fc4e9aec05622f9"
      },
      {
        "name": "sketch.js",
        "content": "// test of device rotation in p5js\n// by ktorn\n\nlet font;\n\nlet x, y, z;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight, WEBGL);\n  angleMode(DEGREES);\n\n  font = loadFont(\"assets/Inconsolata.otf\");\n  textFont(font);\n  textSize(20);\n\n  btn = createButton(\"Press to set orientation permission\");\n\n  btn.position(width / 2 - 100, height / 2);\n\n  btn.mousePressed(function () {\n    DeviceOrientationEvent.requestPermission();\n    btn.hide();\n  });\n}\n\nfunction draw() {\n  background(255);\n\n  // orientation values provided by web API\n  z = -rotationZ;\n  x = -rotationX;\n  y = rotationY;\n\n  push();\n\n  // Respond to device rotation\n  rotateZ(z);\n  rotateX(x);\n  rotateY(y);\n\n  // Draw a shape\n  fill(100, 200, 100);\n  box(100, 200, 20); // Example shape\n\n  pop();\n\n  fill(0);\n  text(\"X: \" + x, -100, -200);\n  text(\"Y: \" + y, -100, -180);\n  text(\"Z: \" + z, -100, -160);\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65b949ff3fc4e9aec05622f6",
        "isSelectedFile": true,
        "createdAt": "2024-01-30T20:32:52.696Z",
        "updatedAt": "2024-01-30T20:32:52.696Z",
        "id": "65b949ff3fc4e9aec05622f6"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "65b949ff3fc4e9aec05622f7",
        "createdAt": "2024-01-30T20:32:52.696Z",
        "updatedAt": "2024-01-30T20:32:52.696Z",
        "isSelectedFile": false,
        "id": "65b949ff3fc4e9aec05622f7"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65b949ff3fc4e9aec05622f8",
        "createdAt": "2024-01-30T20:32:52.696Z",
        "updatedAt": "2024-01-30T20:32:52.696Z",
        "isSelectedFile": false,
        "id": "65b949ff3fc4e9aec05622f8"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "65b957079179ea001a7261ac"
        ],
        "fileType": "folder",
        "_id": "65b9562dd0a761001a2c4cd8",
        "updatedAt": "2024-01-30T20:32:52.696Z",
        "createdAt": "2024-01-30T20:32:52.696Z",
        "isSelectedFile": false,
        "id": "65b9562dd0a761001a2c4cd8"
      },
      {
        "name": "Inconsolata.otf",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "65b957079179ea001a7261ac",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/882adc90-667e-43c6-bd6d-d48634a2d7ec.otf",
        "isSelectedFile": false,
        "updatedAt": "2024-01-30T20:32:52.696Z",
        "createdAt": "2024-01-30T20:32:52.696Z",
        "id": "65b957079179ea001a7261ac"
      }
    ],
    "createdAt": "2024-01-30T19:12:18.336Z",
    "id": "RldP5QzkCE"
  },
  {
    "name": "division",
    "_id": "rs0xkx3GK",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6203fd28bbe55b4a2e9d2998",
          "6203fd28bbe55b4a2e9d2999",
          "6203fd28bbe55b4a2e9d299a",
          "6203fd28bbe55b4a2e9d299b"
        ],
        "fileType": "folder",
        "_id": "6203fd28bbe55b4a2e9d2997",
        "createdAt": "2022-05-04T06:46:28.437Z",
        "updatedAt": "2022-05-04T06:46:28.437Z",
        "isSelectedFile": false,
        "id": "6203fd28bbe55b4a2e9d2997"
      },
      {
        "name": "sketch.js",
        "content": "/*  \n *  Division\n *  by @ktorn\n *  for #WCCChallenge\n *  (unsubmitted)\n * \n *  Click canvas to re-init.\n */\nlet space = 1/1.5;\nlet cvn;\nlet size;\n\nlet hue;\nlet sat;\nlet bri;\n\nlet maxVel = 1/10;\n\nlet frakts;\nlet gridSize;\n\nlet dropShadowOpacity = 0;\n\nfunction setup() {  \n  cvn = createCanvas(windowWidth, windowHeight);\n  size = windowWidth < windowHeight? windowWidth: windowHeight;\n  size = size * space;\n    \n  colorMode(HSB);\n  angleMode(DEGREES);\n  noStroke();\n\n  init();\n}\n\n\nfunction init() {\n  frameCount = 0;\n  hue = random(90/(1/4));\n  sat = random(100/2, 100/1);\n  bri = random(100/2, 100/1);\n  let colour = color(hue, sat, bri);\n  fill(colour);\n  stroke(colour);\n  \n  gridSize = floor(random(8/4, 100/10));\n  let marginX = width/2 - size/2;\n  let marginY = height/2 - size/2;\n  let sqSize = size / gridSize;\n  \n  frakts = [];\n  \n  for (let y = marginY; y < height - marginY - 1; y += sqSize) {\n    for (let x = marginX; x < width - marginX - 1; x += sqSize) {\n      frakts.push( new FRAKT(x, y, sqSize));\n    }\n  }\n  \n  drawingContext.shadowOffsetX = 25/5;\n  drawingContext.shadowOffsetY = 25/5;\n  drawingContext.shadowBlur = 500/50;\n  drawingContext.shadowColor = 'rgba(0, 0, 0, 0)';\n}\n\nfunction draw() {\n  background(4080/2/2/2/2);\n  \n  fadeInShadow();\n  \n  for(let i = 0; i < frakts.length; i++) {\n    frakts[i].render();\n    frakts[i].move(frameCount);\n  }\n}\n\n\nfunction fadeInShadow() {\n  let dropShadowOpacity = map(frameCount, 0, 100/(1/10), 0, 3/5, true);\n  let col = 'rgba(0, 0, 0, ' + dropShadowOpacity + ')'; \n  drawingContext.shadowColor = col;\n}\n\nfunction mousePressed() {\n  init();\n}\n\nfunction keyPressed() {\n // saveCanvas('ktorn-division');\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "6203fd28bbe55b4a2e9d2999",
        "isSelectedFile": true,
        "createdAt": "2022-05-04T06:46:28.437Z",
        "updatedAt": "2022-05-04T06:46:28.437Z",
        "id": "6203fd28bbe55b4a2e9d2999"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"square.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6203fd28bbe55b4a2e9d2998",
        "createdAt": "2022-05-04T06:46:28.437Z",
        "updatedAt": "2022-05-04T06:46:28.437Z",
        "isSelectedFile": false,
        "id": "6203fd28bbe55b4a2e9d2998"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6203fd28bbe55b4a2e9d299b",
        "createdAt": "2022-05-04T06:46:28.437Z",
        "updatedAt": "2022-05-04T06:46:28.437Z",
        "isSelectedFile": false,
        "id": "6203fd28bbe55b4a2e9d299b"
      },
      {
        "name": "square.js",
        "content": "class FRAKT {\n  constructor(x, y, size) {\n    this.x = x;\n    this.y = y;\n    this.size = size;\n    this.vel = createVector(0, 0);\n    this.targetVel = createVector(random(-maxVel, maxVel), random(-maxVel,maxVel));\n    this.angle = 0;\n    this.rotVel = 0;\n    this.targetRotVel = random(-maxVel, maxVel);\n    this.hue = hue;\n    this.targetHue = random(hue - 20, hue + 20);\n  }\n  \n  render() {\n    push();\n      stroke(this.hue, sat, bri);\n      fill(this.hue, sat, bri);\n      translate(this.x , this.y);\n      rotate(this.angle);\n      square(0, 0, this.size);\n    pop();\n  }\n  \n  /*\n  * Time is just a chain of frames,\n  * but our squares don't need to know that,\n  * they only know about FRAKTs of time,\n  * in true OBJKT oriented progeamming fashion.\n  */\n  move(moment) {\n    let d = map(moment, 0, 1000/(1/10)/(1/10), 0, 1/1, true);\n    \n    p5.Vector.lerp(this.vel, this.targetVel, d, this.vel);\n        \n    this.x += this.vel.x;\n    this.y += this.vel.y;\n    \n    this.rotVel = lerp (this.rotVel, this.targetRotVel, d);\n    this.angle += this.rotVel;\n    \n    this.hue = lerp(this.hue, this.targetHue, d);\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "6203fd28bbe55b4a2e9d299a",
        "isSelectedFile": false,
        "updatedAt": "2022-05-04T06:46:28.437Z",
        "createdAt": "2022-05-04T06:46:28.437Z",
        "id": "6203fd28bbe55b4a2e9d299a"
      }
    ],
    "createdAt": "2022-02-09T17:43:04.960Z",
    "updatedAt": "2022-05-04T06:46:28.437Z",
    "id": "rs0xkx3GK"
  },
  {
    "name": "Electric kaleidoscope",
    "_id": "7Y28bcmS4",
    "updatedAt": "2022-09-07T10:16:22.989Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "631865394516ce081d728833",
          "631865394516ce081d728832",
          "631865394516ce081d728834"
        ],
        "fileType": "folder",
        "_id": "631865394516ce081d728835",
        "createdAt": "2022-09-07T10:16:22.989Z",
        "updatedAt": "2022-09-07T10:16:22.989Z",
        "isSelectedFile": false,
        "id": "631865394516ce081d728835"
      },
      {
        "name": "sketch.js",
        "content": "penSize = 5;\nslices = 8;\nangleSlice = 0\ntW = 0;\ntH = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n  tW = width /2;\n  tH = height / 2;\n  background(0);\n  angleMode(DEGREES);\n  angleSlice = floor(360 / slices);\n  colorMode(HSB);\n}\n\nfunction draw() {\n  \n  let a = width;\n  \n  let d = dist(mouseX, mouseY, tW, tH);\n  let hue = map(d, 0, 200, 0, 360);\n  \n  stroke(hue, 100, 100, 0.1);\n  fill(hue, 100, 100, 0.1);\n  \n  for(let i = 0; i <= 360; i += angleSlice) {\n    push();\n      translate(tW, tH);\n      rotate(i);\n      translate(-tW, -tH);\n      circle(mouseX, mouseY, penSize);\n    pop();\n  }\n  \n\n\n}",
        "children": [],
        "fileType": "file",
        "_id": "631865394516ce081d728832",
        "isSelectedFile": true,
        "createdAt": "2022-09-07T10:16:22.989Z",
        "updatedAt": "2022-09-07T10:16:22.989Z",
        "id": "631865394516ce081d728832"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "631865394516ce081d728833",
        "createdAt": "2022-09-07T10:16:22.989Z",
        "updatedAt": "2022-09-07T10:16:22.989Z",
        "isSelectedFile": false,
        "id": "631865394516ce081d728833"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "631865394516ce081d728834",
        "createdAt": "2022-09-07T10:16:22.989Z",
        "updatedAt": "2022-09-07T10:16:22.989Z",
        "isSelectedFile": false,
        "id": "631865394516ce081d728834"
      }
    ],
    "createdAt": "2022-09-07T10:06:51.245Z",
    "id": "7Y28bcmS4"
  },
  {
    "name": "Fibonacci sequence (visualisation)",
    "_id": "r1dFaL5f4",
    "createdAt": "2019-01-14T19:05:36.386Z",
    "updatedAt": "2019-01-17T04:22:35.479Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5c3cdd13884c8e46bc6b8323",
          "5c3cdd13884c8e46bc6b8324",
          "5c3cdd13884c8e46bc6b8325"
        ],
        "fileType": "folder",
        "updatedAt": "2019-01-17T04:22:35.479Z",
        "createdAt": "2019-01-17T04:22:35.479Z",
        "_id": "5c3cdd13884c8e46bc6b8326",
        "id": "5c3cdd13884c8e46bc6b8326"
      },
      {
        "name": "sketch.js",
        "content": "var fib;\n\nclass Fib {\n  constructor() {\n    this.n1 = 0;\n    this.n2 = 1;\n\n    print(this.n1);\n    print(this.n2);\n  }\n\n  next() {\n    var oldN1 = this.n1;\n    var oldN2 = this.n2;\n\n    this.n1 = this.n2;\n    this.n2 = oldN1 + oldN2;\n\n    print(this.n2, this.n2 / this.n1);\n  }\n\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n  fib = new Fib();\n\n  background(220);\n\n  var mult = 10;\n\n  translate(250, 200);\n\n  rect(0, 0, fib.n2 * mult, fib.n2 * mult);\n\n  for (var i = 0; i < 7; i++) {\n    fib.next();\n    translate(fib.n1 * mult, fib.n1 * mult + 1);\n    rotate(-HALF_PI);\n    rect(0, 0, fib.n2 * mult, fib.n2 * mult);\n  }\n\n}",
        "children": [],
        "fileType": "file",
        "updatedAt": "2019-01-17T04:22:35.479Z",
        "createdAt": "2019-01-17T04:22:35.479Z",
        "_id": "5c3cdd13884c8e46bc6b8323",
        "isSelectedFile": true,
        "id": "5c3cdd13884c8e46bc6b8323"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "updatedAt": "2019-01-17T04:22:35.479Z",
        "createdAt": "2019-01-17T04:22:35.479Z",
        "_id": "5c3cdd13884c8e46bc6b8324",
        "id": "5c3cdd13884c8e46bc6b8324"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "updatedAt": "2019-01-17T04:22:35.479Z",
        "createdAt": "2019-01-17T04:22:35.479Z",
        "_id": "5c3cdd13884c8e46bc6b8325",
        "id": "5c3cdd13884c8e46bc6b8325"
      }
    ],
    "id": "r1dFaL5f4"
  },
  {
    "name": "Final-Project-Sample-v04",
    "_id": "9Q_iw4Zle",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61add6e843ec1e936506d1b2",
          "61add6e843ec1e936506d1b3",
          "61add6e843ec1e936506d1b4",
          "61add6e843ec1e936506d1b5"
        ],
        "fileType": "folder",
        "_id": "61add6e843ec1e936506d1b1",
        "createdAt": "2021-12-06T09:30:25.468Z",
        "updatedAt": "2021-12-06T09:30:25.468Z",
        "isSelectedFile": false,
        "id": "61add6e843ec1e936506d1b1"
      },
      {
        "name": "sketch.js",
        "content": "/* \n*  Inspired by @mandybrigwell OBJKT https://hicetnunc.art/objkt/572269\n*   \n*  p5js code by @gestadieu and @ktorn\n*\n*  Live coding during session #10 of ADAT103_CM\n*  Mathematics and Computing module - University of Saint Joseph\n*/\n\nlet hSlices;\nlet vSlices;\nlet hGap;\nlet vGap;\nlet size;\nlet angle;\nlet small;\nlet smallWorlds = [];\n\nfunction setup() {\n  createCanvas(600, 600);\n  hSlices = 8;\n  vSlices = hSlices;\n  hGap = width / hSlices;\n  vGap = height / vSlices;\n  size = hGap * 0.9;\n  \n  for(let k=0; k <= hSlices * vSlices; k++){\n    let smallWorld = new Small(hGap, vGap);\n    smallWorld.render();\n    smallWorlds.push(smallWorld);\n  }\n  \n  background(220);\n  let idx = 0;\n  smooth();\n  for(let i=0; i< height; i+= vGap){\n    for (let j=0; j< width; j+= hGap){\n      image(smallWorlds[idx].canv, i, j, hGap, vGap);    \n      idx++;\n    }\n  }\n  \n  noLoop();\n}",
        "children": [],
        "fileType": "file",
        "_id": "61add6e843ec1e936506d1b3",
        "isSelectedFile": true,
        "createdAt": "2021-12-06T09:30:25.468Z",
        "updatedAt": "2021-12-06T09:30:25.468Z",
        "id": "61add6e843ec1e936506d1b3"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"small.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61add6e843ec1e936506d1b2",
        "createdAt": "2021-12-06T09:30:25.468Z",
        "updatedAt": "2021-12-06T09:30:25.468Z",
        "isSelectedFile": false,
        "id": "61add6e843ec1e936506d1b2"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61add6e843ec1e936506d1b5",
        "createdAt": "2021-12-06T09:30:25.468Z",
        "updatedAt": "2021-12-06T09:30:25.468Z",
        "isSelectedFile": false,
        "id": "61add6e843ec1e936506d1b5"
      },
      {
        "name": "small.js",
        "content": "class Small {\n  constructor(w, h) {\n    this.w = w;\n    this.h = h;\n    this.canv = createGraphics(this.w, this.h);\n    angleMode(DEGREES);\n    this.angle = random(-45, 45);\n    this.vSlices = random(3, 8);\n    this.hSlices = this.vSlices;\n    this.vGap = this.w/this.vSlices;\n    this.hGap = this.h/this.hSlices;\n    this.size = this.hGap * 0.90;\n    this.inverted = random() < 0.2;  // invert 20% of smalls\n  }\n\n  render() {\n    if (this.inverted) {\n      this.canv.background(0);\n      this.canv.fill(255);\n    } else {\n      this.canv.background(255);\n      this.canv.fill(0);\n    }\n    \n    this.canv.push();\n    this.canv.translate(this.w / 2, this.h / 2);\n    this.canv.rotate(this.angle);\n    this.canv.translate(-this.w / 2, -this.h / 2);\n    for (let i = -this.vGap*2; i <= this.h + this.vGap*2; i += this.vGap) {\n      for (let j = -this.hGap*2; j <= this.w + this.hGap*2; j += this.hGap) {\n        this.canv.circle(i, j, this.size);\n      }\n    }\n    this.canv.pop();\n    \n    // draw border around canv\n    this.canv.noFill();\n    this.canv.strokeWeight(2);\n    this.canv.rect(0,0, this.w, this.h);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61add6e843ec1e936506d1b4",
        "isSelectedFile": false,
        "updatedAt": "2021-12-06T09:30:25.468Z",
        "createdAt": "2021-12-06T09:30:25.468Z",
        "id": "61add6e843ec1e936506d1b4"
      }
    ],
    "createdAt": "2021-12-06T09:24:56.627Z",
    "updatedAt": "2021-12-06T09:30:25.468Z",
    "id": "9Q_iw4Zle"
  },
  {
    "name": "Final-Project-Sample-v05",
    "_id": "fIAclfRRl",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61b3f6986be8218b5c980801",
          "61b3f6986be8218b5c980802",
          "61b3f6986be8218b5c980803",
          "61b3f6986be8218b5c980804"
        ],
        "fileType": "folder",
        "_id": "61b3f6986be8218b5c980800",
        "createdAt": "2021-12-11T02:02:23.723Z",
        "updatedAt": "2021-12-11T02:02:23.723Z",
        "isSelectedFile": false,
        "id": "61b3f6986be8218b5c980800"
      },
      {
        "name": "sketch.js",
        "content": "/*\n *  Inspired by @mandybrigwell OBJKT https://hicetnunc.art/objkt/572269\n *  \n *  p5js code by @gestadieu and @ktorn\n *\n *  Live coding during session #10 of ADAT103_CM\n *  Mathematics and Computing module - University of Saint Joseph\n */\n\nlet hSlices;\nlet vSlices;\nlet hGap;\nlet vGap;\nlet size;\nlet angle;\nlet small;\nlet smallWorlds = [];\nlet angleMotion;\nlet angleRecorded;\nlet totalFrames;\nlet frames;\nlet frameIdx;\n\nlet isInit;\nlet isSmallWorldsInit;\n\nfunction setup() {\n  createCanvas(600, 600);\n  hSlices = 8;\n  vSlices = hSlices;\n  hGap = width / hSlices;\n  vGap = height / vSlices;\n  size = hGap * 0.9;\n  angleMotion = 1;\n  angleRecorded = 0;\n\n  totalFrames = floor(360 / angleMotion);\n  isSmallWorldsInit = false;\n  frames = [];\n  isInit = false;\n\n  frameIdx = 0;\n}\n\nfunction initFrames() {\n  \n  if (!isSmallWorldsInit) {\n    for (let k = 0; k <= hSlices * vSlices; k++) {\n      let smallWorld = new Small(hGap, vGap);\n      smallWorlds.push(smallWorld);\n    }\n    isSmallWorldsInit = true;\n  }\n\n  let frame;\n\n  // print loading progress bar\n  background(0);\n  noStroke();\n  fill(255);\n  rectMode(CENTER);\n  textAlign(CENTER, CENTER);\n  textSize(24);\n  text(\n    \"Generating frames...\" + frameIdx + \"/\" + totalFrames,\n    width / 2,\n    height / 2\n  );\n\n  frame = createGraphics(width, height);\n  frame.background(220);\n\n  let idx = 0;\n  for (let i = 0; i < height; i += vGap) {\n    for (let j = 0; j < width; j += hGap) {\n      smallWorlds[idx].rotate(angleMotion);\n      smallWorlds[idx].render();\n      frame.image(smallWorlds[idx].canv, i, j, hGap, vGap);\n      idx++;\n    }\n  }\n\n  frames.push(frame);\n  frameIdx++;\n\n  if (frameIdx == totalFrames - 1) {\n    isInit = true;\n  }\n}\n\nfunction draw() {\n\n  if (!isInit) {\n    initFrames();\n  } else {\n    background(220);\n\n    if (frameIdx > frames.length - 1) {\n      frameIdx = 0;\n    }\n\n    image(frames[frameIdx], 0, 0);\n\n    frameIdx++;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61b3f6986be8218b5c980802",
        "isSelectedFile": true,
        "createdAt": "2021-12-11T02:02:23.723Z",
        "updatedAt": "2021-12-11T02:02:23.723Z",
        "id": "61b3f6986be8218b5c980802"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"small.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61b3f6986be8218b5c980801",
        "createdAt": "2021-12-11T02:02:23.723Z",
        "updatedAt": "2021-12-11T02:02:23.723Z",
        "isSelectedFile": false,
        "id": "61b3f6986be8218b5c980801"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61b3f6986be8218b5c980804",
        "createdAt": "2021-12-11T02:02:23.723Z",
        "updatedAt": "2021-12-11T02:02:23.723Z",
        "isSelectedFile": false,
        "id": "61b3f6986be8218b5c980804"
      },
      {
        "name": "small.js",
        "content": "class Small {\n  constructor(w, h) {\n    this.w = w;\n    this.h = h;\n    this.canv = createGraphics(this.w, this.h);\n    this.canv.angleMode(DEGREES);\n    this.angle = random(-45, 45);\n    this.vSlices = random(3, 8);\n    this.hSlices = this.vSlices;\n    this.vGap = this.w/this.vSlices;\n    this.hGap = this.h/this.hSlices;\n    this.size = this.hGap * 0.8;\n    this.inverted = random() < 0.2;  // invert 20% of smalls\n  }\n\n  rotate(rotAngle) {\n    this.angle += rotAngle;\n  }\n  \n  render() {\n    this.canv.stroke(0);\n    \n    if (this.inverted) {\n      this.canv.background(0);\n      this.canv.fill(255);\n    } else {\n      this.canv.background(255);\n      this.canv.fill(0);\n    }\n    \n    this.canv.push();\n    this.canv.translate(this.w / 2, this.h / 2);\n    this.canv.rotate(this.angle);\n    this.canv.translate(-this.w / 2, -this.h / 2);\n    for (let i = -this.vGap*2; i <= this.h + this.vGap*2; i += this.vGap) {\n      for (let j = -this.hGap*2; j <= this.w + this.hGap*2; j += this.hGap) {\n        this.canv.circle(i, j, this.size);\n      }\n    }\n    this.canv.pop();\n    \n    // draw border around canv\n    this.canv.noFill();\n    this.canv.stroke(100);\n    this.canv.strokeWeight(2);\n    this.canv.rect(0,0, this.w, this.h);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61b3f6986be8218b5c980803",
        "isSelectedFile": false,
        "updatedAt": "2021-12-11T02:02:23.723Z",
        "createdAt": "2021-12-11T02:02:23.723Z",
        "id": "61b3f6986be8218b5c980803"
      }
    ],
    "createdAt": "2021-12-11T00:53:44.439Z",
    "updatedAt": "2021-12-11T02:02:23.723Z",
    "id": "fIAclfRRl"
  },
  {
    "name": "fire escape",
    "_id": "Aix2qiwh0",
    "updatedAt": "2021-12-02T07:01:50.095Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61a67b09960ac159c5015efb",
          "61a67ad0960ac159c5015ef8",
          "61a67ad0960ac159c5015ef7",
          "61a67ad0960ac159c5015ef9"
        ],
        "fileType": "folder",
        "_id": "61a67ad0960ac159c5015efa",
        "isSelectedFile": false,
        "createdAt": "2021-12-02T07:01:50.094Z",
        "updatedAt": "2021-12-02T07:01:50.094Z",
        "id": "61a67ad0960ac159c5015efa"
      },
      {
        "name": "sketch.js",
        "content": "let fireMask;\nlet fireVid;\n\nfunction preload() {\n  fireMask = loadImage(\"assets/fire-mask.png\");\n  fireVid = createVideo(['assets/fire-snippet.mp4']);\n  fireVid.hide(); \n}\n\nfunction setup() {\n  createCanvas(400, 400);\n  fireVid.loop();\n}\n\nfunction draw() {\n  background(\"red\");\n  \n  \n  image(fireVid, 50, 90, 300, 250)\n  \n  image(fireMask, 0, 0);\n}",
        "children": [],
        "fileType": "file",
        "_id": "61a67ad0960ac159c5015ef7",
        "isSelectedFile": true,
        "createdAt": "2021-12-02T07:01:50.094Z",
        "updatedAt": "2021-12-02T07:01:50.094Z",
        "id": "61a67ad0960ac159c5015ef7"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61a67ad0960ac159c5015ef8",
        "isSelectedFile": false,
        "createdAt": "2021-12-02T07:01:50.094Z",
        "updatedAt": "2021-12-02T07:01:50.094Z",
        "id": "61a67ad0960ac159c5015ef8"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61a67ad0960ac159c5015ef9",
        "isSelectedFile": false,
        "createdAt": "2021-12-02T07:01:50.094Z",
        "updatedAt": "2021-12-02T07:01:50.094Z",
        "id": "61a67ad0960ac159c5015ef9"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "61a67c00960ac159c5015efd",
          "61a7a0fb960ac159c5015efe"
        ],
        "fileType": "folder",
        "_id": "61a67b09960ac159c5015efb",
        "isSelectedFile": false,
        "createdAt": "2021-12-02T07:01:50.094Z",
        "updatedAt": "2021-12-02T07:01:50.094Z",
        "id": "61a67b09960ac159c5015efb"
      },
      {
        "name": "fire-mask.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61a67c00960ac159c5015efd",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/9c11d494-5707-4b8b-9fb4-8f7990242e07.png",
        "createdAt": "2021-12-02T07:01:50.094Z",
        "updatedAt": "2021-12-02T07:01:50.094Z",
        "id": "61a67c00960ac159c5015efd"
      },
      {
        "name": "fire-snippet.mp4",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61a7a0fb960ac159c5015efe",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/23943087-087f-4ba6-b0b0-2acd8e62f8a1.mp4",
        "createdAt": "2021-12-02T07:01:50.094Z",
        "updatedAt": "2021-12-02T07:01:50.094Z",
        "id": "61a7a0fb960ac159c5015efe"
      }
    ],
    "createdAt": "2021-12-02T07:01:50.095Z",
    "id": "Aix2qiwh0"
  },
  {
    "name": "fragment",
    "_id": "yXVGWO3yK",
    "updatedAt": "2023-03-06T18:17:16.277Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "640629e924fdf239c7b2c41e",
          "640629ad24fdf239c7b2c41b",
          "640629ad24fdf239c7b2c41a",
          "640629ad24fdf239c7b2c41c"
        ],
        "fileType": "folder",
        "_id": "640629ad24fdf239c7b2c41d",
        "isSelectedFile": false,
        "createdAt": "2023-03-06T18:17:16.277Z",
        "updatedAt": "2023-03-06T18:17:16.277Z",
        "id": "640629ad24fdf239c7b2c41d"
      },
      {
        "name": "sketch.js",
        "content": "let source;\nlet frag;\nlet sourceBase;\n\nfunction preload() {\n  source = loadImage(\"assets/grid.png\");\n}\n\nfunction setup() {\n  createCanvas(100, 200);\n  frag = createGraphics(width, height);\n  getFragment();\n}\n\nfunction draw() {\n  \n  image(frag, 0, 0);\n}\n\nfunction getFragment() {\n\t\t\n  \t\tlet mirror = {\n\t\t\tx: random([-1, 1]),\n\t\t\ty: random([-1, 1])\n\t\t};\n  \n        let rot = random([0, 1]) * (PI / 2);\n  \n  \t\toffset = {\n\t\t\tx: floor(random(0, source.width - width)),\n\t\t\ty: floor(random(0, source.height - height))\n\t\t}\n  \n\t\tlet sourceBase = createGraphics(source.width, source.height);\n\n\t\tsourceBase.push();\n\t\tsourceBase.translate(sourceBase.width / 2, sourceBase.height / 2);\n\t\tsourceBase.scale(mirror.x, mirror.y);\n\t\tsourceBase.rotate(rot);\n\t\t\n\t\t// if (this.base.tintOverride) {\n\t\t// \tsourceBase.tint(this.base.tintOverride);\n\t\t// } else {\n\t\t// \tsourceBase.tint(this.base.tint);\n\t\t// }\n\t\t\n\t\tsourceBase.imageMode(CENTER);\n\t\tsourceBase.image(source, 0, 0);\n\t\tsourceBase.pop();\n\t\t\n\t\tfrag.image(sourceBase, 0, 0, width, height, offset.x, offset.y, width, height);\n\t\t// frag.image(sourceBase, 0, 0);\n  \n}\n\nfunction mousePressed() {\n  getFragment();\n}",
        "children": [],
        "fileType": "file",
        "_id": "640629ad24fdf239c7b2c41a",
        "isSelectedFile": true,
        "createdAt": "2023-03-06T18:17:16.277Z",
        "updatedAt": "2023-03-06T18:17:16.277Z",
        "id": "640629ad24fdf239c7b2c41a"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "640629ad24fdf239c7b2c41b",
        "isSelectedFile": false,
        "createdAt": "2023-03-06T18:17:16.277Z",
        "updatedAt": "2023-03-06T18:17:16.277Z",
        "id": "640629ad24fdf239c7b2c41b"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "640629ad24fdf239c7b2c41c",
        "isSelectedFile": false,
        "createdAt": "2023-03-06T18:17:16.277Z",
        "updatedAt": "2023-03-06T18:17:16.277Z",
        "id": "640629ad24fdf239c7b2c41c"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "64062a6d24fdf239c7b2c41f"
        ],
        "fileType": "folder",
        "_id": "640629e924fdf239c7b2c41e",
        "isSelectedFile": false,
        "createdAt": "2023-03-06T18:17:16.277Z",
        "updatedAt": "2023-03-06T18:17:16.277Z",
        "id": "640629e924fdf239c7b2c41e"
      },
      {
        "name": "grid.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64062a6d24fdf239c7b2c41f",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/3241991d-9f72-433a-b6cd-577d366cb4f9.png",
        "isSelectedFile": false,
        "createdAt": "2023-03-06T18:17:16.277Z",
        "updatedAt": "2023-03-06T18:17:16.277Z",
        "id": "64062a6d24fdf239c7b2c41f"
      }
    ],
    "createdAt": "2023-03-06T18:16:14.904Z",
    "id": "yXVGWO3yK"
  },
  {
    "name": "framed flies",
    "_id": "4psv5PCXy",
    "updatedAt": "2023-03-27T11:53:38.910Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63de932d126a971351152f56",
          "63de932d126a971351152f55",
          "63de932d126a971351152f57"
        ],
        "fileType": "folder",
        "_id": "63de932d126a971351152f58",
        "isSelectedFile": false,
        "createdAt": "2023-03-27T11:53:38.910Z",
        "updatedAt": "2023-03-27T11:53:38.910Z",
        "id": "63de932d126a971351152f58"
      },
      {
        "name": "sketch.js",
        "content": "let frameThickness;\nlet padding;\nlet cvn;\nlet cvnWidth;\nlet cvnHeight;\nlet cvnX;\nlet cvnY;\n\nlet mainCnv;\nlet mainCnvWidth;\nlet mainCnvHeight;\nlet mainCnvX;\nlet mainCnvY;\n\nfunction setup() {\n  mainCnv = createCanvas(400, 400);\n  windowResized();\n  calculateCanvasDimensions();\n  cvn = createGraphics(cvnWidth, cvnHeight);\n  cvn.fill(100, 100);\n  noiseDetail(5);\n}\n\nfunction draw() {\n  cvn.background(220);\n  noiseSeed(0);\n  \n  xoff = frameCount / 200;\n  for(let i = 0; i < 100; i++) {\n    cvn.circle(noise(xoff+(i*PI), i/2)*cvn.width, noise(xoff, i/2)*cvn.height, width*0.00005);\n  }\n\n  // drawBorder();\n  image(cvn, cvnX, cvnY);\n}\n\nfunction drawBorder() {\n  clear();\n\n  fill(0);\n  rect(0, 0, mainCnvWidth, mainCnvHeight);\n\n  fill(255);\n  rect(\n    frameThickness,\n    frameThickness,\n    mainCnvWidth - frameThickness * 2,\n    mainCnvHeight - frameThickness * 2\n  );\n}\n\nfunction calculateCanvasDimensions() {\n  frameThickness = mainCnvWidth * 0.07;\n  padding = mainCnvWidth * 0.12;\n  cvnWidth = mainCnvWidth - (frameThickness * 2 + padding * 2);\n  cvnHeight = mainCnvHeight - (frameThickness * 2 + padding * 2);\n  cvnX = frameThickness + padding;\n  cvnY = cvnX;\n  cvn = createGraphics(cvnWidth, cvnHeight);\n  \n  mainCnvX = width/2 - mainCnvWidth/2;\n  mainCnvY = height/2 - mainCnvHeight/2;\n}\n\nfunction windowResized() {\n  if (windowWidth < windowHeight) {\n    mainCnvWidth = windowWidth*0.9;\n    mainCnvHeight = windowWidth*0.9;\n  } else {\n    mainCnvWidth = windowHeight*0.9;\n    mainCnvHeight = windowHeight*0.9;\n  }\n  \n  resizeCanvas(windowWidth, windowHeight);\n\n  calculateCanvasDimensions();\n  \n  drawBorder();\n  \n  mainCnv.position(mainCnvX, mainCnvY);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63de932d126a971351152f55",
        "isSelectedFile": true,
        "createdAt": "2023-03-27T11:53:38.910Z",
        "updatedAt": "2023-03-27T11:53:38.910Z",
        "id": "63de932d126a971351152f55"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63de932d126a971351152f56",
        "isSelectedFile": false,
        "createdAt": "2023-03-27T11:53:38.910Z",
        "updatedAt": "2023-03-27T11:53:38.910Z",
        "id": "63de932d126a971351152f56"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63de932d126a971351152f57",
        "isSelectedFile": false,
        "createdAt": "2023-03-27T11:53:38.910Z",
        "updatedAt": "2023-03-27T11:53:38.910Z",
        "id": "63de932d126a971351152f57"
      }
    ],
    "createdAt": "2023-02-04T18:03:38.995Z",
    "id": "4psv5PCXy"
  },
  {
    "name": "framed flies glitch",
    "_id": "kBNZWXEBR",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6421613950a63cca2fcbfcca",
          "6421613950a63cca2fcbfccb",
          "6421613950a63cca2fcbfccc"
        ],
        "fileType": "folder",
        "_id": "6421613950a63cca2fcbfcc9",
        "isSelectedFile": false,
        "createdAt": "2023-03-27T09:38:56.040Z",
        "updatedAt": "2023-03-27T09:38:56.040Z",
        "id": "6421613950a63cca2fcbfcc9"
      },
      {
        "name": "sketch.js",
        "content": "let frameThickness;\nlet padding;\nlet cvn;\nlet cvnWidth;\nlet cvnHeight;\nlet cvnX;\nlet cvnY;\n\nlet mainCnv;\nlet mainCnvWidth;\nlet mainCnvHeight;\nlet mainCnvX;\nlet mainCnvY;\n\nlet lastPos = [];\n\nfunction setup() {\n  mainCnv = createCanvas(400, 400);\n  windowResized();\n  calculateCanvasDimensions();\n  cvn = createGraphics(cvnWidth, cvnHeight);\n  cvn.fill(100, 100);\n}\n\nfunction draw() {\n  cvn.background(220);\n  noiseSeed(0);\n  \n  xoff = frameCount / 200;\n  for(let i = 0; i < 100; i++) {\n    let newX = int(noise(xoff+i, i/2)*cvn.width);\n    let newY = int(noise(xoff, i/2)*cvn.height);\n    \n    \n    if (frameCount % 10 == 0) \n      let oldPos = lastPos[i];\n\n      if(oldPos) {\n        if (newX == oldPos.x && newY == oldPos.y) {\n          print(\"match found\");\n        }\n      }\n      \n      lastPos[i] = {x: newX, y: newY};\n    }\n    \n    cvn.circle(newX, newY, width*0.00005);\n    \n\n  }\n\n  // drawBorder();\n  image(cvn, cvnX, cvnY);\n}\n\nfunction drawBorder() {\n  clear();\n\n  fill(0);\n  rect(0, 0, mainCnvWidth, mainCnvHeight);\n\n  fill(255);\n  rect(\n    frameThickness,\n    frameThickness,\n    mainCnvWidth - frameThickness * 2,\n    mainCnvHeight - frameThickness * 2\n  );\n}\n\nfunction calculateCanvasDimensions() {\n  frameThickness = mainCnvWidth * 0.07;\n  padding = mainCnvWidth * 0.12;\n  cvnWidth = mainCnvWidth - (frameThickness * 2 + padding * 2);\n  cvnHeight = mainCnvHeight - (frameThickness * 2 + padding * 2);\n  cvnX = frameThickness + padding;\n  cvnY = cvnX;\n  cvn = createGraphics(cvnWidth, cvnHeight);\n  \n  mainCnvX = width/2 - mainCnvWidth/2;\n  mainCnvY = height/2 - mainCnvHeight/2;\n}\n\nfunction windowResized() {\n  if (windowWidth < windowHeight) {\n    mainCnvWidth = windowWidth*0.9;\n    mainCnvHeight = windowWidth*0.9;\n  } else {\n    mainCnvWidth = windowHeight*0.9;\n    mainCnvHeight = windowHeight*0.9;\n  }\n  \n  resizeCanvas(windowWidth, windowHeight);\n\n  calculateCanvasDimensions();\n  \n  drawBorder();\n  \n  mainCnv.position(mainCnvX, mainCnvY);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6421613950a63cca2fcbfccb",
        "isSelectedFile": true,
        "createdAt": "2023-03-27T09:38:56.040Z",
        "updatedAt": "2023-03-27T09:38:56.040Z",
        "id": "6421613950a63cca2fcbfccb"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6421613950a63cca2fcbfcca",
        "isSelectedFile": false,
        "createdAt": "2023-03-27T09:38:56.040Z",
        "updatedAt": "2023-03-27T09:38:56.040Z",
        "id": "6421613950a63cca2fcbfcca"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6421613950a63cca2fcbfccc",
        "isSelectedFile": false,
        "createdAt": "2023-03-27T09:38:56.040Z",
        "updatedAt": "2023-03-27T09:38:56.040Z",
        "id": "6421613950a63cca2fcbfccc"
      }
    ],
    "createdAt": "2023-03-27T09:26:17.978Z",
    "updatedAt": "2023-03-27T09:38:56.040Z",
    "id": "kBNZWXEBR"
  },
  {
    "name": "Galo v1",
    "_id": "HBmqsCksl",
    "updatedAt": "2021-11-27T16:23:25.042Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61a24120b2fbd9fe9d4dcbe7",
          "61a23e56b2fbd9fe9d4dcbe4",
          "61a23e56b2fbd9fe9d4dcbe3",
          "61a23e56b2fbd9fe9d4dcbe5"
        ],
        "fileType": "folder",
        "_id": "61a23e56b2fbd9fe9d4dcbe6",
        "isSelectedFile": false,
        "createdAt": "2021-11-27T16:23:25.042Z",
        "updatedAt": "2021-11-27T16:23:25.042Z",
        "id": "61a23e56b2fbd9fe9d4dcbe6"
      },
      {
        "name": "sketch.js",
        "content": "let galoImg;\n\nlet grid = 1;\nlet galoW;\nlet galoH;\n\nlet galoCanvas;\n\nlet pixPos;\n\nfunction preload() {\n  galoImg = loadImage('assets/squares.png');\n}\n\nfunction setup() {\n  createCanvas(galoImg.width, galoImg.height);\n  \n  galoCanvas = createGraphics(galoImg.width, galoImg.height);\n  galoCanvas.image(galoImg, 0, 0);\n  galoCanvas.loadPixels();\n  \n  image(galoImg, 0, 0);\n  \n}\n\nfunction draw() {\n  \n}\n\nfunction drawFrame() {\n  \n  noTint();\n  background(255);\n  \n  galoW = floor(width / grid);\n  galoH = floor(height / grid);\n  \n  let pix;\n    \n  for (let i = 0; i < width; i += galoW) {\n    for (let j = 0; j < height; j += galoH) {\n      \n      pix = galoImg.get(i, j);\n      \n//       let col = i + (galoW/2);\n//       let row = j + (galoH/2);\n      \n//       if (col > width) {\n//         col = width-1;\n//       }\n      \n//       if (row > height) {\n//         row = height - 1;\n//       }\n      \n//       pixPos = (col + row * galoImg.width) * 4;\n            \n//       pixR = galoCanvas.pixels[pixPos];\n//       pixG = galoCanvas.pixels[pixPos+1];\n//       pixB = galoCanvas.pixels[pixPos+2]; \n//       pix = color(pixR, pixG, pixB);\n      \n      tint(pix);\n      image(galoImg, i,j, galoW, galoH);\n      stroke(255);\n      noFill();\n      rect(i,j, galoW, galoH);\n    }\n  }\n}\n\nfunction mousePressed() {\n  grid++;\n  drawFrame();\n}",
        "children": [],
        "fileType": "file",
        "_id": "61a23e56b2fbd9fe9d4dcbe3",
        "isSelectedFile": true,
        "createdAt": "2021-11-27T16:23:25.042Z",
        "updatedAt": "2021-11-27T16:23:25.042Z",
        "id": "61a23e56b2fbd9fe9d4dcbe3"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61a23e56b2fbd9fe9d4dcbe4",
        "isSelectedFile": false,
        "createdAt": "2021-11-27T16:23:25.042Z",
        "updatedAt": "2021-11-27T16:23:25.042Z",
        "id": "61a23e56b2fbd9fe9d4dcbe4"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61a23e56b2fbd9fe9d4dcbe5",
        "isSelectedFile": false,
        "createdAt": "2021-11-27T16:23:25.042Z",
        "updatedAt": "2021-11-27T16:23:25.042Z",
        "id": "61a23e56b2fbd9fe9d4dcbe5"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "61a253ce37a9eb0024f48b9a",
          "61a2594d37a9eb0024f498f7"
        ],
        "fileType": "folder",
        "_id": "61a24120b2fbd9fe9d4dcbe7",
        "isSelectedFile": false,
        "createdAt": "2021-11-27T16:23:25.042Z",
        "updatedAt": "2021-11-27T16:23:25.042Z",
        "id": "61a24120b2fbd9fe9d4dcbe7"
      },
      {
        "name": "galo.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61a253ce37a9eb0024f48b9a",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/44282553-c7f6-48c2-bd77-e9442999067e.jpg",
        "isSelectedFile": false,
        "updatedAt": "2021-11-27T16:23:25.042Z",
        "createdAt": "2021-11-27T16:23:25.042Z",
        "id": "61a253ce37a9eb0024f48b9a"
      },
      {
        "name": "squares.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61a2594d37a9eb0024f498f7",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/b69b4a76-873a-420e-a41c-914bbdded4af.png",
        "updatedAt": "2021-11-27T16:23:25.042Z",
        "createdAt": "2021-11-27T16:23:25.042Z",
        "id": "61a2594d37a9eb0024f498f7"
      }
    ],
    "createdAt": "2021-11-27T14:38:52.937Z",
    "id": "HBmqsCksl"
  },
  {
    "name": "generative (start)",
    "_id": "rkUJGPyeE",
    "updatedAt": "2018-12-13T04:39:43.479Z",
    "createdAt": "2018-12-13T04:36:46.515Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5c11e1c6a6ce09b8a602e9b1",
          "5c11e1c6a6ce09b8a602e9b2",
          "5c11e1c6a6ce09b8a602e9b3"
        ],
        "fileType": "folder",
        "updatedAt": "2018-12-13T04:39:43.479Z",
        "createdAt": "2018-12-13T04:39:43.479Z",
        "_id": "5c11e1c6a6ce09b8a602e9b0",
        "id": "5c11e1c6a6ce09b8a602e9b0"
      },
      {
        "name": "sketch.js",
        "content": "var angle1;\nvar angle2;\n \nfunction setup() {\n  createCanvas(400, 400);\n  angle1 = 0;\n  angle2 = 0;\n  background(0);\n  colorMode(HSB);\n}\n \nfunction draw() {\n  push();\n  colorMode(RGB);\n  background(0, 1);\n  pop();\n  \n\n  fill(255);\n  x=100*cos(radians(angle1)) + width/2;\n  y=100*sin(radians(angle1)) + height/2;\n  ellipse(x, y, 5, 5);\n\n  fill(255);\n  x1=200*cos(radians(angle2)) + width/2;\n  y1=200*sin(radians(angle2)) + height/2;\n  ellipse(x1, y1, 5, 5);\n  \n  // stroke(x,y, 50);\n  // if(frameCount % 3 == 0) {\n  // \tline(x,y, x1,y1);\n  // }\n  \n  angle1+=2.0;\n  angle2+=1.2;\n}",
        "children": [],
        "fileType": "file",
        "updatedAt": "2018-12-13T04:39:43.479Z",
        "createdAt": "2018-12-13T04:39:43.479Z",
        "_id": "5c11e1c6a6ce09b8a602e9b1",
        "isSelectedFile": true,
        "id": "5c11e1c6a6ce09b8a602e9b1"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "updatedAt": "2018-12-13T04:39:43.479Z",
        "createdAt": "2018-12-13T04:39:43.479Z",
        "_id": "5c11e1c6a6ce09b8a602e9b2",
        "id": "5c11e1c6a6ce09b8a602e9b2"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "updatedAt": "2018-12-13T04:39:43.479Z",
        "createdAt": "2018-12-13T04:39:43.479Z",
        "_id": "5c11e1c6a6ce09b8a602e9b3",
        "id": "5c11e1c6a6ce09b8a602e9b3"
      }
    ],
    "id": "rkUJGPyeE"
  },
  {
    "name": "generative 1",
    "_id": "rkCMF3CkV",
    "createdAt": "2018-12-12T16:36:37.743Z",
    "updatedAt": "2020-09-22T04:17:13.053Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5c113246f42c2b91375b3e48",
          "5c113246f42c2b91375b3e47",
          "5c113246f42c2b91375b3e49"
        ],
        "fileType": "folder",
        "_id": "5c113246f42c2b91375b3e4a",
        "updatedAt": "2020-09-22T04:17:13.053Z",
        "createdAt": "2020-09-22T04:17:13.053Z",
        "id": "5c113246f42c2b91375b3e4a"
      },
      {
        "name": "sketch.js",
        "content": "var angle1;\nvar angle2;\n \nfunction setup() {\n  createCanvas(400, 400);\n  angle1 = 0;\n  angle2 = 0;\n  background(0);\n  colorMode(HSB);\n}\n \nfunction draw() {\n  push();\n  colorMode(RGB);\n  background(0, 1);\n  pop();\n  \n  noFill();\n  noStroke();\n  x=100*cos(radians(angle1)) + width/2.1;\n  y=100*sin(radians(angle1)) + height/2.1;\n  ellipse(x, y, 5, 5);\n\n  x1=250*cos(radians(angle2)) + width/2;\n  y1=500*sin(radians(angle2)) + height/2;\n  ellipse(x1, y1, 5, 5);\n  \n  stroke(x,y, 50);\n  if(frameCount % 3 == 0) {\n  \tline(x,y, x1,y1);\n  }\n  \n  angle1+=2.0;\n  angle2+=1.2;\n}",
        "children": [],
        "fileType": "file",
        "_id": "5c113246f42c2b91375b3e47",
        "updatedAt": "2020-09-22T04:17:13.053Z",
        "createdAt": "2020-09-22T04:17:13.053Z",
        "isSelectedFile": true,
        "id": "5c113246f42c2b91375b3e47"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "5c113246f42c2b91375b3e48",
        "updatedAt": "2020-09-22T04:17:13.053Z",
        "createdAt": "2020-09-22T04:17:13.053Z",
        "id": "5c113246f42c2b91375b3e48"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5c113246f42c2b91375b3e49",
        "updatedAt": "2020-09-22T04:17:13.053Z",
        "createdAt": "2020-09-22T04:17:13.053Z",
        "id": "5c113246f42c2b91375b3e49"
      }
    ],
    "id": "rkCMF3CkV"
  },
  {
    "name": "generative 1 (layers)",
    "_id": "H1_gaHzG4",
    "updatedAt": "2019-01-08T16:29:37.246Z",
    "createdAt": "2019-01-08T16:16:48.332Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5c34ccf0f926025baa0160fa",
          "5c34ccf0f926025baa0160fb",
          "5c34ccf0f926025baa0160fc",
          "5c34cd80d88ca8001f0e95cd"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "updatedAt": "2019-01-08T16:29:37.246Z",
        "createdAt": "2019-01-08T16:29:37.246Z",
        "_id": "5c34ccf0f926025baa0160f9",
        "id": "5c34ccf0f926025baa0160f9"
      },
      {
        "name": "sketch.js",
        "content": "\nvar angle1;\nvar angle2;\nvar bubble;\nvar bg;\n \nfunction setup() {\n  createCanvas(400, 400);\n  bg = createGraphics(400,400);\n  bg.clear();\n  angle1 = 0;\n  angle2 = 0;\n  background(0);\n  colorMode(HSB);\n  bubble = new Bubble(200, 200, 50);\n}\n \nfunction draw() {\n  background(255);\n  \n  bg.push();\n  bg.colorMode(RGB);\n  bg.background(255, 5);\n  bg.pop();\n  \n  // \n  bg.noFill();\n  bg.noStroke();\n  x=100*cos(radians(angle1)) + width/2.1;\n  y=100*sin(radians(angle1)) + height/2.1;\n  bg.ellipse(x, y, 5, 5);\n  //\n  // fill(0, 0, 111);\n  x1=250*cos(radians(angle2)) + width/2;\n  y1=500*sin(radians(angle2)) + height/2;\n  bg.ellipse(x1, y1, 5, 5);\n  \n  bg.stroke(x,y, 50);\n  if(frameCount % 3 == 0) {\n  \tbg.line(x,y, x1,y1);\n  }\n  \n  angle1+=2.0;\n  angle2+=1.2;\n  \n    \n  image(bg,0,0);\n    \n  bubble.move();\n  bubble.show();\n  \n}",
        "children": [],
        "fileType": "file",
        "updatedAt": "2019-01-08T16:29:37.246Z",
        "createdAt": "2019-01-08T16:29:37.246Z",
        "_id": "5c34ccf0f926025baa0160fa",
        "isSelectedFile": true,
        "id": "5c34ccf0f926025baa0160fa"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n    \n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"bubble.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "updatedAt": "2019-01-08T16:29:37.246Z",
        "createdAt": "2019-01-08T16:29:37.246Z",
        "_id": "5c34ccf0f926025baa0160fb",
        "id": "5c34ccf0f926025baa0160fb"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "updatedAt": "2019-01-08T16:29:37.246Z",
        "createdAt": "2019-01-08T16:29:37.246Z",
        "_id": "5c34ccf0f926025baa0160fc",
        "id": "5c34ccf0f926025baa0160fc"
      },
      {
        "name": "bubble.js",
        "content": "class Bubble {\n\tconstructor(x, y, size) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.size = size;\n\t}\n\t\n\tshow() {\n\t\tfill(255);\n    stroke(0);\n\t\tellipse(this.x, this.y, this.size, this.size);\n\t}\n\t\n\tmove() {\n\t\tthis.x = this.x + random(-2, 2);\n\t\tthis.y = this.y + random(-2, 2);\n\t}\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "5c34cd80d88ca8001f0e95cd",
        "updatedAt": "2019-01-08T16:29:37.246Z",
        "createdAt": "2019-01-08T16:29:37.246Z",
        "id": "5c34cd80d88ca8001f0e95cd"
      }
    ],
    "id": "H1_gaHzG4"
  },
  {
    "name": "generative 1 (layers) copy",
    "_id": "H1g_PWYf4",
    "updatedAt": "2019-01-13T18:45:59.728Z",
    "createdAt": "2019-01-13T18:45:59.728Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5c3b87673d6069232616cd12",
          "5c3b87673d6069232616cd13",
          "5c3b87673d6069232616cd14",
          "5c3b87673d6069232616cd15"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "updatedAt": "2019-01-08T16:29:37.246Z",
        "createdAt": "2019-01-08T16:29:37.246Z",
        "_id": "5c3b87673d6069232616cd11",
        "id": "5c3b87673d6069232616cd11"
      },
      {
        "name": "sketch.js",
        "content": "\nvar angle1;\nvar angle2;\nvar bubble;\nvar bg;\n \nfunction setup() {\n  createCanvas(400, 400);\n  bg = createGraphics(400,400);\n  bg.clear();\n  angle1 = 0;\n  angle2 = 0;\n  background(0);\n  colorMode(HSB);\n  bubble = new Bubble(200, 200, 50);\n}\n \nfunction draw() {\n  background(255);\n  \n  bg.push();\n  bg.colorMode(RGB);\n  bg.background(255, 5);\n  bg.pop();\n  \n  // \n  bg.noFill();\n  bg.noStroke();\n  x=100*cos(radians(angle1)) + width/2.1;\n  y=100*sin(radians(angle1)) + height/2.1;\n  bg.ellipse(x, y, 5, 5);\n  //\n  // fill(0, 0, 111);\n  x1=250*cos(radians(angle2)) + width/2;\n  y1=500*sin(radians(angle2)) + height/2;\n  bg.ellipse(x1, y1, 5, 5);\n  \n  bg.stroke(x,y, 50);\n  if(frameCount % 3 == 0) {\n  \tbg.line(x,y, x1,y1);\n  }\n  \n  angle1+=2.0;\n  angle2+=1.2;\n  \n    \n  image(bg,0,0);\n    \n  bubble.move();\n  bubble.show();\n  \n}",
        "children": [],
        "fileType": "file",
        "updatedAt": "2019-01-08T16:29:37.246Z",
        "createdAt": "2019-01-08T16:29:37.246Z",
        "_id": "5c3b87673d6069232616cd12",
        "isSelectedFile": true,
        "id": "5c3b87673d6069232616cd12"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n    \n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"bubble.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "updatedAt": "2019-01-08T16:29:37.246Z",
        "createdAt": "2019-01-08T16:29:37.246Z",
        "_id": "5c3b87673d6069232616cd13",
        "id": "5c3b87673d6069232616cd13"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "updatedAt": "2019-01-08T16:29:37.246Z",
        "createdAt": "2019-01-08T16:29:37.246Z",
        "_id": "5c3b87673d6069232616cd14",
        "id": "5c3b87673d6069232616cd14"
      },
      {
        "name": "bubble.js",
        "content": "class Bubble {\n\tconstructor(x, y, size) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.size = size;\n\t}\n\t\n\tshow() {\n\t\tfill(255);\n    stroke(0);\n\t\tellipse(this.x, this.y, this.size, this.size);\n\t}\n\t\n\tmove() {\n\t\tthis.x = this.x + random(-2, 2);\n\t\tthis.y = this.y + random(-2, 2);\n\t}\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "5c3b87673d6069232616cd15",
        "updatedAt": "2019-01-08T16:29:37.246Z",
        "createdAt": "2019-01-08T16:29:37.246Z",
        "id": "5c3b87673d6069232616cd15"
      }
    ],
    "id": "H1g_PWYf4"
  },
  {
    "name": "generative 2",
    "_id": "S1MUt2CkE",
    "updatedAt": "2018-12-12T16:56:27.806Z",
    "createdAt": "2018-12-12T16:37:29.661Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5c113949f42c2b91375b3e4c",
          "5c113949f42c2b91375b3e4d",
          "5c113949f42c2b91375b3e4e"
        ],
        "fileType": "folder",
        "_id": "5c113949f42c2b91375b3e4b",
        "createdAt": "2018-12-12T16:56:27.806Z",
        "updatedAt": "2018-12-12T16:56:27.806Z",
        "id": "5c113949f42c2b91375b3e4b"
      },
      {
        "name": "sketch.js",
        "content": "var angle1;\nvar angle2;\n \nfunction setup() {\n  createCanvas(400, 400);\n  angle1 = 0;\n  angle2 = 0;\n  background(0);\n  colorMode(HSB);\n}\n \nfunction draw() {\n  push();\n  colorMode(RGB);\n  background(0, 1);\n  pop();\n  \n  // \n  noFill();\n  noStroke();\n  x=200*cos(radians(angle1)) + width/2;\n  y=200*sin(radians(angle1)) + height/2;\n  ellipse(x, y, 5, 5);\n  //\n  // fill(0, 0, 111);\n  x1=300*cos(radians(angle2)) + width/2;\n  y1=300*sin(radians(angle2)) + height/2;\n  ellipse(x1, y1, 5, 5);\n  \n  stroke(x,y, 30);\n  if(frameCount % 5 == 0) {\n  \tline(x,y, x1,y1);\n  }\n  \n  angle1+=1;\n  angle2+=1.2;\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "5c113949f42c2b91375b3e4c",
        "createdAt": "2018-12-12T16:56:27.806Z",
        "updatedAt": "2018-12-12T16:56:27.806Z",
        "id": "5c113949f42c2b91375b3e4c"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "5c113949f42c2b91375b3e4d",
        "createdAt": "2018-12-12T16:56:27.806Z",
        "updatedAt": "2018-12-12T16:56:27.806Z",
        "id": "5c113949f42c2b91375b3e4d"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5c113949f42c2b91375b3e4e",
        "createdAt": "2018-12-12T16:56:27.806Z",
        "updatedAt": "2018-12-12T16:56:27.806Z",
        "id": "5c113949f42c2b91375b3e4e"
      }
    ],
    "id": "S1MUt2CkE"
  },
  {
    "name": "generative 3",
    "_id": "SJgroT0yV",
    "updatedAt": "2018-12-12T18:03:09.589Z",
    "createdAt": "2018-12-12T17:54:00.327Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5c114b38f42c2b91375b3e50",
          "5c114b38f42c2b91375b3e51",
          "5c114b38f42c2b91375b3e52"
        ],
        "fileType": "folder",
        "updatedAt": "2018-12-12T18:03:09.589Z",
        "createdAt": "2018-12-12T18:03:09.589Z",
        "_id": "5c114b38f42c2b91375b3e4f",
        "id": "5c114b38f42c2b91375b3e4f"
      },
      {
        "name": "sketch.js",
        "content": "var angle1;\n\nvar x = 0;\nvar y = 0;\nvar borderStep = 5;\n \nfunction setup() {\n  createCanvas(400, 400);\n  angle1 = 0;\n  angle2 = 0;\n  background(0);\n  colorMode(HSB);\n}\n \nfunction draw() {\n  push();\n  colorMode(RGB);\n  background(0, 1);\n  pop();\n  \n  // \n  noFill();\n  noStroke();\n  ax=200*cos(radians(angle1)) + width/2;\n  ay=200*sin(radians(angle1)) + height/2;\n  ellipse(x, y, 5, 5);\n  \n\n  \n  if(x < width && y == 0) {\n    x += borderStep;\n  } else if(x == width && y < height) {\n    y += borderStep\n  } else if(y == height && x > 0) {\n    x -= borderStep;\n  } else if(x == 0 && y > 0) {\n    y -= borderStep;\n  }\n  \n  if(x > width) {\n    x = width;\n  }\n  if(y > height) {\n    y = height;\n  }\n      \n  stroke(ax,ay, 30);\n  if(frameCount % 2 == 0) {\n  \tline(x,y, ax, ay);\n  }\n  \n  angle1+=1;\n}",
        "children": [],
        "fileType": "file",
        "updatedAt": "2018-12-12T18:03:09.589Z",
        "createdAt": "2018-12-12T18:03:09.589Z",
        "_id": "5c114b38f42c2b91375b3e50",
        "isSelectedFile": true,
        "id": "5c114b38f42c2b91375b3e50"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "updatedAt": "2018-12-12T18:03:09.589Z",
        "createdAt": "2018-12-12T18:03:09.589Z",
        "_id": "5c114b38f42c2b91375b3e51",
        "id": "5c114b38f42c2b91375b3e51"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "updatedAt": "2018-12-12T18:03:09.589Z",
        "createdAt": "2018-12-12T18:03:09.589Z",
        "_id": "5c114b38f42c2b91375b3e52",
        "id": "5c114b38f42c2b91375b3e52"
      }
    ],
    "id": "SJgroT0yV"
  },
  {
    "name": "generative 4",
    "_id": "HJuDT60yE",
    "updatedAt": "2018-12-12T19:12:15.678Z",
    "createdAt": "2018-12-12T18:03:11.747Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5c114d5ff42c2b91375b3e54",
          "5c114d5ff42c2b91375b3e55",
          "5c114d5ff42c2b91375b3e56"
        ],
        "fileType": "folder",
        "updatedAt": "2018-12-12T19:12:15.678Z",
        "createdAt": "2018-12-12T19:12:15.678Z",
        "_id": "5c114d5ff42c2b91375b3e53",
        "id": "5c114d5ff42c2b91375b3e53"
      },
      {
        "name": "sketch.js",
        "content": "var angle1;\n\nvar x = 0;\nvar y = 0;\nvar borderStep = 5;\n \nfunction setup() {\n  createCanvas(400, 400);\n  angle1 = 0;\n  angle2 = 0;\n  background(0);\n  colorMode(HSB);\n}\n \nfunction draw() {\n  push();\n  colorMode(RGB);\n  background(0, 1);\n  pop();\n  \n  // \n  noFill();\n  noStroke();\n  ax=200*cos(radians(angle1)) + width/2;\n  ay=200*sin(radians(angle1)) + height/2;\n  ellipse(x, y, 5, 5);\n  \n\n  \n  if(x < width && y == 0) {\n    x += borderStep;\n  } else if(x == width && y < height) {\n    y += borderStep\n  } else if(y == height && x > 0) {\n    x -= borderStep;\n  } else if(x == 0 && y > 0) {\n    y -= borderStep;\n  }\n  \n  if(x > width) {\n    x = width;\n  }\n  if(y > height) {\n    y = height;\n  }\n      \n  stroke(x,y, 30);\n  if(frameCount % 5 == 0) {\n  \tline(x,y, ax, ay);\n  }\n  \n  angle1+=2;\n}",
        "children": [],
        "fileType": "file",
        "updatedAt": "2018-12-12T19:12:15.678Z",
        "createdAt": "2018-12-12T19:12:15.678Z",
        "_id": "5c114d5ff42c2b91375b3e54",
        "isSelectedFile": true,
        "id": "5c114d5ff42c2b91375b3e54"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "updatedAt": "2018-12-12T19:12:15.678Z",
        "createdAt": "2018-12-12T19:12:15.678Z",
        "_id": "5c114d5ff42c2b91375b3e55",
        "id": "5c114d5ff42c2b91375b3e55"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "updatedAt": "2018-12-12T19:12:15.678Z",
        "createdAt": "2018-12-12T19:12:15.678Z",
        "_id": "5c114d5ff42c2b91375b3e56",
        "id": "5c114d5ff42c2b91375b3e56"
      }
    ],
    "id": "HJuDT60yE"
  },
  {
    "name": "generative 5",
    "_id": "H1VJARRkE",
    "updatedAt": "2019-12-03T03:32:36.388Z",
    "createdAt": "2018-12-12T19:13:32.111Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5c115ddb0f53f71130f31e83",
          "5c115ddb0f53f71130f31e84",
          "5c115ddb0f53f71130f31e85",
          "5c115ddb0f53f71130f31e86"
        ],
        "fileType": "folder",
        "_id": "5c115ddb0f53f71130f31e82",
        "updatedAt": "2019-12-03T03:32:36.388Z",
        "createdAt": "2019-12-03T03:32:36.388Z",
        "isSelectedFile": false,
        "id": "5c115ddb0f53f71130f31e82"
      },
      {
        "name": "sketch.js",
        "content": "var totalBubbles;\nvar bubbles;\n\nfunction createRandomBubble() {\n\treturn new Bubble(random(0, width),\n\t\t                random(0, height),\n\t\t\t\t\t\t\t\t\t\t40);\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n  background(255);\n\t\n\ttotalBubbles = 500;\n\tbubbles = [];\n\n\tfor (var i = 0; i < totalBubbles; i++) {\n\t\tbubbles[i] = createRandomBubble();\n\t}\n}\n\nfunction draw() {\n\t\n\tfor (var i = 0; i < bubbles.length; i++) {\n\t\tbubbles[i].move();\n    for(var j = i+1; j < bubbles.length; j++) {\n      var b1 = bubbles[i];\n      var b2 = bubbles[j];\n      if(dist(b1.x, b1.y, b2.x, b2.y) < b1.size) {\n        stroke(map(bubbles.length, 0, totalBubbles, 100, 255));\n        line(b1.x, b1.y, b2.x, b2.y);\n      }\n    }\n\t}\n\n  bubbles.pop();\n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "5c115ddb0f53f71130f31e83",
        "updatedAt": "2019-12-03T03:32:36.388Z",
        "createdAt": "2019-12-03T03:32:36.388Z",
        "isSelectedFile": true,
        "id": "5c115ddb0f53f71130f31e83"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n\t\t<script src=\"bubble.js\"></script>\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "5c115ddb0f53f71130f31e84",
        "updatedAt": "2019-12-03T03:32:36.388Z",
        "createdAt": "2019-12-03T03:32:36.388Z",
        "isSelectedFile": false,
        "id": "5c115ddb0f53f71130f31e84"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5c115ddb0f53f71130f31e85",
        "updatedAt": "2019-12-03T03:32:36.388Z",
        "createdAt": "2019-12-03T03:32:36.388Z",
        "isSelectedFile": false,
        "id": "5c115ddb0f53f71130f31e85"
      },
      {
        "name": "bubble.js",
        "content": "class Bubble {\n\tconstructor(x, y, size) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.size = size;\n\t}\n\t\n\tshow() {\n\t\tfill(0, 50);\n\t\tellipse(this.x, this.y, this.size, this.size);\n\t}\n\t\n\tmove() {\n\t\tthis.x = this.x + random(-2, 2);\n\t\tthis.y = this.y + random(-2, 2);\n\t}\n}",
        "children": [],
        "fileType": "file",
        "_id": "5c115ddb0f53f71130f31e86",
        "updatedAt": "2019-12-03T03:32:36.388Z",
        "createdAt": "2019-12-03T03:32:36.388Z",
        "isSelectedFile": false,
        "id": "5c115ddb0f53f71130f31e86"
      }
    ],
    "id": "H1VJARRkE"
  },
  {
    "name": "generative 6 (colony)",
    "_id": "BJ29fr7Op",
    "updatedAt": "2019-01-25T15:20:44.220Z",
    "createdAt": "2019-01-25T14:36:58.957Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5c4b1f0aed8d3613050f3600",
          "5c4b1f0aed8d3613050f3601",
          "5c4b1f0aed8d3613050f3602",
          "5c4b1f0aed8d3613050f3603"
        ],
        "fileType": "folder",
        "updatedAt": "2019-01-25T15:20:44.220Z",
        "createdAt": "2019-01-25T15:20:44.220Z",
        "_id": "5c4b1f0aed8d3613050f35ff",
        "isSelectedFile": false,
        "id": "5c4b1f0aed8d3613050f35ff"
      },
      {
        "name": "sketch.js",
        "content": "/* inspired in bubble-intercepting concept by Casey Reas\n*   \n*  code by ktorn\n*\n*  strokes start white, and gain darker colour over time\n*  creating the effect of depth\n*  bubbles decrease over time, until none are left\n*/\n\n\nvar totalBubbles;\nvar bubbles;\n\nfunction setup() {\n  totalBubbles = 500;\n  var w = windowWidth;\n\tvar h = windowHeight;\n\t\n  background(255);\n\t\n  var virtSize;\n\t\n  // take smaller screen dimension\n  // create a square 'virtual' canvas based on it\n  w > h ? virtSize = h : virtSize = w;\n\n  // actual canvas takes up all screen\n\tcreateCanvas(windowWidth, windowHeight);\n\t\n\tvar bubbleSize = virtSize / 10;\n\t\n\tbubbles = [];\n  \n  var wPad = floor((w - virtSize)/2);\n  var hPad = floor((h - virtSize)/2);\n\n\tfor (var i = 0; i < totalBubbles; i++) {\n    // create bubbles, randomly positioned within virtual canvas\n\t\tbubbles[i] = createRandomBubble(bubbleSize, wPad, hPad, virtSize);\n\t}\n}\n\nfunction draw() {\n\t\n\tvar overlaps = 0;\n\t\n  // noprotect\n\tfor (var i = 0; i < bubbles.length; i++) {\n\t\tbubbles[i].move();\n    for(var j = i+1; j < bubbles.length; j++) {\n      var b1 = bubbles[i];\n      var b2 = bubbles[j];\n      if(dist(b1.x, b1.y, b2.x, b2.y) < b1.size) {\n        stroke(map(bubbles.length, 0, totalBubbles, 100, 255));\n        line(b1.x, b1.y, b2.x, b2.y);\n\t\t\t\toverlaps++;\n      }\n    }\n\t}\n\n  bubbles.pop();\n\t\n  // stop looping when no more bubbles\n\tif(bubbles.length == 0) {\n\t\tnoLoop();\n\t}\n  \n}\n\nfunction createRandomBubble(bubbleSize, wPad, hPad, virtSize) {\n  \n\treturn new Bubble(random(wPad, virtSize + wPad),\n\t\t                random(hPad, virtSize + hPad),\n\t\t\t\t\t\t\t\t\t\tbubbleSize);\n}",
        "children": [],
        "fileType": "file",
        "updatedAt": "2019-01-25T15:20:44.220Z",
        "createdAt": "2019-01-25T15:20:44.220Z",
        "_id": "5c4b1f0aed8d3613050f3600",
        "isSelectedFile": true,
        "id": "5c4b1f0aed8d3613050f3600"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n\t\t<script src=\"bubble.js\"></script>\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n\t\t<center>\n    \t<script src=\"sketch.js\"></script>\n\t\t</center>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "updatedAt": "2019-01-25T15:20:44.220Z",
        "createdAt": "2019-01-25T15:20:44.220Z",
        "_id": "5c4b1f0aed8d3613050f3601",
        "isSelectedFile": false,
        "id": "5c4b1f0aed8d3613050f3601"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n\theight: 100%;\n}\n\ncanvas {\n  display: block;\n}\n\nbody {\n  margin: 0;\n  display: flex;\n\n  /* This centers our sketch horizontally. */\n  justify-content: center;\n\n  /* This centers our sketch vertically. */\n  align-items: center;\n}",
        "children": [],
        "fileType": "file",
        "updatedAt": "2019-01-25T15:20:44.220Z",
        "createdAt": "2019-01-25T15:20:44.220Z",
        "_id": "5c4b1f0aed8d3613050f3602",
        "isSelectedFile": false,
        "id": "5c4b1f0aed8d3613050f3602"
      },
      {
        "name": "bubble.js",
        "content": "class Bubble {\n\tconstructor(x, y, size) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.size = size;\n\t}\n\t\n\tshow() {\n\t\tfill(0, 50);\n\t\tellipse(this.x, this.y, this.size, this.size);\n\t}\n\t\n\tmove() {\n\t\tthis.x = this.x + random(-2, 2);\n\t\tthis.y = this.y + random(-2, 2);\n\t}\n}",
        "children": [],
        "fileType": "file",
        "updatedAt": "2019-01-25T15:20:44.220Z",
        "createdAt": "2019-01-25T15:20:44.220Z",
        "_id": "5c4b1f0aed8d3613050f3603",
        "isSelectedFile": false,
        "id": "5c4b1f0aed8d3613050f3603"
      }
    ],
    "id": "BJ29fr7Op"
  },
  {
    "name": "generative 6 (colony) copy",
    "_id": "We7Fobtcf",
    "updatedAt": "2019-01-25T14:35:47.103Z",
    "createdAt": "2019-01-25T14:35:47.103Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5c4b1ec2ed8d3613050f35fb",
          "5c4b1ec2ed8d3613050f35fc",
          "5c4b1ec2ed8d3613050f35fd",
          "5c4b1ec2ed8d3613050f35fe"
        ],
        "fileType": "folder",
        "updatedAt": "2019-01-25T14:32:18.778Z",
        "createdAt": "2019-01-25T14:32:18.778Z",
        "_id": "5c4b1ec2ed8d3613050f35fa",
        "isSelectedFile": false,
        "id": "5c4b1ec2ed8d3613050f35fa"
      },
      {
        "name": "sketch.js",
        "content": "var totalBubbles;\nvar bubbles;\n\nfunction createRandomBubble(bubbleSize) {\n\treturn new Bubble(random(0, width),\n\t\t                random(0, height),\n\t\t\t\t\t\t\t\t\t\tbubbleSize);\n}\n\nfunction setup() {\n\t\n  //createCanvas(windowWidth, windowHeight);\n  background(255);\n\t\n\tvar w = windowWidth;\n\tvar h = windowHeight;\n\t\n\tif(w > h) {\n\t\tw = h;\n\t} else {\n\t\th = w;\n\t}\n\t\n\tcreateCanvas(w, h);\n\t\n\ttotalBubbles = 500;\n\t\n\tvar bubbleSize = width / 10;\n\t//var bubbleSize = floor((width * height) * 0.00025);\n\t\n\tprint(bubbleSize);\n\t\n\tbubbles = [];\n\n\tfor (var i = 0; i < totalBubbles; i++) {\n\t\tbubbles[i] = createRandomBubble(bubbleSize);\n\t}\n}\n\nfunction draw() {\n\t\n\tvar overlaps = 0;\n\t\n  // noprotect\n\tfor (var i = 0; i < bubbles.length; i++) {\n\t\tbubbles[i].move();\n    for(var j = i+1; j < bubbles.length; j++) {\n      var b1 = bubbles[i];\n      var b2 = bubbles[j];\n      if(dist(b1.x, b1.y, b2.x, b2.y) < b1.size) {\n        stroke(map(bubbles.length, 0, totalBubbles, 100, 255));\n        line(b1.x, b1.y, b2.x, b2.y);\n\t\t\t\toverlaps++;\n      }\n    }\n\t}\n\n  bubbles.pop();\n\t\n\tif(bubbles.length == 0) {\n\t\tnoLoop();\n\t}\n  \n}",
        "children": [],
        "fileType": "file",
        "updatedAt": "2019-01-25T14:32:18.778Z",
        "createdAt": "2019-01-25T14:32:18.778Z",
        "_id": "5c4b1ec2ed8d3613050f35fb",
        "isSelectedFile": true,
        "id": "5c4b1ec2ed8d3613050f35fb"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n\t\t<script src=\"bubble.js\"></script>\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n\t\t<center>\n    \t<script src=\"sketch.js\"></script>\n\t\t</center>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "updatedAt": "2019-01-25T14:32:18.778Z",
        "createdAt": "2019-01-25T14:32:18.778Z",
        "_id": "5c4b1ec2ed8d3613050f35fc",
        "isSelectedFile": false,
        "id": "5c4b1ec2ed8d3613050f35fc"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n\theight: 100%;\n}\n\ncanvas {\n  display: block;\n}\n\nbody {\n  margin: 0;\n  display: flex;\n\n  /* This centers our sketch horizontally. */\n  justify-content: center;\n\n  /* This centers our sketch vertically. */\n  align-items: center;\n}",
        "children": [],
        "fileType": "file",
        "updatedAt": "2019-01-25T14:32:18.778Z",
        "createdAt": "2019-01-25T14:32:18.778Z",
        "_id": "5c4b1ec2ed8d3613050f35fd",
        "isSelectedFile": false,
        "id": "5c4b1ec2ed8d3613050f35fd"
      },
      {
        "name": "bubble.js",
        "content": "class Bubble {\n\tconstructor(x, y, size) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.size = size;\n\t}\n\t\n\tshow() {\n\t\tfill(0, 50);\n\t\tellipse(this.x, this.y, this.size, this.size);\n\t}\n\t\n\tmove() {\n\t\tthis.x = this.x + random(-2, 2);\n\t\tthis.y = this.y + random(-2, 2);\n\t}\n}",
        "children": [],
        "fileType": "file",
        "updatedAt": "2019-01-25T14:32:18.778Z",
        "createdAt": "2019-01-25T14:32:18.778Z",
        "_id": "5c4b1ec2ed8d3613050f35fe",
        "isSelectedFile": false,
        "id": "5c4b1ec2ed8d3613050f35fe"
      }
    ],
    "id": "We7Fobtcf"
  },
  {
    "name": "generative circles",
    "_id": "DNQGQaUxD",
    "updatedAt": "2021-06-10T11:01:54.168Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "60c1d54f424c5c2d9ec61eb2",
          "60c1d54f424c5c2d9ec61eb1",
          "60c1d54f424c5c2d9ec61eb3"
        ],
        "fileType": "folder",
        "_id": "60c1d54f424c5c2d9ec61eb4",
        "createdAt": "2021-06-10T11:01:54.168Z",
        "updatedAt": "2021-06-10T11:01:54.168Z",
        "id": "60c1d54f424c5c2d9ec61eb4"
      },
      {
        "name": "sketch.js",
        "content": "let MAX_DEPTH = 5;\n\nclass Element {\n  constructor(depth, x, y, size) {\n    print(\"new child\")\n    this.x = x\n    this.y = y\n    this.size = size \n    this.depth = depth\n    this.child = undefined;\n    \n    \n    print(depth)\n    if(depth < MAX_DEPTH) {\n      print(\"running this\")\n      let childSize = this.size * random(0.7, 0.8);\n      let childX = random(-this.size/2.2 + childSize/2, this.size/2.2 - childSize/2);\n      let childY = random(-this.size/2.2 + childSize/2, this.size/2.2 - childSize/2);\n      this.child = new Element(++depth, childX, childY, childSize)\n    }\n  }\n  \n  render() {\n    push();\n    translate(this.x, this.y);\n    circle(0, 0, this.size)\n    \n    if(this.child) {\n      this.child.render();\n    }\n    pop();\n  }\n}\n\nlet elements = []; \nlet gridNum = 20;\n\n\nfunction setup() {\n  createCanvas(600, 600);\n  \n  rectMode(CENTER);\n  \n  let grid = width / gridNum;\n  let padding = grid * 0.05\n  let elSize = grid - padding * 2;\n  \n  let elCount = 0;\n  \n  for (let i = padding + elSize / 2; i < width - padding; i += elSize + padding * 2)\n    for(let j = padding + elSize / 2; j < width - padding; j += elSize + padding * 2) {\n      elements[elCount++] = new Element(1, i, j, elSize);\n    }\n}\n\nfunction draw() {\n  background(255);\n  \n  for(let i = 0; i < elements.length; i++) {\n    elements[i].render();\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "60c1d54f424c5c2d9ec61eb1",
        "isSelectedFile": true,
        "createdAt": "2021-06-10T11:01:54.168Z",
        "updatedAt": "2021-06-10T11:01:54.168Z",
        "id": "60c1d54f424c5c2d9ec61eb1"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.3.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.3.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "60c1d54f424c5c2d9ec61eb2",
        "createdAt": "2021-06-10T11:01:54.168Z",
        "updatedAt": "2021-06-10T11:01:54.168Z",
        "id": "60c1d54f424c5c2d9ec61eb2"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "60c1d54f424c5c2d9ec61eb3",
        "createdAt": "2021-06-10T11:01:54.168Z",
        "updatedAt": "2021-06-10T11:01:54.168Z",
        "id": "60c1d54f424c5c2d9ec61eb3"
      }
    ],
    "createdAt": "2021-06-10T09:45:04.204Z",
    "id": "DNQGQaUxD"
  },
  {
    "name": "Generative Jim",
    "_id": "ErxTZAF-i",
    "updatedAt": "2021-10-20T10:27:34.446Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "616f3420c693b80e15ba9652",
          "616f339dc693b80e15ba964f",
          "616f339dc693b80e15ba964e",
          "616f339dc693b80e15ba9650"
        ],
        "fileType": "folder",
        "_id": "616f339dc693b80e15ba9651",
        "isSelectedFile": false,
        "createdAt": "2021-10-20T10:27:34.446Z",
        "updatedAt": "2021-10-20T10:27:34.446Z",
        "id": "616f339dc693b80e15ba9651"
      },
      {
        "name": "sketch.js",
        "content": "let jmSource;\nlet jmCanvas;\n\nlet pix;\n\nfunction preload() {\n  jmSource = loadImage(\"assets/jim-medium.jpeg\");\n}\n\nfunction setup() {\n  createCanvas(800, 800);\n  \n  console.log(jmSource.width, jmSource.height);\n\n  jmCanvas = createGraphics(jmSource.width, jmSource.height);\n  \n  let c;\n\n  for (let col = 0; col < jmSource.width; col += 3) {\n    for (let row = 0; row < jmSource.height; row += 3) {\n      c = jmSource.get(col, row);\n      \n      jmCanvas.stroke(c);\n      jmCanvas.line(col, row, col + random(-20, 20), row + random(-20, 20));\n    }\n  }\n\n  console.log(\"done.\");\n}\n\nfunction draw() {\n    background(255);\n    image(jmCanvas, 0, 0);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "616f339dc693b80e15ba964e",
        "isSelectedFile": true,
        "createdAt": "2021-10-20T10:27:34.446Z",
        "updatedAt": "2021-10-20T10:27:34.446Z",
        "id": "616f339dc693b80e15ba964e"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "616f339dc693b80e15ba964f",
        "isSelectedFile": false,
        "createdAt": "2021-10-20T10:27:34.446Z",
        "updatedAt": "2021-10-20T10:27:34.446Z",
        "id": "616f339dc693b80e15ba964f"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "616f339dc693b80e15ba9650",
        "isSelectedFile": false,
        "createdAt": "2021-10-20T10:27:34.446Z",
        "updatedAt": "2021-10-20T10:27:34.446Z",
        "id": "616f339dc693b80e15ba9650"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "616f3435c693b80e15ba9653",
          "616f3c4f5e5d490024448491"
        ],
        "fileType": "folder",
        "_id": "616f3420c693b80e15ba9652",
        "isSelectedFile": false,
        "createdAt": "2021-10-20T10:27:34.446Z",
        "updatedAt": "2021-10-20T10:27:34.446Z",
        "id": "616f3420c693b80e15ba9652"
      },
      {
        "name": "Joel-Brodsky-Jim-Morrison.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "616f3435c693b80e15ba9653",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/7cefa72a-47af-43bf-b619-e3ce788abc77.jpg",
        "isSelectedFile": false,
        "createdAt": "2021-10-20T10:27:34.446Z",
        "updatedAt": "2021-10-20T10:27:34.446Z",
        "id": "616f3435c693b80e15ba9653"
      },
      {
        "name": "jim-medium.jpeg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "616f3c4f5e5d490024448491",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/92093b77-8adf-4bbb-9efb-67f603467dd7.jpeg",
        "updatedAt": "2021-10-20T10:27:34.446Z",
        "createdAt": "2021-10-20T10:27:34.446Z",
        "isSelectedFile": false,
        "id": "616f3c4f5e5d490024448491"
      }
    ],
    "createdAt": "2021-10-19T21:22:32.183Z",
    "id": "ErxTZAF-i"
  },
  {
    "name": "Generative Jim v2",
    "_id": "q038Z7YXg",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "616fef1872e2c1416a5251e1",
          "616fef1872e2c1416a5251e4",
          "616fef1872e2c1416a5251e5",
          "616fef1872e2c1416a5251e6"
        ],
        "fileType": "folder",
        "_id": "616fef1872e2c1416a5251e0",
        "isSelectedFile": false,
        "createdAt": "2021-10-20T11:14:31.171Z",
        "updatedAt": "2021-10-20T11:14:31.171Z",
        "id": "616fef1872e2c1416a5251e0"
      },
      {
        "name": "sketch.js",
        "content": "let jmSource;\nlet jmCanvas;\n\nlet pix;\n\nfunction preload() {\n  jmSource = loadImage(\"assets/jim-medium.jpeg\");\n}\n\nfunction setup() {\n  frameRate(60);\n  pixelDensity(1);\n  \n  createCanvas(800, 800);\n  \n  image(jmSource, 0, 0);\n  \n  console.log(\"initializing pix...\");\n  \n  pix = [jmSource.width];\n  for (let i = 0; i < jmSource.height; i++) {\n    pix[i] = [jmSource.width];\n  }\n  \n  console.log(\"populating pix from source image...\");\n  \n  for (let row = 0; row < jmSource.height; row++) {\n    for (let col = 0; col < jmSource.width; col++) {\n      \n      pix[row][col] = [4];\n      \n      let color = jmSource.get(col, row);\n      \n      pix[row][col][0] = red(color);\n      pix[row][col][1] = green(color);\n      pix[row][col][2] = blue(color);\n      pix[row][col][3] = alpha(color);\n      \n    }\n  }\n  \n  console.log(\"pix initialized!\");\n      \n  \n  console.log(jmSource.width, jmSource.height);\n  \n  processImg();\n\n  console.log(\"done.\");\n}\n\nfunction draw() {\n    background(255);\n    processImg();\n    image(jmCanvas, 0, 0);\n}\n\nfunction processImg() {\n  jmCanvas = createGraphics(jmSource.width, jmSource.height);\n  \n  let d = map(mouseX, 0, 400, 1, 20, true);\n  \n  let c;\n\n  for (let col = 0; col < jmSource.width; col += 5) {\n    for (let row = 0; row < jmSource.height; row += 5) {\n      c = pix[row][col];\n      \n      jmCanvas.strokeWeight(2);\n      jmCanvas.stroke(c[0], c[1], c[2], c[3]);\n      jmCanvas.line(col, row, col + random(-d, d), row + random(-d, d));\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "616fef1872e2c1416a5251e5",
        "isSelectedFile": true,
        "createdAt": "2021-10-20T11:14:31.171Z",
        "updatedAt": "2021-10-20T11:14:31.171Z",
        "id": "616fef1872e2c1416a5251e5"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "616fef1872e2c1416a5251e4",
        "isSelectedFile": false,
        "createdAt": "2021-10-20T11:14:31.171Z",
        "updatedAt": "2021-10-20T11:14:31.171Z",
        "id": "616fef1872e2c1416a5251e4"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "616fef1872e2c1416a5251e6",
        "isSelectedFile": false,
        "createdAt": "2021-10-20T11:14:31.171Z",
        "updatedAt": "2021-10-20T11:14:31.171Z",
        "id": "616fef1872e2c1416a5251e6"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "616fef1872e2c1416a5251e2",
          "616fef1872e2c1416a5251e3"
        ],
        "fileType": "folder",
        "_id": "616fef1872e2c1416a5251e1",
        "isSelectedFile": false,
        "createdAt": "2021-10-20T11:14:31.171Z",
        "updatedAt": "2021-10-20T11:14:31.171Z",
        "id": "616fef1872e2c1416a5251e1"
      },
      {
        "name": "Joel-Brodsky-Jim-Morrison.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "616fef1872e2c1416a5251e2",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/ba184925-5f76-4403-a813-5f27832364ac.jpg",
        "isSelectedFile": false,
        "createdAt": "2021-10-20T11:14:31.171Z",
        "updatedAt": "2021-10-20T11:14:31.171Z",
        "id": "616fef1872e2c1416a5251e2"
      },
      {
        "name": "jim-medium.jpeg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "616fef1872e2c1416a5251e3",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/9ec11b16-3933-43ab-a183-feab8180b90d.jpeg",
        "updatedAt": "2021-10-20T11:14:31.171Z",
        "createdAt": "2021-10-20T11:14:31.171Z",
        "isSelectedFile": false,
        "id": "616fef1872e2c1416a5251e3"
      }
    ],
    "createdAt": "2021-10-20T10:27:37.458Z",
    "updatedAt": "2021-10-20T11:14:31.171Z",
    "id": "q038Z7YXg"
  },
  {
    "name": "Generative Jim v3 (pix)",
    "_id": "yep3bAEQy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6171ee82c1ee0835c5783216",
          "6171ee82c1ee0835c5783219",
          "6171ee82c1ee0835c578321a",
          "6171ee82c1ee0835c578321b"
        ],
        "fileType": "folder",
        "_id": "6171ee82c1ee0835c5783215",
        "isSelectedFile": false,
        "createdAt": "2021-10-21T23:01:02.259Z",
        "updatedAt": "2021-10-21T23:01:02.259Z",
        "id": "6171ee82c1ee0835c5783215"
      },
      {
        "name": "sketch.js",
        "content": "let jmSource;\nlet jmCanvas;\n\nlet pix;\n\nlet startMillis;\nlet finishMillis;\n\nfunction preload() {\n  jmSource = loadImage(\"assets/jim-medium.jpeg\");\n}\n\nfunction setup() {\n  \n  startMillis = millis();\n  \n  frameRate(60);\n  pixelDensity(1);\n  \n  createCanvas(800, 800);\n  \n  image(jmSource, 0, 0);\n  \n  console.log(\"initializing pix...\");\n  \n  pix = [jmSource.width];\n  for (let i = 0; i < jmSource.height; i++) {\n    pix[i] = [jmSource.width];\n  }\n  \n  console.log(\"populating pix from source image...\");\n  \n  for (let row = 0; row < jmSource.height; row++) {\n    for (let col = 0; col < jmSource.width; col++) {\n      \n      pix[row][col] = [4];\n      \n      let color = jmSource.get(col, row);\n      \n      pix[row][col][0] = red(color);\n      pix[row][col][1] = green(color);\n      pix[row][col][2] = blue(color);\n      pix[row][col][3] = alpha(color);\n      \n    }\n  }\n  \n  console.log(\"pix initialized!\");\n      \n  \n  console.log(jmSource.width, jmSource.height);\n  \n  processImg();\n\n  console.log(\"done.\");\n}\n\nfunction draw() {\n    background(255);\n    processImg();\n    image(jmCanvas, 0, 0);\n    // noLoop();\n    finishMillis = millis();\n    let elapsed = finishMillis - startMillis;\n    // console.log(\"Elapsed: \" + elapsed);\n}\n\nfunction processImg() {\n  jmCanvas = createGraphics(jmSource.width, jmSource.height);\n  \n  let d = map(mouseX, 0, 400, 1, 20, true);\n  \n  let c;\n\n  for (let col = 0; col < jmSource.width; col += 5) {\n    for (let row = 0; row < jmSource.height; row += 5) {\n      c = pix[row][col];\n      \n      jmCanvas.strokeWeight(2);\n      jmCanvas.stroke(c[0], c[1], c[2], c[3]);\n      jmCanvas.line(col, row, col + random(-d, d), row + random(-d, d));\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6171ee82c1ee0835c578321a",
        "isSelectedFile": true,
        "createdAt": "2021-10-21T23:01:02.259Z",
        "updatedAt": "2021-10-21T23:01:02.259Z",
        "id": "6171ee82c1ee0835c578321a"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6171ee82c1ee0835c5783219",
        "isSelectedFile": false,
        "createdAt": "2021-10-21T23:01:02.259Z",
        "updatedAt": "2021-10-21T23:01:02.259Z",
        "id": "6171ee82c1ee0835c5783219"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6171ee82c1ee0835c578321b",
        "isSelectedFile": false,
        "createdAt": "2021-10-21T23:01:02.259Z",
        "updatedAt": "2021-10-21T23:01:02.259Z",
        "id": "6171ee82c1ee0835c578321b"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "6171ee82c1ee0835c5783217",
          "6171ee82c1ee0835c5783218"
        ],
        "fileType": "folder",
        "_id": "6171ee82c1ee0835c5783216",
        "isSelectedFile": false,
        "createdAt": "2021-10-21T23:01:02.259Z",
        "updatedAt": "2021-10-21T23:01:02.259Z",
        "id": "6171ee82c1ee0835c5783216"
      },
      {
        "name": "Joel-Brodsky-Jim-Morrison.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6171ee82c1ee0835c5783217",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/860540b8-3c7d-4ad5-a53f-74b55e00b0f7.jpg",
        "isSelectedFile": false,
        "createdAt": "2021-10-21T23:01:02.259Z",
        "updatedAt": "2021-10-21T23:01:02.259Z",
        "id": "6171ee82c1ee0835c5783217"
      },
      {
        "name": "jim-medium.jpeg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6171ee82c1ee0835c5783218",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/18797d87-b9b5-4f5a-98a6-a9efd89126f3.jpeg",
        "updatedAt": "2021-10-21T23:01:02.259Z",
        "createdAt": "2021-10-21T23:01:02.259Z",
        "isSelectedFile": false,
        "id": "6171ee82c1ee0835c5783218"
      }
    ],
    "createdAt": "2021-10-21T22:49:39.554Z",
    "updatedAt": "2021-10-21T23:01:02.259Z",
    "id": "yep3bAEQy"
  },
  {
    "name": "Generative Jim v4 (pixels)",
    "_id": "JVipAYtoR",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6171eda65f350511204b033a",
          "6171eda65f350511204b033d",
          "6171eda65f350511204b033e",
          "6171eda65f350511204b033f"
        ],
        "fileType": "folder",
        "_id": "6171eda65f350511204b0339",
        "isSelectedFile": false,
        "createdAt": "2021-10-21T23:00:33.171Z",
        "updatedAt": "2021-10-21T23:00:33.171Z",
        "id": "6171eda65f350511204b0339"
      },
      {
        "name": "sketch.js",
        "content": "let jmSource;\nlet jmCanvas;\nlet jmCanvasProcessed;\n\nlet startMillis;\nlet finishMillis;\n\nfunction preload() {\n  jmSource = loadImage(\"assets/jim-medium.jpeg\");\n}\n\nfunction setup() {\n  \n  startMillis = millis();\n  \n  frameRate(60);\n  pixelDensity(1);\n  \n  createCanvas(800, 800);\n  \n\n  console.log(\"initializing pixels...\");\n  \n  jmCanvas = createGraphics(jmSource.width, jmSource.height);\n  jmCanvas.image(jmSource, 0, 0);\n  jmCanvas.loadPixels();\n  \n  \n  console.log(\"pix initialized!\");\n      \n  \n  console.log(jmSource.width, jmSource.height);\n  \n  processImg();\n\n  console.log(\"done.\");\n}\n\nfunction draw() {\n    background(255);\n    processImg();\n  \n    // image(jmCanvas, 0, 0);\n  \n  \n    image(jmCanvasProcessed, 0, 0);\n    // noLoop();\n    finishMillis = millis();\n    let elapsed = finishMillis - startMillis;\n    // console.log(\"Elapsed: \" + elapsed);\n}\n\nfunction processImg() {\n  jmCanvasProcessed = createGraphics(jmSource.width, jmSource.height);\n  \n  let d = map(mouseX, 0, 400, 1, 20, true);\n  \n  let pixPos;  \n  let c;\n  \n  for (let col = 0; col < jmSource.width; col += 5) {\n    for (let row = 0; row < jmSource.height; row += 5) {\n      \n      pixPos = (col + row * jmSource.width) * 4;\n      \n      c = jmCanvas.pixels[pixPos];\n      \n      jmCanvasProcessed.strokeWeight(2);\n      jmCanvasProcessed.stroke(c);\n      jmCanvasProcessed.line(col, row, col + random(-d, d), row + random(-d, d));\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6171eda65f350511204b033e",
        "isSelectedFile": true,
        "createdAt": "2021-10-21T23:00:33.171Z",
        "updatedAt": "2021-10-21T23:00:33.171Z",
        "id": "6171eda65f350511204b033e"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6171eda65f350511204b033d",
        "isSelectedFile": false,
        "createdAt": "2021-10-21T23:00:33.171Z",
        "updatedAt": "2021-10-21T23:00:33.171Z",
        "id": "6171eda65f350511204b033d"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6171eda65f350511204b033f",
        "isSelectedFile": false,
        "createdAt": "2021-10-21T23:00:33.171Z",
        "updatedAt": "2021-10-21T23:00:33.171Z",
        "id": "6171eda65f350511204b033f"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "6171eda65f350511204b033b",
          "6171eda65f350511204b033c"
        ],
        "fileType": "folder",
        "_id": "6171eda65f350511204b033a",
        "isSelectedFile": false,
        "createdAt": "2021-10-21T23:00:33.171Z",
        "updatedAt": "2021-10-21T23:00:33.171Z",
        "id": "6171eda65f350511204b033a"
      },
      {
        "name": "Joel-Brodsky-Jim-Morrison.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6171eda65f350511204b033b",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/76c5ef5d-137a-4674-a7dc-251e16d0888f.jpg",
        "isSelectedFile": false,
        "createdAt": "2021-10-21T23:00:33.171Z",
        "updatedAt": "2021-10-21T23:00:33.171Z",
        "id": "6171eda65f350511204b033b"
      },
      {
        "name": "jim-medium.jpeg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6171eda65f350511204b033c",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/975de269-0779-49fb-baa6-ca11f342a551.jpeg",
        "updatedAt": "2021-10-21T23:00:33.171Z",
        "createdAt": "2021-10-21T23:00:33.171Z",
        "isSelectedFile": false,
        "id": "6171eda65f350511204b033c"
      }
    ],
    "createdAt": "2021-10-21T22:45:59.832Z",
    "updatedAt": "2021-10-21T23:00:33.171Z",
    "id": "JVipAYtoR"
  },
  {
    "name": "Generative Jim v4 (pixels) copy",
    "_id": "j5816Uzou",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "629fa627dca8357e8568fc21",
          "629fa627dca8357e8568fc24",
          "629fa627dca8357e8568fc25",
          "629fa627dca8357e8568fc26"
        ],
        "fileType": "folder",
        "_id": "629fa627dca8357e8568fc20",
        "isSelectedFile": false,
        "createdAt": "2022-06-07T19:37:54.626Z",
        "updatedAt": "2022-06-07T19:37:54.626Z",
        "id": "629fa627dca8357e8568fc20"
      },
      {
        "name": "sketch.js",
        "content": "let jmSource;\nlet jmCanvas;\nlet jmCanvasProcessed;\n\nlet startMillis;\nlet finishMillis;\n\nfunction preload() {\n  jmSource = loadImage(\"assets/jim-medium.jpeg\");\n}\n\nfunction setup() {\n  \n  startMillis = millis();\n  \n  frameRate(60);\n  pixelDensity(1);\n  \n  createCanvas(800, 800);\n  \n\n  console.log(\"initializing pixels...\");\n  \n  jmCanvas = createGraphics(jmSource.width, jmSource.height);\n  jmCanvas.image(jmSource, 0, 0);\n  jmCanvas.loadPixels();\n  \n  \n  console.log(\"pix initialized!\");\n      \n  \n  console.log(jmSource.width, jmSource.height);\n  \n  processImg();\n\n  console.log(\"done.\");\n}\n\nfunction draw() {\n    background(255);\n    processImg();\n  \n    // image(jmCanvas, 0, 0);\n  \n  \n    image(jmCanvasProcessed, 0, 0);\n    // noLoop();\n    finishMillis = millis();\n    let elapsed = finishMillis - startMillis;\n    // console.log(\"Elapsed: \" + elapsed);\n}\n\nfunction processImg() {\n  jmCanvasProcessed = createGraphics(jmSource.width, jmSource.height);\n  \n  let d = map(mouseX, 0, 400, 1, 20, true);\n  \n  let pixPos;  \n  let c;\n  \n  for (let col = 0; col < jmSource.width; col += 5) {\n    for (let row = 0; row < jmSource.height; row += 5) {\n      \n      pixPos = (col + row * jmSource.width) * 4;\n      \n      c = jmCanvas.pixels[pixPos];\n      \n      // jmCanvasProcessed.strokeWeight(2);\n      // jmCanvasProcessed.stroke(c);\n      jmCanvasProcessed.noStroke();\n      jmCanvasProcessed.fill(c, 75);\n      // jmCanvasProcessed.line(col, row, col + random(-d, d), row + random(-d, d));\n      jmCanvasProcessed.circle(col, row, random(d-1, d+1));\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "629fa627dca8357e8568fc25",
        "isSelectedFile": true,
        "createdAt": "2022-06-07T19:37:54.626Z",
        "updatedAt": "2022-06-07T19:37:54.626Z",
        "id": "629fa627dca8357e8568fc25"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "629fa627dca8357e8568fc24",
        "isSelectedFile": false,
        "createdAt": "2022-06-07T19:37:54.626Z",
        "updatedAt": "2022-06-07T19:37:54.626Z",
        "id": "629fa627dca8357e8568fc24"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "629fa627dca8357e8568fc26",
        "isSelectedFile": false,
        "createdAt": "2022-06-07T19:37:54.626Z",
        "updatedAt": "2022-06-07T19:37:54.626Z",
        "id": "629fa627dca8357e8568fc26"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "629fa627dca8357e8568fc22",
          "629fa627dca8357e8568fc23"
        ],
        "fileType": "folder",
        "_id": "629fa627dca8357e8568fc21",
        "isSelectedFile": false,
        "createdAt": "2022-06-07T19:37:54.626Z",
        "updatedAt": "2022-06-07T19:37:54.626Z",
        "id": "629fa627dca8357e8568fc21"
      },
      {
        "name": "Joel-Brodsky-Jim-Morrison.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "629fa627dca8357e8568fc22",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/fad2354b-a5f8-45fa-8ae2-4938fd94583d.jpg",
        "isSelectedFile": false,
        "createdAt": "2022-06-07T19:37:54.626Z",
        "updatedAt": "2022-06-07T19:37:54.626Z",
        "id": "629fa627dca8357e8568fc22"
      },
      {
        "name": "jim-medium.jpeg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "629fa627dca8357e8568fc23",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/d5ee849c-3a27-43af-9f81-ec2f8b0accc2.jpeg",
        "updatedAt": "2022-06-07T19:37:54.626Z",
        "createdAt": "2022-06-07T19:37:54.626Z",
        "isSelectedFile": false,
        "id": "629fa627dca8357e8568fc23"
      }
    ],
    "createdAt": "2022-06-07T19:25:29.156Z",
    "updatedAt": "2022-06-07T19:37:54.626Z",
    "id": "j5816Uzou"
  },
  {
    "name": "genuary2022: day 1 - 10000 chords HOW-TO",
    "_id": "_uUjyy4TJ",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61d0f923d37758b88efc731f",
          "61d0f923d37758b88efc7320",
          "61d0f923d37758b88efc7321"
        ],
        "fileType": "folder",
        "_id": "61d0f923d37758b88efc731e",
        "createdAt": "2022-01-02T02:22:33.003Z",
        "updatedAt": "2022-01-02T02:22:33.003Z",
        "isSelectedFile": false,
        "id": "61d0f923d37758b88efc731e"
      },
      {
        "name": "sketch.js",
        "content": "let centreX;\nlet centreY;\nlet radius;\n\nlet canvasWidth = 800;\nlet canvasHeight = 800;\nlet size;\nlet cvn;\nlet pointCvn;\nlet lineCvn;\n\nfunction setup() {\n  cvn = createCanvas(canvasWidth, canvasHeight);\n  pointCvn = createGraphics(canvasWidth, canvasHeight);\n  lineCvn = createGraphics(canvasWidth, canvasHeight);\n  size = canvasWidth < canvasHeight? canvasWidth: canvasHeight;\n  centreX = width / 2;\n  centreY = height / 2;\n  radius = size * 0.666 / 2;\n  pointCvn.fill(255);\n  pointCvn.stroke(255);\n  lineCvn.background(0);\n  lineCvn.stroke(255, 255, 255, 5);\n  stroke(255, 255, 255, 5);\n}\n\nfunction draw() { \n  pointCvn.clear();\n  \n  let angle1 = frameCount / 100;\n  let angle2 = frameCount / 100 * 2;\n  \n  let p1x = centreX + cos(angle1) * radius;\n  let p1y = centreY + sin(angle1) * radius;\n  let p2x = centreX + cos(angle2) * radius;\n  let p2y = centreY + sin(angle2) * radius;\n  \n  pointCvn.circle(p1x, p1y, 10);\n  pointCvn.circle(p2x, p2y, 10);\n  pointCvn.line(p1x, p1y, p2x, p2y);\n  \n  lineCvn.line(p1x, p1y, p2x, p2y);\n  \n  image(lineCvn, 0, 0);\n  \n  if(frameCount >= 10000) {\n    print(\"Stopped at frame: \" + frameCount);\n    noLoop();\n  } else {\n    image(pointCvn, 0, 0);\n  }\n}\n\nfunction keyPressed() {\n  saveCanvas(cvn, '10000-chords');\n}",
        "children": [],
        "fileType": "file",
        "_id": "61d0f923d37758b88efc7320",
        "isSelectedFile": true,
        "createdAt": "2022-01-02T02:22:33.003Z",
        "updatedAt": "2022-01-02T02:22:33.003Z",
        "id": "61d0f923d37758b88efc7320"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61d0f923d37758b88efc731f",
        "createdAt": "2022-01-02T02:22:33.003Z",
        "updatedAt": "2022-01-02T02:22:33.003Z",
        "isSelectedFile": false,
        "id": "61d0f923d37758b88efc731f"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61d0f923d37758b88efc7321",
        "createdAt": "2022-01-02T02:22:33.003Z",
        "updatedAt": "2022-01-02T02:22:33.003Z",
        "isSelectedFile": false,
        "id": "61d0f923d37758b88efc7321"
      }
    ],
    "createdAt": "2022-01-02T01:00:19.880Z",
    "updatedAt": "2022-01-02T02:22:33.003Z",
    "id": "_uUjyy4TJ"
  },
  {
    "name": "genurary2022: day 1 - 10000 chords",
    "_id": "1ElIYzRUR",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61d0a7bed37758b88efc731b",
          "61d0a7bed37758b88efc731c",
          "61d0a7bed37758b88efc731d"
        ],
        "fileType": "folder",
        "_id": "61d0a7bed37758b88efc731a",
        "createdAt": "2022-01-02T12:57:44.607Z",
        "updatedAt": "2022-01-02T12:57:44.607Z",
        "isSelectedFile": false,
        "id": "61d0a7bed37758b88efc731a"
      },
      {
        "name": "sketch.js",
        "content": "let centreX;\nlet centreY;\nlet radius;\n\nlet canvasWidth = 800;\nlet canvasHeight = 800;\nlet size;\nlet cvn;\n\nfunction setup() {\n  cvn = createCanvas(canvasWidth, canvasHeight);\n  size = canvasWidth < canvasHeight? canvasWidth: canvasHeight;\n  centreX = width / 2;\n  centreY = height / 2;\n  radius = size * 0.666 / 2;\n  background(0);\n  stroke(255, 255, 255, 5);\n}\n\nfunction draw() { \n  let angle1 = frameCount / 100;\n  let angle2 = frameCount / 100 * 2;\n  \n  let p1x = centreX + cos(angle1) * radius;\n  let p1y = centreY + sin(angle1) * radius;\n  let p2x = centreX + cos(angle2) * radius;\n  let p2y = centreY + sin(angle2) * radius;\n\n  line(p1x, p1y, p2x, p2y);\n  \n  if(frameCount >= 10000) {\n    print(\"Stopped at frame: \" + frameCount);\n    noLoop();\n  }\n}\n\nfunction keyPressed() {\n  saveCanvas(cvn, '10000-chords');\n}",
        "children": [],
        "fileType": "file",
        "_id": "61d0a7bed37758b88efc731c",
        "isSelectedFile": true,
        "createdAt": "2022-01-02T12:57:44.607Z",
        "updatedAt": "2022-01-02T12:57:44.607Z",
        "id": "61d0a7bed37758b88efc731c"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61d0a7bed37758b88efc731b",
        "createdAt": "2022-01-02T12:57:44.607Z",
        "updatedAt": "2022-01-02T12:57:44.607Z",
        "isSelectedFile": false,
        "id": "61d0a7bed37758b88efc731b"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61d0a7bed37758b88efc731d",
        "createdAt": "2022-01-02T12:57:44.607Z",
        "updatedAt": "2022-01-02T12:57:44.607Z",
        "isSelectedFile": false,
        "id": "61d0a7bed37758b88efc731d"
      }
    ],
    "createdAt": "2022-01-01T19:13:03.011Z",
    "updatedAt": "2022-01-02T12:57:44.607Z",
    "id": "1ElIYzRUR"
  },
  {
    "name": "genurary2022: day 2 - dither",
    "_id": "Qp-cDU4cr",
    "updatedAt": "2022-01-03T05:53:00.840Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61d19ce30c872ef66cfb829a",
          "61d19ccc0c872ef66cfb8297",
          "61d19ccc0c872ef66cfb8296",
          "61d19ccc0c872ef66cfb8298"
        ],
        "fileType": "folder",
        "_id": "61d19ccc0c872ef66cfb8299",
        "createdAt": "2022-01-03T05:53:00.840Z",
        "updatedAt": "2022-01-03T05:53:00.840Z",
        "isSelectedFile": false,
        "id": "61d19ccc0c872ef66cfb8299"
      },
      {
        "name": "sketch.js",
        "content": "let img;\n\nfunction preload() {\n  img = loadImage(\"assets/10000-chords.png\");\n}\n\nfunction setup() {\n  createCanvas(img.width, img.height);\n  dither(img);\n}\n\nfunction draw() {\n  background(220);\n  \n  image(img, 0, 0);\n}\n\nfunction dither(image) {\n  img.loadPixels();\n  \n  let r;\n  \n  for(let i = 0; i < img.pixels.length; i += 4) {\n    if (img.pixels[i] > 0) {\n      r = random(1, 255);\n      if (img.pixels[i] < r) {\n        img.pixels[i] = 0;\n        img.pixels[i+1] = 0;\n        img.pixels[i+2] = 0;\n      } else {\n        img.pixels[i] = 255;\n        img.pixels[i+1] = 255;\n        img.pixels[i+2] = 255;\n      }\n      img.updatePixels();\n    }\n  }\n}\n\nfunction keyPressed() {\n  saveCanvas('genuary-dither');\n}",
        "children": [],
        "fileType": "file",
        "_id": "61d19ccc0c872ef66cfb8296",
        "isSelectedFile": true,
        "createdAt": "2022-01-03T05:53:00.840Z",
        "updatedAt": "2022-01-03T05:53:00.840Z",
        "id": "61d19ccc0c872ef66cfb8296"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61d19ccc0c872ef66cfb8297",
        "createdAt": "2022-01-03T05:53:00.840Z",
        "updatedAt": "2022-01-03T05:53:00.840Z",
        "isSelectedFile": false,
        "id": "61d19ccc0c872ef66cfb8297"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61d19ccc0c872ef66cfb8298",
        "createdAt": "2022-01-03T05:53:00.840Z",
        "updatedAt": "2022-01-03T05:53:00.840Z",
        "isSelectedFile": false,
        "id": "61d19ccc0c872ef66cfb8298"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "61d19ced0c872ef66cfb829b"
        ],
        "fileType": "folder",
        "_id": "61d19ce30c872ef66cfb829a",
        "createdAt": "2022-01-03T05:53:00.840Z",
        "updatedAt": "2022-01-03T05:53:00.840Z",
        "isSelectedFile": false,
        "id": "61d19ce30c872ef66cfb829a"
      },
      {
        "name": "10000-chords.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61d19ced0c872ef66cfb829b",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/72362d8f-48be-456f-b29f-006f71eb5e48.png",
        "createdAt": "2022-01-03T05:53:00.840Z",
        "updatedAt": "2022-01-03T05:53:00.840Z",
        "isSelectedFile": false,
        "id": "61d19ced0c872ef66cfb829b"
      }
    ],
    "createdAt": "2022-01-02T12:57:57.485Z",
    "id": "Qp-cDU4cr"
  },
  {
    "name": "genurary2022: day 2 - dither v2",
    "_id": "rgS6LgZrT",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61d1a7830c872ef66cfb829d",
          "61d1a7830c872ef66cfb829f",
          "61d1a7830c872ef66cfb82a0",
          "61d1a7830c872ef66cfb82a1"
        ],
        "fileType": "folder",
        "_id": "61d1a7830c872ef66cfb829c",
        "createdAt": "2022-01-02T16:00:27.138Z",
        "updatedAt": "2022-01-02T16:00:27.138Z",
        "isSelectedFile": false,
        "id": "61d1a7830c872ef66cfb829c"
      },
      {
        "name": "sketch.js",
        "content": "let img;\nlet dImg;\n\nlet vRes = 50;\nlet hRes = 50;\nlet spacing = 0;\n\nfunction preload() {\n  img = loadImage(\"assets/10000-chords.png\");\n}\n\nfunction setup() {\n  createCanvas(img.width, img.height);\n  dImg = dither(img);\n}\n\nfunction draw() {\n  background(220);\n  \n  image(dImg, 0, 0);\n}\n\nfunction dither(image) {\n  img.loadPixels();\n  \n  out = createGraphics(img.width, img.height);\n  out.background(255);\n  out.stroke(0);\n  out.strokeCap(SQUARE);\n  \n  vSpacing = out.height / vRes;\n  hSpacing = out.width / hRes;\n  out.strokeWeight(0);\n\n  \n  let pix;\n  let w;\n  \n  for(let y = 0; y < out.height; y += vSpacing) {\n    for(let x = 0; x < out.width; x += hSpacing) {\n      pix = img.get(x + floor(hSpacing / 2), y + floor(vSpacing / 2));\n      w = map(pix[0], 0, 255, vSpacing, 0);\n      out.strokeWeight(w);\n      out.line(x, y, x + hSpacing, y);\n    }\n  }\n\n  return out;\n}\n\nfunction keyPressed() {\n  saveCanvas('genuary-dither');\n}",
        "children": [],
        "fileType": "file",
        "_id": "61d1a7830c872ef66cfb82a0",
        "isSelectedFile": true,
        "createdAt": "2022-01-02T16:00:27.138Z",
        "updatedAt": "2022-01-02T16:00:27.138Z",
        "id": "61d1a7830c872ef66cfb82a0"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61d1a7830c872ef66cfb829f",
        "createdAt": "2022-01-02T16:00:27.138Z",
        "updatedAt": "2022-01-02T16:00:27.138Z",
        "isSelectedFile": false,
        "id": "61d1a7830c872ef66cfb829f"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61d1a7830c872ef66cfb82a1",
        "createdAt": "2022-01-02T16:00:27.138Z",
        "updatedAt": "2022-01-02T16:00:27.138Z",
        "isSelectedFile": false,
        "id": "61d1a7830c872ef66cfb82a1"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "61d1a7830c872ef66cfb829e"
        ],
        "fileType": "folder",
        "_id": "61d1a7830c872ef66cfb829d",
        "createdAt": "2022-01-02T16:00:27.138Z",
        "updatedAt": "2022-01-02T16:00:27.138Z",
        "isSelectedFile": false,
        "id": "61d1a7830c872ef66cfb829d"
      },
      {
        "name": "10000-chords.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61d1a7830c872ef66cfb829e",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/506c58b7-e389-4892-8e06-0510e0c3e199.png",
        "createdAt": "2022-01-02T16:00:27.138Z",
        "updatedAt": "2022-01-02T16:00:27.138Z",
        "isSelectedFile": false,
        "id": "61d1a7830c872ef66cfb829e"
      }
    ],
    "createdAt": "2022-01-02T13:24:20.845Z",
    "updatedAt": "2022-01-02T16:00:27.138Z",
    "id": "rgS6LgZrT"
  },
  {
    "name": "genurary2022: day 2 - dither v3",
    "_id": "m4IcQ5xT7",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61d1cba30c872ef66cfb82a3",
          "61d1cba30c872ef66cfb82a5",
          "61d1cba30c872ef66cfb82a6",
          "61d1cba30c872ef66cfb82a7"
        ],
        "fileType": "folder",
        "_id": "61d1cba30c872ef66cfb82a2",
        "createdAt": "2022-01-02T15:58:36.062Z",
        "updatedAt": "2022-01-02T15:58:36.062Z",
        "isSelectedFile": false,
        "id": "61d1cba30c872ef66cfb82a2"
      },
      {
        "name": "sketch.js",
        "content": "let img;\nlet dImg;\n\nlet vRes = 50;\nlet hRes = 50;\nlet spacing = 0;\n\nfunction preload() {\n  img = loadImage(\"assets/10000-chords.png\");\n}\n\nfunction setup() {\n  createCanvas(img.width, img.height);\n  dImg = dither(img);\n}\n\nfunction draw() {\n  background(220);\n  \n  image(dImg, 0, 0);\n}\n\nfunction dither(image) {\n  img.loadPixels();\n  \n  out = createGraphics(img.width, img.height);\n  out.background(255);\n  out.noStroke(0);\n  out.fill(0);\n  out.rectMode(CENTER);\n  out.strokeCap(SQUARE);\n  \n  vSpacing = out.height / vRes;\n  hSpacing = out.width / hRes;\n  out.strokeWeight(0);\n\n  \n  let pix;\n  let w;\n  \n  for(let y = 0; y < out.height; y += vSpacing) {\n    for(let x = 0; x < out.width; x += hSpacing) {\n      pix = img.get(x + floor(hSpacing / 2), y + floor(vSpacing / 2));\n      w = map(pix[0], 0, 255, vSpacing, 0);\n      out.square(x, y, w);\n    }\n  }\n\n  return out;\n}\n\nfunction keyPressed() {\n  saveCanvas('genuary-dither');\n}",
        "children": [],
        "fileType": "file",
        "_id": "61d1cba30c872ef66cfb82a6",
        "isSelectedFile": true,
        "createdAt": "2022-01-02T15:58:36.062Z",
        "updatedAt": "2022-01-02T15:58:36.062Z",
        "id": "61d1cba30c872ef66cfb82a6"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61d1cba30c872ef66cfb82a5",
        "createdAt": "2022-01-02T15:58:36.062Z",
        "updatedAt": "2022-01-02T15:58:36.062Z",
        "isSelectedFile": false,
        "id": "61d1cba30c872ef66cfb82a5"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61d1cba30c872ef66cfb82a7",
        "createdAt": "2022-01-02T15:58:36.062Z",
        "updatedAt": "2022-01-02T15:58:36.062Z",
        "isSelectedFile": false,
        "id": "61d1cba30c872ef66cfb82a7"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "61d1cba30c872ef66cfb82a4"
        ],
        "fileType": "folder",
        "_id": "61d1cba30c872ef66cfb82a3",
        "createdAt": "2022-01-02T15:58:36.062Z",
        "updatedAt": "2022-01-02T15:58:36.062Z",
        "isSelectedFile": false,
        "id": "61d1cba30c872ef66cfb82a3"
      },
      {
        "name": "10000-chords.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61d1cba30c872ef66cfb82a4",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/a6a61c5d-3185-4df7-a870-9d6e44462a02.png",
        "createdAt": "2022-01-02T15:58:36.062Z",
        "updatedAt": "2022-01-02T15:58:36.062Z",
        "isSelectedFile": false,
        "id": "61d1cba30c872ef66cfb82a4"
      }
    ],
    "createdAt": "2022-01-02T15:58:28.801Z",
    "updatedAt": "2022-01-02T15:58:36.062Z",
    "id": "m4IcQ5xT7"
  },
  {
    "name": "genurary2022: day 3 - space v1",
    "_id": "IRiNwCIQD",
    "updatedAt": "2022-01-03T06:44:51.058Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61d28f480c872ef66cfb82a9",
          "61d28f480c872ef66cfb82a8",
          "61d28f480c872ef66cfb82aa"
        ],
        "fileType": "folder",
        "_id": "61d28f480c872ef66cfb82ab",
        "createdAt": "2022-01-03T06:44:51.058Z",
        "updatedAt": "2022-01-03T06:44:51.058Z",
        "isSelectedFile": false,
        "id": "61d28f480c872ef66cfb82ab"
      },
      {
        "name": "sketch.js",
        "content": "let space = 0.666;\nlet cvn;\nlet size;\n\nfunction setup() {  \n  cvn = createCanvas(windowWidth, windowHeight);\n  size = windowWidth < windowHeight? windowWidth: windowHeight;\n  size = size * space;\n  background(220);\n}\n\nfunction draw() {\n  \n  let x = random(0, width);\n  let y = random(0, height);\n  let r = random(10, 50);\n  \n  let d = dist(x, y, width/2, height/2);\n  \n  if (d > size/2 + r) {\n    circle(x, y, r);\n  }\n}\n\nfunction keyPressed() {\n  saveCanvas('genuary-space');\n}",
        "children": [],
        "fileType": "file",
        "_id": "61d28f480c872ef66cfb82a8",
        "isSelectedFile": true,
        "createdAt": "2022-01-03T06:44:51.058Z",
        "updatedAt": "2022-01-03T06:44:51.058Z",
        "id": "61d28f480c872ef66cfb82a8"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61d28f480c872ef66cfb82a9",
        "createdAt": "2022-01-03T06:44:51.058Z",
        "updatedAt": "2022-01-03T06:44:51.058Z",
        "isSelectedFile": false,
        "id": "61d28f480c872ef66cfb82a9"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61d28f480c872ef66cfb82aa",
        "createdAt": "2022-01-03T06:44:51.058Z",
        "updatedAt": "2022-01-03T06:44:51.058Z",
        "isSelectedFile": false,
        "id": "61d28f480c872ef66cfb82aa"
      }
    ],
    "createdAt": "2022-01-03T05:55:13.308Z",
    "id": "IRiNwCIQD"
  },
  {
    "name": "genurary2022: day 3 - space v2",
    "_id": "HaAMx-46i",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61d2931abf000b2ef2382a1f",
          "61d2931abf000b2ef2382a20",
          "61d2931abf000b2ef2382a21"
        ],
        "fileType": "folder",
        "_id": "61d2931abf000b2ef2382a1e",
        "createdAt": "2022-01-03T07:09:02.704Z",
        "updatedAt": "2022-01-03T07:09:02.704Z",
        "isSelectedFile": false,
        "id": "61d2931abf000b2ef2382a1e"
      },
      {
        "name": "sketch.js",
        "content": "let space = 0.6;\nlet cvn;\nlet size;\n\nfunction setup() {  \n  cvn = createCanvas(windowWidth, windowHeight);\n  size = windowWidth < windowHeight? windowWidth: windowHeight;\n  size = size * space;\n  background(0);\n}\n\nfunction draw() {  \n  let x = random(0, width);\n  let y = random(0, height);\n  let d = dist(x, y, width/2, height/2);\n  \n  r = random(d/50, d/5);\n  \n  if (d > size/2 + r) {\n    circle(x, y, r);\n  }\n}\n\nfunction keyPressed() {\n  saveCanvas('genuary-space');\n}",
        "children": [],
        "fileType": "file",
        "_id": "61d2931abf000b2ef2382a20",
        "isSelectedFile": true,
        "createdAt": "2022-01-03T07:09:02.704Z",
        "updatedAt": "2022-01-03T07:09:02.704Z",
        "id": "61d2931abf000b2ef2382a20"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61d2931abf000b2ef2382a1f",
        "createdAt": "2022-01-03T07:09:02.704Z",
        "updatedAt": "2022-01-03T07:09:02.704Z",
        "isSelectedFile": false,
        "id": "61d2931abf000b2ef2382a1f"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61d2931abf000b2ef2382a21",
        "createdAt": "2022-01-03T07:09:02.704Z",
        "updatedAt": "2022-01-03T07:09:02.704Z",
        "isSelectedFile": false,
        "id": "61d2931abf000b2ef2382a21"
      }
    ],
    "createdAt": "2022-01-03T06:09:30.436Z",
    "updatedAt": "2022-01-03T07:09:02.704Z",
    "id": "HaAMx-46i"
  },
  {
    "name": "genurary2022: day 3 - space v3",
    "_id": "ynLM0wvYJ",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61d295c8bf000b2ef2382a23",
          "61d295c8bf000b2ef2382a24",
          "61d295c8bf000b2ef2382a25"
        ],
        "fileType": "folder",
        "_id": "61d295c8bf000b2ef2382a22",
        "createdAt": "2022-01-03T06:42:09.349Z",
        "updatedAt": "2022-01-03T06:42:09.349Z",
        "isSelectedFile": false,
        "id": "61d295c8bf000b2ef2382a22"
      },
      {
        "name": "sketch.js",
        "content": "let space = 0.6;\nlet cvn;\nlet size;\nlet hue = 200;\n\nfunction setup() {  \n  cvn = createCanvas(windowWidth, windowHeight);\n  size = windowWidth < windowHeight? windowWidth: windowHeight;\n  size = size * space;\n  colorMode(HSB);\n  background(0);\n  noStroke();\n}\n\nfunction draw() {  \n  let x = random(0, width);\n  let y = random(0, height);\n  let d = dist(x, y, width/2, height/2);\n  \n  let r = random(d/100, d/20);\n  \n  let h = random(hue - 25, hue + 25); \n  let b = map(d, 150, 400, 0, 100);\n  let s = 50;\n  \n  fill(h,s,b, 0.5);\n  \n  d = dist(x, y, width/2, height/2);\n  \n  circle(x, y, r);\n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "61d295c8bf000b2ef2382a24",
        "isSelectedFile": true,
        "createdAt": "2022-01-03T06:42:09.349Z",
        "updatedAt": "2022-01-03T06:42:09.349Z",
        "id": "61d295c8bf000b2ef2382a24"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61d295c8bf000b2ef2382a23",
        "createdAt": "2022-01-03T06:42:09.349Z",
        "updatedAt": "2022-01-03T06:42:09.349Z",
        "isSelectedFile": false,
        "id": "61d295c8bf000b2ef2382a23"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61d295c8bf000b2ef2382a25",
        "createdAt": "2022-01-03T06:42:09.349Z",
        "updatedAt": "2022-01-03T06:42:09.349Z",
        "isSelectedFile": false,
        "id": "61d295c8bf000b2ef2382a25"
      }
    ],
    "createdAt": "2022-01-03T06:20:56.565Z",
    "updatedAt": "2022-01-03T06:42:09.349Z",
    "id": "ynLM0wvYJ"
  },
  {
    "name": "genurary2022: day 4 - next next fidenza v1",
    "_id": "obAw8AcCG",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61d333a55558ea7bafbad328",
          "61d333a55558ea7bafbad329",
          "61d333a55558ea7bafbad32a"
        ],
        "fileType": "folder",
        "_id": "61d333a55558ea7bafbad327",
        "createdAt": "2022-03-31T03:32:23.177Z",
        "updatedAt": "2022-03-31T03:32:23.177Z",
        "isSelectedFile": false,
        "id": "61d333a55558ea7bafbad327"
      },
      {
        "name": "sketch.js",
        "content": "/*  \n *  Day 4: Next Next Fidenza\n *  by @ktorn\n *  for #genuary2022\n *\n *  It 'cheats' by using a fixed set of lines,\n *  but whose points/lines were hand-drawn (pun not intended)\n *  with the help of this sketch.\n *\n *  The overall shape here matters (to me).\n */\n\nlet cvn;\nlet hue = 200;\nlet points;\nlet strokeT = 65;\nlet lineColours;\n\nfunction setup() {  \n  cvn = createCanvas(800, 800);\n  colorMode(HSB);\n  background(0);\n  noStroke();\n  strokeCap(SQUARE);\n  \n  points = [];\n  lineColours = [];\n  \n  prePop();\n}\n\n\nfunction draw() {  \n  background(0);\n  \n  translate(30, 30);  // couldn't even draw in the centre of the canvas, duh\n  \n  // you can't see these, but I could, in the making of this sketch\n  // kept here because I may need them again.\n  fill(0);\n  noStroke();\n  for (let i = 0; i < points.length; i++) {\n    let p = points[i];\n    circle(p.x, p.y, 5);\n  }\n  \n  noFill();\n  strokeWeight(strokeT);\n  colorCount = 0;\n  if(points.length > 3) {\n    \n    // weird loop works surprisingly well\n    for(let s = 4; s <= points.length; s += 4) {\n      p1 = points[s-4];\n      p2 = points[s-3];\n      p3 = points[s-2];\n      p4 = points[s-1]\n      stroke(lineColours[colorCount++]);\n      bezier(p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y);\n      \n      // in case the sketch allows new lines\n      if (colorCount >= lineColours.length) {\n        colorCount = 0;\n      }\n    }\n  }\n}\n\n// used to dump the points used so far (for generating fixed lines)\nfunction keyPressed() {\n  print(\"[\");\n  for(let i = 0; i < points.length; i++) {\n    print(\"{x: \" + points[i].x + \", y: \" + points[i].y + \"},\");\n  }\n  print(\"]\")\n  \n}\n\n// the 'cheat'. these were generated my hand-clicking points on the canvas\n// and recording them with the help of keyPressed()\nfunction prePop() {\n  points = [ \n{x: 292, y: 664}, \n{x: 354, y: 640}, \n{x: 442, y: 638}, \n{x: 520, y: 667}, \n{x: 275, y: 599}, \n{x: 194, y: 559}, \n{x: 140, y: 497}, \n{x: 108, y: 374}, \n{x: 272, y: 539}, \n{x: 288, y: 476}, \n{x: 285, y: 402}, \n{x: 275, y: 355}, \n{x: 264, y: 316}, \n{x: 237, y: 250}, \n{x: 201, y: 167}, \n{x: 169, y: 99}, \n{x: 362, y: 289}, \n{x: 344, y: 195}, \n{x: 324, y: 92}, \n{x: 308, y: 21}, \n{x: 460, y: 300}, \n{x: 463, y: 206}, \n{x: 466, y: 133}, \n{x: 470, y: 73}, \n{x: 607, y: 222}, \n{x: 598, y: 312}, \n{x: 576, y: 389}, \n{x: 561, y: 435}, \n{x: 542, y: 475}, \n{x: 528, y: 524}, \n{x: 519, y: 564}, \n{x: 514, y: 597}\n] \n  \n  genColours();\n}\n\nfunction genColours() {\n  lineColours = [];\n  \n  for(let s = 4; s <= points.length; s += 4) {\n    lineColours.push(color(random(0, 100), 60, 100));\n  }\n}\n\nfunction mousePressed() {\n  // uncomment to generate new points / lines\n  // each new line requires 4 points/clicks\n  // points.push({x: mouseX, y: mouseY}); // used for cheat mode\n  \n  genColours();\n}",
        "children": [],
        "fileType": "file",
        "_id": "61d333a55558ea7bafbad329",
        "isSelectedFile": true,
        "createdAt": "2022-03-31T03:32:23.177Z",
        "updatedAt": "2022-03-31T03:32:23.177Z",
        "id": "61d333a55558ea7bafbad329"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61d333a55558ea7bafbad328",
        "createdAt": "2022-03-31T03:32:23.177Z",
        "updatedAt": "2022-03-31T03:32:23.177Z",
        "isSelectedFile": false,
        "id": "61d333a55558ea7bafbad328"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61d333a55558ea7bafbad32a",
        "createdAt": "2022-03-31T03:32:23.177Z",
        "updatedAt": "2022-03-31T03:32:23.177Z",
        "isSelectedFile": false,
        "id": "61d333a55558ea7bafbad32a"
      }
    ],
    "createdAt": "2022-01-03T17:34:29.565Z",
    "updatedAt": "2022-03-31T03:32:23.177Z",
    "id": "obAw8AcCG"
  },
  {
    "name": "genurary2022: day 5 - destroy a square v1",
    "_id": "sKEOBDOoE",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61d5a830cd843ed79186c200",
          "61d5a830cd843ed79186c201",
          "61d5b02963cdb00024f1c547",
          "61d5a830cd843ed79186c202"
        ],
        "fileType": "folder",
        "_id": "61d5a830cd843ed79186c1ff",
        "createdAt": "2022-01-06T06:42:34.605Z",
        "updatedAt": "2022-01-06T06:42:34.605Z",
        "isSelectedFile": false,
        "id": "61d5a830cd843ed79186c1ff"
      },
      {
        "name": "sketch.js",
        "content": "/*  \n *  Day 5: Destroy a Square\n *  by @ktorn\n *  for #genuary2022\n *\n *  Click canvas to generate and destroy a new square.\n */\nlet space = 0.666;\nlet cvn;\nlet size;\n\nlet hue;\nlet sat;\nlet bri;\n\nlet maxVel = 0.1;\n\nlet squares;\nlet gridSize;\n\nfunction setup() {  \n  cvn = createCanvas(windowWidth, windowHeight);\n  size = windowWidth < windowHeight? windowWidth: windowHeight;\n  size = size * space;\n    \n  colorMode(HSB);\n  angleMode(DEGREES);\n  noStroke();\n\n  init();\n}\n\n\nfunction init() {\n  frameCount = 0;\n  hue = random(0, 360);\n  sat = random(50, 100);\n  bri = random(50, 100);\n  let colour = color(hue, 100, 100);\n  fill(colour);\n  stroke(colour);\n  \n  gridSize = floor(random(2, 10));\n  let marginX = width/2 - size/2;\n  let marginY = height/2 - size/2;\n  let sqSize = size / gridSize;\n  \n  squares = [];\n  \n  for (let y = marginY; y < height - marginY - 1; y += sqSize) {\n    for (let x = marginX; x < width - marginX - 1; x += sqSize) {\n      squares.push( new Square(x, y, sqSize));\n    }\n  }\n}\n\nfunction draw() {\n  \n  background(0);\n  \n  for(let i = 0; i < squares.length; i++) {\n    squares[i].render();\n    squares[i].move(frameCount);\n  }\n  \n}\n\nfunction mousePressed() {\n  init();\n}\n\nfunction keyPressed() {\n  saveCanvas('genuary-day-5');\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "61d5a830cd843ed79186c201",
        "isSelectedFile": true,
        "createdAt": "2022-01-06T06:42:34.605Z",
        "updatedAt": "2022-01-06T06:42:34.605Z",
        "id": "61d5a830cd843ed79186c201"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"square.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61d5a830cd843ed79186c200",
        "createdAt": "2022-01-06T06:42:34.605Z",
        "updatedAt": "2022-01-06T06:42:34.605Z",
        "isSelectedFile": false,
        "id": "61d5a830cd843ed79186c200"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61d5a830cd843ed79186c202",
        "createdAt": "2022-01-06T06:42:34.605Z",
        "updatedAt": "2022-01-06T06:42:34.605Z",
        "isSelectedFile": false,
        "id": "61d5a830cd843ed79186c202"
      },
      {
        "name": "square.js",
        "content": "class Square {\n  constructor(x, y, size) {\n    this.x = x;\n    this.y = y;\n    this.size = size;\n    this.vel = createVector(0, 0);\n    this.targetVel = createVector(random(-maxVel, maxVel), random(-maxVel,maxVel));\n    this.angle = 0;\n    this.rotVel = 0;\n    this.targetRotVel = random(-maxVel, maxVel);\n    this.hue = hue;\n    this.targetHue = random(hue - 20, hue + 20);\n  }\n  \n  render() {\n    push();\n      stroke(this.hue, sat, bri);\n      fill(this.hue, sat, bri);\n      translate(this.x , this.y);\n      rotate(this.angle);\n      square(0, 0, this.size);\n    pop();\n  }\n  \n  move(iteration) {\n    let d = map(iteration, 0, 100000, 0, 1, true);\n    \n    p5.Vector.lerp(this.vel, this.targetVel, d, this.vel);\n        \n    this.x += this.vel.x;\n    this.y += this.vel.y;\n    \n    this.rotVel = lerp (this.rotVel, this.targetRotVel, d);\n    this.angle += this.rotVel;\n    \n    this.hue = lerp(this.hue, this.targetHue, d);\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "61d5b02963cdb00024f1c547",
        "isSelectedFile": false,
        "updatedAt": "2022-01-06T06:42:34.605Z",
        "createdAt": "2022-01-06T06:42:34.605Z",
        "id": "61d5b02963cdb00024f1c547"
      }
    ],
    "createdAt": "2022-01-05T14:16:17.224Z",
    "updatedAt": "2022-01-06T06:42:34.605Z",
    "id": "sKEOBDOoE"
  },
  {
    "name": "genurary2022: day 6 - Trade styles with a friend v1",
    "_id": "XiRcOodor",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61d80f1cd0a79b00207bc238",
          "61d6fc17df27931742d56329",
          "61d6fc17df27931742d5632a",
          "61d6fc17df27931742d5632b",
          "61d6fc17df27931742d5632c"
        ],
        "fileType": "folder",
        "_id": "61d6fc17df27931742d56328",
        "createdAt": "2022-01-08T23:43:02.121Z",
        "updatedAt": "2022-01-08T23:43:02.121Z",
        "isSelectedFile": false,
        "id": "61d6fc17df27931742d56328"
      },
      {
        "name": "sketch.js",
        "content": "/*\n *  Day 5: Trade styles with a friend\n *  by @ktorn\n *  for #genuary2022\n *\n *\n */\nlet space = 0.666;\nlet cvn;\nlet size;\n\nlet hue;\nlet sat;\nlet bri;\n\nlet maxVel = 0.1;\n\nconst MARGIN = 5;\nconst MIN_SIZE = 10;\n\n//let squares;\nlet gridSize;\n\nlet pix;\n\nlet mainSquare;\n\nlet id = 1;\n\nconst DEBUG = true;\n\nfunction setup() {\n  size = windowWidth < windowHeight ? windowWidth : windowHeight;\n\n  cvn = createCanvas(size, size);\n  // size = size * space;\n\n  colorMode(HSB);\n  angleMode(DEGREES);\n  noStroke();\n\n  init();\n}\n\nfunction init() {\n  frameCount = 0;\n  hue = random(0, 360);\n  sat = random(50, 100);\n  bri = random(50, 100);\n  let colour = color(hue, 100, 100);\n  fill(colour);\n  stroke(colour);\n\n  pix = [];\n\n  for (let x = 0; x < size; x++) {\n    pix[x] = [];\n  }\n\n  squares = [];\n\n  // main square\n\n  mainSquare = new Square(0, 0, size, null);\n\n  for (let xx = mainSquare.x; xx < mainSquare.x + mainSquare.size; xx++) {\n    for (let yy = mainSquare.y; yy < mainSquare.y + mainSquare.size; yy++) {\n      pix[xx][yy] = mainSquare;\n    }\n  }\n\n  // addSquare( mainSquare );\n\n  //   for (let i = 0; i < 100; i++) {\n  //     let x = floor(random(0, size));\n  //     let y = floor(random(0, size));\n\n  //     let parent = pix[x][y];\n\n  //     parent.addSquare(x, y);\n  //   }\n}\n\nfunction addSquare(square) {\n  // squares.push(square);\n}\n\nfunction draw() {\n  background(255);\n\n  if (\n    mouseX > 0 &&\n    mouseX < pix.length &&\n    mouseY > 0 &&\n    mouseY < pix[mouseX].length\n  ) {\n    pix[mouseX][mouseY].highlight();\n  }\n\n  mainSquare.render();\n\n  if(DEBUG) {\n    mouseOverlay();\n  }\n\n  // for(let i = 0; i < squares.length; i++) {\n  //   squares[i].render();\n  // }\n}\n\nfunction mousePressed() {\n  // init();\n\n  let x = mouseX;\n  let y = mouseY;\n\n  let parent = pix[x][y];\n\n  parent.addSquare(x, y);\n}\n\nfunction mouseOverlay() {\n  let sq = pix[mouseX][mouseY];\n\n  if (sq) {\n    let lCoords = sq.getLocalFromGlobal(mouseX, mouseY);\n\n    let t = \"[\" + sq.id + \"]\\n\";\n    t += \"x: \" + lCoords.x + \" gX: \" + mouseX + \"\\n\";\n    t += \"y: \" + lCoords.y + \" gY: \" + mouseY;\n\n    fill(255);\n    text(t, mouseX, mouseY);\n  }\n}\n\nfunction keyPressed() {\n  saveCanvas(\"genuary-day-5\");\n}\n\nfunction highlight() {}\n",
        "children": [],
        "fileType": "file",
        "_id": "61d6fc17df27931742d5632a",
        "isSelectedFile": true,
        "createdAt": "2022-01-08T23:43:02.121Z",
        "updatedAt": "2022-01-08T23:43:02.121Z",
        "id": "61d6fc17df27931742d5632a"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"grid.js\"></script>\n    <script src=\"square.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61d6fc17df27931742d56329",
        "createdAt": "2022-01-08T23:43:02.121Z",
        "updatedAt": "2022-01-08T23:43:02.121Z",
        "isSelectedFile": false,
        "id": "61d6fc17df27931742d56329"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61d6fc17df27931742d5632c",
        "createdAt": "2022-01-08T23:43:02.121Z",
        "updatedAt": "2022-01-08T23:43:02.121Z",
        "isSelectedFile": false,
        "id": "61d6fc17df27931742d5632c"
      },
      {
        "name": "square.js",
        "content": "class Square {\n  constructor(x, y, size, parent) {\n    this.x = x;\n    this.y = y;\n    this.size = size;\n    this.id = id++;\n    \n    this.gX = x;\n    this.gY = y;\n    \n    if (parent) {\n      this.gX = x + parent.gX;\n      this.gY = y + parent.gY;\n    }\n\n    this.parent = parent;\n    this.children = [];\n    this.grid = new Grid(this);\n\n    this.hue = random(0, 360);\n\n    this.hl = false;\n  }\n\n  render() {\n    push();\n    translate(this.x, this.y);\n\n    stroke(0);\n    strokeWeight(1);\n\n    if(DEBUG) {\n      if (this.hl) {\n        strokeWeight(3);\n        stroke(\"yellow\");\n        this.hl = false;\n\n        this.grid.render();\n\n      }\n    }\n    \n    fill(this.hue, 100, 50, 0.5);\n\n    square(0, 0, this.size);\n\n\n    if(DEBUG) {\n      fill(255);\n      noStroke();\n      textSize(10);\n      text(this.id, 10, 10);\n      text(\"x: \" + this.x + \"\\tgX: \" + this.gX +\n           \"\\ny: \" + this.y + \"\\tgY: \" + this.gY +\n           \"\\ns: \" + this.size, 10, 25);\n    }\n      \n    fill(255);\n    \n    for (let i = 0; i < this.children.length; i++) {\n      this.children[i].render();\n    }\n    \n    \n    pop();\n  }\n\n  highlight() {\n    this.hl = true;\n    // if(this.parent) {\n    //   this.parent.highlight();\n    // }\n  }\n\n  addSquare(gX, gY) {\n    \n    let {x, y} = this.getLocalFromGlobal(gX, gY);\n\n    \n    print(\"Adding square within [\" + this.id + \"] - Global:\", gX, gY, \". Local: \", x, y);\n\n    \n    let maxSize = this.grid.getMaxSize(x, y);\n    \n    print(\"maxSize: \", maxSize)\n    \n\n    if (maxSize < MIN_SIZE) {\n      return;\n    }\n\n    let newSize = floor(maxSize);\n\n    // print(\"newSize: \" + newSize);\n\n\n    // print(\"attempting new square: \", newSquare);\n    \n    let newX = x - floor(newSize / 2);\n    let newY = y - floor(newSize / 2);\n\n    if (\n      newX < 0 ||\n      newX > this.size ||\n      newY < 0 ||\n      newY > this.size ||\n      newX + newSize > this.size ||\n      newY + newSize > this.size\n    ) {\n      print(\"oops\");\n      return;\n    }\n    \n    let newSquare = new Square(\n      x - floor(newSize / 2),\n      y - floor(newSize / 2),\n      newSize,\n      this\n    );\n    \n    this.children.push(newSquare);\n    this.grid.addSquare(newSquare, this);\n\n    \n    for (let xx = newSquare.gX; xx < newSquare.gX + newSquare.size; xx++) {\n      for (let yy = newSquare.gY; yy < newSquare.gY + newSquare.size; yy++) {\n        pix[xx][yy] = newSquare;\n      }\n    }\n\n    // print(\"Added child square: \", newSquare.x, newSquare.y, newSquare.size);\n  }\n  \n    \n  getGlobalFromLocal(x, y) {\n    return {x: x + this.gX, y: y + this.gY};\n  }\n  \n  getLocalFromGlobal(gX, gY) {\n    return {x: gX - this.gX, y: gY - this.gY};\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61d6fc17df27931742d5632b",
        "isSelectedFile": false,
        "updatedAt": "2022-01-08T23:43:02.121Z",
        "createdAt": "2022-01-08T23:43:02.121Z",
        "id": "61d6fc17df27931742d5632b"
      },
      {
        "name": "grid.js",
        "content": "class Dim {\n  constructor(x, y) {\n    this.centerX = x;\n    this.centerY = y;\n    this.top = y;\n    this.bot = y;\n    this.left = x;\n    this.right = x;\n    \n    this.indexTop = 0;\n    this.indexBot = 0;\n    this.indexLeft = 0;\n    this.indexRight = 0;\n    \n    this.crossedOwners = {};\n  }\n}\n\n// TODO: handle guides shared by 2 or more squares - especially collision detection\n\nclass Grid {\n  constructor(owner) {\n    this.owner = owner;\n    \n    this.hGuides = [];\n    this.vGuides = [];\n    \n    this.init();\n  }\n  \n  init() {\n    this.insert( {value: 0, square: this.owner, side:\"LL\"}, this.vGuides);\n    this.insert( {value: this.owner.size, square: this.owner, side:\"RR\"}, this.vGuides);\n    this.insert( {value: 0, square: this.owner, side: \"TT\"}, this.hGuides);\n    this.insert( {value: this.owner.size, square: this.owner, side: \"BB\"}, this.hGuides);\n  }\n\n  addSquare(s) {\n    print(\"grid.addSquare\", s);\n    this.insert( {value: s.x, square: s, side:\"L\"}, this.vGuides);\n    this.insert( {value: s.x + s.size, square: s, side:\"R\"}, this.vGuides);\n    this.insert( {value: s.y, square: s, side:\"T\"}, this.hGuides);\n    this.insert( {value: s.y + s.size, square: s, side: \"B\"}, this.hGuides);\n  }\n  \n  getMaxSize(x, y) {\n    print(\"getMaxSize for: \", x, y, \"###############\");\n    print(\"this.hGuides\", this.hGuides);\n    print(\"this.vGuides\", this.vGuides);\n    print(\"#########################################\");\n    \n    let done = false;\n    let d = this.initNewDim(x, y);\n    \n    let safetyTTL = 1000;\n    \n    while(this.growDim2(d) && safetyTTL > 0) {\n      safetyTTL--;\n    }\n    \n    if (safetyTTL == 0) {\n      print(\"##### infinite loop safety triggered!\");\n    }\n    \n    let maxSize = d.right - d.left - MARGIN*2;\n    \n    return maxSize;\n  }\n  \n  initNewDim(x, y) {\n    let d = new Dim(x, y);\n    \n    // set starting horizontal index\n    for(let i = 0; i < this.vGuides.length; i++) {\n      let vG = this.vGuides[i];\n      if (x > vG.value) {\n        d.indexLeft = i;\n        d.indexRight = i;\n      }\n    }\n    \n    // set starting vertical index\n    for(let i = 0; i < this.hGuides.length; i++) {\n      let hG = this.hGuides[i];\n      if (y > hG.value) {\n        d.indexTop = i;\n        d.indexBot = i;\n      }\n    }\n    \n    return d;\n  }\n  \n  \n  growDim2(d) {\n\n    \n    print(\"d.indexTop\", d.indexTop);\n    print(\"d.indexBot\", d.indexBot);\n    print(\"d.indexLeft\", d.indexLeft);\n    print(\"d.indexRight\", d.indexRight);\n    \n    if(d.indexTop < 0 || d.indexBot >= this.hGuides.length - 1 ||\n       d.indexLeft < 0 || d.indexRight >= this.vGuides.length - 1 ) {\n      print(\"growDim: boundaries reached. stopping!\")\n      return false;\n    }\n    \n    // find the shortest distance to the closest guideline and grow that amount\n    // 3-steps:\n    //   1. find the distance to the next guideline in each of the 4 directions\n    //   2. select the shortest of the 4 distances and grow by that amount\n    //   3. check if a further growth can take place (return false if not)\n    \n    let smallestSpace = 0;\n    \n    // steps 1 & 2\n    \n    // keep track of these for later, it will help know which square to check collisions against\n    let checkSidesForCollision = {top: {check: false},\n                                  bot: {check: false},\n                                  left: {check: false},\n                                  right: {check: false}};\n    \n    let spaceTop = d.top - this.hGuides[d.indexTop].value;\n    print(\"spaceTop\", spaceTop, \" to \", this.hGuides[d.indexTop].square.id);\n    smallestSpace = spaceTop;\n    checkSidesForCollision.top.square = this.hGuides[d.indexTop].square;\n    \n    let spaceBot = this.hGuides[d.indexBot+1].value - d.bot;\n    print(\"spaceBot\", spaceBot, \" to \", this.hGuides[d.indexBot].square.id);\n    if(spaceBot <= smallestSpace) {\n      smallestSpace = spaceBot;\n      checkSidesForCollision.bot.square = this.hGuides[d.indexBot+1].square;\n    }\n    \n    let spaceLeft = d.left - this.vGuides[d.indexLeft].value;\n    print(\"spaceLeft\", spaceLeft, \" to \", this.hGuides[d.indexLeft].square.id);\n    if(spaceLeft <= smallestSpace) {\n      smallestSpace = spaceLeft;\n      checkSidesForCollision.left.square = this.vGuides[d.indexLeft].square;\n    }\n    \n    let spaceRight = this.vGuides[d.indexRight+1].value - d.right;\n    print(\"spaceRight\", spaceRight, \" to \", this.hGuides[d.indexRight].square.id);\n    if(spaceRight <= smallestSpace) {\n      smallestSpace = spaceRight;\n      checkSidesForCollision.right.square = this.vGuides[d.indexRight+1].square;\n    }\n    \n    // update indexes\n    // these are not if-elses because there's a small chance that\n    // more than 1 index needs updating in the same growth step\n    \n    \n    if(smallestSpace == spaceTop) {\n      d.indexTop--;\n      checkSidesForCollision.top.check = true;\n    }\n    \n    if (smallestSpace == spaceBot) {\n      d.indexBot++;\n      checkSidesForCollision.bot.check = true;\n    }\n    \n    if (smallestSpace == spaceRight) {\n      d.indexRight++;\n      checkSidesForCollision.right.check = true;\n    }\n    \n    if (smallestSpace == spaceLeft) {\n      d.indexLeft--;\n      checkSidesForCollision.left.check = true;\n    }\n    \n    \n    // update dim values\n    d.top -= smallestSpace;\n    d.bot += smallestSpace;\n    d.left -= smallestSpace;\n    d.right += smallestSpace;\n    \n    \n    // step 3 - check if further growth is possible (collision detection)\n    // TODO: this does not handle a rare case where 2 squares create the same guide\n    \n    print(\"checkSidesForCollision\", checkSidesForCollision);\n    \n    let isFutherGrowthPossible = true;\n    \n    if(checkSidesForCollision.top.check == true &&\n       this.isCollision(d.left, d.right, checkSidesForCollision.top.square, 0)) {\n        isFutherGrowthPossible = false;\n    }\n    \n    if(checkSidesForCollision.bot.check == true &&\n       this.isCollision(d.left, d.right, checkSidesForCollision.bot.square, 0)) {\n        isFutherGrowthPossible = false;\n    }\n    \n    if(checkSidesForCollision.left.check == true &&\n       this.isCollision(d.top, d.bot, checkSidesForCollision.left.square, 1)) {\n        isFutherGrowthPossible = false;\n    }\n    \n    if(checkSidesForCollision.right.check == true &&\n       this.isCollision(d.top, d.bot, checkSidesForCollision.right.square, 1)) {\n        isFutherGrowthPossible = false;\n    }\n    \n    return isFutherGrowthPossible;\n  }\n  \n  // detects overlap between a line and a square side\n  // 'side': 0 for horizontal, 1 for vertical\n  isCollision(dimX1, dimX2, square, side) {\n    let squareX1, squareX2;\n    \n    if(side == 0) {\n      squareX1 = square.x;\n      squareX2 = square.x + square.size;\n    } else {\n      squareX1 = square.y;\n      squareX2 = square.y + square.size;\n    }\n    \n    return (dimX1 < squareX2 && squareX1 < dimX2);\n    \n  }\n  \n\n  insert(element, array) {\n    array.push(element);\n    array.sort(function (a, b) {\n      return a.value - b.value;\n    });\n    return array;\n  }\n  \n  render() {\n    let o = this.owner;\n          \n    strokeWeight(1);\n          \n    for(let i = 0; i < this.hGuides.length; i++) {\n      let hG = this.hGuides[i];\n      \n      if(i == 0 || i == this.hGuides.length - 1) {\n        stroke(\"blue\");\n      } else {\n        stroke(\"green\");\n      }\n      \n      line(0, hG.value, o.size, hG.value);\n    }\n          \n    for(let i = 0; i < this.vGuides.length; i++) {\n      let vG = this.vGuides[i];\n      \n      if(i == 0 || i == this.hGuides.length - 1) {\n        stroke(\"white\");\n      } else {\n        stroke(\"red\");\n      }\n      \n      line(vG.value, 0, vG.value, o.size);\n    }\n      \n  }\n\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61d80f1cd0a79b00207bc238",
        "isSelectedFile": false,
        "updatedAt": "2022-01-08T23:43:02.121Z",
        "createdAt": "2022-01-08T23:43:02.121Z",
        "id": "61d80f1cd0a79b00207bc238"
      }
    ],
    "createdAt": "2022-01-06T14:26:31.285Z",
    "updatedAt": "2022-01-08T23:43:02.121Z",
    "id": "XiRcOodor"
  },
  {
    "name": "genurary2022: day 6 - Trade styles with a friend v2",
    "_id": "GburaeGkE",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61da265e0cce05002463aaaf",
          "61da2164df9795a52a0b7cf6",
          "61da2164df9795a52a0b7cf7",
          "61da2164df9795a52a0b7cf8",
          "61da2164df9795a52a0b7cf9",
          "61da2164df9795a52a0b7cfa"
        ],
        "fileType": "folder",
        "_id": "61da2164df9795a52a0b7cf5",
        "createdAt": "2022-01-09T04:53:44.642Z",
        "updatedAt": "2022-01-09T04:53:44.642Z",
        "isSelectedFile": false,
        "id": "61da2164df9795a52a0b7cf5"
      },
      {
        "name": "sketch.js",
        "content": "/*\n *  Day 5: Trade styles with a friend\n *  by @ktorn\n *  for #genuary2022\n *\n *  Borrowed style from NEURAL HAZE (aka @ twitter profile?)\n *  and had fun packing squares.\n */\nlet cvn;\n\n// set isBigRender to true to get a large render\n// otherwise the render will fit the window size\nlet isBigRender = false;\n\nconst BIG_RENDER_SIZE = 4096;\n\nlet size;\n\nlet hue;\nlet sat;\nlet bri;\n\nlet maxVel = 0.1;\n\nconst MARGIN = 8;\nconst MIN_SIZE = 2;\n\nlet gridSize;\n\nlet pix;\n\nlet mainSquare;\n\nlet id = 1;\n\nlet bgImg;\n\nconst DEBUG = false;\n\nfunction preload() {\n  bgImg = loadImage(\"assets/hicathon-badge.png\");\n}\n\nfunction setup() {\n  \n  if(isBigRender) {\n    size = BIG_RENDER_SIZE;\n  } else {\n    size = windowWidth < windowHeight ? windowWidth : windowHeight;\n  }\n\n  cvn = createCanvas(size, size);\n  \n  bgImg.resize(size, size);\n\n  noStroke();\n\n  init();\n}\n\nfunction init() {\n  frameCount = 0;\n  hue = random(0, 360);\n  sat = random(50, 100);\n  bri = random(50, 100);\n  let colour = color(hue, 100, 100);\n  fill(colour);\n  stroke(colour);\n\n  pix = [];\n\n  for (let x = 0; x < size; x++) {\n    pix[x] = [];\n  }\n\n  squares = [];\n\n  // main square\n\n  mainSquare = new Square(0, 0, size, null);\n\n  for (let xx = mainSquare.x; xx < mainSquare.x + mainSquare.size; xx++) {\n    for (let yy = mainSquare.y; yy < mainSquare.y + mainSquare.size; yy++) {\n      pix[xx][yy] = mainSquare;\n    }\n  }\n  \n  background(0);\n  \n}\n\n\nfunction draw() {\n\n  if(DEBUG) {\n    mouseOverlay();\n  }\n  \n  let rX = floor(random(0, size));\n  let rY = floor(random(0, size));\n    \n  let parent = pix[rX][rY];\n\n  parent.addAndRender(rX, rY);\n\n}\n\nfunction mousePressed() {\n\n  let x = mouseX;\n  let y = mouseY;\n\n  let parent = pix[x][y];\n\n  parent.addSquare(x, y);\n}\n\nfunction mouseOverlay() {\n  let sq = pix[mouseX][mouseY];\n\n  if (sq) {\n    let lCoords = sq.getLocalFromGlobal(mouseX, mouseY);\n\n    let t = \"[\" + sq.id + \"]\\n\";\n    t += \"x: \" + lCoords.x + \" gX: \" + mouseX + \"\\n\";\n    t += \"y: \" + lCoords.y + \" gY: \" + mouseY;\n\n    fill(255);\n    text(t, mouseX, mouseY);\n  }\n}\n\nfunction keyPressed() {\n  saveCanvas(\"genuary-day-5\");\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61da2164df9795a52a0b7cf8",
        "isSelectedFile": true,
        "createdAt": "2022-01-09T04:53:44.642Z",
        "updatedAt": "2022-01-09T04:53:44.642Z",
        "id": "61da2164df9795a52a0b7cf8"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"grid.js\"></script>\n    <script src=\"square.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61da2164df9795a52a0b7cf7",
        "createdAt": "2022-01-09T04:53:44.642Z",
        "updatedAt": "2022-01-09T04:53:44.642Z",
        "isSelectedFile": false,
        "id": "61da2164df9795a52a0b7cf7"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61da2164df9795a52a0b7cfa",
        "createdAt": "2022-01-09T04:53:44.642Z",
        "updatedAt": "2022-01-09T04:53:44.642Z",
        "isSelectedFile": false,
        "id": "61da2164df9795a52a0b7cfa"
      },
      {
        "name": "square.js",
        "content": "class Square {\n  constructor(x, y, size, parent) {\n    this.x = x;\n    this.y = y;\n    this.size = size;\n    this.id = id++;\n    \n    this.gX = x;\n    this.gY = y;\n    \n    if (parent) {\n      this.gX = x + parent.gX;\n      this.gY = y + parent.gY;\n    }\n\n    this.parent = parent;\n    this.children = [];\n    this.grid = new Grid(this);\n\n    this.color = bgImg.get(this.gX, this.gY);\n\n    this.hl = false;\n  }\n\n  render() {\n    push();\n    translate(this.x, this.y);\n\n    noStroke();\n\n    if(DEBUG) {\n      if (this.hl) {\n        strokeWeight(3);\n        stroke(\"yellow\");\n        this.hl = false;\n\n        this.grid.render();\n\n      }\n    }\n    \n    fill(this.color);\n\n    square(0, 0, this.size);\n\n\n    if(DEBUG) {\n      fill(255);\n      noStroke();\n      textSize(10);\n      text(this.id, 10, 10);\n      text(\"x: \" + this.x + \"\\tgX: \" + this.gX +\n           \"\\ny: \" + this.y + \"\\tgY: \" + this.gY +\n           \"\\ns: \" + this.size, 10, 25);\n    }\n      \n    fill(255);\n    \n    for (let i = 0; i < this.children.length; i++) {\n      this.children[i].render();\n    }\n    \n    \n    pop();\n  }\n\n  highlight() {\n    this.hl = true;\n  }\n\n  \n  addAndRender(gX, gY) {\n    let newSq = this.addSquare(gX, gY);\n\n    if(newSq) {\n        push();\n        translate(this.gX, this.gY);\n        newSq.render();\n        pop();\n    }\n  }\n  \n  addSquare(gX, gY) {\n    \n    let {x, y} = this.getLocalFromGlobal(gX, gY);\n\n    let maxSize = this.grid.getMaxSize(x, y);\n    \n    if (maxSize < MIN_SIZE) {\n      return;\n    }\n\n    let newSize = floor(maxSize);\n    \n    let newX = x - floor(newSize / 2);\n    let newY = y - floor(newSize / 2);\n\n    if (\n      newX < 0 ||\n      newX > this.size ||\n      newY < 0 ||\n      newY > this.size ||\n      newX + newSize > this.size ||\n      newY + newSize > this.size\n    ) {\n      print(\"oops\");\n      return;\n    }\n    \n    let newSquare = new Square(\n      x - floor(newSize / 2),\n      y - floor(newSize / 2),\n      newSize,\n      this\n    );\n    \n    this.children.push(newSquare);\n    this.grid.addSquare(newSquare, this);\n\n    \n    for (let xx = newSquare.gX; xx < newSquare.gX + newSquare.size; xx++) {\n      for (let yy = newSquare.gY; yy < newSquare.gY + newSquare.size; yy++) {\n        pix[xx][yy] = newSquare;\n      }\n    }\n    \n    return newSquare;\n  }\n  \n    \n  getGlobalFromLocal(x, y) {\n    return {x: x + this.gX, y: y + this.gY};\n  }\n  \n  getLocalFromGlobal(gX, gY) {\n    return {x: gX - this.gX, y: gY - this.gY};\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61da2164df9795a52a0b7cf9",
        "isSelectedFile": false,
        "updatedAt": "2022-01-09T04:53:44.642Z",
        "createdAt": "2022-01-09T04:53:44.642Z",
        "id": "61da2164df9795a52a0b7cf9"
      },
      {
        "name": "grid.js",
        "content": "class Dim {\n  constructor(x, y) {\n    this.centerX = x;\n    this.centerY = y;\n    this.top = y;\n    this.bot = y;\n    this.left = x;\n    this.right = x;\n    \n    this.indexTop = 0;\n    this.indexBot = 0;\n    this.indexLeft = 0;\n    this.indexRight = 0;\n    \n    this.crossedOwners = {};\n  }\n}\n\n// TODO: handle guides shared by 2 or more squares - especially collision detection\n\nclass Grid {\n  constructor(owner) {\n    this.owner = owner;\n    \n    this.hGuides = [];\n    this.vGuides = [];\n    \n    this.init();\n  }\n  \n  init() {\n    this.insert( {value: 0, square: this.owner, side:\"LL\"}, this.vGuides);\n    this.insert( {value: this.owner.size, square: this.owner, side:\"RR\"}, this.vGuides);\n    this.insert( {value: 0, square: this.owner, side: \"TT\"}, this.hGuides);\n    this.insert( {value: this.owner.size, square: this.owner, side: \"BB\"}, this.hGuides);\n  }\n\n  addSquare(s) {\n    this.insert( {value: s.x, square: s, side:\"L\"}, this.vGuides);\n    this.insert( {value: s.x + s.size, square: s, side:\"R\"}, this.vGuides);\n    this.insert( {value: s.y, square: s, side:\"T\"}, this.hGuides);\n    this.insert( {value: s.y + s.size, square: s, side: \"B\"}, this.hGuides);\n  }\n  \n  getMaxSize(x, y) {\n    \n    let done = false;\n    let d = this.initNewDim(x, y);\n    \n    let safetyTTL = 1000;\n    \n    while(this.growDim2(d) && safetyTTL > 0) {\n      safetyTTL--;\n    }\n    \n    if (safetyTTL == 0) {\n      print(\"##### infinite loop safety triggered!\");\n    }\n    \n    let maxSize = d.right - d.left - MARGIN*2;\n    \n    return maxSize;\n  }\n  \n  initNewDim(x, y) {\n    let d = new Dim(x, y);\n    \n    // set starting horizontal index\n    for(let i = 0; i < this.vGuides.length; i++) {\n      let vG = this.vGuides[i];\n      if (x > vG.value) {\n        d.indexLeft = i;\n        d.indexRight = i;\n      }\n    }\n    \n    // set starting vertical index\n    for(let i = 0; i < this.hGuides.length; i++) {\n      let hG = this.hGuides[i];\n      if (y > hG.value) {\n        d.indexTop = i;\n        d.indexBot = i;\n      }\n    }\n    \n    return d;\n  }\n  \n  \n  growDim2(d) {\n\n    if(d.indexTop < 0 || d.indexBot >= this.hGuides.length - 1 ||\n       d.indexLeft < 0 || d.indexRight >= this.vGuides.length - 1 ) {\n      return false;\n    }\n    \n    // find the shortest distance to the closest guideline and grow that amount\n    // 3-steps:\n    //   1. find the distance to the next guideline in each of the 4 directions\n    //   2. select the shortest of the 4 distances and grow by that amount\n    //   3. check if a further growth can take place (return false if not)\n    \n    let smallestSpace = 0;\n    \n    // steps 1 & 2\n    \n    // keep track of these for later, it will help know which square to check collisions against\n    let checkSidesForCollision = {top: {check: false},\n                                  bot: {check: false},\n                                  left: {check: false},\n                                  right: {check: false}};\n    \n    let spaceTop = d.top - this.hGuides[d.indexTop].value;\n    smallestSpace = spaceTop;\n    checkSidesForCollision.top.square = this.hGuides[d.indexTop].square;\n    \n    let spaceBot = this.hGuides[d.indexBot+1].value - d.bot;\n    if(spaceBot <= smallestSpace) {\n      smallestSpace = spaceBot;\n      checkSidesForCollision.bot.square = this.hGuides[d.indexBot+1].square;\n    }\n    \n    let spaceLeft = d.left - this.vGuides[d.indexLeft].value;\n    if(spaceLeft <= smallestSpace) {\n      smallestSpace = spaceLeft;\n      checkSidesForCollision.left.square = this.vGuides[d.indexLeft].square;\n    }\n    \n    let spaceRight = this.vGuides[d.indexRight+1].value - d.right;\n    if(spaceRight <= smallestSpace) {\n      smallestSpace = spaceRight;\n      checkSidesForCollision.right.square = this.vGuides[d.indexRight+1].square;\n    }\n    \n    // update indexes\n    // these are not if-elses because there's a small chance that\n    // more than 1 index needs updating in the same growth step\n    \n    \n    if(smallestSpace == spaceTop) {\n      d.indexTop--;\n      checkSidesForCollision.top.check = true;\n    }\n    \n    if (smallestSpace == spaceBot) {\n      d.indexBot++;\n      checkSidesForCollision.bot.check = true;\n    }\n    \n    if (smallestSpace == spaceRight) {\n      d.indexRight++;\n      checkSidesForCollision.right.check = true;\n    }\n    \n    if (smallestSpace == spaceLeft) {\n      d.indexLeft--;\n      checkSidesForCollision.left.check = true;\n    }\n    \n    \n    // update dim values\n    d.top -= smallestSpace;\n    d.bot += smallestSpace;\n    d.left -= smallestSpace;\n    d.right += smallestSpace;\n    \n    \n    // step 3 - check if further growth is possible (collision detection)\n    // TODO: this does not handle a rare case where 2 squares create the same guide\n        \n    let isFutherGrowthPossible = true;\n    \n    if(checkSidesForCollision.top.check == true &&\n       this.isCollision(d.left, d.right, checkSidesForCollision.top.square, 0)) {\n        isFutherGrowthPossible = false;\n    }\n    \n    if(checkSidesForCollision.bot.check == true &&\n       this.isCollision(d.left, d.right, checkSidesForCollision.bot.square, 0)) {\n        isFutherGrowthPossible = false;\n    }\n    \n    if(checkSidesForCollision.left.check == true &&\n       this.isCollision(d.top, d.bot, checkSidesForCollision.left.square, 1)) {\n        isFutherGrowthPossible = false;\n    }\n    \n    if(checkSidesForCollision.right.check == true &&\n       this.isCollision(d.top, d.bot, checkSidesForCollision.right.square, 1)) {\n        isFutherGrowthPossible = false;\n    }\n    \n    return isFutherGrowthPossible;\n  }\n  \n  // detects overlap between a line and a square side\n  // 'side': 0 for horizontal, 1 for vertical\n  isCollision(dimX1, dimX2, square, side) {\n    let squareX1, squareX2;\n    \n    if(side == 0) {\n      squareX1 = square.x;\n      squareX2 = square.x + square.size;\n    } else {\n      squareX1 = square.y;\n      squareX2 = square.y + square.size;\n    }\n    \n    return (dimX1 < squareX2 && squareX1 < dimX2);\n    \n  }\n  \n\n  insert(element, array) {\n    array.push(element);\n    array.sort(function (a, b) {\n      return a.value - b.value;\n    });\n    return array;\n  }\n  \n  render() {\n    let o = this.owner;\n          \n    strokeWeight(1);\n          \n    for(let i = 0; i < this.hGuides.length; i++) {\n      let hG = this.hGuides[i];\n      \n      if(i == 0 || i == this.hGuides.length - 1) {\n        stroke(\"blue\");\n      } else {\n        stroke(\"green\");\n      }\n      \n      line(0, hG.value, o.size, hG.value);\n    }\n          \n    for(let i = 0; i < this.vGuides.length; i++) {\n      let vG = this.vGuides[i];\n      \n      if(i == 0 || i == this.hGuides.length - 1) {\n        stroke(\"white\");\n      } else {\n        stroke(\"red\");\n      }\n      \n      line(vG.value, 0, vG.value, o.size);\n    }\n      \n  }\n\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61da2164df9795a52a0b7cf6",
        "isSelectedFile": false,
        "updatedAt": "2022-01-09T04:53:44.642Z",
        "createdAt": "2022-01-09T04:53:44.642Z",
        "id": "61da2164df9795a52a0b7cf6"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "61da51d2ebec6500243b09f0"
        ],
        "fileType": "folder",
        "_id": "61da265e0cce05002463aaaf",
        "isSelectedFile": false,
        "updatedAt": "2022-01-09T04:53:44.642Z",
        "createdAt": "2022-01-09T04:53:44.642Z",
        "id": "61da265e0cce05002463aaaf"
      },
      {
        "name": "hicathon-badge.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61da51d2ebec6500243b09f0",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/bcafeaeb-9ef0-45c7-98df-935c69bef6c3.png",
        "isSelectedFile": false,
        "updatedAt": "2022-01-09T04:53:44.642Z",
        "createdAt": "2022-01-09T04:53:44.642Z",
        "id": "61da51d2ebec6500243b09f0"
      }
    ],
    "createdAt": "2022-01-08T23:42:28.836Z",
    "updatedAt": "2022-01-09T04:53:44.642Z",
    "id": "GburaeGkE"
  },
  {
    "name": "genurary2022: day 7 - Sol LeWitt Wall Drawing v1",
    "_id": "l4msAhMcj",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61e189985941af28fa324996",
          "61e189985941af28fa324997",
          "61e189985941af28fa324999"
        ],
        "fileType": "folder",
        "_id": "61e189985941af28fa324995",
        "createdAt": "2022-01-14T19:08:15.200Z",
        "updatedAt": "2022-01-14T19:08:15.200Z",
        "isSelectedFile": false,
        "id": "61e189985941af28fa324995"
      },
      {
        "name": "sketch.js",
        "content": "/*  \n *  Day 7: Sol LeWitt Wall Drawing.\n *  by @ktorn\n *  for #genuary2022\n *\n *  Click canvas to generate a new wall drawing.\n *  Press 'R' to toggle rotation on/off\n *  Press 'S' to save a screenshot\n */\nconst SPACE = 0.7;\nconst LINES = 34;\n\nconst COLOUR_PALETTE = [\"yellow\", \"red\", \"blue\"]\n\nconst SHAPE_CIRCLE = 0;\nconst SHAPE_SQUARE = 1;\nconst SHAPE_TRIANGLE = 2;\nconst SHAPE_RECTANGLE = 3;\nconst SHAPE_TRAPEZIUM = 4;\nconst SHAPE_RHOMBUS = 5;\n\nlet colours;\nlet bgColour;\nlet line1Colour;\nlet line2Colour;\n\nlet lineSpacing;\nlet cvn;\nlet size;\nlet sizeW;\nlet sizeH;\n\nlet hue;\nlet sat;\nlet bri;\n\nlet bgCv;  // background canvas\nlet fgCv;  // foreground canvas\n\nlet lines1;\nlet lines2;\n\nlet shape; // the mask\n\nlet isRotate = false;\nlet rotAngle = 90;\n\nfunction setup() {  \n  \n  size = windowWidth < windowHeight? windowWidth: windowHeight;\n  \n  \n  sizeW = floor(windowWidth * SPACE);\n  sizeH = floor(sizeW / 1.618033988);\n  \n  if (sizeH >= windowHeight * SPACE) {\n    sizeH = floor(windowHeight * SPACE);\n    sizeW = floor(sizeH * 1.618033988);\n  }\n\n  \n  cvn = createCanvas(windowWidth, windowHeight);\n  \n  fgCv  = createGraphics(sizeW, sizeH);\n  \n  lines1 = createGraphics(windowWidth*4, windowHeight*4);\n  lines2 = createGraphics(windowWidth*4, windowHeight*4);\n\n  angleMode(DEGREES);\n\n  init();\n}\n\n\nfunction init() {\n  colours = COLOUR_PALETTE.slice(0);\n  \n  bgColour = colours.splice(floor(random() * colours.length), 1);\n  line1Colour = colours.splice(floor(random() * colours.length), 1);\n  line2Colour = colours.splice(floor(random() * colours.length), 1);\n  \n  lineSpacing = floor(sizeH / LINES - 1);\n  \n\n  drawLines(lines1, true);\n  drawLines(lines2, false);\n  \n  drawFg();\n \n}\n\nfunction draw() {\n  \n  background(0);\n  \n  imageMode(CENTER);\n  \n  if(isRotate) {\n    rotAngle += 1/10;\n  }\n  \n  push();\n  translate(width/2, height/2);\n  rotate(rotAngle)\n  translate(-width/2, -height/2);\n  image(lines1, width/2, height/2);\n  pop();\n  \n  image(fgCv, width/2, height/2);\n  \n  drawFrame();\n \n}\n\nfunction mousePressed() {\n init();\n}\n\nfunction keyPressed() {\n  \n  if (keyCode == 82) {\n    isRotate = !isRotate;\n  } else if (keyCode == 83) {\n    saveCanvas('genuary-day-7');\n  }\n\n}\n\nfunction drawFg () {\n  fgCv.background(0);\n  fgCv.noStroke();\n  fgCv.imageMode(CENTER);\n  fgCv.image(lines2, fgCv.width/2, fgCv.height/2);\n  fgCv.erase();\n  drawMask(fgCv);\n  fgCv.noErase();\n}\n\nfunction drawLines(graphics, invert) {\n  \n  graphics.push();\n  graphics.background(0);\n  \n  graphics.fill(bgColour);\n  \n  graphics.noStroke();\n  graphics.rect(0, 0, graphics.width, graphics.height);\n  \n  if(invert) {\n    graphics.stroke(line1Colour);\n  } else {\n    graphics.stroke(line2Colour);\n  }\n  \n  graphics.strokeWeight(2);\n  \n  for(let i = (floor(graphics.height)) / 2; i < graphics.height; i += lineSpacing) {\n    graphics.line(0, i , graphics.width, i);\n  }\n  \n  for(let i = (floor(graphics.height) / 2)-lineSpacing; i > 0; i -= lineSpacing) {\n    graphics.line(0, i , graphics.width, i);\n  }\n  \n  \n  graphics.pop();\n  \n}\n\nfunction drawMask(g) {\n  \n  let shape = floor(random(6))\n   if(shape == SHAPE_CIRCLE) {\n    g.circle(g.width/2, g.height/2, (LINES-2) * lineSpacing);\n  } else if (shape == SHAPE_SQUARE) {\n    g.rectMode(CENTER);\n    g.square(g.width/2, g.height/2, (LINES-2) * lineSpacing);\n  } else if (shape == SHAPE_TRIANGLE) {\n    let x1 = g.width/2 - (LINES-2) * lineSpacing / 2;\n    let x2 = g.width/2 + (LINES-2) * lineSpacing / 2;\n    let y1 = g.height/2 + (LINES-2) * lineSpacing / 2;\n    let y2 = g.height/2 - (LINES-2) * lineSpacing / 2;\n    g.triangle(x1, y1, x2, y1, g.width/2 , y2);\n  } else if (shape == SHAPE_RECTANGLE) {\n    g.rectMode(CENTER);\n    g.rect(g.width/2, g.height/2, lineSpacing  * 14 + 1, (LINES-2) * lineSpacing - 2);\n  } else if (shape == SHAPE_TRAPEZIUM) {\n    let x1 = g.width/2 - (LINES-2) * lineSpacing / 2;\n    let x2 = g.width/2 + (LINES-2) * lineSpacing / 2;\n    let x3 = g.width/2 - (x2-x1)/4;\n    let x4 = g.width/2 + (x2-x1)/4;\n    let y1 = g.height/2 + (LINES-2) * lineSpacing / 2;\n    let y2 = g.height/2 - (LINES-2) * lineSpacing / 2;\n    g.quad(x1, y1, x2, y1, x4, y2, x3, y2);\n  } else if (shape == SHAPE_RHOMBUS) {\n    let x1 = g.width/2 - (LINES-2) * lineSpacing / 2;\n    let x2 = g.width/2 + (LINES-2) * lineSpacing / 2;\n    let x3 = g.width/2 - (x2-x1)/4;\n    let x4 = g.width/2 + (x2-x1)/4;\n    let y1 = g.height/2 + (LINES-2) * lineSpacing / 2;\n    let y2 = g.height/2 - (LINES-2) * lineSpacing / 2;\n    g.quad(x1, y1, x4, y1, x2, y2, x3, y2);\n  }\n  \n}\n\nfunction drawFrame() {\n  fill(0);\n  noStroke();\n  rectMode(CORNER);\n  \n  rect(0, height/2 - ((LINES+3)/2*lineSpacing), width, -height/2);\n  rect(0, height/2 + ((LINES+3)/2*lineSpacing), width, height/2);\n  \n  \n  \n  rect(0, 0, (width - sizeW)/2, height);\n  rect(width, 0, -(width - sizeW)/2, height);\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "61e189985941af28fa324997",
        "isSelectedFile": true,
        "createdAt": "2022-01-14T19:08:15.200Z",
        "updatedAt": "2022-01-14T19:08:15.200Z",
        "id": "61e189985941af28fa324997"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61e189985941af28fa324996",
        "createdAt": "2022-01-14T19:08:15.200Z",
        "updatedAt": "2022-01-14T19:08:15.200Z",
        "isSelectedFile": false,
        "id": "61e189985941af28fa324996"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61e189985941af28fa324999",
        "createdAt": "2022-01-14T19:08:15.200Z",
        "updatedAt": "2022-01-14T19:08:15.200Z",
        "isSelectedFile": false,
        "id": "61e189985941af28fa324999"
      }
    ],
    "createdAt": "2022-01-14T14:32:56.340Z",
    "updatedAt": "2022-01-14T19:08:15.200Z",
    "id": "l4msAhMcj"
  },
  {
    "name": "genurary2022: day 8 - Single curve only",
    "_id": "NFJ_Ej9bM",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61e1d6855941af28fa32499b",
          "61e1d6855941af28fa32499c",
          "61e1d6855941af28fa32499d"
        ],
        "fileType": "folder",
        "_id": "61e1d6855941af28fa32499a",
        "createdAt": "2022-01-15T07:45:18.702Z",
        "updatedAt": "2022-01-15T07:45:18.702Z",
        "isSelectedFile": false,
        "id": "61e1d6855941af28fa32499a"
      },
      {
        "name": "sketch.js",
        "content": "/*  \n *  Day 8: Single curve only.\n *  by @ktorn\n *  for #genuary2022\n *\n *  Click/touch canvas to create a new curve\n *  Press 'S' to save a screenshot\n */\nconst SPACE = 0.8;\n\nlet lineSpacing;\nlet cvn;\nlet sizeW;\nlet sizeH;\n\nlet points;\nlet lastPoint;\nlet newPoint;\n\nlet margin = 100;\n\nfunction setup() {  \n  \n  if (windowWidth < windowHeight) {\n    sizeW = windowWidth * SPACE;\n    sizeH = sizeW / 1.618033988;\n  } else {\n    sizeH = windowHeight * SPACE;\n    sizeW = sizeH * 1.618033988;\n  }\n  \n  cvn = createCanvas(sizeW, sizeH);\n  \n  setAttributes('antialias', true);\n  \n  init();\n}\n\n\nfunction init() {\n \n  points = [];\n  \n  frameCount = 0;\n  \n  lastPoint = [random(width), random(height)];\n  \n  points.push(lastPoint);\n  \n  strokeWeight(1);\n  noFill();\n  \n  loop();\n  \n\n}\n\nfunction draw() {\n  \n  background(200);\n  \n  x  = random(margin, width - margin);\n  y =  random(margin, height - margin);\n\n  points.push([x, y]);\n  \n\n  curveTightness(-1);\n  drawCurve();\n \n  if (frameCount > 20) {\n    noLoop();\n  }\n\n}\n\nfunction drawCurve() {\n  \n  if (points.length > 3) {\n    beginShape();\n\n    for (let i = 0; i < points.length; i++) {\n      curveVertex(points[i][0], points[i][1]);\n    }\n\n    endShape();\n  }\n}\n\nfunction mousePressed() {\n   init();\n}\n\nfunction keyPressed() {\n  \n  if (keyCode == 83) {\n    saveCanvas('genuary-day-8');\n  }\n\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61e1d6855941af28fa32499c",
        "isSelectedFile": true,
        "createdAt": "2022-01-15T07:45:18.702Z",
        "updatedAt": "2022-01-15T07:45:18.702Z",
        "id": "61e1d6855941af28fa32499c"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61e1d6855941af28fa32499b",
        "createdAt": "2022-01-15T07:45:18.702Z",
        "updatedAt": "2022-01-15T07:45:18.702Z",
        "isSelectedFile": false,
        "id": "61e1d6855941af28fa32499b"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n  display: flex;\n\n  /* This centers our sketch horizontally. */\n  justify-content: center;\n\n  /* This centers our sketch vertically. */\n  align-items: center;\n}",
        "children": [],
        "fileType": "file",
        "_id": "61e1d6855941af28fa32499d",
        "createdAt": "2022-01-15T07:45:18.702Z",
        "updatedAt": "2022-01-15T07:45:18.702Z",
        "isSelectedFile": false,
        "id": "61e1d6855941af28fa32499d"
      }
    ],
    "createdAt": "2022-01-14T20:01:09.583Z",
    "updatedAt": "2022-01-15T07:45:18.702Z",
    "id": "NFJ_Ej9bM"
  },
  {
    "name": "genurary2022: day 9 - Architecture v1",
    "_id": "4XIGUpuaR",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61e27ccf5941af28fa32499f",
          "61e27ccf5941af28fa3249a0",
          "61e319b67b0eab00244dd537",
          "61e27ccf5941af28fa3249a1"
        ],
        "fileType": "folder",
        "_id": "61e27ccf5941af28fa32499e",
        "createdAt": "2022-02-06T15:01:05.483Z",
        "updatedAt": "2022-02-06T15:01:05.483Z",
        "isSelectedFile": false,
        "id": "61e27ccf5941af28fa32499e"
      },
      {
        "name": "sketch.js",
        "content": "/*\n *  Day 9: Architecture\n *  by @ktorn\n *  for #genuary2022\n *\n *  Click/touch canvas to generate a new one\n *  Press 'S' to save a screenshot\n */\nconst SPACE = 0.8;\n\nconst LEVEL_DRAFT1 = 1;\nconst LEVEL_DRAFT2 = 2;\nconst LEVEL_FINAL = 3;\n\nconst TOTAL_SHAPES = 5;\nconst MARGIN = 50;\n\nlet lineSpacing;\nlet cvn;\nlet sizeW;\nlet sizeH;\n\nlet shapes;\n\nfunction setup() {\n  if (windowWidth < windowHeight) {\n    sizeW = windowWidth * SPACE;\n    sizeH = sizeW / 1.618033988;\n  } else {\n    sizeH = windowHeight * SPACE;\n    sizeW = sizeH * 1.618033988;\n  }\n\n  cvn = createCanvas(sizeW, sizeH);\n\n  setAttributes(\"antialias\", true);\n\n  init();\n}\n\nfunction init() {\n  shapes = [];\n\n  for (let i = 0; i < TOTAL_SHAPES; i++) {\n    addShape();\n  }\n\n  frameCount = 0;\n}\n\nfunction draw() {\n  background(200);\n\n  for(let lv = SKETCH_LEVELS-1; lv >= 0; lv--) {\n    for (let i = 0; i < shapes.length; i++) {\n      shapes[i].renderLevel(lv);\n    }\n  }\n  \n}\n\nfunction addShape() {\n  let sw = random(10, 300);\n  let sh = random(10, 300);\n  let sx = random(MARGIN, sizeW - sw - MARGIN);\n  let sy = random(MARGIN, sizeH - sh - MARGIN);\n\n  let s = new SketchShape(SHAPE.RECT, sx, sy, sw, sh);\n\n  shapes.push(s);\n}\n\nfunction mousePressed() {\n  init();\n}\n\nfunction keyPressed() {\n  if (keyCode == 83) {\n    saveCanvas(\"genuary-day-9\");\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61e27ccf5941af28fa3249a0",
        "isSelectedFile": true,
        "createdAt": "2022-02-06T15:01:05.483Z",
        "updatedAt": "2022-02-06T15:01:05.483Z",
        "id": "61e27ccf5941af28fa3249a0"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketchShape.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61e27ccf5941af28fa32499f",
        "createdAt": "2022-02-06T15:01:05.483Z",
        "updatedAt": "2022-02-06T15:01:05.483Z",
        "isSelectedFile": false,
        "id": "61e27ccf5941af28fa32499f"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n  display: flex;\n\n  /* This centers our sketch horizontally. */\n  justify-content: center;\n\n  /* This centers our sketch vertically. */\n  align-items: center;\n}",
        "children": [],
        "fileType": "file",
        "_id": "61e27ccf5941af28fa3249a1",
        "createdAt": "2022-02-06T15:01:05.483Z",
        "updatedAt": "2022-02-06T15:01:05.483Z",
        "isSelectedFile": false,
        "id": "61e27ccf5941af28fa3249a1"
      },
      {
        "name": "sketchShape.js",
        "content": "\nconst SHAPE = {\n  ELLIPSE: 0,    // TODO\n  LINE: 1,       // TODO\n  RECT: 2\n};\n\nconst SKETCH_LEVELS = 3;\nconst CONSTRUCTION_OV = 30;  // construction lines multiplier\n\nclass SketchShape {\n  \n  constructor(shape, p1, p2, p3, p4) {\n    this.shape = shape;\n    this.p1 = p1;\n    this.p2 = p2;\n    this.p3 = p3;\n    this.p4 = p4;\n    \n    this.sketches = []\n    \n    if(this.shape == SHAPE.RECT) {\n      this.generateRectSketches();\n    }\n    \n  }\n  \n  \n  generateRectSketches() {\n    \n    if(!this.p4) {\n      this.p4 = this.p3\n    }\n    \n    for(let i = 0; i < SKETCH_LEVELS; i++) {\n      \n      let e = i * 5;\n      \n      let ov = CONSTRUCTION_OV * i;\n      \n      let p1Vx = this.p1 + random(-e, e);\n      let p1Vy = this.p2 + random(-e, e) - ov;\n      let p1Hx = this.p1 + random(-e, e) - ov;\n      let p1Hy = this.p2 + random(-e, e);\n      let p2Hx = this.p1 + this.p3 + random(-e, e) + ov;\n      let p2Hy = this.p2 + random(-e, e);\n      let p2Vx = this.p1 + this.p3 + random(-e, e);\n      let p2Vy = this.p2 + random(-e, e) - ov;\n      let p3Vx = this.p1 + this.p3 + random(-e, e);\n      let p3Vy = this.p2 + this.p4 + random(-e, e) + ov;\n      let p3Hx = this.p1 + this.p3 + random(-e, e) + ov;\n      let p3Hy = this.p2 + this.p4 + random(-e, e);\n      let p4Hx = this.p1 + random(-e, e) - ov;\n      let p4Hy = this.p2 + this.p4 + random(-e, e);\n      let p4Vx = this.p1 + random(-e, e);\n      let p4Vy = this.p2 + this.p4 + random(-e, e) + ov;\n      \n      let sketch = {level: i,\n                    p1Vx: p1Vx,\n                    p1Vy: p1Vy,\n                    p1Hx: p1Hx,\n                    p1Hy: p1Hy,\n                    p2Vx: p2Vx,\n                    p2Vy: p2Vy,\n                    p2Hx: p2Hx,\n                    p2Hy: p2Hy,\n                    p3Vx: p3Vx,\n                    p3Vy: p3Vy,\n                    p3Hx: p3Hx,\n                    p3Hy: p3Hy,\n                    p4Vx: p4Vx,\n                    p4Vy: p4Vy,\n                    p4Hx: p4Hx,\n                    p4Hy: p4Hy,\n                   }\n      this.sketches.push(sketch);\n    }\n  }\n  \n  render() {\n    let gray = 150;\n    strokeWeight(1);\n    \n    for(let i = this.sketches.length-1; i >= 0; i--) {\n\n      \n      \n      renderLevel(i);\n    }\n  }\n  \n  renderLevel(level) {\n    \n    let gray = 200 - (50 * (3 - level));\n\n    stroke(gray);\n    \n      if(level == 0) {\n        strokeWeight(3);\n      } else {\n        strokeWeight(1);\n      }\n    \n      let s = this.sketches[level];\n    \n      line(s.p1Hx, s.p1Hy, s.p2Hx, s.p2Hy);\n      line(s.p2Vx, s.p2Vy, s.p3Vx, s.p3Vy);\n      line(s.p3Hx, s.p3Hy, s.p4Hx, s.p4Hy);\n      line(s.p4Vx, s.p4Vy, s.p1Vx, s.p1Vy);\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "61e319b67b0eab00244dd537",
        "isSelectedFile": false,
        "updatedAt": "2022-02-06T15:01:05.483Z",
        "createdAt": "2022-02-06T15:01:05.483Z",
        "id": "61e319b67b0eab00244dd537"
      }
    ],
    "createdAt": "2022-01-15T07:50:39.455Z",
    "updatedAt": "2022-02-06T15:01:05.483Z",
    "id": "4XIGUpuaR"
  },
  {
    "name": "Golden Spiral",
    "_id": "ByZ9RHcME",
    "createdAt": "2019-01-14T18:01:44.783Z",
    "updatedAt": "2019-01-17T08:33:52.992Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5c3ccd42884c8e46bc6b831f",
          "5c3ccd42884c8e46bc6b8320",
          "5c3ccd42884c8e46bc6b8321"
        ],
        "fileType": "folder",
        "_id": "5c3ccd42884c8e46bc6b8322",
        "createdAt": "2019-01-17T08:33:52.992Z",
        "updatedAt": "2019-01-17T08:33:52.992Z",
        "id": "5c3ccd42884c8e46bc6b8322"
      },
      {
        "name": "sketch.js",
        "content": "var size;\n\nfunction setup() {\n  createCanvas(800, 800);\n  size = 200;\n}\n\nfunction draw() {\n  background(220);\n\n  fill(255);\n\n  startX = 10;\n  startY = 10;\n\n  translate(startX, startY);\n  \n  var strokeW = 2;\n\n  for (var i = 0; i < 50; i++) {\n    strokeW += 2;\n    strokeWeight(strokeW);\n    \n    drawSquare(size);\n\n    rotate(HALF_PI);\n    scale(0.618);\n    translate(0, -2.618 * size);\n  }\n}\n\nfunction drawSquare(size) {\n  push();\n  push();\n  // noStroke();\n  rect(0, 0, size, size);\n  pop();\n  noFill();\n\n  arc(size, size, 2 * size, 2 * size, PI, PI + HALF_PI);\n  pop();\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "5c3ccd42884c8e46bc6b831f",
        "createdAt": "2019-01-17T08:33:52.992Z",
        "updatedAt": "2019-01-17T08:33:52.992Z",
        "id": "5c3ccd42884c8e46bc6b831f"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "5c3ccd42884c8e46bc6b8320",
        "createdAt": "2019-01-17T08:33:52.992Z",
        "updatedAt": "2019-01-17T08:33:52.992Z",
        "id": "5c3ccd42884c8e46bc6b8320"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5c3ccd42884c8e46bc6b8321",
        "createdAt": "2019-01-17T08:33:52.992Z",
        "updatedAt": "2019-01-17T08:33:52.992Z",
        "id": "5c3ccd42884c8e46bc6b8321"
      }
    ],
    "id": "ByZ9RHcME"
  },
  {
    "name": "hicetnunc-html-p5js-teztokAPI-template",
    "_id": "Kz__OsKBz",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6553e30f7f2c7918599c0650",
          "655400a7796d91001aef4920",
          "6553e30f7f2c7918599c0651",
          "6553e30f7f2c7918599c0652",
          "6553e30f7f2c7918599c0653",
          "6553e30f7f2c7918599c0654",
          "6553e30f7f2c7918599c0655",
          "6553e30f7f2c7918599c0656",
          "65548c85756de2001b77383b"
        ],
        "fileType": "folder",
        "_id": "6553e30f7f2c7918599c064f",
        "isSelectedFile": false,
        "createdAt": "2023-11-22T01:08:38.840Z",
        "updatedAt": "2023-11-22T01:08:38.840Z",
        "id": "6553e30f7f2c7918599c064f"
      },
      {
        "name": "sketch.js",
        "content": "// TEZTOK API TEMPLATE\n\n// 🚨 this template uses an external API (Teztok)\n// If Teztok changes its API or stops functioning\n// already minted OBJKTs may be permanently broken\n\n// p5.js template for minting on Teia\n// By @ktorn\n\n\n// Based on Hicdex template by Raphaël de Courville (@sableraph)\n// Original code: https://github.com/SableRaf/HicEtNunc-p5js-templates\n\n// teia code is adapted from https://github.com/teia-community/teia-templates/tree/main/html-p5js-template\n// More teia html templates (three.js, glsl, etc) can be found at\n// https://github.com/teia-community/teia-templates/tree/main\n\n// 🤓 Note: replace thumbnail.png with your own thumbnail\n\n// **************************\n// *        COLORS          *\n// **************************\n\nconst paletteArray = [\n  \"https://coolors.co/ffadad-ffd6a5-fdffb6-caffbf-9bf6ff-a0c4ff-bdb2ff-ffc6ff\",\n  \"https://coolors.co/f8f9fa-e9ecef-dee2e6-ced4da-adb5bd-6c757d-495057-343a40-212529\",\n];\n\nlet colors = [];\n\nfunction getColorsFrom(palArray, index) {\n  if (index > palArray.length) {\n    console.error(\n      `You are trying to get color palette at index ${index} but the color palette array is only of length ${palArray.length}`\n    );\n    return;\n  }\n  let paletteUrl = palArray[index];\n  console.log(\"🎨 color palette: \" + paletteUrl);\n  let colorArray = paletteUrl.match(/[0-9a-f]{6}/g).map((c) => color(`#${c}`));\n  return colorArray;\n}\n\n// **************************\n// *    OBJKT DATA    *\n// **************************\n\n// If you want to create OBJKT's with different seeds,\n// you can access the creator and viewer wallet ids.\n// This values will only be injected once the piece has been minted\n// they will not work locally.\nconst creator = new URLSearchParams(window.location.search).get(\"creator\");\nconst viewer = new URLSearchParams(window.location.search).get(\"viewer\");\n// NOTE: if the user is viewing the page on hicetnunc while unsynced,\n// the viewer variable will return a string of value \"false\" (NOT a boolean)\n\n// The ID of the OBJKT is also passed via the URL parameters\nconst objkt = new URLSearchParams(window.location.search).get(\"objkt\");\n// NOTE: when the object is viewed in the preview page\n// the objkt variable will return a string of value \"false\" (NOT a boolean)\n\nlet OBJKTdata;\n\n\nconsole.log(\"NFT created by\", creator); // null if local\nconsole.log(\"NFT viewed by\", viewer); // null if local\nconsole.log(\"OBJKT ID is\", objkt); // null if local\n\nconst DEFAULTSEED = 1234;\nlet viewerSeed = DEFAULTSEED;\n\nconst DUMMY = \"tz1dd2tmTJFRJh8ycLuZeMpKLquJYkMypu2Q\"; // simulate a synced viewer (user a different address to try another viewer)\nconst UNSYNCED = \"false\"; // simulate an unsynced user\n\nconst PREVIEW = \"false\"; // simulate the preview page\nconst DUMMY_OBJKT = 230177; // simulate an OBJKT ID\n\n// Default is viewer. Try with DUMMY or UNSYNCED only for debugging\n// let viewerData = viewer;\n//let viewerData = UNSYNCED;\nlet viewerData = DUMMY;\n\n// Default is creator. Try with DUMMY only for debugging\n// let creatorData = creator;\nlet creatorData = DUMMY;\n\n// Default is objkt. Try with DUMMY_OBJKT or PREVIEW_OBJKT only for debugging\n// let objktID = objkt; // will cause errors when ran locally (objkt is null)\nlet objktID = DUMMY_OBJKT;\n//let objktID = PREVIEW;\n\n// Check if we have a viewer\nlet viewerWasFound = viewerData && !viewerData.includes(\"false\");\n\n// **************************\n// *       PARAMETERS       *\n// **************************\n\n// Set this to true when minting\np5.disableFriendlyErrors = false;\n\n// The title of your piece goes here (not visible on hicetnunc)\ndocument.title = \"My beautiful p5.js sketch\";\n\n// Describe what your piece looks like to screen reader users\nlet description = \"\";\n\nlet txtSize = 32;\n\n// **************************\n// *    GLOBAL VARIABLES    *\n// **************************\n\nlet objktMetadata = {};\n\nlet owners = [];\n\nlet viewerIsOwner = false; // we will set this based on the hicdex query\n\nlet isPreview = objktID === \"false\";\n\nlet dataFinishedLoading = false;\n\nlet bubbles;\nlet bubblesCreated = false;\nconst BUBBLE_SIZE_UNIT = 50;\n\n// **************************\n// *        PRELOAD         *\n// **************************\n\nfunction preload() {\n  if (!isPreview) {\n    fetchData(objktID)\n      .then((data) => checkViewerIsOwner(data))\n      .then(() => {\n        colors = getColors(viewerIsOwner);\n      })\n      .then(() => {\n        dataFinishedLoading = true;\n      });\n  } else {\n    console.warn(\n      \"This sketch doesn't have an OBJKT ID yet (preview mode?). Unable to fetch data\"\n    );\n  }\n}\n\n// **************************\n// *          SETUP         *\n// **************************\n\nfunction setup() {\n  \n  randomSeed(viewerSeed);\n  \n  createCanvas(windowWidth, windowHeight);\n\n  describe(description); // Create a screen reader accessible description for the canvas\n  \n  bubbles = [];\n\n  push();\n  stroke(0);\n  strokeWeight(8);\n  strokeJoin(ROUND);\n  fill(255);\n\n  if (isPreview) {\n    console.log(\"Preview mode\");\n  }\n  \n}\n\n// **************************\n// *          DRAW          *\n// **************************\n\nfunction draw() {\n  background(255);\n  fill(255);\n  stroke(0);\n\n  if (dataFinishedLoading) {\n    if (viewerIsOwner === true) {\n      showOwnerArt();\n    } else {\n      showDefaultArt();\n    }\n  }\n\n  text(`OBJKT #${objktID}`, txtSize, height - txtSize);\n}\n\n// We do this if the viewer owns the OBJKT\nfunction showOwnerArt() {\n  background(\"rgb(182,250,182)\");\n  createBubbles();\n  showBubbles();\n  text(`You own this NFT`, txtSize, txtSize * 2);\n}\n\n// We do that if the viewer does NOT own the OBJKT\nfunction showDefaultArt() {\n  background(\"rgb(216,215,215)\");\n  createBubbles();\n  showBubbles();\n  text(`You do not own this NFT`, txtSize, txtSize * 2);\n}\n\nfunction createBubbles() {\n  if (!bubblesCreated) {\n    \n    print(\"Creating bubbles!\");\n    \n    // console.log(\"###### \" + JSON.stringify(OBJKTdata, null, 2))\n    \n    let holdings = OBJKTdata.holdings;\n    \n    // print(\"holdings: \" + holdings.length)\n    \n    for (let i = 0; i < holdings.length; i++) {\n      \n      let owner = holdings[i];\n      \n      // print(\"holder[\" + i + \"] = \" + JSON.stringify(owner, null, 2))\n\n      let ownerName = truncate(owner.holder_address, 12);\n      \n      if(owner.holder_profile && owner.holder_profile.name) {\n        ownerName = owner.holder_profile.name;\n      }\n      \n      print(\"holder[\" + i + \"] = \" + ownerName + \" - \" + owner.amount);\n      \n      let bubbleSize = BUBBLE_SIZE_UNIT * owner.amount;\n      let textSize = getTextSize(ownerName, bubbleSize);\n      \n      let newBubble = { x: random(width),\n                        y: random(height),\n                        size: bubbleSize,\n                        text: ownerName,\n                        textSize: textSize,\n                        address: owner.holder_address\n                      }\n      \n      bubbles.push(newBubble);\n    \n    \n    }\n\n    bubblesCreated = true;\n  }\n}\n\nfunction showBubbles() {\n  \n  for (let i = 0; i < bubbles.length; i++) {\n    let bubble = bubbles[i];\n    \n    push();\n    \n    strokeWeight(1);\n    \n    if(bubble.address == viewerData) {\n      fill(255, 0, 0, 100);\n    } else {\n      fill(0, 50);\n    }\n    \n    noStroke();\n    circle(bubble.x, bubble.y, bubble.size);\n    \n    textAlign(CENTER, CENTER);\n    textSize(bubble.textSize);\n    \n    if(bubble.address == viewerData) {\n      fill(255, 255);\n    }\n    else {\n      fill(255, 100);\n    }\n    text(bubble.text, bubble.x, bubble.y);\n    \n    pop();\n  }\n}\n\nfunction getColors(isColor) {\n  if (isColor) {\n    return getColorsFrom(paletteArray, 0);\n  } else {\n    return getColorsFrom(paletteArray, 1);\n  }\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}\n\n// Function to adjust text size to fit within the circle\nfunction getTextSize(str, maxSize) {\n  let size = 32; // Initial text size\n  textSize(size);\n  \n  // Decrease text size until it fits within the circle\n  while (textWidth(str) > maxSize || textAscent() + textDescent() > maxSize) {\n    size--;\n    textSize(size);\n  }\n  \n  return size;\n}\n\n\n",
        "children": [],
        "fileType": "file",
        "_id": "6553e30f7f2c7918599c0654",
        "isSelectedFile": true,
        "createdAt": "2023-11-22T01:08:38.840Z",
        "updatedAt": "2023-11-22T01:08:38.840Z",
        "id": "6553e30f7f2c7918599c0654"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <title>p5.js template</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta property=\"og:image\" content=\"thumbnail.png\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"style.css\" />\n    <script src=\"p5.min.js\"></script>\n  </head>\n  <body>\n    <script type=\"text/javascript\" src=\"utils.js\"></script>\n    <script type=\"text/javascript\" src=\"data.js\"></script>\n    <script type=\"text/javascript\" src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6553e30f7f2c7918599c0651",
        "isSelectedFile": false,
        "createdAt": "2023-11-22T01:08:38.840Z",
        "updatedAt": "2023-11-22T01:08:38.840Z",
        "id": "6553e30f7f2c7918599c0651"
      },
      {
        "name": "style.css",
        "content": "html,\nbody {\n  margin: 0;\n  padding: 0;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n}",
        "children": [],
        "fileType": "file",
        "_id": "6553e30f7f2c7918599c0655",
        "isSelectedFile": false,
        "createdAt": "2023-11-22T01:08:38.840Z",
        "updatedAt": "2023-11-22T01:08:38.840Z",
        "id": "6553e30f7f2c7918599c0655"
      },
      {
        "name": "p5_LICENSE.txt",
        "content": "                    GNU LESSER GENERAL PUBLIC LICENSE\r\n                       Version 2.1, February 1999\r\n\r\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\r\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\r\n Everyone is permitted to copy and distribute verbatim copies\r\n of this license document, but changing it is not allowed.\r\n\r\n(This is the first released version of the Lesser GPL.  It also counts\r\n as the successor of the GNU Library Public License, version 2, hence\r\n the version number 2.1.)\r\n\r\n                            Preamble\r\n\r\n  The licenses for most software are designed to take away your\r\nfreedom to share and change it.  By contrast, the GNU General Public\r\nLicenses are intended to guarantee your freedom to share and change\r\nfree software--to make sure the software is free for all its users.\r\n\r\n  This license, the Lesser General Public License, applies to some\r\nspecially designated software packages--typically libraries--of the\r\nFree Software Foundation and other authors who decide to use it.  You\r\ncan use it too, but we suggest you first think carefully about whether\r\nthis license or the ordinary General Public License is the better\r\nstrategy to use in any particular case, based on the explanations below.\r\n\r\n  When we speak of free software, we are referring to freedom of use,\r\nnot price.  Our General Public Licenses are designed to make sure that\r\nyou have the freedom to distribute copies of free software (and charge\r\nfor this service if you wish); that you receive source code or can get\r\nit if you want it; that you can change the software and use pieces of\r\nit in new free programs; and that you are informed that you can do\r\nthese things.\r\n\r\n  To protect your rights, we need to make restrictions that forbid\r\ndistributors to deny you these rights or to ask you to surrender these\r\nrights.  These restrictions translate to certain responsibilities for\r\nyou if you distribute copies of the library or if you modify it.\r\n\r\n  For example, if you distribute copies of the library, whether gratis\r\nor for a fee, you must give the recipients all the rights that we gave\r\nyou.  You must make sure that they, too, receive or can get the source\r\ncode.  If you link other code with the library, you must provide\r\ncomplete object files to the recipients, so that they can relink them\r\nwith the library after making changes to the library and recompiling\r\nit.  And you must show them these terms so they know their rights.\r\n\r\n  We protect your rights with a two-step method: (1) we copyright the\r\nlibrary, and (2) we offer you this license, which gives you legal\r\npermission to copy, distribute and/or modify the library.\r\n\r\n  To protect each distributor, we want to make it very clear that\r\nthere is no warranty for the free library.  Also, if the library is\r\nmodified by someone else and passed on, the recipients should know\r\nthat what they have is not the original version, so that the original\r\nauthor's reputation will not be affected by problems that might be\r\nintroduced by others.\r\n\r\n  Finally, software patents pose a constant threat to the existence of\r\nany free program.  We wish to make sure that a company cannot\r\neffectively restrict the users of a free program by obtaining a\r\nrestrictive license from a patent holder.  Therefore, we insist that\r\nany patent license obtained for a version of the library must be\r\nconsistent with the full freedom of use specified in this license.\r\n\r\n  Most GNU software, including some libraries, is covered by the\r\nordinary GNU General Public License.  This license, the GNU Lesser\r\nGeneral Public License, applies to certain designated libraries, and\r\nis quite different from the ordinary General Public License.  We use\r\nthis license for certain libraries in order to permit linking those\r\nlibraries into non-free programs.\r\n\r\n  When a program is linked with a library, whether statically or using\r\na shared library, the combination of the two is legally speaking a\r\ncombined work, a derivative of the original library.  The ordinary\r\nGeneral Public License therefore permits such linking only if the\r\nentire combination fits its criteria of freedom.  The Lesser General\r\nPublic License permits more lax criteria for linking other code with\r\nthe library.\r\n\r\n  We call this license the \"Lesser\" General Public License because it\r\ndoes Less to protect the user's freedom than the ordinary General\r\nPublic License.  It also provides other free software developers Less\r\nof an advantage over competing non-free programs.  These disadvantages\r\nare the reason we use the ordinary General Public License for many\r\nlibraries.  However, the Lesser license provides advantages in certain\r\nspecial circumstances.\r\n\r\n  For example, on rare occasions, there may be a special need to\r\nencourage the widest possible use of a certain library, so that it becomes\r\na de-facto standard.  To achieve this, non-free programs must be\r\nallowed to use the library.  A more frequent case is that a free\r\nlibrary does the same job as widely used non-free libraries.  In this\r\ncase, there is little to gain by limiting the free library to free\r\nsoftware only, so we use the Lesser General Public License.\r\n\r\n  In other cases, permission to use a particular library in non-free\r\nprograms enables a greater number of people to use a large body of\r\nfree software.  For example, permission to use the GNU C Library in\r\nnon-free programs enables many more people to use the whole GNU\r\noperating system, as well as its variant, the GNU/Linux operating\r\nsystem.\r\n\r\n  Although the Lesser General Public License is Less protective of the\r\nusers' freedom, it does ensure that the user of a program that is\r\nlinked with the Library has the freedom and the wherewithal to run\r\nthat program using a modified version of the Library.\r\n\r\n  The precise terms and conditions for copying, distribution and\r\nmodification follow.  Pay close attention to the difference between a\r\n\"work based on the library\" and a \"work that uses the library\".  The\r\nformer contains code derived from the library, whereas the latter must\r\nbe combined with the library in order to run.\r\n\r\n                  GNU LESSER GENERAL PUBLIC LICENSE\r\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\r\n\r\n  0. This License Agreement applies to any software library or other\r\nprogram which contains a notice placed by the copyright holder or\r\nother authorized party saying it may be distributed under the terms of\r\nthis Lesser General Public License (also called \"this License\").\r\nEach licensee is addressed as \"you\".\r\n\r\n  A \"library\" means a collection of software functions and/or data\r\nprepared so as to be conveniently linked with application programs\r\n(which use some of those functions and data) to form executables.\r\n\r\n  The \"Library\", below, refers to any such software library or work\r\nwhich has been distributed under these terms.  A \"work based on the\r\nLibrary\" means either the Library or any derivative work under\r\ncopyright law: that is to say, a work containing the Library or a\r\nportion of it, either verbatim or with modifications and/or translated\r\nstraightforwardly into another language.  (Hereinafter, translation is\r\nincluded without limitation in the term \"modification\".)\r\n\r\n  \"Source code\" for a work means the preferred form of the work for\r\nmaking modifications to it.  For a library, complete source code means\r\nall the source code for all modules it contains, plus any associated\r\ninterface definition files, plus the scripts used to control compilation\r\nand installation of the library.\r\n\r\n  Activities other than copying, distribution and modification are not\r\ncovered by this License; they are outside its scope.  The act of\r\nrunning a program using the Library is not restricted, and output from\r\nsuch a program is covered only if its contents constitute a work based\r\non the Library (independent of the use of the Library in a tool for\r\nwriting it).  Whether that is true depends on what the Library does\r\nand what the program that uses the Library does.\r\n\r\n  1. You may copy and distribute verbatim copies of the Library's\r\ncomplete source code as you receive it, in any medium, provided that\r\nyou conspicuously and appropriately publish on each copy an\r\nappropriate copyright notice and disclaimer of warranty; keep intact\r\nall the notices that refer to this License and to the absence of any\r\nwarranty; and distribute a copy of this License along with the\r\nLibrary.\r\n\r\n  You may charge a fee for the physical act of transferring a copy,\r\nand you may at your option offer warranty protection in exchange for a\r\nfee.\r\n\r\n  2. You may modify your copy or copies of the Library or any portion\r\nof it, thus forming a work based on the Library, and copy and\r\ndistribute such modifications or work under the terms of Section 1\r\nabove, provided that you also meet all of these conditions:\r\n\r\n    a) The modified work must itself be a software library.\r\n\r\n    b) You must cause the files modified to carry prominent notices\r\n    stating that you changed the files and the date of any change.\r\n\r\n    c) You must cause the whole of the work to be licensed at no\r\n    charge to all third parties under the terms of this License.\r\n\r\n    d) If a facility in the modified Library refers to a function or a\r\n    table of data to be supplied by an application program that uses\r\n    the facility, other than as an argument passed when the facility\r\n    is invoked, then you must make a good faith effort to ensure that,\r\n    in the event an application does not supply such function or\r\n    table, the facility still operates, and performs whatever part of\r\n    its purpose remains meaningful.\r\n\r\n    (For example, a function in a library to compute square roots has\r\n    a purpose that is entirely well-defined independent of the\r\n    application.  Therefore, Subsection 2d requires that any\r\n    application-supplied function or table used by this function must\r\n    be optional: if the application does not supply it, the square\r\n    root function must still compute square roots.)\r\n\r\nThese requirements apply to the modified work as a whole.  If\r\nidentifiable sections of that work are not derived from the Library,\r\nand can be reasonably considered independent and separate works in\r\nthemselves, then this License, and its terms, do not apply to those\r\nsections when you distribute them as separate works.  But when you\r\ndistribute the same sections as part of a whole which is a work based\r\non the Library, the distribution of the whole must be on the terms of\r\nthis License, whose permissions for other licensees extend to the\r\nentire whole, and thus to each and every part regardless of who wrote\r\nit.\r\n\r\nThus, it is not the intent of this section to claim rights or contest\r\nyour rights to work written entirely by you; rather, the intent is to\r\nexercise the right to control the distribution of derivative or\r\ncollective works based on the Library.\r\n\r\nIn addition, mere aggregation of another work not based on the Library\r\nwith the Library (or with a work based on the Library) on a volume of\r\na storage or distribution medium does not bring the other work under\r\nthe scope of this License.\r\n\r\n  3. You may opt to apply the terms of the ordinary GNU General Public\r\nLicense instead of this License to a given copy of the Library.  To do\r\nthis, you must alter all the notices that refer to this License, so\r\nthat they refer to the ordinary GNU General Public License, version 2,\r\ninstead of to this License.  (If a newer version than version 2 of the\r\nordinary GNU General Public License has appeared, then you can specify\r\nthat version instead if you wish.)  Do not make any other change in\r\nthese notices.\r\n\r\n  Once this change is made in a given copy, it is irreversible for\r\nthat copy, so the ordinary GNU General Public License applies to all\r\nsubsequent copies and derivative works made from that copy.\r\n\r\n  This option is useful when you wish to copy part of the code of\r\nthe Library into a program that is not a library.\r\n\r\n  4. You may copy and distribute the Library (or a portion or\r\nderivative of it, under Section 2) in object code or executable form\r\nunder the terms of Sections 1 and 2 above provided that you accompany\r\nit with the complete corresponding machine-readable source code, which\r\nmust be distributed under the terms of Sections 1 and 2 above on a\r\nmedium customarily used for software interchange.\r\n\r\n  If distribution of object code is made by offering access to copy\r\nfrom a designated place, then offering equivalent access to copy the\r\nsource code from the same place satisfies the requirement to\r\ndistribute the source code, even though third parties are not\r\ncompelled to copy the source along with the object code.\r\n\r\n  5. A program that contains no derivative of any portion of the\r\nLibrary, but is designed to work with the Library by being compiled or\r\nlinked with it, is called a \"work that uses the Library\".  Such a\r\nwork, in isolation, is not a derivative work of the Library, and\r\ntherefore falls outside the scope of this License.\r\n\r\n  However, linking a \"work that uses the Library\" with the Library\r\ncreates an executable that is a derivative of the Library (because it\r\ncontains portions of the Library), rather than a \"work that uses the\r\nlibrary\".  The executable is therefore covered by this License.\r\nSection 6 states terms for distribution of such executables.\r\n\r\n  When a \"work that uses the Library\" uses material from a header file\r\nthat is part of the Library, the object code for the work may be a\r\nderivative work of the Library even though the source code is not.\r\nWhether this is true is especially significant if the work can be\r\nlinked without the Library, or if the work is itself a library.  The\r\nthreshold for this to be true is not precisely defined by law.\r\n\r\n  If such an object file uses only numerical parameters, data\r\nstructure layouts and accessors, and small macros and small inline\r\nfunctions (ten lines or less in length), then the use of the object\r\nfile is unrestricted, regardless of whether it is legally a derivative\r\nwork.  (Executables containing this object code plus portions of the\r\nLibrary will still fall under Section 6.)\r\n\r\n  Otherwise, if the work is a derivative of the Library, you may\r\ndistribute the object code for the work under the terms of Section 6.\r\nAny executables containing that work also fall under Section 6,\r\nwhether or not they are linked directly with the Library itself.\r\n\r\n  6. As an exception to the Sections above, you may also combine or\r\nlink a \"work that uses the Library\" with the Library to produce a\r\nwork containing portions of the Library, and distribute that work\r\nunder terms of your choice, provided that the terms permit\r\nmodification of the work for the customer's own use and reverse\r\nengineering for debugging such modifications.\r\n\r\n  You must give prominent notice with each copy of the work that the\r\nLibrary is used in it and that the Library and its use are covered by\r\nthis License.  You must supply a copy of this License.  If the work\r\nduring execution displays copyright notices, you must include the\r\ncopyright notice for the Library among them, as well as a reference\r\ndirecting the user to the copy of this License.  Also, you must do one\r\nof these things:\r\n\r\n    a) Accompany the work with the complete corresponding\r\n    machine-readable source code for the Library including whatever\r\n    changes were used in the work (which must be distributed under\r\n    Sections 1 and 2 above); and, if the work is an executable linked\r\n    with the Library, with the complete machine-readable \"work that\r\n    uses the Library\", as object code and/or source code, so that the\r\n    user can modify the Library and then relink to produce a modified\r\n    executable containing the modified Library.  (It is understood\r\n    that the user who changes the contents of definitions files in the\r\n    Library will not necessarily be able to recompile the application\r\n    to use the modified definitions.)\r\n\r\n    b) Use a suitable shared library mechanism for linking with the\r\n    Library.  A suitable mechanism is one that (1) uses at run time a\r\n    copy of the library already present on the user's computer system,\r\n    rather than copying library functions into the executable, and (2)\r\n    will operate properly with a modified version of the library, if\r\n    the user installs one, as long as the modified version is\r\n    interface-compatible with the version that the work was made with.\r\n\r\n    c) Accompany the work with a written offer, valid for at\r\n    least three years, to give the same user the materials\r\n    specified in Subsection 6a, above, for a charge no more\r\n    than the cost of performing this distribution.\r\n\r\n    d) If distribution of the work is made by offering access to copy\r\n    from a designated place, offer equivalent access to copy the above\r\n    specified materials from the same place.\r\n\r\n    e) Verify that the user has already received a copy of these\r\n    materials or that you have already sent this user a copy.\r\n\r\n  For an executable, the required form of the \"work that uses the\r\nLibrary\" must include any data and utility programs needed for\r\nreproducing the executable from it.  However, as a special exception,\r\nthe materials to be distributed need not include anything that is\r\nnormally distributed (in either source or binary form) with the major\r\ncomponents (compiler, kernel, and so on) of the operating system on\r\nwhich the executable runs, unless that component itself accompanies\r\nthe executable.\r\n\r\n  It may happen that this requirement contradicts the license\r\nrestrictions of other proprietary libraries that do not normally\r\naccompany the operating system.  Such a contradiction means you cannot\r\nuse both them and the Library together in an executable that you\r\ndistribute.\r\n\r\n  7. You may place library facilities that are a work based on the\r\nLibrary side-by-side in a single library together with other library\r\nfacilities not covered by this License, and distribute such a combined\r\nlibrary, provided that the separate distribution of the work based on\r\nthe Library and of the other library facilities is otherwise\r\npermitted, and provided that you do these two things:\r\n\r\n    a) Accompany the combined library with a copy of the same work\r\n    based on the Library, uncombined with any other library\r\n    facilities.  This must be distributed under the terms of the\r\n    Sections above.\r\n\r\n    b) Give prominent notice with the combined library of the fact\r\n    that part of it is a work based on the Library, and explaining\r\n    where to find the accompanying uncombined form of the same work.\r\n\r\n  8. You may not copy, modify, sublicense, link with, or distribute\r\nthe Library except as expressly provided under this License.  Any\r\nattempt otherwise to copy, modify, sublicense, link with, or\r\ndistribute the Library is void, and will automatically terminate your\r\nrights under this License.  However, parties who have received copies,\r\nor rights, from you under this License will not have their licenses\r\nterminated so long as such parties remain in full compliance.\r\n\r\n  9. You are not required to accept this License, since you have not\r\nsigned it.  However, nothing else grants you permission to modify or\r\ndistribute the Library or its derivative works.  These actions are\r\nprohibited by law if you do not accept this License.  Therefore, by\r\nmodifying or distributing the Library (or any work based on the\r\nLibrary), you indicate your acceptance of this License to do so, and\r\nall its terms and conditions for copying, distributing or modifying\r\nthe Library or works based on it.\r\n\r\n  10. Each time you redistribute the Library (or any work based on the\r\nLibrary), the recipient automatically receives a license from the\r\noriginal licensor to copy, distribute, link with or modify the Library\r\nsubject to these terms and conditions.  You may not impose any further\r\nrestrictions on the recipients' exercise of the rights granted herein.\r\nYou are not responsible for enforcing compliance by third parties with\r\nthis License.\r\n\r\n  11. If, as a consequence of a court judgment or allegation of patent\r\ninfringement or for any other reason (not limited to patent issues),\r\nconditions are imposed on you (whether by court order, agreement or\r\notherwise) that contradict the conditions of this License, they do not\r\nexcuse you from the conditions of this License.  If you cannot\r\ndistribute so as to satisfy simultaneously your obligations under this\r\nLicense and any other pertinent obligations, then as a consequence you\r\nmay not distribute the Library at all.  For example, if a patent\r\nlicense would not permit royalty-free redistribution of the Library by\r\nall those who receive copies directly or indirectly through you, then\r\nthe only way you could satisfy both it and this License would be to\r\nrefrain entirely from distribution of the Library.\r\n\r\nIf any portion of this section is held invalid or unenforceable under any\r\nparticular circumstance, the balance of the section is intended to apply,\r\nand the section as a whole is intended to apply in other circumstances.\r\n\r\nIt is not the purpose of this section to induce you to infringe any\r\npatents or other property right claims or to contest validity of any\r\nsuch claims; this section has the sole purpose of protecting the\r\nintegrity of the free software distribution system which is\r\nimplemented by public license practices.  Many people have made\r\ngenerous contributions to the wide range of software distributed\r\nthrough that system in reliance on consistent application of that\r\nsystem; it is up to the author/donor to decide if he or she is willing\r\nto distribute software through any other system and a licensee cannot\r\nimpose that choice.\r\n\r\nThis section is intended to make thoroughly clear what is believed to\r\nbe a consequence of the rest of this License.\r\n\r\n  12. If the distribution and/or use of the Library is restricted in\r\ncertain countries either by patents or by copyrighted interfaces, the\r\noriginal copyright holder who places the Library under this License may add\r\nan explicit geographical distribution limitation excluding those countries,\r\nso that distribution is permitted only in or among countries not thus\r\nexcluded.  In such case, this License incorporates the limitation as if\r\nwritten in the body of this License.\r\n\r\n  13. The Free Software Foundation may publish revised and/or new\r\nversions of the Lesser General Public License from time to time.\r\nSuch new versions will be similar in spirit to the present version,\r\nbut may differ in detail to address new problems or concerns.\r\n\r\nEach version is given a distinguishing version number.  If the Library\r\nspecifies a version number of this License which applies to it and\r\n\"any later version\", you have the option of following the terms and\r\nconditions either of that version or of any later version published by\r\nthe Free Software Foundation.  If the Library does not specify a\r\nlicense version number, you may choose any version ever published by\r\nthe Free Software Foundation.\r\n\r\n  14. If you wish to incorporate parts of the Library into other free\r\nprograms whose distribution conditions are incompatible with these,\r\nwrite to the author to ask for permission.  For software which is\r\ncopyrighted by the Free Software Foundation, write to the Free\r\nSoftware Foundation; we sometimes make exceptions for this.  Our\r\ndecision will be guided by the two goals of preserving the free status\r\nof all derivatives of our free software and of promoting the sharing\r\nand reuse of software generally.\r\n\r\n                            NO WARRANTY\r\n\r\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\r\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\r\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\r\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\r\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\r\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\r\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\r\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\r\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\r\n\r\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\r\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\r\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\r\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\r\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\r\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\r\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\r\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\r\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\r\nDAMAGES.\r\n\r\n                     END OF TERMS AND CONDITIONS\r\n",
        "children": [],
        "fileType": "file",
        "_id": "6553e30f7f2c7918599c0653",
        "isSelectedFile": false,
        "updatedAt": "2023-11-22T01:08:38.840Z",
        "createdAt": "2023-11-22T01:08:38.840Z",
        "id": "6553e30f7f2c7918599c0653"
      },
      {
        "name": "p5.min.js",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6553e30f7f2c7918599c0652",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/0b20cdf8-f4b5-4875-b86f-ec0eafde8cd5.js",
        "isSelectedFile": false,
        "updatedAt": "2023-11-22T01:08:38.840Z",
        "createdAt": "2023-11-22T01:08:38.840Z",
        "id": "6553e30f7f2c7918599c0652"
      },
      {
        "name": "LICENSE.txt",
        "content": "Copyright 2021 Raphaël de Courville\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
        "children": [],
        "fileType": "file",
        "_id": "6553e30f7f2c7918599c0650",
        "isSelectedFile": false,
        "updatedAt": "2023-11-22T01:08:38.840Z",
        "createdAt": "2023-11-22T01:08:38.840Z",
        "id": "6553e30f7f2c7918599c0650"
      },
      {
        "name": "thumbnail.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6553e30f7f2c7918599c0656",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/f670746c-96af-4de5-b2fe-37d06d77ba8c.png",
        "updatedAt": "2023-11-22T01:08:38.840Z",
        "createdAt": "2023-11-22T01:08:38.840Z",
        "isSelectedFile": false,
        "id": "6553e30f7f2c7918599c0656"
      },
      {
        "name": "data.js",
        "content": "// **************************\n// *      TEZTOK API        *\n// **************************\n\nfunction checkViewerIsOwner(data) {\n  if (data.holdings.some((e) => e.holder_address === viewerData)) {\n    console.log(`🦄 viewer IS owner`);\n    viewerIsOwner = true;\n  } else {\n    console.log(`🦆 viewer is NOT owner`);\n  }\n  OBJKTdata = data;\n  console.log({ OBJKT: data });\n}\n\nconst query = `\n  query Objkt($id: String!) {\n    tokens_by_pk(fa2_address: \"KT1RJ6PbjHpwc3M5rw5s2Nbmefwbuwbdxton\", token_id: $id) {\n      artifact_uri\n      artist_profile {\n        user_address\n        name\n      }\n      description\n      display_uri\n      token_id\n      mime_type\n      assets\n      attributes\n      burned_editions\n      contributors\n      creators\n      current_price_to_first_sales_price_diff\n      current_price_to_first_sales_price_pct\n      current_price_to_highest_sales_price_diff\n      current_price_to_highest_sales_price_pct\n      current_price_to_last_sales_price_diff\n      current_price_to_last_sales_price_pct\n      current_price_to_lowest_sales_price_diff\n      current_price_to_lowest_sales_price_pct\n      editions\n      external_uri\n      first_sales_price\n      formats\n      highest_offer_price\n      highest_sales_price\n      is_verified_artist\n      last_processed_event_id\n      last_processed_event_level\n      last_processed_event_timestamp\n      last_sale_at\n      last_sales_price\n      lowest_price_listing\n      lowest_sales_price\n      metadata_uri\n      mint_price\n      minted_at\n      name\n      platform\n      price\n      right_uri\n      rights\n      royalties\n      royalties_total\n      sales_count\n      sales_volume\n      symbol\n      thumbnail_uri\n      updated_at\n      tags {\n        tag\n      }\n      listings(where: {}, order_by: {swap_id: asc}) {\n        price\n        status\n        amount\n        amount_left\n        created_at\n        seller_profile {\n          user_address\n          name\n        }\n      }\n\n      events(order_by: {timestamp: asc}, where: {type: {_eq: \"HEN_COLLECT\"}}) {\n        timestamp\n        amount\n        buyer_profile {\n          user_address\n          name\n        }\n        seller_profile {\n          user_address\n          name\n        }\n        type\n        price\n      }\n\n      holdings(where: {amount: {_gt: \"0\"}}) {\n        holder_address\n        holder_profile {\n          user_address\n          name\n        }\n        amount\n      }\n\n    }\n  }\n`;\n\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\n  const result = await fetch(\"https://teztok.teia.rocks/v1/graphql\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      query: operationsDoc,\n      variables: variables,\n      operationName: operationName,\n    }),\n  });\n\n  return await result.json();\n}\n\nasync function fetchData(objktId) {\n  const { errors, data } = await fetchGraphQL(query, \"Objkt\", {\n    id: \"\" + objktId,\n  });\n  if (errors) {\n    console.error(errors);\n  }\n\n  const result = data.tokens_by_pk;\n  OBJKTdata = result;\n  return result;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "655400a7796d91001aef4920",
        "isSelectedFile": false,
        "updatedAt": "2023-11-22T01:08:38.840Z",
        "createdAt": "2023-11-22T01:08:38.840Z",
        "id": "655400a7796d91001aef4920"
      },
      {
        "name": "utils.js",
        "content": "function truncate(fullStr, strLen, separator) {\n    if (fullStr.length <= strLen) return fullStr;\n\n    separator = separator || '...';\n\n    var sepLen = separator.length,\n        charsToShow = strLen - sepLen,\n        frontChars = Math.ceil(charsToShow/2),\n        backChars = Math.floor(charsToShow/2);\n\n    return fullStr.substr(0, frontChars) + \n           separator + \n           fullStr.substr(fullStr.length - backChars);\n}\n\n\n\nconst originalFetch = window.fetch;\nwindow.fetch = async (...args) => {\n    console.log('HTTP Request:', args);\n    const response = await originalFetch(...args);\n    const clone = response.clone();\n\n    let body;\n    const contentType = response.headers.get(\"content-type\");\n\n    if (contentType && contentType.includes(\"application/json\")) {\n        body = await clone.json();\n    } else if (contentType && contentType.includes(\"text\")) {\n        body = await clone.text();\n    } else if (contentType && (contentType.includes(\"image\") || contentType.includes(\"audio\") || contentType.includes(\"video\") || contentType.includes(\"application/octet-stream\"))) {\n        body = await clone.blob();\n    } else {\n        body = 'Unable to parse body content';\n    }\n\n    console.log('HTTP Response:', response, 'Body:', body);\n    return response;\n};\n",
        "children": [],
        "fileType": "file",
        "_id": "65548c85756de2001b77383b",
        "isSelectedFile": false,
        "updatedAt": "2023-11-22T01:08:38.840Z",
        "createdAt": "2023-11-22T01:08:38.840Z",
        "id": "65548c85756de2001b77383b"
      }
    ],
    "createdAt": "2023-11-14T21:13:52.951Z",
    "updatedAt": "2023-11-22T01:08:38.840Z",
    "id": "Kz__OsKBz"
  },
  {
    "name": "imperfect bounces",
    "_id": "ux2Y55cxg",
    "updatedAt": "2022-10-16T13:48:52.290Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "634ae3193a7a456a0e4e9f3d",
          "634ae3313a7a456a0e4e9f40",
          "634ae3193a7a456a0e4e9f3c",
          "634ae3193a7a456a0e4e9f3e"
        ],
        "fileType": "folder",
        "_id": "634ae3193a7a456a0e4e9f3f",
        "isSelectedFile": false,
        "createdAt": "2022-10-16T13:48:52.290Z",
        "updatedAt": "2022-10-16T13:48:52.290Z",
        "id": "634ae3193a7a456a0e4e9f3f"
      },
      {
        "name": "sketch.js",
        "content": "let particles = [];\n\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  for(let i = 0; i < 10; i++) {\n    let p = new Particle(width /2 , height / 3 + (i * 10), (1 + i));\n    particles.push(p);\n  }\n}\n\nfunction draw() {\n  background(0, 5);\n  \n  for(let i = 0; i < particles.length; i++) {\n    let p = particles[i];\n    p.move();\n    p.render();\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "634ae3193a7a456a0e4e9f3c",
        "isSelectedFile": true,
        "createdAt": "2022-10-16T13:48:52.290Z",
        "updatedAt": "2022-10-16T13:48:52.290Z",
        "id": "634ae3193a7a456a0e4e9f3c"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"particle.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "634ae3193a7a456a0e4e9f3d",
        "isSelectedFile": false,
        "createdAt": "2022-10-16T13:48:52.290Z",
        "updatedAt": "2022-10-16T13:48:52.290Z",
        "id": "634ae3193a7a456a0e4e9f3d"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "634ae3193a7a456a0e4e9f3e",
        "isSelectedFile": false,
        "createdAt": "2022-10-16T13:48:52.290Z",
        "updatedAt": "2022-10-16T13:48:52.290Z",
        "id": "634ae3193a7a456a0e4e9f3e"
      },
      {
        "name": "particle.js",
        "content": "class Particle {\n  \n  constructor(x, y, speed) {\n    this.x = x;\n    this.y = y;\n    this.size = 5;\n    this.speedX = speed;\n    this.speedY = speed;\n    this.color = color(random(255), random(255), random(255));\n  }\n  \n  render() {\n    fill(this.color);\n    circle(this.x, this.y, this.size);\n  }\n  \n  move() {\n    this.x = this.x + this.speedX;\n    this.y = this.y + this.speedY;\n    \n    if(this.x < 0 || this.x > width) {\n      this.speedX *= -1;\n    }\n    \n    if(this.y < 0 || this.y > height) {\n      this.speedY *= -1;\n    }\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "634ae3313a7a456a0e4e9f40",
        "isSelectedFile": false,
        "createdAt": "2022-10-16T13:48:52.290Z",
        "updatedAt": "2022-10-16T13:48:52.290Z",
        "id": "634ae3313a7a456a0e4e9f40"
      }
    ],
    "createdAt": "2022-10-15T16:49:27.571Z",
    "id": "ux2Y55cxg"
  },
  {
    "name": "layer sample",
    "_id": "SyoB5I9_y",
    "updatedAt": "2023-03-28T02:21:15.014Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "641b42f14759263217f57400",
          "641b42f14759263217f573ff",
          "641b42f14759263217f57401"
        ],
        "fileType": "folder",
        "_id": "641b42f14759263217f57402",
        "createdAt": "2023-03-28T02:21:15.014Z",
        "updatedAt": "2023-03-28T02:21:15.014Z",
        "isSelectedFile": false,
        "id": "641b42f14759263217f57402"
      },
      {
        "name": "sketch.js",
        "content": "const DIM = 2048;\nconst CELLS = 25;\nlet cvs;\n\nfunction setup() {\n  pixelDensity(1);\n  cvs = createCanvas(DIM, DIM);\n  \n  textSize(9);\n  textFont(\"Courier\");\n  stroke(255)\n  \n  let cellSpacing = DIM / CELLS;\n  \n  let rCol = 0;\n  let gCol = 0;\n  let bCol = 0;\n  \n  \n  let colGap = 255 / CELLS;\n  \n  for(let x = 0; x < width; x += cellSpacing) {\n    \n    \n    \n    for (let y = 0; y < height; y += cellSpacing) {\n      \n      rCol = (x / cellSpacing) * colGap;\n      bCol = (y / cellSpacing) * colGap;\n      \n      stroke(210);\n      fill(rCol, gCol, bCol);\n      rect(x, y, cellSpacing);\n      \n      noStroke();\n      fill(210);\n      text((\"x: \" + int(x) + \"\\ny: \" + int(y)), x + 5, y +10);\n    \n    }\n    \n  }\n  \n}\n\nfunction keyPressed() {\n  \n  if(key == 's') {\n      save(cvs, \"layergrid.png\")\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "641b42f14759263217f573ff",
        "isSelectedFile": true,
        "createdAt": "2023-03-28T02:21:15.014Z",
        "updatedAt": "2023-03-28T02:21:15.014Z",
        "id": "641b42f14759263217f573ff"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "641b42f14759263217f57400",
        "createdAt": "2023-03-28T02:21:15.014Z",
        "updatedAt": "2023-03-28T02:21:15.014Z",
        "isSelectedFile": false,
        "id": "641b42f14759263217f57400"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "641b42f14759263217f57401",
        "createdAt": "2023-03-28T02:21:15.014Z",
        "updatedAt": "2023-03-28T02:21:15.014Z",
        "isSelectedFile": false,
        "id": "641b42f14759263217f57401"
      }
    ],
    "createdAt": "2023-03-22T18:09:07.755Z",
    "id": "SyoB5I9_y"
  },
  {
    "name": "maximalism (genuaryTogether)",
    "_id": "kzq4nVZVC",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63d40a689d783d41990004af",
          "63d40a689d783d41990004b0",
          "63d40a689d783d41990004b1",
          "63d40b4cb1f4a0001aca83e8"
        ],
        "fileType": "folder",
        "_id": "63d40a689d783d41990004ae",
        "isSelectedFile": false,
        "createdAt": "2023-01-29T14:43:48.527Z",
        "updatedAt": "2023-01-29T14:43:48.527Z",
        "id": "63d40a689d783d41990004ae"
      },
      {
        "name": "sketch.js",
        "content": "/*\n*  #genuary29 - Maximalism : a collab by generativelight and ktorn\n*  #genuaryTogether, #genuary, #genuary29\n*\n* https://twitter.com/generativelight\n* https://twitter.com/ktorn\n*\n* you can scroll and pan with the mouse\n* press 's' to save as image\n*/\n\nlet g;\nlet canvas;\n\nfunction setup() {\n  canvas = createCanvas(windowWidth, windowHeight);\n  colorMode(HSL, 360, 100, 100, 100);\n  pixelDensity(5);\n  g = createGraphics(width, height);\n  renderPiece();\n  noSmooth();\n  \n  canvas.mouseWheel(e => Controls.zoom(controls).worldZoom(e))\n}\n\nfunction renderPiece() {\n  \n  g.colorMode(HSL, 360, 100, 100, 100);\n  \n  g.background(\"white\");\n  \n  g.strokeWeight(0.2);\n  g.noSmooth();\n\n  //frame around canvas\n  let frame = 25;\n  \n  //size of high level cells\n  let spacing = 25;\n\n  for (let x = frame; x <= width - frame - spacing; x += spacing) {\n    for (let y = frame; y <= height - frame - spacing; y += spacing) {\n\n      //space between subcells\n      let frame2 = 5;\n      //size of subcells\n      let spacing2 = random(1, 10);\n\n      for (let xx = x + frame2; xx <= x + spacing - frame2; xx += spacing2) {\n        for (let yy = y + frame2; yy <= y + spacing - frame2; yy += spacing2) {\n\n          //size of individual rects\n          rectmorphlow = 0.5;\n          rectmorphhigh = 1.5;\n\n          g.fill(\n            random([\n              \"#0e0e0e\",\n              \"#f3bc17\",\n              \"#d54b0c\",\n              \"#154255\",\n              \"#dcdcdc\",\n              \"#c0504f\",\n              \"#68b9b0\",\n              \"#ecbe2c\",\n              \"#2763ab\",\n              \"#ce4241\",\n            ])\n          );\n\n          g.rect(\n            xx,\n            yy,\n            spacing2 * random(rectmorphlow, rectmorphhigh),\n            spacing2 * random(rectmorphlow, rectmorphhigh)\n          );\n          \n        }\n      }\n    }\n  }\n}\n\nfunction draw() {\n  \n  background(\"white\");\n  \n  translate(controls.view.x, controls.view.y);\n  scale(controls.view.zoom)\n  \n  image(g, 0, 0);\n\n}\n\nfunction keyPressed() {\n  if (key == \"s\") {\t\n    saveCanvas(\"outputSave\", \"png\");\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63d40a689d783d41990004b0",
        "isSelectedFile": true,
        "createdAt": "2023-01-29T14:43:48.527Z",
        "updatedAt": "2023-01-29T14:43:48.527Z",
        "id": "63d40a689d783d41990004b0"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"viewcontrol.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63d40a689d783d41990004af",
        "isSelectedFile": false,
        "createdAt": "2023-01-29T14:43:48.527Z",
        "updatedAt": "2023-01-29T14:43:48.527Z",
        "id": "63d40a689d783d41990004af"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63d40a689d783d41990004b1",
        "isSelectedFile": false,
        "createdAt": "2023-01-29T14:43:48.527Z",
        "updatedAt": "2023-01-29T14:43:48.527Z",
        "id": "63d40a689d783d41990004b1"
      },
      {
        "name": "viewcontrol.js",
        "content": "// view control by Amir Saboury\n// https://codepen.io/amir-s/pen/jzqZdG?editors=0010\n// modified by ktorn for faster zoom control\n\nconst controls = {\n  view: {x: 0, y: 0, zoom: 1},\n  viewPos: { prevX: null,  prevY: null,  isDragging: false },\n}\n\n\nwindow.mousePressed = e => Controls.move(controls).mousePressed(e)\nwindow.mouseDragged = e => Controls.move(controls).mouseDragged(e);\nwindow.mouseReleased = e => Controls.move(controls).mouseReleased(e)\n\n\nclass Controls {\n  static move(controls) {\n    function mousePressed(e) {\n      controls.viewPos.isDragging = true;\n      controls.viewPos.prevX = e.clientX;\n      controls.viewPos.prevY = e.clientY;\n    }\n\n    function mouseDragged(e) {\n      const {prevX, prevY, isDragging} = controls.viewPos;\n      if(!isDragging) return;\n\n      const pos = {x: e.clientX, y: e.clientY};\n      const dx = pos.x - prevX;\n      const dy = pos.y - prevY;\n\n      if(prevX || prevY) {\n        controls.view.x += dx;\n        controls.view.y += dy;\n        controls.viewPos.prevX = pos.x, controls.viewPos.prevY = pos.y\n      }\n    }\n\n    function mouseReleased(e) {\n      controls.viewPos.isDragging = false;\n      controls.viewPos.prevX = null;\n      controls.viewPos.prevY = null;\n    }\n \n    return {\n      mousePressed, \n      mouseDragged, \n      mouseReleased\n    }\n  }\n\n  static zoom(controls) {\n    function worldZoom(e) {\n      const {x, y, deltaY} = e;\n      const direction = deltaY > 0 ? -1 : 1;\n      const factor = controls.view.zoom/10;\n      const zoom = 1 * direction * factor;\n\n      const wx = (x-controls.view.x)/(width*controls.view.zoom);\n      const wy = (y-controls.view.y)/(height*controls.view.zoom);\n      \n      controls.view.x -= wx*width*zoom;\n      controls.view.y -= wy*height*zoom;\n      controls.view.zoom += zoom;      \n    }\n\n    return {worldZoom}\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "63d40b4cb1f4a0001aca83e8",
        "isSelectedFile": false,
        "updatedAt": "2023-01-29T14:43:48.527Z",
        "createdAt": "2023-01-29T14:43:48.527Z",
        "id": "63d40b4cb1f4a0001aca83e8"
      }
    ],
    "createdAt": "2023-01-27T17:31:20.428Z",
    "updatedAt": "2023-01-29T14:43:48.527Z",
    "id": "kzq4nVZVC"
  },
  {
    "name": "mixer",
    "_id": "nfP4AU6DA",
    "updatedAt": "2024-04-10T19:40:30.153Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "661658b2992c5a32fd4f7678",
          "66165821992c5a32fd4f7675",
          "66165821992c5a32fd4f7674",
          "66165821992c5a32fd4f7676"
        ],
        "fileType": "folder",
        "_id": "66165821992c5a32fd4f7677",
        "createdAt": "2024-04-10T19:40:30.153Z",
        "updatedAt": "2024-04-10T19:40:30.153Z",
        "isSelectedFile": false,
        "id": "66165821992c5a32fd4f7677"
      },
      {
        "name": "sketch.js",
        "content": "let img;\nlet w;\nlet h;\n\nlet mixSize = 10;\nlet mixAmount = 2;\n\nlet currentImg;\n\nlet hist = [];\n\nconst STEP_V = 1;\nconst STEP_H = 2;\n\n\nlet mixing = true;\n\nclass CopyHist {\n  \n  constructor(srcX, srcY, srcW, srcH, dstX, dstY, dstW, dstH) {\n    this.srcX = srcX;\n    this.srcY = srcY;\n    this.srcW = srcW;\n    this.srcH = srcH;\n    this.dstX = dstX;\n    this.dstY = dstY;\n    this.dstW = dstW;\n    this.dstH = dstH;\n  }\n}\n\nfunction preload() {\n  img = loadImage(\"assets/portrait.png\");\n}\n\nfunction setup() {\n  pixelDensity(1);\n  w = img.width;\n  h = img.height;\n  \n  createCanvas(w, h);\n  \n  currentImg = img;\n  \n  image(currentImg, 0, 0);\n}\n\n\nfunction vMix(src) {\n\n  let imgOut = createImage(src.width, src.height);\n  \n  let sliceW = mixSize;\n  \n  \n  srcW = sliceW;\n  srcH = src.height;\n  \n  dstW = sliceW;\n  dstH = src.height;\n  \n  \n  for(let i = 0; i < src.width; i += sliceW) {\n    \n    if(i + srcW > src.width) {\n      srcW -= (i + sliceW) - src.width;\n      dstW -= (i + sliceW) - src.width;\n    }\n    \n    let move = int(random(-mixAmount, mixAmount));\n    \n    let copyHist = new CopyHist(i, 0, srcW, srcH, i, move, dstW, dstH);\n    \n    hist.push(copyHist);\n    doCopy(src, imgOut, copyHist);\n  }\n  \n  return imgOut;\n}\n\n\nfunction hMix(src) {\n\n  let imgOut = createImage(src.width, src.height);\n  \n  let sliceH = mixSize;\n  \n  \n  srcW = src.width;\n  srcH = sliceH;\n  \n  dstW = src.width;\n  dstH = sliceH;\n  \n  \n  for(let i = 0; i < src.height; i += sliceH) {\n    \n    if(i + srcH > src.height) {\n      srcH -= (i + sliceH) - src.height;\n      dstH -= (i + sliceH) - src.height;\n    }\n    \n    let move = int(random(-mixAmount, mixAmount));\n    \n    let copyHist = new CopyHist(0, i, srcW, srcH, move, i, dstW, dstH);\n    \n    hist.push(copyHist);\n    doCopy(src, imgOut, copyHist);\n  }\n  \n  return imgOut;\n}\n\n\n\nfunction doCopy(src, dst, data) {\n  dst.copy(src, data.srcX, data.srcY, data.srcW, data.srcH, data.dstX, data.dstY, data.dstW, data.dstH);\n  \n  let yOverflowUp = getYOverflowUp(src, dst, data);\n  let yOverflowDown = getYOverflowDown(src, dst, data);\n  \n  \n  let xOverflowLeft = getXOverflowLeft(src, dst, data);\n  let xOverflowRight = getXOverflowRight(src, dst, data);\n  \n  if(yOverflowUp > 0) {\n    dst.copy(src, data.srcX, data.srcY, data.srcW, yOverflowUp, data.dstX, dst.height - yOverflowUp, data.dstW, yOverflowUp);\n  }\n  \n  if(yOverflowDown > 0) {\n    dst.copy(src, data.srcX, src.height - yOverflowDown, data.srcW, yOverflowDown, data.dstX, 0, data.dstW, yOverflowDown)\n  }\n  \n  if(xOverflowLeft > 0) {\n   dst.copy(src, 0, data.dstY, xOverflowLeft, data.dstH, src.width - xOverflowLeft, data.srcY, xOverflowLeft, data.srcH);\n  }\n\n  if(xOverflowRight > 0) {\n     dst.copy(src, dst.width - xOverflowRight, data.dstY, xOverflowRight, data.dstH, data.srcX, data.srcY, xOverflowRight, data.srcH);\n  }\n\n  \n}\n\nfunction undoCopy(src, data) {\n  \n  let buffer = createImage(data.dstW, data.dstH);\n  \n  buffer.copy(src, data.dstX, data.dstY, data.dstW, data.dstH, 0, 0, data.dstW, data.dstH);\n  \n  // dst.copy(src, 0, 0, src.width, src.height, 0, 0, dst.width, dst.height);\n    \n  // dst.copy(src, data.dstX, data.dstY, data.dstW, data.dstH, data.srcX, data.srcY, data.srcW, data.srcH);\n  \n  src.copy(src, data.dstX, data.dstY, data.dstW, data.dstH, data.srcX, data.srcY, data.srcW, data.srcH);\n  \n  let yOverflowUp = getYOverflowUp(src, src, data);\n  let yOverflowDown = getYOverflowDown(src, src, data);\n  \n  let xOverflowLeft = getXOverflowLeft(src, src, data);\n  let xOverflowRight = getXOverflowRight(src, src, data);\n\n  \n  if(yOverflowUp > 0) {\n   src.copy(src, 0, buffer.height - yOverflowUp, data.dstW, yOverflowUp, data.srcX, data.srcY, data.srcW, yOverflowUp);\n  }\n  \n    if(yOverflowDown > 0) {\n    src.copy(src, 0, 0, data.dstW, yOverflowDown, 0, src.height - yOverflowDown, data.srcW, yOverflowDown)\n  }\n  \n  if(xOverflowLeft > 0) {\n   src.copy(src, src.width - xOverflowLeft, 0, xOverflowLeft, data.srcH, 0, data.dstY, xOverflowLeft, data.dstH);\n  }\n\n  if(xOverflowRight > 0) {\n     src.copy(src, data.srcX, 0, xOverflowRight, data.srcH, src.width - xOverflowRight, data.dstY, xOverflowRight, data.dstH);\n  }\n\n  \n}\n\n\nfunction getYOverflowUp(src, dst, data) {\n  return data.dstY < 0 ? - data.dstY : 0;\n}\n\nfunction getYOverflowDown(src, dst, data) {\n  let yBottom = data.dstY + data.dstH;\n  return dst.height - yBottom < 0 ? -(dst.height - yBottom) : 0;\n}\n\n\nfunction getXOverflowLeft(src, dst, data) {\n  return data.dstX < 0 ? - data.dstX : 0;\n}\n\nfunction getXOverflowRight(src, dst, data) {\n  let xRight = (data.dstX + data.dstW);\n  return dst.width - xRight < 0 ? - (dst.width - xRight) : 0;\n}\n\n\nfunction processNextImage() {\n  \n  if(mixing) {\n    let nextImg = vMix(currentImg);\n    nextImg = hMix(nextImg);\n\n    currentImg = nextImg;\n  } else {\n    if (hist.length > 0) {\n      for(let i = 0; i < 100; i++) {\n        if(hist.length > 0) {\n          let data = hist.pop();\n          let nextImg = createImage(currentImg.width, currentImg.height);\n          undoCopy(currentImg, data);\n          // currentImg = nextImg;\n        }\n      }\n    }\n  }\n}\n\nfunction draw() {\n  background(0);\n  \n  processNextImage();\n  \n  image(currentImg, 0, 0);\n}\n\n\nfunction mousePressed() {\n    \n   mixing = !mixing;\n}",
        "children": [],
        "fileType": "file",
        "_id": "66165821992c5a32fd4f7674",
        "isSelectedFile": true,
        "createdAt": "2024-04-10T19:40:30.153Z",
        "updatedAt": "2024-04-10T19:40:30.153Z",
        "id": "66165821992c5a32fd4f7674"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "66165821992c5a32fd4f7675",
        "createdAt": "2024-04-10T19:40:30.153Z",
        "updatedAt": "2024-04-10T19:40:30.153Z",
        "isSelectedFile": false,
        "id": "66165821992c5a32fd4f7675"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "66165821992c5a32fd4f7676",
        "createdAt": "2024-04-10T19:40:30.153Z",
        "updatedAt": "2024-04-10T19:40:30.153Z",
        "isSelectedFile": false,
        "id": "66165821992c5a32fd4f7676"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "661658fd992c5a32fd4f7679"
        ],
        "fileType": "folder",
        "_id": "661658b2992c5a32fd4f7678",
        "createdAt": "2024-04-10T19:40:30.153Z",
        "updatedAt": "2024-04-10T19:40:30.153Z",
        "isSelectedFile": false,
        "id": "661658b2992c5a32fd4f7678"
      },
      {
        "name": "portrait.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "661658fd992c5a32fd4f7679",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/20ee0b46-22a4-42e4-a4cb-34acd6fb1134.png",
        "createdAt": "2024-04-10T19:40:30.153Z",
        "updatedAt": "2024-04-10T19:40:30.153Z",
        "isSelectedFile": false,
        "id": "661658fd992c5a32fd4f7679"
      }
    ],
    "createdAt": "2024-04-10T09:18:21.930Z",
    "id": "nfP4AU6DA"
  },
  {
    "name": "mobile buffers",
    "_id": "Q8QulAPLT",
    "updatedAt": "2024-01-30T22:03:43.592Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64223cc3438d4f3842308874",
          "64224f30373acb001aad5e31",
          "65b9686d4188ab001a8f538c",
          "64223cc3438d4f3842308873",
          "64223cc3438d4f3842308875"
        ],
        "fileType": "folder",
        "_id": "64223cc3438d4f3842308876",
        "createdAt": "2024-01-30T22:03:43.592Z",
        "updatedAt": "2024-01-30T22:03:43.592Z",
        "isSelectedFile": false,
        "id": "64223cc3438d4f3842308876"
      },
      {
        "name": "sketch.js",
        "content": "\nconst BUFFER_START_WIDTH = 400;\nconst BUFFER_START_HEIGHT = 400;\n\nlet bufferWidth = BUFFER_START_WIDTH;\nlet bufferHeight = BUFFER_START_HEIGHT;\n\nlet cnv;\nlet buffer;\n\nlet status = \"\"\n\nlet sedebug;\nlet consolePane;\nlet resPane;\nlet DEBUG = true;\n\nfunction preload() {\n\tlayer = loadImage(\"layergrid.png\");\n}\n\nfunction setup() {\n\tcnv = createCanvas(window.innerWidth, window.innerHeight);\n    buffer = createGraphics(bufferWidth, bufferHeight);\n  \n\tif (DEBUG) {\n\t\tsedebug = new SDebug();\n\t\tconsolePane = sedebug.addConsolePane();\n        toggleDebugPane();\n    }\n  \n      console.log(\"test initialised.\")\n}\n\nfunction draw() {\n\tbackground(255);\n\t\n\tlet layerWidth = bufferWidth / 3;\n\tlet layerHeight = bufferHeight;\n\t\n\tlet x = 0;\n\tlet y = 0;\n\t\n\tbuffer.background(\"blue\");\n\t\n\tbuffer.image(layer, x, y, layerWidth, layerHeight, 0, 0, layerWidth, layerHeight);\n\t\n\tx += layerWidth;\n\t\n\tbuffer.image(layer, x, y, layerWidth, layerHeight, 0, 0, layerWidth, layerHeight);\n\t\n\tx += layerWidth;\n\t\n\tbuffer.image(layer, x, y, layerWidth, layerHeight, 0, 0, layerWidth, layerHeight);\n\t\n    // display buffer in main canvas\n\timage(buffer, 0, 0, bufferWidth, bufferHeight);\n\t\t\n\n    buffer.loadPixels();\n  \n    let p = 100;\n    let pix = buffer.pixels[p];\n  \n    if(pix == 0) {\n      print(\"Buffer Sample Invalid!\")\n      sdebug(\"bufferSample\", pix);\n      noLoop();\n    } else {\n      sdebug(\"bufferSample\", pix);\n    }\n  \n    \n    sdebug(\"frameCount\", frameCount)\n    sdebug(\"bufferWidth\", bufferWidth);\n    sdebug(\"bufferHeight\", bufferHeight);\n  \n\n    bufferWidth += 2\n    bufferHeight += 2\n  \n    buffer.remove();\n    buffer = undefined;\n    buffer = createGraphics(bufferWidth, bufferHeight);\n  \n  \n    renderDebug();\n\n}\n\n\n\nfunction debug(message) {\n\tif(DEBUG) {\n\t\tconsole.log(message);\n\t}\n}\n\nfunction sdebug(key, value) {\n\tif(DEBUG && sedebug) {\n\t\tsedebug.debug(key, value);\n\t}\n}\n\nfunction renderDebug() {\n\t\n\tif (DEBUG && sedebug) {\n\t\tsedebug.render();\n\t}\n\t\n}\n\nfunction toggleDebugPane() {\n\tif (DEBUG && sdebug) {\n\t\tsedebug.toggleDebugPane();\n\t}\n}\n\n\n\nfunction keyPressed() {\n\n\tswitch (keyCode) {\n\n\t\tcase 68:\n\t\t\t// d\n            print(\"toggling pane\")\n\t\t\ttoggleDebugPane();\n\n\t\t\tbreak;\n\n\n\t\tdefault:\n\t\t\tprint(\"Unknown key code \" + keyCode);\n\t\t\tbreak;\n\t}\n\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64223cc3438d4f3842308873",
        "isSelectedFile": true,
        "createdAt": "2024-01-30T22:03:43.592Z",
        "updatedAt": "2024-01-30T22:03:43.592Z",
        "id": "64223cc3438d4f3842308873"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sdebug.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64223cc3438d4f3842308874",
        "createdAt": "2024-01-30T22:03:43.592Z",
        "updatedAt": "2024-01-30T22:03:43.592Z",
        "isSelectedFile": false,
        "id": "64223cc3438d4f3842308874"
      },
      {
        "name": "style.css",
        "content": "html,\nbody {\n  margin: 0;\n  padding: 0;\n /* background: #000; */\n  overflow: hidden;\n}\n\nmain {\nposition: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  /* background-color: #000; */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0%;\n}\n\n@media (prefers-color-scheme: dark) {\n  body {\n    background: #222;\n  }\n}\n\n@media (prefers-color-scheme: light) {\n  body {\n    background: #FFF;\n  }\n}\n\ncanvas {\n  object-fit: contain;\n  max-height: 100%;\n  max-width: 100%;\n}\n\n\n\n/* https://loading.io/css/ */\n.lds-ellipsis {\n  display: inline-block;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-top: -50px;\n  margin-left: -50px;\n  width: 100px;\n  height: 100px;\n}\n.lds-ellipsis div {\n  position: absolute;\n  top: 33px;\n  width: 13px;\n  height: 13px;\n  border-radius: 50%;\n  background: #fff;\n  animation-timing-function: cubic-bezier(0, 1, 1, 0);\n}\n.lds-ellipsis div:nth-child(1) {\n  left: 8px;\n  animation: lds-ellipsis1 0.6s infinite;\n}\n.lds-ellipsis div:nth-child(2) {\n  left: 8px;\n  animation: lds-ellipsis2 0.6s infinite;\n}\n.lds-ellipsis div:nth-child(3) {\n  left: 32px;\n  animation: lds-ellipsis2 0.6s infinite;\n}\n.lds-ellipsis div:nth-child(4) {\n  left: 56px;\n  animation: lds-ellipsis3 0.6s infinite;\n}\n@keyframes lds-ellipsis1 {\n  0% {\n    transform: scale(0);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@keyframes lds-ellipsis3 {\n  0% {\n    transform: scale(1);\n  }\n  100% {\n    transform: scale(0);\n  }\n}\n@keyframes lds-ellipsis2 {\n  0% {\n    transform: translate(0, 0);\n  }\n  100% {\n    transform: translate(24px, 0);\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "64223cc3438d4f3842308875",
        "createdAt": "2024-01-30T22:03:43.592Z",
        "updatedAt": "2024-01-30T22:03:43.592Z",
        "isSelectedFile": false,
        "id": "64223cc3438d4f3842308875"
      },
      {
        "name": "layergrid.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64224f30373acb001aad5e31",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/3a7afa9e-a429-43bc-ae8e-87fdf5d15d4a.png",
        "updatedAt": "2024-01-30T22:03:43.592Z",
        "createdAt": "2024-01-30T22:03:43.592Z",
        "isSelectedFile": false,
        "id": "64224f30373acb001aad5e31"
      },
      {
        "name": "sdebug.js",
        "content": "/*\n* SEDA debug pane\n* by ktorn\n*/\n\nconst PANE_MOUSE_COORDS = 1;\n\nclass SDebug {\n\tconstructor() {\n\t\tthis.debugPane;\n\t\tthis.panes = [];\n\t\tthis.panesIndex = {};\n\t\tthis.isDebugVisible = false;\n\n\t\tthis.createDebugPane();\n\t\t\n\t\tthis.captureConsoleLog();\n\t}\n\t\n\tcaptureConsoleLog() {\n\t\tconsole.defaultLog = console.log.bind(console);\n\t\tconsole.logs = [];\n\t\tconsole.log = function(){\n\t\t\t\t// default &  console.log()\n\t\t\t\tconsole.defaultLog.apply(console, arguments);\n\t\t\t\t// new & array data\n\t\t\t\tconsole.logs.push(\"logs:  \" + Array.from(arguments));\n\t\t\t}\n\t\t\n\t\t\n\t\tconsole.defaultError = console.error.bind(console);\n\t\tconsole.errors = [];\n\t\tconsole.error = function(){\n\t\t\t\t// default &  console.error()\n\t\t\t\tconsole.defaultError.apply(console, arguments);\n\t\t\t\t// new & array data\n\t\t\t\tconsole.errors.push(\"error: \" + Array.from(arguments));\n\t\t}\n\t\t\n\t\tconsole.defaultWarn = console.warn.bind(console);\n\t\tconsole.warns = [];\n\t\tconsole.warn = function(){\n\t\t\t\t// default &  console.warn()\n\t\t\t\tconsole.defaultWarn.apply(console, arguments);\n\t\t\t\t// new & array data\n\t\t\t\tconsole.warns.push(\"warn:  \" + Array.from(arguments));\n\t\t}\n\t\t\n\t\tconsole.defaultDebug = console.debug.bind(console);\n\t\tconsole.debugs = [];\n\t\tconsole.debug = function(){\n\t\t\t\t// default &  console.debug()\n\t\t\t\tconsole.defaultDebug.apply(console, arguments);\n\t\t\t\t// new & array data\n\t\t\t\tconsole.debugs.push(\"debug: \" + Array.from(arguments));\n\t\t}\n\t\t\n\t}\n\n\tcreateDebugPane() {\n\t\tlet col = color(0, 120);\n\n\t\tthis.debugPane = createDiv(\"\");\n\n\t\tthis.debugPane.style('padding-top', '10px');\n\t\tthis.debugPane.style('padding-bottom', '10px');\n\t\tthis.debugPane.style('padding-left', '10px');\n\t\tthis.debugPane.style('padding-right', '10px');\n\n\t\tthis.debugPane.style('font-size', '12px');\n\t\tthis.debugPane.style('font-family', 'sans-serif');\n\t\tthis.debugPane.style('color', 'white');\n\t\tthis.debugPane.style('background-color', col)\n\n\t\tthis.debugPane.position(50, 50);\n\t}\n\n\trender() {\n\t\tif (DEBUG) {\n\t\t\tif (this.isDebugVisible) {\n\t\t\t\tthis.debugPane.show();\n\t\t\t\t\n\t\t\t\tfor (let i = 0; i < this.panes.length; i++) {\n\t\t\t\t\tthis.panes[i].render();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tthis.debugPane.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\ttoggleDebugPane() {\n\t\tif (DEBUG) {\n\t\t\tthis.isDebugVisible = !this.isDebugVisible;\n\t\t}\n\t}\n\t\n\tdebug(key, value) {\n\t\tlet paneIndex = this.panesIndex[key];\n\t\tlet pane;\n\t\t\n\t\tif(paneIndex) {\n\t\t\tpane = this.panes[paneIndex];\n\t\t\tpane.setValue(value);\n\t\t} else {\n\t\t\tpane = new PPane(this.debugPane, key);\n\t\t\tpane.setValue(value);\n\t\t\tthis.panes.push(pane);\n\t\t\tthis.panesIndex[key] = this.panes.length-1;\n\t\t}\n\t}\n\n\taddConsolePane() {\n\t\tlet consolePane = new ConsolePane(this.debugPane);\n\t\tthis.panes.push(consolePane);\n\t}\n\t\n\taddMouseCoordsPane() {\n\t\tlet mousePane = new MousePane(this.debugPane);\n\t\tthis.panes.push(mousePane);\n\t}\n\t\n\taddPane(pane) {\n\t\tthis.panes.push(pane);\n\t}\n\t\n\taddSliderPane(name, min, max, value, step) {\n\t\tlet sliderPane = new PreferenceSliderPane(this.debugPane, name, min, max, value, step);\n\t\tthis.panes.push(sliderPane);\n\t\treturn sliderPane;\n\t}\n\t\n\taddCheckboxPane(name, value) {\n\t\tlet checkboxPane = new CheckboxPane(this.debugPane, name, value);\n\t\tthis.panes.push(checkboxPane);\n\t\treturn checkboxPane;\n\t}\n  \t\n}\n\nclass PPane {\n\tconstructor(parentDiv, name) {\n\t\tthis.name = name;\n\t\tthis.value;\n\t\tthis.parentDiv = parentDiv;\n\t\tthis.div = createDiv(\"\");\n\t\tthis.div.parent(parentDiv);\n\t\tthis.content = createP(\"\");\n\t\tthis.content.parent(this.div);\n\t}\n\t\n\tsetValue(newValue) {\n\t\tthis.value = newValue;\n\t}\n\t\n\trender() {\n\t\tthis.content.html(this.name + \": \" + this.value);\n\t}\n\t\n\thide() {\n\t\tthis.div.hide();\n\t}\n\t\n\tshow() {\n\t\tthis.div.show();\n\t}\n}\n\nclass ConsolePane {\n\tconstructor(parentDiv) {\n\t\tthis.name = \"consolePane\";\n\t\tthis.parentDiv = parentDiv;\n\t\tthis.containerDiv = createDiv();\n\t\tthis.containerDiv.style('height', '200px');\n\t\t//this.containerDiv.attribute('overflow', 'scroll');\n\t\tthis.containerDiv.parent(parentDiv);\n\t\t\n\t\tthis.div = createDiv(\"\");\n\t\tthis.div.style('max-height', '100%');\n\t\tthis.div.style('overflow', 'auto');\n\t\tthis.div.style('border', '1px solid red');\n\t\tthis.div.parent(this.containerDiv);\n\t\tthis.content = createP(\"\");\n\t\tthis.content.parent(this.div);\n\t}\n\t\n\trender() {\n\t\t\n\t\tlet stuff = \"\";\n\t\tfor (let i = 0; i < console.logs.length; i++) {\n\t\t\tstuff += console.logs[i] + \"<br>\";\n\t\t}\n\t\t\n\t\tthis.content.html(stuff);\n\t}\n\t\n\thide() {\n\t\tthis.div.hide();\n\t}\n\t\n\tshow() {\n\t\tthis.div.show();\n\t}\n}\n\nclass MousePane {\n\tconstructor(parentDiv) {\n\t\tthis.name = \"mousePane\";\n\t\tthis.parentDiv = parentDiv;\n\t\tthis.div = createDiv(\"\");\n\t\tthis.div.parent(parentDiv);\n\t\tthis.content = createP(\"\");\n\t\tthis.content.parent(this.div);\n\t\t// this.div.show();\n\t}\n\t\n\trender() {\n\t\tthis.content.html(\"Mouse: \" + mouseX + \" \" + mouseY);\n\t}\n\t\n\thide() {\n\t\tthis.div.hide();\n\t}\n\t\n\tshow() {\n\t\tthis.div.show();\n\t}\n}\n\nclass PreferenceSliderPane {\n\tconstructor(parentDiv, name, min, max, value, step) {\n\t\tthis.name = name;\n\t\tthis.parentDiv = parentDiv;\n\t\tthis.div = createDiv(\"\");\n\t\tthis.div.style('display', 'inline');\n\t\tthis.div.parent(parentDiv);\n\t\tthis.min = min;\n\t\tthis.max = max;\n\t\tthis.step = step;\n\t\tthis.value = value;\n\t\tthis.step = step;\n\t\tthis.active = true;\n\t\t\n\t\tthis.sCheckbox = createCheckbox(this.name, this.active);\n\t\tthis.sCheckbox.changed(this.checkBoxChanged.bind(this));\n\t\tthis.slider = createSlider(this.min, this.max, this.value, this.step);\n\t\tthis.slider.style('width', '80%');\n\t\tthis.slider.changed(this.sliderChanged.bind(this));\n\t\tthis.spValue = createSpan(this.value);\n\t\tthis.spValue.style('width', '20%');\n\n\t\t\n\t\tthis.sCheckbox.parent(this.div);\n\t\tthis.slider.parent(this.div);\n\t\tthis.spValue.parent(this.div);\n\t}\n\t\n\tcheckBoxChanged() {\n\t\tthis.active = this.sCheckbox.checked();\n\t}\n\t\n\tsliderChanged() {\n\t\tthis.value = this.slider.value();\n\t}\n\t\n\trender() {\n\t\tthis.value = this.slider.value();\n\t\tthis.spValue.html(this.value);\n\t}\n\t\n\thide() {\n\t\tthis.div.hide();\n\t}\n\t\n\tshow() {\n\t\tthis.div.show();\n\t}\n\t\n}\n\n\nclass CheckboxPane {\n\tconstructor(parentDiv, name, active) {\n\t\tthis.name = name;\n\t\tthis.parentDiv = parentDiv;\n\t\tthis.div = createDiv(\"\");\n\t\tthis.div.style('display', 'inline');\n\t\tthis.div.parent(parentDiv);\n\t\tthis.active = active;\n\t\t\n\t\tthis.sCheckbox = createCheckbox(this.name, this.active);\n\t\tthis.sCheckbox.changed(this.checkBoxChanged.bind(this));\n\t\t\n\t\tthis.sCheckbox.parent(this.div);\n\t}\n\t\n\tcheckBoxChanged() {\n\t\tthis.active = this.sCheckbox.checked();\n\t}\n\t\n\t\n\trender() {\n\t\t// this.value = this.slider.value();\n\t\t// this.spValue.html(this.value);\n\t}\n\t\n\thide() {\n\t\tthis.div.hide();\n\t}\n\t\n\tshow() {\n\t\tthis.div.show();\n\t}\n\t\n}",
        "children": [],
        "fileType": "file",
        "_id": "65b9686d4188ab001a8f538c",
        "isSelectedFile": false,
        "updatedAt": "2024-01-30T22:03:43.592Z",
        "createdAt": "2024-01-30T22:03:43.592Z",
        "id": "65b9686d4188ab001a8f538c"
      }
    ],
    "createdAt": "2023-03-28T01:03:17.026Z",
    "id": "Q8QulAPLT"
  },
  {
    "name": "Multiplication Practice",
    "_id": "WCZUXM6_C",
    "updatedAt": "2022-01-23T01:54:53.732Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61e94605ed729cd4e02f2f74",
          "61e9472aed729cd4e02f2f77",
          "61e94605ed729cd4e02f2f73",
          "61e94605ed729cd4e02f2f75"
        ],
        "fileType": "folder",
        "_id": "61e94605ed729cd4e02f2f76",
        "isSelectedFile": false,
        "createdAt": "2022-01-23T01:54:53.732Z",
        "updatedAt": "2022-01-23T01:54:53.732Z",
        "id": "61e94605ed729cd4e02f2f76"
      },
      {
        "name": "sketch.js",
        "content": "/*\n* Simple multiplication practice game\n* for primary students\n*\n* by @ktorn\n*/\n\nconst A_MAX = 10;\nconst B_MAX = 10;\n\nlet max = 0;\n\nlet rows = [];\n\nlet p;\nlet inputBox;\n\nlet m;\n\nfunction setup() {\n  noCanvas();\n  m = new Mult();\n  rows.push(m);\n}\n\n\nfunction draw() {\n  for(let i = 0; i < rows.length; i++) {\n    rows[i].render();\n  }\n  \n  if (rows[rows.length-1].isAnswered) {\n      m = new Mult();\n      rows.push(m);\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "61e94605ed729cd4e02f2f73",
        "isSelectedFile": false,
        "createdAt": "2022-01-23T01:54:53.732Z",
        "updatedAt": "2022-01-23T01:54:53.732Z",
        "id": "61e94605ed729cd4e02f2f73"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"mult.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61e94605ed729cd4e02f2f74",
        "isSelectedFile": false,
        "createdAt": "2022-01-23T01:54:53.732Z",
        "updatedAt": "2022-01-23T01:54:53.732Z",
        "id": "61e94605ed729cd4e02f2f74"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n\n/* Remove arrows from numeric input fields */\n\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n\ninput[type=number] {\n  -moz-appearance: textfield;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61e94605ed729cd4e02f2f75",
        "isSelectedFile": false,
        "createdAt": "2022-01-23T01:54:53.732Z",
        "updatedAt": "2022-01-23T01:54:53.732Z",
        "id": "61e94605ed729cd4e02f2f75"
      },
      {
        "name": "mult.js",
        "content": "class Mult {\n  constructor() {\n    this.a = floor(random(A_MAX+1));\n    this.b = floor(random(B_MAX+1));\n    \n    this.p;\n    this.i;\n    \n    this.isAnswered = false;\n    \n    this.handle = this.handleInput.bind(this)\n  }\n  \n  isAnswer(c) {\n    return this.a * this.b == c;\n  }\n  \n  getAnswer() {\n    return this.a * this.b;\n  }\n  \n  render() {\n    let t = this.a + \" x \" + this.b + \" = \";\n    \n    if(!this.p) {\n\n      this.p = createP(t);\n      this.p.style('font-size', '20px');\n    }\n  \n    if(!this.isAnswered) {\n      if(!this.i) {\n        this.i = createInput('', \"number\");\n        this.i.style('font-size', '20px');\n        this.i.size(30);\n        this.p.child(this.i);\n        this.i.changed(this.handle);\n        this.i.elt.focus();\n      }\n    } else {\n      this.i.remove();\n      this.p.html(t + this.getAnswer());\n    }\n    \n  }\n  \n  handleInput() {    \n    let answer = parseInt(this.i.value());\n    \n    print(this.getAnswer());\n    print(answer);\n\n    if(this.isAnswer(answer)) {\n      print(\"Correct!\");\n      this.isAnswered = true;\n    } else {\n      print(\"Incorrect!\");\n    }\n\n    let currentsleep = 1000;\n\n    print (\"-----> sleeping %d seconds\" % currentsleep);\n  }\n  \n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "61e9472aed729cd4e02f2f77",
        "isSelectedFile": true,
        "createdAt": "2022-01-23T01:54:53.732Z",
        "updatedAt": "2022-01-23T01:54:53.732Z",
        "id": "61e9472aed729cd4e02f2f77"
      }
    ],
    "createdAt": "2022-01-20T12:58:53.279Z",
    "id": "WCZUXM6_C"
  },
  {
    "name": "Multiplication Practice Stats",
    "_id": "mWPrAUnPd",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61ff9fd3690b858fba357881",
          "61ff9fd3690b858fba357882",
          "61ff9fd3690b858fba357883",
          "61ff9fd3690b858fba357884",
          "61ff9fd3690b858fba357885",
          "61ff9fd3690b858fba357886"
        ],
        "fileType": "folder",
        "_id": "61ff9fd3690b858fba357880",
        "isSelectedFile": false,
        "createdAt": "2023-05-08T11:14:44.129Z",
        "updatedAt": "2023-05-08T11:14:44.129Z",
        "id": "61ff9fd3690b858fba357880"
      },
      {
        "name": "sketch.js",
        "content": "/*\n* Visualizing tool for the simple multiplication practice game\n*\n* by @ktorn\n*\n* reads stats from firebase persistence\n*/\n\nlet database;\nlet multTable;\n\nfunction setup() {\n  createCanvas(800, 800);\n  \n  colorMode(HSB);\n  \n  multTable = new MultTable();\n  \n  initConfig();\n  initFirebase();\n\n}\n\nfunction initTable() {\n  \n}\n\n\nfunction draw() {\n  \n  renderConfig();\n  \n  multTable.render();\n  \n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "61ff9fd3690b858fba357884",
        "isSelectedFile": false,
        "createdAt": "2023-05-08T11:14:44.129Z",
        "updatedAt": "2023-05-08T11:14:44.129Z",
        "id": "61ff9fd3690b858fba357884"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    \n    <script src=\"https://www.gstatic.com/firebasejs/8.2.3/firebase.js\"></script>\n    \n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"utils.js\"></script>\n    <script src=\"db.js\"></script>\n    <script src=\"mult.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61ff9fd3690b858fba357882",
        "isSelectedFile": false,
        "createdAt": "2023-05-08T11:14:44.129Z",
        "updatedAt": "2023-05-08T11:14:44.129Z",
        "id": "61ff9fd3690b858fba357882"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n\n/* Remove arrows from numeric input fields */\n\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n\ninput[type=number] {\n  -moz-appearance: textfield;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61ff9fd3690b858fba357885",
        "isSelectedFile": false,
        "createdAt": "2023-05-08T11:14:44.129Z",
        "updatedAt": "2023-05-08T11:14:44.129Z",
        "id": "61ff9fd3690b858fba357885"
      },
      {
        "name": "mult.js",
        "content": "const maxNum = 12;\n\nclass MultStat {\n  constructor(a, b) {\n    this.a = a;\n    this.b = b;\n\n    this.averageTime = 0;\n    this.averageCorrectness = 100;\n\n    this.attemptKeys = [];\n    this.attempts = [];\n\n    this.score = 0;\n    \n    this.lastAttemptTimeStamp = 0;\n  }\n\n  addAttempt(key, attempt) {\n    if (!this.attemptKeys.includes[key]) {\n      this.attemptKeys.push(key);\n      this.attempts.push(attempt);\n      \n      let tCompleted = Date.parse(attempt.timeCompleted);\n      \n      if(tCompleted > this.lastAttemptTimeStamp) {\n        this.lastAttemptTimeStamp = tCompleted;\n      }\n    }\n\n    this.updateScore();\n  }\n\n  updateScore() {\n    let sumTimes = 0;\n    let sumInc = 0;\n\n    for (let i = 0; i < this.attempts.length; i++) {\n      let att = this.attempts[i];\n      // print(\"calculating attempt!\", att);  \n      let timeStarted = Date.parse(att.timeStarted);\n      let timeCompleted = Date.parse(att.timeCompleted);\n      let timeElapsed = (timeCompleted - timeStarted)/1000;\n      sumTimes += timeElapsed;\n      sumInc += att.incorrectAttempts;\n    }\n    \n    // print(\"sumTimes\", sumTimes);  \n    // print(\"sumInc\", sumInc);  \n\n    this.averageTime = sumTimes / this.attempts.length;\n    \n    // print(\"averageTime\", this.averageTime);  \n    this.averageCorrectness =\n      (this.attempts.length / (this.attempts.length + sumInc)) * 100;\n    // print(\"averageCorrectness\", this.averageCorrectness);\n    \n    let cScore = 0.5 * this.averageCorrectness;\n    // print(\"cScore\", cScore);  \n    let tScore = 0.5 * map(this.averageTime, 0, 60, 100, 0, true);\n    // print(\"tScore\", tScore);  \n    \n    this.score = cScore + tScore;\n    \n    // print(\"score\", this.score);    \n  }\n  \n  getPriority() {\n    let timeSinceLastAttempt = 0;\n    \n    if(this.lastAttemptTimeStamp > 0) {\n      timeSinceLastAttempt = new Date() - this.lastAttemptTimeStamp;\n    } else {\n      return 0;  // no attempt made. this is highest priority (lowest value)\n    }\n    \n    let timePriority = map(timeSinceLastAttempt, 0, (7 * 24 * 60 * 60 * 1000), -20, 100, true);\n  \n    return this.score - timePriority;\n  }\n  \n  toString() {\n    return \"\" + this.a + \"x\" + this.b;\n  }\n}\n\nclass MultTable {\n  constructor() {\n    this.table = [];\n    this.sortedElements = [];\n\n    for (let na = 0; na <= maxNum; na++) {\n      this.table[na] = [];\n      for (let nb = 0; nb <= maxNum; nb++) {\n        let m = new MultStat(na, nb);\n        this.table[na][nb] = m;\n        this.sortedElements.push(m);\n      }\n    }\n  }\n\n  addAttempt(key, attempt) {\n    let nums = attempt.nums;\n\n    this.table[nums[0]][nums[1]].addAttempt(key, attempt);\n    \n    this.sortedElements.sort(function(a, b) {\n      return (a.getPriority() - b.getPriority());\n    });\n  }\n\n  render() {\n    let cellSize = width / (maxNum + 1);\n    \n    for (let na = 0; na <= maxNum; na++) {\n      for (let nb = 0; nb <= maxNum; nb++) {\n        let m = this.table[na][nb];\n        \n        let h = 0;\n        let s = 0;\n        let b = 100;\n        \n        if(m.attempts.length > 0) {\n          s = 50;\n          h = map(m.score, 100, 0, 120, 0, true);\n        }\n        \n        stroke(0, 0, 0);\n        fill(h, s, b);\n        rect(na * cellSize, nb * cellSize, cellSize, cellSize);\n        \n        noStroke();\n        fill(0, 0, 0);\n        text(m.toString(), na * cellSize + 5, nb * cellSize + 20);\n        text(m.score, na * cellSize + 5, nb * cellSize + 50);\n        text(m.getPriority(), na * cellSize + 5, nb * cellSize + 70);\n                \n      }\n    }    \n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61ff9fd3690b858fba357883",
        "isSelectedFile": false,
        "createdAt": "2023-05-08T11:14:44.129Z",
        "updatedAt": "2023-05-08T11:14:44.129Z",
        "id": "61ff9fd3690b858fba357883"
      },
      {
        "name": "db.js",
        "content": "\n\nconst DB_NAME = \"multiplication-attempts-202305\";\n\nlet db_name = DB_NAME;\n\nlet apiKey = \"\"\nlet authDomain = \"\";\nlet databaseURL = \"\";\nlet projectId = \"\";\nlet storageBucket = \"\";\nlet messagingSenderId = \"\";\nlet debug = \"\";\n\nlet d;\nlet pp;\nlet i_apiKey;\nlet i_authDomain;\nlet i_databaseURL;\nlet i_projectId;\nlet i_storageBucket;\nlet i_messagingSenderId;\nlet c_debug;\n\nlet d_save;\nlet i_save;\nlet b_toggle;\n\nlet isInit = false;\nlet isConfigExpanded = false;\n\nfunction initConfig() {\n  \n  b_toggle = createButton(\"Show config\");\n  b_toggle.mousePressed(toggleConfig);\n  \n  d = createDiv();\n  \n  pp = createP(\"apiKey: \");\n  i_apiKey = createInput('');\n  pp.child(i_apiKey);\n  pp.parent(d);\n  \n  pp = createP(\"authDomain: \");\n  i_authDomain = createInput('');\n  pp.child(i_authDomain);\n  pp.parent(d);\n  \n  pp = createP(\"databaseURL: \");\n  i_databaseURL = createInput('');\n  pp.child(i_databaseURL);\n  pp.parent(d);\n  \n  pp = createP(\"projectId: \");\n  i_projectId = createInput('');\n  pp.child(i_projectId);\n  pp.parent(d);\n  \n  pp = createP(\"storageBucket: \");\n  i_storageBucket = createInput('');\n  pp.child(i_storageBucket);\n  pp.parent(d);\n  \n  pp = createP(\"messagingSenderId: \");\n  i_messagingSenderId = createInput('');\n  pp.child(i_messagingSenderId);\n  pp.parent(d);\n  \n  //pp = createP(\"debug: \");\n  c_debug = createCheckbox(' debug');\n  pp.child(c_debug);\n  pp.parent(d);\n  \n  d_save = createDiv();\n  d_save.style(\"display\", \"flex\");\n  d_save.style(\"flex-wrap\", \"wrap\");\n  i_save = createButton(\"Save\");\n  i_save.mousePressed(saveConfig);\n  i_save.parent(d_save);\n  d_save.parent(d);\n  \n  loadConfig();\n}\n\nfunction initFirebase() {\n  \n  if(debug) {\n    db_name = DB_NAME + \"-debug\";\n  }\n  \n  // Initialize Firebase\n  var config = {\n    apiKey: apiKey,\n    authDomain: authDomain,\n    databaseURL: databaseURL,\n    projectId: projectId,\n    storageBucket: storageBucket,\n    messagingSenderId: messagingSenderId,\n  };\n  \n  \n  if (!firebase.apps.length) {\n   firebase.initializeApp(config);\n  }else {\n   firebase.app(); // if already initialized, use that one\n  }\n  \n  database = firebase.database();\n    \n  var ref = database.ref(db_name);\n  ref.on(\"value\", gotData, errData);\n}\n\nfunction submitAttempt(data) {\n  var ref = database.ref(db_name);\n  ref.push(data);\n}\n\nfunction gotData (data) {\n\tlet attempts = data.val();\n  \n    if(attempts) {\n      let keys = Object.keys(attempts);\n\n      for (var i = 0; i < keys.length; i++) {\n          let k = keys[i];\n          let nums = attempts[k].nums;\n          let timeStarted = Date.parse(attempts[k].timeStarted);\n          let timeCompleted = Date.parse(attempts[k].timeCompleted);\n          let timeDiff = (timeCompleted - timeStarted)/1000;\n          let incorrectAttempts = attempts[k].incorrectAttempts;\n          // print(\"[\"+nums[0]+\"x\"+nums[1]+\"] inc:[\" + incorrectAttempts + \"] time: [\" + timeDiff + \"s]\");\n          multTable.addAttempt(k, attempts[k]);\n      }\n    }\n}\n\nfunction errData(err) {\n\tconsole.log('Error!');\n  \tconsole.log(err);\n}\n\nfunction renderConfig() {\n  \n  \n  if (isConfigExpanded) {\n    d.show();\n    b_toggle.html(\"Hide config\");\n  } else {\n     d.hide();\n     b_toggle.html(\"Show config\");\n  }\n  \n}\n\nfunction toggleConfig() {\n  isConfigExpanded = !isConfigExpanded;\n}\n\nfunction saveConfig() {\n  apiKey = i_apiKey.value();\n  authDomain = i_authDomain.value();\n  databaseURL = i_databaseURL.value();\n  projectId = i_projectId.value();\n  storageBucket = i_storageBucket.value();\n  messagingSenderId = i_messagingSenderId.value();\n  debug = c_debug.checked();\n\n  storeItem('apiKey', apiKey);\n  storeItem('authDomain', authDomain);\n  storeItem('databaseURL', databaseURL);\n  storeItem('projectId', projectId);\n  storeItem('storageBucket', storageBucket);\n  storeItem('messagingSenderId', messagingSenderId);\n  storeItem('debug', debug);\n  \n  let p_saved = createP(\"Config saved.\")\n  d_save.child(p_saved);\n  setTimeout(() => {p_saved.remove()}, 1000);\n  \n  initFirebase();\n}\n\nfunction loadConfig() {\n  apiKey = getItem('apiKey');\n  authDomain = getItem('authDomain');\n  databaseURL = getItem('databaseURL');\n  projectId = getItem('projectId');\n  storageBucket = getItem('storageBucket');\n  messagingSenderId = getItem('messagingSenderId');\n  debug = getItem('debug');\n  print(debug);\n  \n  print(c_debug);\n  \n  i_apiKey.value(apiKey);\n  i_authDomain.value(authDomain);\n  i_databaseURL.value(databaseURL);\n  i_projectId.value(projectId);\n  i_storageBucket.value(storageBucket);\n  i_messagingSenderId.value(messagingSenderId);\n  c_debug.checked(debug);\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "61ff9fd3690b858fba357881",
        "isSelectedFile": true,
        "updatedAt": "2023-05-08T11:14:44.129Z",
        "createdAt": "2023-05-08T11:14:44.129Z",
        "id": "61ff9fd3690b858fba357881"
      },
      {
        "name": "utils.js",
        "content": "\n// convert a date object to ISO format (with timezone)\n// credit: https://stackoverflow.com/a/49332027/3327135\nfunction toISOLocal(d) {\n  var z  = n =>  ('0' + n).slice(-2);\n  var zz = n => ('00' + n).slice(-3);\n  var off = d.getTimezoneOffset();\n  var sign = off > 0? '-' : '+';\n  off = Math.abs(off);\n\n  return d.getFullYear() + '-'\n         + z(d.getMonth()+1) + '-' +\n         z(d.getDate()) + 'T' +\n         z(d.getHours()) + ':'  + \n         z(d.getMinutes()) + ':' +\n         z(d.getSeconds()) + '.' +\n         zz(d.getMilliseconds()) +\n         sign + z(off/60|0) + ':' + z(off%60); \n}",
        "children": [],
        "fileType": "file",
        "_id": "61ff9fd3690b858fba357886",
        "isSelectedFile": false,
        "updatedAt": "2023-05-08T11:14:44.129Z",
        "createdAt": "2023-05-08T11:14:44.129Z",
        "id": "61ff9fd3690b858fba357886"
      }
    ],
    "createdAt": "2022-02-06T10:15:48.148Z",
    "updatedAt": "2023-05-08T11:14:44.129Z",
    "id": "mWPrAUnPd"
  },
  {
    "name": "Multiplication Practice v2",
    "_id": "hBQ1OEDiE",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61ff709f7cf4cf0024f028b4",
          "61ff6fec77909417a6a1d128",
          "61ff6fec77909417a6a1d129",
          "61ff6fec77909417a6a1d12a",
          "61ff6fec77909417a6a1d12b",
          "61ff74ba7cf4cf0024f02df1"
        ],
        "fileType": "folder",
        "_id": "61ff6fec77909417a6a1d127",
        "isSelectedFile": false,
        "createdAt": "2022-02-06T09:45:55.925Z",
        "updatedAt": "2022-02-06T09:45:55.925Z",
        "id": "61ff6fec77909417a6a1d127"
      },
      {
        "name": "sketch.js",
        "content": "/*\n* Simple multiplication practice game\n* for primary students\n*\n* by @ktorn\n*\n* v2 - introduces firebase persistence\n* currently old version. code based on: https://editor.p5js.org/jenagosta/sketches/BJ69ITTxz\n*/\n\nlet database;\n\nconst A_MAX = 10;\nconst B_MAX = 10;\n\nlet max = 0;\n\nlet rows = [];\n\nlet p;\nlet inputBox;\n\nlet m;\n\nfunction setup() {\n  noCanvas();\n  initConfig();\n  initFirebase();  \n  m = new Mult();\n  rows.push(m);\n}\n\n\nfunction draw() {\n  \n  renderConfig();\n  \n  for(let i = 0; i < rows.length; i++) {\n    rows[i].render();\n  }\n  \n  if (rows[rows.length-1].isAnswered) {\n      m = new Mult();\n      rows.push(m);\n  }\n}\n\n\nfunction showDBAuth() {\n  \n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61ff6fec77909417a6a1d12a",
        "isSelectedFile": false,
        "createdAt": "2022-02-06T09:45:55.925Z",
        "updatedAt": "2022-02-06T09:45:55.925Z",
        "id": "61ff6fec77909417a6a1d12a"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    \n    <script src=\"https://www.gstatic.com/firebasejs/8.2.3/firebase.js\"></script>\n    \n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"utils.js\"></script>\n    <script src=\"db.js\"></script>\n    <script src=\"mult.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61ff6fec77909417a6a1d128",
        "isSelectedFile": false,
        "createdAt": "2022-02-06T09:45:55.925Z",
        "updatedAt": "2022-02-06T09:45:55.925Z",
        "id": "61ff6fec77909417a6a1d128"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n\n/* Remove arrows from numeric input fields */\n\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n\ninput[type=number] {\n  -moz-appearance: textfield;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61ff6fec77909417a6a1d12b",
        "isSelectedFile": false,
        "createdAt": "2022-02-06T09:45:55.925Z",
        "updatedAt": "2022-02-06T09:45:55.925Z",
        "id": "61ff6fec77909417a6a1d12b"
      },
      {
        "name": "mult.js",
        "content": "class Mult {\n  constructor() {\n    this.a = floor(random(A_MAX+1));\n    this.b = floor(random(B_MAX+1));\n    \n    this.p;\n    this.i;\n    \n    this.timeStarted = new Date();\n    this.timeCompleted;\n    \n    this.incorrectAttempts = 0;\n    \n    this.isAnswered = false;\n    \n    this.handle = this.handleInput.bind(this)\n  }\n  \n  isAnswer(c) {\n    return this.a * this.b == c;\n  }\n  \n  getAnswer() {\n    return this.a * this.b;\n  }\n  \n  render() {\n    let t = this.a + \" x \" + this.b + \" = \";\n    \n    if(!this.p) {\n\n      this.p = createP(t);\n      this.p.style('font-size', '20px');\n    }\n  \n    if(!this.isAnswered) {\n      if(!this.i) {\n        this.i = createInput('', \"number\");\n        this.i.style('font-size', '20px');\n        this.i.size(30);\n        this.p.child(this.i);\n        this.i.changed(this.handle);\n        this.i.elt.focus();\n      }\n    } else {\n      this.i.remove();\n      this.p.html(t + this.getAnswer());\n    }\n    \n  }\n  \n  handleInput() {    \n    let answer = parseInt(this.i.value());\n    \n    print(this.getAnswer());\n\n    if(this.isAnswer(answer)) {\n      print(\"Correct!\");\n      this.isAnswered = true;\n      this.timeCompleted = new Date();\n      submitAttempt(this.getData());\n    } else {\n      print(\"Incorrect!\");\n      this.incorrectAttempts++;\n    }\n\n    let currentsleep = 1000;\n  }\n  \n  getData() {\n    let data = { nums: [this.a, this.b],\n                 timeStarted: toISOLocal(this.timeStarted),\n                 timeCompleted: toISOLocal(this.timeCompleted),\n                 incorrectAttempts: this.incorrectAttempts\n               };\n    \n    return data;\n  }\n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "61ff6fec77909417a6a1d129",
        "isSelectedFile": true,
        "createdAt": "2022-02-06T09:45:55.925Z",
        "updatedAt": "2022-02-06T09:45:55.925Z",
        "id": "61ff6fec77909417a6a1d129"
      },
      {
        "name": "db.js",
        "content": "\nlet apiKey = \"\"\nlet authDomain = \"\";\nlet databaseURL = \"\";\nlet projectId = \"\";\nlet storageBucket = \"\";\nlet messagingSenderId = \"\";\n\nlet d;\nlet pp;\nlet i_apiKey;\nlet i_authDomain;\nlet i_databaseURL;\nlet i_projectId;\nlet i_storageBucket;\nlet i_messagingSenderId;\n\nlet d_save;\nlet i_save;\nlet b_toggle;\n\nlet isInit = false;\nlet isConfigExpanded = false;\n\nfunction initConfig() {\n  \n  b_toggle = createButton(\"Show config\");\n  b_toggle.mousePressed(toggleConfig);\n  \n  d = createDiv();\n  \n  pp = createP(\"apiKey: \");\n  i_apiKey = createInput('');\n  pp.child(i_apiKey);\n  pp.parent(d);\n  \n  pp = createP(\"authDomain: \");\n  i_authDomain = createInput('');\n  pp.child(i_authDomain);\n  pp.parent(d);\n  \n  pp = createP(\"databaseURL: \");\n  i_databaseURL = createInput('');\n  pp.child(i_databaseURL);\n  pp.parent(d);\n  \n  pp = createP(\"projectId: \");\n  i_projectId = createInput('');\n  pp.child(i_projectId);\n  pp.parent(d);\n  \n  pp = createP(\"storageBucket: \");\n  i_storageBucket = createInput('');\n  pp.child(i_storageBucket);\n  pp.parent(d);\n  \n  pp = createP(\"messagingSenderId: \");\n  i_messagingSenderId = createInput('');\n  pp.child(i_messagingSenderId);\n  pp.parent(d);\n  \n  d_save = createDiv();\n  d_save.style(\"display\", \"flex\");\n  d_save.style(\"flex-wrap\", \"wrap\");\n  i_save = createButton(\"Save\");\n  i_save.mousePressed(saveConfig);\n  i_save.parent(d_save);\n  d_save.parent(d);\n  \n  loadConfig();\n}\n\nfunction initFirebase() {\n  // Initialize Firebase\n  var config = {\n    apiKey: apiKey,\n    authDomain: authDomain,\n    databaseURL: databaseURL,\n    projectId: projectId,\n    storageBucket: storageBucket,\n    messagingSenderId: messagingSenderId,\n  };\n  \n  firebase.initializeApp(config);\n  database = firebase.database();\n\n  var ref = database.ref(\"multiplication-attempts\");\n  ref.on(\"value\", gotData, errData);\n}\n\nfunction submitAttempt(data) {\n  var ref = database.ref(\"multiplication-attempts\");\n  ref.push(data);\n}\n\nfunction gotData (data) {\n  \t//console.log(data.val());\n\tlet attempts = data.val();\n  \tlet keys = Object.keys(attempts);\n  \n\tfor (var i = 0; i < keys.length; i++) {\n\t\tlet k = keys[i];\n\t  \tlet nums = attempts[k].nums;\n        let timeStarted = Date.parse(attempts[k].timeStarted);\n        let timeCompleted = Date.parse(attempts[k].timeCompleted);\n        let timeDiff = (timeCompleted - timeStarted)/1000;\n        let incorrectAttempts = attempts[k].incorrectAttempts;\n        print(\"[\"+nums[0]+\"x\"+nums[1]+\"] inc:[\" + incorrectAttempts + \"] time: [\" + timeDiff + \"s]\");\n\t}\n}\n\nfunction errData(err) {\n\tconsole.log('Error!');\n  \tconsole.log(err);\n}\n\nfunction renderConfig() {\n  \n  \n  if (isConfigExpanded) {\n    d.show();\n    b_toggle.html(\"Hide config\");\n  } else {\n     d.hide();\n     b_toggle.html(\"Show config\");\n  }\n  \n}\n\nfunction toggleConfig() {\n  isConfigExpanded = !isConfigExpanded;\n}\n\nfunction saveConfig() {\n  apiKey = i_apiKey.value();\n  authDomain = i_authDomain.value();\n  databaseURL = i_databaseURL.value();\n  projectId = i_projectId.value();\n  storageBucket = i_storageBucket.value();\n  messagingSenderId = i_messagingSenderId.value();\n\n  storeItem('apiKey', apiKey);\n  storeItem('authDomain', authDomain);\n  storeItem('databaseURL', databaseURL);\n  storeItem('projectId', projectId);\n  storeItem('storageBucket', storageBucket);\n  storeItem('messagingSenderId', messagingSenderId);\n  \n  let p_saved = createP(\"Config saved.\")\n  d_save.child(p_saved);\n  setTimeout(() => {p_saved.remove()}, 1000);\n  \n  initFirebase();\n}\n\nfunction loadConfig() {\n  apiKey = getItem('apiKey');\n  authDomain = getItem('authDomain');\n  databaseURL = getItem('databaseURL');\n  projectId = getItem('projectId');\n  storageBucket = getItem('storageBucket');\n  messagingSenderId = getItem('messagingSenderId');\n  \n  i_apiKey.value(apiKey);\n  i_authDomain.value(authDomain);\n  i_databaseURL.value(databaseURL);\n  i_projectId.value(projectId);\n  i_storageBucket.value(storageBucket);\n  i_messagingSenderId.value(messagingSenderId);\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "61ff709f7cf4cf0024f028b4",
        "isSelectedFile": false,
        "updatedAt": "2022-02-06T09:45:55.925Z",
        "createdAt": "2022-02-06T09:45:55.925Z",
        "id": "61ff709f7cf4cf0024f028b4"
      },
      {
        "name": "utils.js",
        "content": "\n// convert a date object to ISO format (with timezone)\n// credit: https://stackoverflow.com/a/49332027/3327135\nfunction toISOLocal(d) {\n  var z  = n =>  ('0' + n).slice(-2);\n  var zz = n => ('00' + n).slice(-3);\n  var off = d.getTimezoneOffset();\n  var sign = off > 0? '-' : '+';\n  off = Math.abs(off);\n\n  return d.getFullYear() + '-'\n         + z(d.getMonth()+1) + '-' +\n         z(d.getDate()) + 'T' +\n         z(d.getHours()) + ':'  + \n         z(d.getMinutes()) + ':' +\n         z(d.getSeconds()) + '.' +\n         zz(d.getMilliseconds()) +\n         sign + z(off/60|0) + ':' + z(off%60); \n}",
        "children": [],
        "fileType": "file",
        "_id": "61ff74ba7cf4cf0024f02df1",
        "isSelectedFile": false,
        "updatedAt": "2022-02-06T09:45:55.925Z",
        "createdAt": "2022-02-06T09:45:55.925Z",
        "id": "61ff74ba7cf4cf0024f02df1"
      }
    ],
    "createdAt": "2022-02-06T06:51:24.967Z",
    "updatedAt": "2022-02-06T09:45:55.925Z",
    "id": "hBQ1OEDiE"
  },
  {
    "name": "Multiplication Practice v3",
    "_id": "ATayS4qxS",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6200ef3d90b2cfc52e31cc61",
          "6200ef3d90b2cfc52e31cc62",
          "6200ef3d90b2cfc52e31cc63",
          "6200ef514475290024409517",
          "6200ef3d90b2cfc52e31cc64",
          "6200ef3d90b2cfc52e31cc65",
          "6200ef3d90b2cfc52e31cc66"
        ],
        "fileType": "folder",
        "_id": "6200ef3d90b2cfc52e31cc60",
        "isSelectedFile": false,
        "createdAt": "2022-10-14T11:58:01.255Z",
        "updatedAt": "2022-10-14T11:58:01.255Z",
        "id": "6200ef3d90b2cfc52e31cc60"
      },
      {
        "name": "sketch.js",
        "content": "/*\n* Simple multiplication practice game\n* for primary students\n*\n* by @ktorn\n*\n* v3\n*/\n\nlet database;\n\nconst STATE = {\n  START: 0,\n  ROUND: 1,\n  END: 2\n}\n\nconst SIZE = 12;\n\nconst A_MAX = SIZE;\nconst B_MAX = SIZE;\n\nlet max = 0;\n\nlet rows = [];\n\nlet p;\nlet inputBox;\nlet multTable;\n\nlet m;\n\nlet state = STATE.START;\n\nlet start_div;\nlet start_button;\n\nlet roundDiv;\nlet roundStartTime = 0;\nlet roundGuess = 0;\nlet roundGuessMult;\nlet roundMMs = [];\n\nlet roundMultDivs;\n\nvar w = window.innerWidth;\nvar h = window.innerHeight;  \n\nfunction setup() {\n  noCanvas();\n  \n  colorMode(HSB);\n  \n  multTable = new MultTable();\n  initConfig();\n  initFirebase(); \n  \n  m = getNextMult();\n  rows.push(m);\n}\n\n\nfunction draw() {\n  \n  renderConfig();\n  \n  switch(state) {\n      \n    case STATE.START:\n      renderStart();\n      break;\n      \n    case STATE.ROUND:\n      renderRound();  \n      break;\n      \n    case STATE.END:\n      renderEnd();\n      break;\n  }\n}\n\n\nfunction renderStart() {\n    \n  if(!start_button) {\n    start_button = createButton(\"Start Round\");\n    start_button.style(\"font-size\", \"20px\");\n    start_button.style(\"background-color: green; color: white; border-radius: 8px; text-decoration: none;\");\n    start_button.size(200, 100);\n    start_button.mousePressed(startRound);\n    // start_button.parent(start_div);\n    start_button.hide();\n  }\n  \n  if(state == STATE.START) {\n    start_button.show();\n    start_button.position(w/2 - 200/2, h/2 - 100/2);\n  } else {\n    start_button.hide();\n  }\n  \n}\n\n\nfunction renderRound() {\n\n  if(!roundMultDivs) {\n    roundMultDivs = [];\n    \n    let xOffset = 50;\n    let yOffset = 50;\n\n    let multWidth = (w - 100 - 5*20) / 5;\n\n    for (let i = 0; i < 2; i++) {\n      for (let j = 0; j < 5; j++) {\n        let div = createDiv();\n        div.size(multWidth, 50);\n        div.style('background-color', '#CDCDCD');\n        div.style('text-align: center; top: 50%; left: 1%; right: 1%')\n        div.position(xOffset + j * multWidth + j * 20,  yOffset + i * 50 + i * 20);\n        roundMultDivs.push(div);\n      }\n    }\n    \n    roundGuess = 1;\n    roundGuessMult = getNextMult();\n  }\n  \n  if(!roundDiv) {\n    let dW = 200;\n    let dH = 75;\n    roundDiv = createDiv();\n    roundDiv.style('text-align: center; top: 50%; left: 1%; right: 1%')\n    roundDiv.size(dW, dH);\n    roundDiv.position(w/2 - dW/2, h/2 - dH/2)\n    roundDiv.style('background-color', '#cfd8e8');\n  }\n  \n  if (roundGuess <= 10) {\n    roundGuessMult.render(roundDiv);\n    // roundGuessMult.i.elt.focus();\n  } else {\n    state = STATE.END;\n  }\n  \n}\n\nfunction renderEnd() {\n  roundDiv.hide();\n  state = STATE.START;\n}\n\nfunction handleCorrectAnswer() {  roundGuessMult.relocateParent(roundMultDivs[roundGuess-1]);\n  roundGuessMult = getNextMult();\n  roundGuess++;\n}\n\n\nfunction getNextMult() {\n  \n  let focus = [];\n  \n  let mm;\n  let mult;\n  let pick;\n  let done = false;\n  \n  while(!done) {\n    \n    // biased die (parabolic random pick)\n    let itemTotal = multTable.sortedElements.length/5;\n    pick = random(0, itemTotal);\n    pick = floor(Math.pow(pick, 2) / itemTotal);\n    \n    mm = multTable.sortedElements[pick];\n\n    \n    if( !(roundMMs.includes(mm.toString())) && ( !focus || focus.length == 0 || focus.includes(mm.a) || focus.includes(mm.b))) {\n      done = true;\n    }  \n  }\n  \n  // we don't want to repeat same, or inverse mult on same round\n  roundMMs.push(mm.toString());\n  roundMMs.push((new Mult(mm.b, mm.a)).toString());\n  \n  print(roundMMs);\n  \n   print(\"picking #\", pick, mm.toString(), \"priority\", mm.getPriority(),  \"from \", multTable.sortedElements.length);\n  \n  print(multTable.sortedElements);\n  \n  mult = new Mult(mm.a, mm.b);\n  \n  return mult;\n}\n\nwindow.onresize = function() {\n  // assigns new values for width and height variables\n  w = window.innerWidth;\n  h = window.innerHeight; \n}\n\nfunction startRound() {\n  start_button.hide();\n  state = STATE.ROUND;\n  roundStartTime = millis();\n  roundMultDivs = undefined;\n  if(roundDiv) {\n    roundDiv.show();\n  }\n}\n\n\n",
        "children": [],
        "fileType": "file",
        "_id": "6200ef3d90b2cfc52e31cc64",
        "isSelectedFile": false,
        "createdAt": "2022-10-14T11:58:01.255Z",
        "updatedAt": "2022-10-14T11:58:01.255Z",
        "id": "6200ef3d90b2cfc52e31cc64"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    \n    <script src=\"https://www.gstatic.com/firebasejs/8.2.3/firebase.js\"></script>\n    \n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"utils.js\"></script>\n    <script src=\"db.js\"></script>\n    <script src=\"mult.js\"></script>\n    <script src=\"multStats.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6200ef3d90b2cfc52e31cc62",
        "isSelectedFile": false,
        "createdAt": "2022-10-14T11:58:01.255Z",
        "updatedAt": "2022-10-14T11:58:01.255Z",
        "id": "6200ef3d90b2cfc52e31cc62"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n\n/* Remove arrows from numeric input fields */\n\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n\ninput[type=number] {\n  -moz-appearance: textfield;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6200ef3d90b2cfc52e31cc65",
        "isSelectedFile": false,
        "createdAt": "2022-10-14T11:58:01.255Z",
        "updatedAt": "2022-10-14T11:58:01.255Z",
        "id": "6200ef3d90b2cfc52e31cc65"
      },
      {
        "name": "mult.js",
        "content": "class Mult {\n    \n  constructor(a, b) {\n    \n    this.a;\n    this.b;\n    \n    if ((a || a === 0) && (b || b === 0)) {\n      this.a = a;\n      this.b = b;\n    } else {\n      this.a = floor(random(A_MAX+1));\n      this.b = floor(random(B_MAX+1));\n    }\n\n    this.p;\n    this.i;\n    \n    this.timeStarted = new Date();\n    this.timeCompleted;\n    \n    this.incorrectAttempts = 0;\n    this.isAnswered = false;\n    \n    this.score = 0;\n    \n    this.handle = this.handleInput.bind(this);\n  }\n  \n  isAnswer(c) {\n    return this.a * this.b == c;\n  }\n  \n  getAnswer() {\n    return this.a * this.b;\n  }\n  \n  relocateParent(newParentDiv) {\n    newParentDiv.child(this.p);\n    let t = this.a + \" x \" + this.b + \" = \";\n    this.i.remove();\n    this.p.style('font-size', '15px');\n    this.p.html(t + this.getAnswer());\n    \n    let h = 0;\n    let s = 100;\n    let b = 100;\n\n    h = map(this.score, 100, 0, 120, 20, true);\n    \n    print(\"score\", this.score);\n    \n    let c = color(h,s,b);\n    \n    let rgbString = 'rgb(' + red(c) + ', ' + green(c) + ', ' + blue(c) + ')';\n    \n    // print(\"color\", rgbString);\n    newParentDiv.style('background-color', rgbString);\n    \n  }\n  \n  render(parentDiv) {\n    let t = this.a + \" x \" + this.b + \" = \";\n    \n    if(!this.p) {\n      this.p = createP(t);\n      this.p.style('font-size', '20px');\n      parentDiv.child(this.p);\n    }\n  \n    if(!this.isAnswered) {\n      if(!this.i) {\n        this.i = createInput('', \"number\");\n        this.i.style('font-size', '20px');\n        this.i.size(30);\n        this.p.child(this.i);\n        this.i.changed(this.handle);\n        this.i.elt.focus();\n      }\n    } else {\n      this.i.remove();\n      this.p.html(t + this.getAnswer());\n    }\n    \n  }\n  \n  updateScore() {\n    let sumTimes = 0;\n    let sumInc = 0;\n    \n    let timeToComplete = (this.timeCompleted - this.timeStarted)/1000;\n    let correctness = (1 / (this.incorrectAttempts + 1)) * 100;\n    \n    // print(\"correctness\", correctness);\n    \n    let cScore = 0.5 * correctness;\n    let tScore = 0.5 * map(timeToComplete, 0, 30, 100, 0, true);\n     \n    this.score = cScore + tScore;\n    \n    // print(\"score\", this.score);    \n  }\n  \n  handleInput() {    \n    let answer = parseInt(this.i.value());\n\n    if(this.isAnswer(answer)) {\n      print(\"Correct!\");\n      this.isAnswered = true;\n      this.timeCompleted = new Date();\n      this.updateScore();\n      handleCorrectAnswer();\n      submitAttempt(this.getData());\n    } else {\n      print(\"Incorrect!\");\n      this.incorrectAttempts++;\n    }\n\n    let currentsleep = 1000;\n  }\n  \n  getData() {\n    let data = { nums: [this.a, this.b],\n                 timeStarted: toISOLocal(this.timeStarted),\n                 timeCompleted: toISOLocal(this.timeCompleted),\n                 incorrectAttempts: this.incorrectAttempts\n               };\n    \n    return data;\n  }\n  \n  toString() {\n    return \"\" + this.a + \"x\" + this.b;\n  }\n    \n}",
        "children": [],
        "fileType": "file",
        "_id": "6200ef3d90b2cfc52e31cc63",
        "isSelectedFile": false,
        "createdAt": "2022-10-14T11:58:01.255Z",
        "updatedAt": "2022-10-14T11:58:01.255Z",
        "id": "6200ef3d90b2cfc52e31cc63"
      },
      {
        "name": "db.js",
        "content": "\n\nconst DB_NAME = \"multiplication-attempts\";\n\nlet db_name = DB_NAME;\n\nlet apiKey = \"\"\nlet authDomain = \"\";\nlet databaseURL = \"\";\nlet projectId = \"\";\nlet storageBucket = \"\";\nlet messagingSenderId = \"\";\nlet debug = \"\";\n\nlet d;\nlet pp;\nlet i_apiKey;\nlet i_authDomain;\nlet i_databaseURL;\nlet i_projectId;\nlet i_storageBucket;\nlet i_messagingSenderId;\nlet c_debug;\n\nlet d_save;\nlet i_save;\nlet b_toggle;\n\nlet isInit = false;\nlet isConfigExpanded = false;\n\nfunction initConfig() {\n  \n  b_toggle = createButton(\"Show config\");\n  b_toggle.mousePressed(toggleConfig);\n  \n  d = createDiv();\n  \n  pp = createP(\"apiKey: \");\n  i_apiKey = createInput('');\n  pp.child(i_apiKey);\n  pp.parent(d);\n  \n  pp = createP(\"authDomain: \");\n  i_authDomain = createInput('');\n  pp.child(i_authDomain);\n  pp.parent(d);\n  \n  pp = createP(\"databaseURL: \");\n  i_databaseURL = createInput('');\n  pp.child(i_databaseURL);\n  pp.parent(d);\n  \n  pp = createP(\"projectId: \");\n  i_projectId = createInput('');\n  pp.child(i_projectId);\n  pp.parent(d);\n  \n  pp = createP(\"storageBucket: \");\n  i_storageBucket = createInput('');\n  pp.child(i_storageBucket);\n  pp.parent(d);\n  \n  pp = createP(\"messagingSenderId: \");\n  i_messagingSenderId = createInput('');\n  pp.child(i_messagingSenderId);\n  pp.parent(d);\n  \n  //pp = createP(\"debug: \");\n  c_debug = createCheckbox(' debug');\n  pp.child(c_debug);\n  pp.parent(d);\n  \n  d_save = createDiv();\n  d_save.style(\"display\", \"flex\");\n  d_save.style(\"flex-wrap\", \"wrap\");\n  i_save = createButton(\"Save\");\n  i_save.mousePressed(saveConfig);\n  i_save.parent(d_save);\n  d_save.parent(d);\n  \n  loadConfig();\n}\n\nfunction initFirebase() {\n  \n  if(debug) {\n    db_name = DB_NAME + \"-debug\";\n  }\n  \n  // Initialize Firebase\n  var config = {\n    apiKey: apiKey,\n    authDomain: authDomain,\n    databaseURL: databaseURL,\n    projectId: projectId,\n    storageBucket: storageBucket,\n    messagingSenderId: messagingSenderId,\n  };\n  \n  \n  if (!firebase.apps.length) {\n   firebase.initializeApp(config);\n  }else {\n   firebase.app(); // if already initialized, use that one\n  }\n  \n  database = firebase.database();\n    \n  var ref = database.ref(db_name);\n  ref.on(\"value\", gotData, errData);\n}\n\nfunction submitAttempt(data) {\n  var ref = database.ref(db_name);\n  ref.push(data);\n}\n\nfunction gotData (data) {\n\tlet attempts = data.val();\n  \n    if(attempts) {\n      let keys = Object.keys(attempts);\n\n      for (var i = 0; i < keys.length; i++) {\n          let k = keys[i];\n          let nums = attempts[k].nums;\n          let timeStarted = Date.parse(attempts[k].timeStarted);\n          let timeCompleted = Date.parse(attempts[k].timeCompleted);\n          let timeDiff = (timeCompleted - timeStarted)/1000;\n          let incorrectAttempts = attempts[k].incorrectAttempts;\n          // print(\"[\"+nums[0]+\"x\"+nums[1]+\"] inc:[\" + incorrectAttempts + \"] time: [\" + timeDiff + \"s]\");\n          multTable.addAttempt(k, attempts[k]);\n      }\n    }\n}\n\nfunction errData(err) {\n\tconsole.log('Error!');\n  \tconsole.log(err);\n}\n\nfunction renderConfig() {\n  \n  \n  if (isConfigExpanded) {\n    d.show();\n    b_toggle.html(\"Hide config\");\n  } else {\n     d.hide();\n     b_toggle.html(\"Show config\");\n  }\n  \n}\n\nfunction toggleConfig() {\n  isConfigExpanded = !isConfigExpanded;\n}\n\nfunction saveConfig() {\n  apiKey = i_apiKey.value();\n  authDomain = i_authDomain.value();\n  databaseURL = i_databaseURL.value();\n  projectId = i_projectId.value();\n  storageBucket = i_storageBucket.value();\n  messagingSenderId = i_messagingSenderId.value();\n  debug = c_debug.checked();\n\n  storeItem('apiKey', apiKey);\n  storeItem('authDomain', authDomain);\n  storeItem('databaseURL', databaseURL);\n  storeItem('projectId', projectId);\n  storeItem('storageBucket', storageBucket);\n  storeItem('messagingSenderId', messagingSenderId);\n  storeItem('debug', debug);\n  \n  let p_saved = createP(\"Config saved.\")\n  d_save.child(p_saved);\n  setTimeout(() => {p_saved.remove()}, 1000);\n  \n  initFirebase();\n}\n\nfunction loadConfig() {\n  apiKey = getItem('apiKey');\n  authDomain = getItem('authDomain');\n  databaseURL = getItem('databaseURL');\n  projectId = getItem('projectId');\n  storageBucket = getItem('storageBucket');\n  messagingSenderId = getItem('messagingSenderId');\n  debug = getItem('debug');\n  \n  i_apiKey.value(apiKey);\n  i_authDomain.value(authDomain);\n  i_databaseURL.value(databaseURL);\n  i_projectId.value(projectId);\n  i_storageBucket.value(storageBucket);\n  i_messagingSenderId.value(messagingSenderId);\n  c_debug.checked(debug);\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "6200ef3d90b2cfc52e31cc61",
        "isSelectedFile": false,
        "updatedAt": "2022-10-14T11:58:01.255Z",
        "createdAt": "2022-10-14T11:58:01.255Z",
        "id": "6200ef3d90b2cfc52e31cc61"
      },
      {
        "name": "utils.js",
        "content": "\n// convert a date object to ISO format (with timezone)\n// credit: https://stackoverflow.com/a/49332027/3327135\nfunction toISOLocal(d) {\n  var z  = n =>  ('0' + n).slice(-2);\n  var zz = n => ('00' + n).slice(-3);\n  var off = d.getTimezoneOffset();\n  var sign = off > 0? '-' : '+';\n  off = Math.abs(off);\n\n  return d.getFullYear() + '-'\n         + z(d.getMonth()+1) + '-' +\n         z(d.getDate()) + 'T' +\n         z(d.getHours()) + ':'  + \n         z(d.getMinutes()) + ':' +\n         z(d.getSeconds()) + '.' +\n         zz(d.getMilliseconds()) +\n         sign + z(off/60|0) + ':' + z(off%60); \n}",
        "children": [],
        "fileType": "file",
        "_id": "6200ef3d90b2cfc52e31cc66",
        "isSelectedFile": false,
        "updatedAt": "2022-10-14T11:58:01.255Z",
        "createdAt": "2022-10-14T11:58:01.255Z",
        "id": "6200ef3d90b2cfc52e31cc66"
      },
      {
        "name": "multStats.js",
        "content": "class MultStat {\n  constructor(a, b) {\n    this.a = a;\n    this.b = b;\n\n    this.averageTime = 0;\n    this.averageCorrectness = 100;\n\n    this.attemptKeys = [];\n    this.attempts = [];\n\n    this.score = 0;\n    this.lastAttemptTimeStamp = 0;\n  }\n\n  addAttempt(key, attempt) {\n    if (!this.attemptKeys.includes[key]) {\n      this.attemptKeys.push(key);\n      this.attempts.push(attempt);\n      \n      let tCompleted = Date.parse(attempt.timeCompleted);\n      \n      if(tCompleted > this.lastAttemptTimeStamp) {\n        this.lastAttemptTimeStamp = tCompleted;\n      }\n    }\n\n    this.updateScore();\n  }\n\n  updateScore() {\n    let sumTimes = 0;\n    let sumInc = 0;\n\n    for (let i = 0; i < this.attempts.length; i++) {\n      let att = this.attempts[i];\n      // print(\"calculating attempt!\", att);  \n      let timeStarted = Date.parse(att.timeStarted);\n      let timeCompleted = Date.parse(att.timeCompleted);\n      let timeElapsed = (timeCompleted - timeStarted)/1000;\n      sumTimes += timeElapsed;\n      sumInc += att.incorrectAttempts;\n    }\n    \n    // print(\"sumTimes\", sumTimes);  \n    // print(\"sumInc\", sumInc);  \n\n    this.averageTime = sumTimes / this.attempts.length;\n    \n    // print(\"averageTime\", this.averageTime);  \n    this.averageCorrectness =\n      (this.attempts.length / (this.attempts.length + sumInc)) * 100;\n    // print(\"averageCorrectness\", this.averageCorrectness);\n    \n    let cScore = 0.5 * this.averageCorrectness;\n    // print(\"cScore\", cScore);  \n    let tScore = 0.5 * map(this.averageTime, 0, 60, 100, 0, true);\n    // print(\"tScore\", tScore);  \n    \n    this.score = cScore + tScore;\n    \n    // print(\"score\", this.score);    \n  }\n  \n  getPriority() {\n    let timeSinceLastAttempt = 0;\n    \n    if(this.lastAttemptTimeStamp > 0) {\n      timeSinceLastAttempt = new Date() - this.lastAttemptTimeStamp;\n    } else {\n      return 0;  // no attempt made. this is highest priority (lowest value)\n    }\n    \n    let timePriority = map(timeSinceLastAttempt, 0, (7 * 24 * 60 * 60 * 1000), -20, 100, true);\n  \n    return this.score - timePriority;\n  }\n  \n  toString() {\n    return \"\" + this.a + \"x\" + this.b;\n  }\n}\n\nclass MultTable {\n  constructor() {\n    this.table = [];\n    this.sortedElements = [];\n\n    for (let na = 0; na <= SIZE; na++) {\n      this.table[na] = [];\n      for (let nb = 0; nb <= SIZE; nb++) {\n        let m = new MultStat(na, nb);\n        this.table[na][nb] = m;\n        this.sortedElements.push(m);\n      }\n    }\n  }\n\n  addAttempt(key, attempt) {\n    let nums = attempt.nums;\n\n    this.table[nums[0]][nums[1]].addAttempt(key, attempt);\n    \n    this.sortedElements.sort(function(a, b) {\n      return (a.getPriority() - b.getPriority());\n    });\n    \n  }\n\n  render() {\n    let cellSize = width / (SIZE + 1);\n    \n    for (let na = 0; na <= SIZE; na++) {\n      for (let nb = 0; nb <= SIZE; nb++) {\n        let m = this.table[na][nb];\n        \n        // print(m.score);\n        \n        let h = (0, 0, 100);\n        let s = 0;\n        let b = 100;\n        \n        if(m.attempts.length > 0) {\n          s = 50;\n          h = map(m.score, 100, 0, 120, 0, true);\n        }\n        \n        stroke(0, 0, 0);\n        fill(h, s, b);\n        rect(na * cellSize, nb * cellSize, cellSize, cellSize);\n        \n        noStroke();\n        fill(0, 0, 0);\n        text(m.toString(), na * cellSize, nb * cellSize + 20);\n      }\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6200ef514475290024409517",
        "isSelectedFile": true,
        "updatedAt": "2022-10-14T11:58:01.255Z",
        "createdAt": "2022-10-14T11:58:01.255Z",
        "id": "6200ef514475290024409517"
      }
    ],
    "createdAt": "2022-02-07T10:06:54.082Z",
    "updatedAt": "2022-10-14T11:58:01.255Z",
    "id": "ATayS4qxS"
  },
  {
    "name": "Multiplication Practice v4",
    "_id": "rxrubeMjV",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "634bcfad2546d400193006a8",
          "634b7f1b50d96041e4bef636",
          "634b7f1b50d96041e4bef637",
          "634b7f1b50d96041e4bef638",
          "634b7f1b50d96041e4bef639",
          "634b7f1b50d96041e4bef63a",
          "634b7f1b50d96041e4bef63b",
          "634b7f1b50d96041e4bef63c"
        ],
        "fileType": "folder",
        "_id": "634b7f1b50d96041e4bef635",
        "isSelectedFile": false,
        "createdAt": "2023-05-08T08:13:30.772Z",
        "updatedAt": "2023-05-08T08:13:30.772Z",
        "id": "634b7f1b50d96041e4bef635"
      },
      {
        "name": "sketch.js",
        "content": "/*\n* Simple multiplication practice game\n* for primary students\n*\n* by @ktorn\n*\n* v3\n*/\n\nlet database;\n\nconst STATE = {\n  START: 0,\n  ROUND: 1,\n  END: 2\n}\n\nconst SIZE = 12;\n\nconst A_MAX = SIZE;\nconst B_MAX = SIZE;\n\nlet max = 0;\n\nlet rows = [];\n\nlet p;\nlet inputBox;\nlet multTable;\n\nlet m;\n\nlet state = STATE.START;\n\nlet start_div;\nlet start_button;\n\nlet roundDiv;\nlet roundStartTime = 0;\nlet roundGuess = 0;\nlet roundGuessMult;\nlet roundMMs = [];\n\nlet roundMultDivs;\n\nvar w = window.innerWidth;\nvar h = window.innerHeight;\n\nlet soundCorrect;\nlet soindWrong;\n\nlet isShakingDiv = false;\nlet shakingDiv;\nlet shakingCount;\n\nfunction preload() {\n  soundCorrect = loadSound(\"/assets/chime-correct.mp3\");\n  soundWrong = loadSound(\"/assets/chime-wrong.mp3\");\n}\n\nfunction setup() {\n  noCanvas();\n  \n  let cookies = document.cookie;\n  print(\"cookies\", cookies);\n  \n  colorMode(HSB);\n  \n  multTable = new MultTable();\n  initConfig();\n  initFirebase(); \n  \n  m = getNextMult();\n  rows.push(m);\n}\n\n\nfunction draw() {\n  \n  renderConfig();\n  \n  switch(state) {\n      \n    case STATE.START:\n      renderStart();\n      break;\n      \n    case STATE.ROUND:\n      renderRound();  \n      break;\n      \n    case STATE.END:\n      renderEnd();\n      break;\n  }\n  \n  if(isShakingDiv && frameCount % 3 === 0) {\n    doShakeDiv();\n  }\n\n}\n\nfunction doShakeDiv() {\n  let sp = shakingDiv.position();\n  \n  if (shakingCount % 2 === 0) {\n    shakingDiv.position(sp.x + 10, sp.y);\n  } else {\n    shakingDiv.position(sp.x - 10, sp.y);\n  }\n  \n  shakingCount--;\n  \n  if(shakingCount <= 0) {\n    isShakingDiv = false;\n    shakingDiv = undefined;\n  }\n}\n\nfunction shakeDiv(div) {\n  isShakingDiv = true;\n  shakingDiv = div;\n  shakingCount = 4;\n}\n\n\nfunction renderStart() {\n    \n  if(!start_button) {\n    start_button = createButton(\"Start Round\");\n    start_button.style(\"font-size\", \"20px\");\n    start_button.style(\"background-color: green; color: white; border-radius: 8px; text-decoration: none;\");\n    start_button.size(200, 100);\n    start_button.mousePressed(startRound);\n    // start_button.parent(start_div);\n    start_button.hide();\n  }\n  \n  if(state == STATE.START) {\n    start_button.show();\n    start_button.position(w/2 - 200/2, h/2 - 100/2);\n  } else {\n    start_button.hide();\n  }\n  \n}\n\n\nfunction renderRound() {\n\n  if(!roundMultDivs) {\n    roundMultDivs = [];\n    \n    let xOffset = 50;\n    let yOffset = 50;\n\n    let multWidth = (w - 100 - 5*20) / 5;\n\n    for (let i = 0; i < 2; i++) {\n      for (let j = 0; j < 5; j++) {\n        let div = createDiv();\n        div.size(multWidth, 50);\n        div.style('background-color', '#CDCDCD');\n        div.style('text-align: center; top: 50%; left: 1%; right: 1%')\n        div.position(xOffset + j * multWidth + j * 20,  yOffset + i * 50 + i * 20);\n        roundMultDivs.push(div);\n      }\n    }\n    \n    roundGuess = 1;\n    roundGuessMult = getNextMult();\n  }\n  \n  if(!roundDiv) {\n    let dW = 200;\n    let dH = 75;\n    roundDiv = createDiv();\n    roundDiv.style('text-align: center; top: 50%; left: 1%; right: 1%')\n    roundDiv.size(dW, dH);\n    roundDiv.position(w/2 - dW/2, h/2 - dH/2)\n    roundDiv.style('background-color', '#cfd8e8');\n  }\n  \n  if (roundGuess <= 10) {\n    roundGuessMult.render(roundDiv);\n    // roundGuessMult.i.elt.focus();\n  } else {\n    state = STATE.END;\n  }\n  \n}\n\nfunction renderEnd() {\n  roundDiv.hide();\n  state = STATE.START;\n}\n\nfunction handleCorrectAnswer() { \n  roundGuessMult.relocateParent(roundMultDivs[roundGuess-1]);\n  roundGuessMult = getNextMult();\n  roundGuess++;\n}\n\n\nfunction getNextMult() {\n  \n  let focus = [];\n  \n  let mm;\n  let mult;\n  let pick;\n  let done = false;\n  \n  while(!done) {\n    \n    // biased die (parabolic random pick)\n    let itemTotal = multTable.sortedElements.length/5;\n    pick = random(0, itemTotal);\n    pick = floor(Math.pow(pick, 2) / itemTotal);\n    \n    mm = multTable.sortedElements[pick];\n\n    \n    if( !(roundMMs.includes(mm.toString())) && ( !focus || focus.length == 0 || focus.includes(mm.a) || focus.includes(mm.b))) {\n      done = true;\n    }  \n  }\n  \n  // we don't want to repeat same, or inverse mult on same round\n  roundMMs.push(mm.toString());\n  roundMMs.push((new Mult(mm.b, mm.a)).toString());\n  \n  print(roundMMs);\n  \n   print(\"picking #\", pick, mm.toString(), \"priority\", mm.getPriority(),  \"from \", multTable.sortedElements.length);\n  \n  print(multTable.sortedElements);\n  \n  mult = new Mult(mm.a, mm.b);\n  \n  return mult;\n}\n\nwindow.onresize = function() {\n  // assigns new values for width and height variables\n  w = window.innerWidth;\n  h = window.innerHeight; \n}\n\nfunction startRound() {\n  start_button.hide();\n  state = STATE.ROUND;\n  roundStartTime = millis();\n  roundMultDivs = undefined;\n  if(roundDiv) {\n    roundDiv.show();\n  }\n}\n\n\n",
        "children": [],
        "fileType": "file",
        "_id": "634b7f1b50d96041e4bef63a",
        "isSelectedFile": false,
        "createdAt": "2023-05-08T08:13:30.772Z",
        "updatedAt": "2023-05-08T08:13:30.772Z",
        "id": "634b7f1b50d96041e4bef63a"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    \n    <script src=\"https://www.gstatic.com/firebasejs/8.2.3/firebase.js\"></script>\n    \n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"utils.js\"></script>\n    <script src=\"db.js\"></script>\n    <script src=\"mult.js\"></script>\n    <script src=\"multStats.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "634b7f1b50d96041e4bef637",
        "isSelectedFile": false,
        "createdAt": "2023-05-08T08:13:30.772Z",
        "updatedAt": "2023-05-08T08:13:30.772Z",
        "id": "634b7f1b50d96041e4bef637"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n\n/* Remove arrows from numeric input fields */\n\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n\ninput[type=number] {\n  -moz-appearance: textfield;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "634b7f1b50d96041e4bef63b",
        "isSelectedFile": false,
        "createdAt": "2023-05-08T08:13:30.772Z",
        "updatedAt": "2023-05-08T08:13:30.772Z",
        "id": "634b7f1b50d96041e4bef63b"
      },
      {
        "name": "mult.js",
        "content": "class Mult {\n    \n  constructor(a, b) {\n    \n    this.a;\n    this.b;\n    \n    if ((a || a === 0) && (b || b === 0)) {\n      this.a = a;\n      this.b = b;\n    } else {\n      this.a = floor(random(A_MAX+1));\n      this.b = floor(random(B_MAX+1));\n    }\n\n    this.parentDiv;\n    \n    this.p;\n    this.i;\n    \n    this.timeStarted = new Date();\n    this.timeCompleted;\n    \n    this.incorrectAttempts = 0;\n    this.isAnswered = false;\n    \n    this.score = 0;\n    \n    this.handle = this.handleInput.bind(this);\n  }\n  \n  isAnswer(c) {\n    return this.a * this.b == c;\n  }\n  \n  getAnswer() {\n    return this.a * this.b;\n  }\n  \n  relocateParent(newParentDiv) {\n    newParentDiv.child(this.p);\n    let t = this.a + \" x \" + this.b + \" = \";\n    this.i.remove();\n    this.p.style('font-size', '15px');\n    this.p.html(t + this.getAnswer());\n    \n    let h = 0;\n    let s = 100;\n    let b = 100;\n\n    h = map(this.score, 100, 0, 120, 20, true);\n    \n    print(\"score\", this.score);\n    \n    let c = color(h,s,b);\n    \n    let rgbString = 'rgb(' + red(c) + ', ' + green(c) + ', ' + blue(c) + ')';\n    \n    // print(\"color\", rgbString);\n    newParentDiv.style('background-color', rgbString);\n    \n  }\n  \n  render(parentDiv) {\n    this.parentDiv  = parentDiv;\n    let t = this.a + \" x \" + this.b + \" = \";\n    \n    if(!this.p) {\n      this.p = createP(t);\n      this.p.style('font-size', '20px');\n      parentDiv.child(this.p);\n    }\n  \n    if(!this.isAnswered) {\n      if(!this.i) {\n        this.i = createInput('', \"number\");\n        this.i.style('font-size', '20px');\n        this.i.size(30);\n        this.p.child(this.i);\n        this.i.changed(this.handle);\n        this.i.elt.focus();\n      }\n    } else {\n      this.i.remove();\n      this.p.html(t + this.getAnswer());\n    }\n    \n  }\n  \n  updateScore() {\n    let sumTimes = 0;\n    let sumInc = 0;\n    \n    let timeToComplete = (this.timeCompleted - this.timeStarted)/1000;\n    let correctness = (1 / (this.incorrectAttempts + 1)) * 100;\n    \n    // print(\"correctness\", correctness);\n    \n    let cScore = 0.5 * correctness;\n    let tScore = 0.5 * map(timeToComplete, 0, 30, 100, 0, true);\n     \n    this.score = cScore + tScore;\n    \n    // print(\"score\", this.score);    \n  }\n  \n  handleInput() {    \n    let answer = parseInt(this.i.value());\n\n    if(this.isAnswer(answer)) {\n      print(\"Correct!\");\n      soundCorrect.play();\n      this.isAnswered = true;\n      this.timeCompleted = new Date();\n      this.updateScore();\n      handleCorrectAnswer();\n      submitAttempt(this.getData());\n    } else {\n      print(\"Incorrect!\");\n      this.i.value(\"\");\n      soundWrong.play();\n      shakeDiv(this.parentDiv);\n      this.incorrectAttempts++;\n    }\n\n    let currentsleep = 1000;\n  }\n  \n  getData() {\n    let data = { nums: [this.a, this.b],\n                 timeStarted: toISOLocal(this.timeStarted),\n                 timeCompleted: toISOLocal(this.timeCompleted),\n                 incorrectAttempts: this.incorrectAttempts\n               };\n    \n    return data;\n  }\n  \n  toString() {\n    return \"\" + this.a + \"x\" + this.b;\n  }\n    \n}",
        "children": [],
        "fileType": "file",
        "_id": "634b7f1b50d96041e4bef638",
        "isSelectedFile": false,
        "createdAt": "2023-05-08T08:13:30.772Z",
        "updatedAt": "2023-05-08T08:13:30.772Z",
        "id": "634b7f1b50d96041e4bef638"
      },
      {
        "name": "db.js",
        "content": "\n\nconst DB_NAME = \"multiplication-attempts-202305\";\n\nlet db_name = DB_NAME;\n\nlet apiKey = \"\"\nlet authDomain = \"\";\nlet databaseURL = \"\";\nlet projectId = \"\";\nlet storageBucket = \"\";\nlet messagingSenderId = \"\";\nlet debug = \"\";\n\nlet d;\nlet pp;\nlet i_apiKey;\nlet i_authDomain;\nlet i_databaseURL;\nlet i_projectId;\nlet i_storageBucket;\nlet i_messagingSenderId;\nlet c_debug;\n\nlet d_save;\nlet i_save;\nlet b_toggle;\n\nlet i_paste;\nlet i_paste_confirm;\n\nlet isInit = false;\nlet isConfigExpanded = false;\n\nfunction initConfig() {\n  \n  b_toggle = createButton(\"Show config\");\n  b_toggle.mousePressed(toggleConfig);\n  \n  d = createDiv();\n  \n  pp = createP(\"apiKey: \");\n  i_apiKey = createInput('');\n  pp.child(i_apiKey);\n  pp.parent(d);\n  \n  pp = createP(\"authDomain: \");\n  i_authDomain = createInput('');\n  pp.child(i_authDomain);\n  pp.parent(d);\n  \n  pp = createP(\"databaseURL: \");\n  i_databaseURL = createInput('');\n  pp.child(i_databaseURL);\n  pp.parent(d);\n  \n  pp = createP(\"projectId: \");\n  i_projectId = createInput('');\n  pp.child(i_projectId);\n  pp.parent(d);\n  \n  pp = createP(\"storageBucket: \");\n  i_storageBucket = createInput('');\n  pp.child(i_storageBucket);\n  pp.parent(d);\n  \n  pp = createP(\"messagingSenderId: \");\n  i_messagingSenderId = createInput('');\n  pp.child(i_messagingSenderId);\n  pp.parent(d);\n  \n  //pp = createP(\"debug: \");\n  c_debug = createCheckbox(' debug');\n  pp.child(c_debug);\n  pp.parent(d);\n  \n  pp = createP(\"paste config: \");\n  i_paste = createElement('textarea');\n  i_paste.attribute(\"rows\",\"7\");\n  i_paste.attribute(\"cols\",\"\");\n  pp.child(i_paste);\n  pp.parent(d);\n  \n  \n  i_paste_confirm = createButton(\"Load\");\n  i_paste_confirm.mousePressed(parsePaste)\n  pp.child(i_paste_confirm);\n  pp.parent(d);\n  \n  \n  d_save = createDiv();\n  d_save.style(\"display\", \"flex\");\n  d_save.style(\"flex-wrap\", \"wrap\");\n  i_save = createButton(\"Save\");\n  i_save.mousePressed(saveConfig);\n  i_save.parent(d_save);\n  d_save.parent(d);\n  \n  loadConfig();\n}\n\nfunction initFirebase() {\n  \n  if(debug) {\n    db_name = DB_NAME + \"-debug\";\n  }\n  \n  // Initialize Firebase\n  var config = {\n    apiKey: apiKey,\n    authDomain: authDomain,\n    databaseURL: databaseURL,\n    projectId: projectId,\n    storageBucket: storageBucket,\n    messagingSenderId: messagingSenderId,\n  };\n  \n  \n  if (!firebase.apps.length) {\n   firebase.initializeApp(config);\n  }else {\n   firebase.app(); // if already initialized, use that one\n  }\n  \n  database = firebase.database();\n    \n  var ref = database.ref(db_name);\n  ref.on(\"value\", gotData, errData);\n}\n\nfunction submitAttempt(data) {\n  var ref = database.ref(db_name);\n  ref.push(data);\n}\n\nfunction gotData (data) {\n\tlet attempts = data.val();\n  \n    if(attempts) {\n      let keys = Object.keys(attempts);\n\n      for (var i = 0; i < keys.length; i++) {\n          let k = keys[i];\n          let nums = attempts[k].nums;\n          let timeStarted = Date.parse(attempts[k].timeStarted);\n          let timeCompleted = Date.parse(attempts[k].timeCompleted);\n          let timeDiff = (timeCompleted - timeStarted)/1000;\n          let incorrectAttempts = attempts[k].incorrectAttempts;\n          // print(\"[\"+nums[0]+\"x\"+nums[1]+\"] inc:[\" + incorrectAttempts + \"] time: [\" + timeDiff + \"s]\");\n          multTable.addAttempt(k, attempts[k]);\n      }\n    }\n}\n\nfunction errData(err) {\n\tconsole.log('Error!');\n  \tconsole.log(err);\n}\n\nfunction renderConfig() {\n  \n  \n  if (isConfigExpanded) {\n    d.show();\n    b_toggle.html(\"Hide config\");\n  } else {\n     d.hide();\n     b_toggle.html(\"Show config\");\n  }\n  \n}\n\nfunction toggleConfig() {\n  isConfigExpanded = !isConfigExpanded;\n}\n\nfunction saveConfig() {\n  apiKey = i_apiKey.value();\n  authDomain = i_authDomain.value();\n  databaseURL = i_databaseURL.value();\n  projectId = i_projectId.value();\n  storageBucket = i_storageBucket.value();\n  messagingSenderId = i_messagingSenderId.value();\n  debug = c_debug.checked();\n\n  storeItem('apiKey', apiKey);\n  storeItem('authDomain', authDomain);\n  storeItem('databaseURL', databaseURL);\n  storeItem('projectId', projectId);\n  storeItem('storageBucket', storageBucket);\n  storeItem('messagingSenderId', messagingSenderId);\n  storeItem('debug', debug);\n  \n  setCookie('apiKey', apiKey, 3650);\n  setCookie('authDomain', authDomain, 3650);\n  setCookie('databaseURL', databaseURL, 3650);\n  setCookie('projectId', projectId, 3650);\n  setCookie('storageBucket', storageBucket, 3650);\n  setCookie('messagingSenderId', messagingSenderId, 3650);\n  setCookie('debug', debug, 3650);\n  \n  let p_saved = createP(\"Config saved.\")\n  d_save.child(p_saved);\n  setTimeout(() => {p_saved.remove()}, 1000);\n  \n  initFirebase();\n}\n\nfunction loadConfig() {\n  apiKey = getItem('apiKey');\n  authDomain = getItem('authDomain');\n  databaseURL = getItem('databaseURL');\n  projectId = getItem('projectId');\n  storageBucket = getItem('storageBucket');\n  messagingSenderId = getItem('messagingSenderId');\n  debug = getItem('debug');\n  \n  // if loading from localstorage fails\n  // fall-back to cookies\n  if(!apiKey || !apiKey.length > 0) {\n    loadFromCookie();\n  }\n  \n  i_apiKey.value(apiKey);\n  i_authDomain.value(authDomain);\n  i_databaseURL.value(databaseURL);\n  i_projectId.value(projectId);\n  i_storageBucket.value(storageBucket);\n  i_messagingSenderId.value(messagingSenderId);\n  c_debug.checked(debug);\n}\n\nfunction loadFromCookie() {\n  print(\"Loading from cookies\");\n  \n  apiKey = getCookie('apiKey');\n  authDomain = getCookie('authDomain');\n  databaseURL = getCookie('databaseURL');\n  projectId = getCookie('projectId');\n  storageBucket = getCookie('storageBucket');\n  messagingSenderId = getCookie('messagingSenderId');\n  debug = getCookie('debug');\n  \n}\n\nfunction parsePaste() {\n  \n  let paste = i_paste.value();\n  \n  let lines = paste.split(\"\\n\");\n  \n  apiKey = lines[0];\n  authDomain = lines[1];\n  databaseURL = lines[2];\n  projectId = lines[3];\n  storageBucket = lines[4];\n  messagingSenderId = lines[5];\n  \n  i_apiKey.value(apiKey);\n  i_authDomain.value(authDomain);\n  i_databaseURL.value(databaseURL);\n  i_projectId.value(projectId);\n  i_storageBucket.value(storageBucket);\n  i_messagingSenderId.value(messagingSenderId);\n  c_debug.checked(debug);\n}",
        "children": [],
        "fileType": "file",
        "_id": "634b7f1b50d96041e4bef636",
        "isSelectedFile": true,
        "updatedAt": "2023-05-08T08:13:30.772Z",
        "createdAt": "2023-05-08T08:13:30.772Z",
        "id": "634b7f1b50d96041e4bef636"
      },
      {
        "name": "utils.js",
        "content": "\n// convert a date object to ISO format (with timezone)\n// credit: https://stackoverflow.com/a/49332027/3327135\nfunction toISOLocal(d) {\n  var z  = n =>  ('0' + n).slice(-2);\n  var zz = n => ('00' + n).slice(-3);\n  var off = d.getTimezoneOffset();\n  var sign = off > 0? '-' : '+';\n  off = Math.abs(off);\n\n  return d.getFullYear() + '-'\n         + z(d.getMonth()+1) + '-' +\n         z(d.getDate()) + 'T' +\n         z(d.getHours()) + ':'  + \n         z(d.getMinutes()) + ':' +\n         z(d.getSeconds()) + '.' +\n         zz(d.getMilliseconds()) +\n         sign + z(off/60|0) + ':' + z(off%60); \n}\n\nfunction setCookie(cname, cvalue, exdays) {\n  print(\"setting cookie: \" + cname + \": \" + cvalue);\n  const d = new Date();\n  d.setTime(d.getTime() + (exdays*24*60*60*1000));\n  let expires = \"expires=\"+ d.toUTCString();\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";\";\n}\n\nfunction getCookie(cname) {\n  let name = cname + \"=\";\n  let decodedCookie = decodeURIComponent(document.cookie);\n  let ca = decodedCookie.split(';');\n  for(let i = 0; i <ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) == ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}",
        "children": [],
        "fileType": "file",
        "_id": "634b7f1b50d96041e4bef63c",
        "isSelectedFile": false,
        "updatedAt": "2023-05-08T08:13:30.772Z",
        "createdAt": "2023-05-08T08:13:30.772Z",
        "id": "634b7f1b50d96041e4bef63c"
      },
      {
        "name": "multStats.js",
        "content": "class MultStat {\n  constructor(a, b) {\n    this.a = a;\n    this.b = b;\n\n    this.averageTime = 0;\n    this.averageCorrectness = 100;\n\n    this.attemptKeys = [];\n    this.attempts = [];\n\n    this.score = 0;\n    this.lastAttemptTimeStamp = 0;\n  }\n\n  addAttempt(key, attempt) {\n    if (!this.attemptKeys.includes[key]) {\n      this.attemptKeys.push(key);\n      this.attempts.push(attempt);\n      \n      let tCompleted = Date.parse(attempt.timeCompleted);\n      \n      if(tCompleted > this.lastAttemptTimeStamp) {\n        this.lastAttemptTimeStamp = tCompleted;\n      }\n    }\n\n    this.updateScore();\n  }\n\n  updateScore() {\n    let sumTimes = 0;\n    let sumInc = 0;\n\n    for (let i = 0; i < this.attempts.length; i++) {\n      let att = this.attempts[i];\n      // print(\"calculating attempt!\", att);  \n      let timeStarted = Date.parse(att.timeStarted);\n      let timeCompleted = Date.parse(att.timeCompleted);\n      let timeElapsed = (timeCompleted - timeStarted)/1000;\n      sumTimes += timeElapsed;\n      sumInc += att.incorrectAttempts;\n    }\n    \n    // print(\"sumTimes\", sumTimes);  \n    // print(\"sumInc\", sumInc);  \n\n    this.averageTime = sumTimes / this.attempts.length;\n    \n    // print(\"averageTime\", this.averageTime);  \n    this.averageCorrectness =\n      (this.attempts.length / (this.attempts.length + sumInc)) * 100;\n    // print(\"averageCorrectness\", this.averageCorrectness);\n    \n    let cScore = 0.5 * this.averageCorrectness;\n    // print(\"cScore\", cScore);  \n    let tScore = 0.5 * map(this.averageTime, 0, 60, 100, 0, true);\n    // print(\"tScore\", tScore);  \n    \n    this.score = cScore + tScore;\n    \n    // print(\"score\", this.score);    \n  }\n  \n  getPriority() {\n    let timeSinceLastAttempt = 0;\n    \n    if(this.lastAttemptTimeStamp > 0) {\n      timeSinceLastAttempt = new Date() - this.lastAttemptTimeStamp;\n    } else {\n      return 0;  // no attempt made. this is highest priority (lowest value)\n    }\n    \n    let timePriority = map(timeSinceLastAttempt, 0, (7 * 24 * 60 * 60 * 1000), -20, 100, true);\n  \n    return this.score - timePriority;\n  }\n  \n  toString() {\n    return \"\" + this.a + \"x\" + this.b;\n  }\n}\n\nclass MultTable {\n  constructor() {\n    this.table = [];\n    this.sortedElements = [];\n\n    for (let na = 0; na <= SIZE; na++) {\n      this.table[na] = [];\n      for (let nb = 0; nb <= SIZE; nb++) {\n        let m = new MultStat(na, nb);\n        this.table[na][nb] = m;\n        this.sortedElements.push(m);\n      }\n    }\n  }\n\n  addAttempt(key, attempt) {\n    let nums = attempt.nums;\n\n    this.table[nums[0]][nums[1]].addAttempt(key, attempt);\n    \n    this.sortedElements.sort(function(a, b) {\n      return (a.getPriority() - b.getPriority());\n    });\n    \n  }\n\n  render() {\n    let cellSize = width / (SIZE + 1);\n    \n    for (let na = 0; na <= SIZE; na++) {\n      for (let nb = 0; nb <= SIZE; nb++) {\n        let m = this.table[na][nb];\n        \n        // print(m.score);\n        \n        let h = (0, 0, 100);\n        let s = 0;\n        let b = 100;\n        \n        if(m.attempts.length > 0) {\n          s = 50;\n          h = map(m.score, 100, 0, 120, 0, true);\n        }\n        \n        stroke(0, 0, 0);\n        fill(h, s, b);\n        rect(na * cellSize, nb * cellSize, cellSize, cellSize);\n        \n        noStroke();\n        fill(0, 0, 0);\n        text(m.toString(), na * cellSize, nb * cellSize + 20);\n      }\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "634b7f1b50d96041e4bef639",
        "isSelectedFile": false,
        "updatedAt": "2023-05-08T08:13:30.772Z",
        "createdAt": "2023-05-08T08:13:30.772Z",
        "id": "634b7f1b50d96041e4bef639"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "634bcfb8e3c48a001a47d954",
          "634bcfbb3672ab001a2f952a"
        ],
        "fileType": "folder",
        "_id": "634bcfad2546d400193006a8",
        "isSelectedFile": false,
        "updatedAt": "2023-05-08T08:13:30.772Z",
        "createdAt": "2023-05-08T08:13:30.772Z",
        "id": "634bcfad2546d400193006a8"
      },
      {
        "name": "chime-correct.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "634bcfb8e3c48a001a47d954",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/7c7ff335-f401-4edc-8248-e2abed637971.mp3",
        "isSelectedFile": false,
        "updatedAt": "2023-05-08T08:13:30.772Z",
        "createdAt": "2023-05-08T08:13:30.772Z",
        "id": "634bcfb8e3c48a001a47d954"
      },
      {
        "name": "chime-wrong.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "634bcfbb3672ab001a2f952a",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/376d2de9-31ce-4a53-987c-8530cd9e7a36.mp3",
        "isSelectedFile": false,
        "updatedAt": "2023-05-08T08:13:30.772Z",
        "createdAt": "2023-05-08T08:13:30.772Z",
        "id": "634bcfbb3672ab001a2f952a"
      }
    ],
    "createdAt": "2022-10-16T03:48:44.110Z",
    "updatedAt": "2023-05-08T08:13:30.772Z",
    "id": "rxrubeMjV"
  },
  {
    "name": "Nebula hall",
    "_id": "IvtPHQ0sJ",
    "updatedAt": "2021-10-23T23:02:32.808Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6174889286817300241d5d75",
          "61748762706e644915e9b707",
          "6174896ee3e0370024b5e57b",
          "61748a783a01890024662cab",
          "617489ed3a01890024662be0",
          "61748a123a01890024662c16",
          "61748762706e644915e9b706",
          "61748a7be3e0370024b5e76c",
          "617489f186817300241d5faa"
        ],
        "fileType": "folder",
        "_id": "61748762706e644915e9b709",
        "createdAt": "2021-10-23T23:02:32.808Z",
        "updatedAt": "2021-10-23T23:02:32.808Z",
        "isSelectedFile": false,
        "id": "61748762706e644915e9b709"
      },
      {
        "name": "sketch.js",
        "content": "// Activate when publishing\np5.disableFriendlyErrors = false;\n\n// **************************\n// *       PARAMETERS       *\n// **************************\n\n// responsive canvas\nconst referenceSize = 700;\nconst hasMaxSize = true; // if true, then the canvas cannot be larger than the reference size\nconst isCentered = true; // if true the canvas will be vertically and horizontally centered\n\n// show debug information like framerate\nlet isDebug = true;\n\n// hide the source code button in the top-right\nlet isButtonHidden = false;\n\n// **************************\n// *    GLOBAL VARIABLES    *\n// **************************\n\nlet t = 0;\nlet w;\nlet h;\nvar canvasSize;\nlet font;\nlet stars;\nlet pg;\nlet grain = [];\nvar canvas;\n\n// **************************\n// *        PRELOAD         *\n// **************************\n\nfunction preload() {\n  font = loadFont(\"assets/fonts/JetBrainsMonoNL-Bold.ttf\");\n  // film grain source https://tinyurl.com/npew7zy3\n  grain[0] = loadImage(\"assets/images/AU_FG_Texture-1.jpg\");\n  grain[1] = loadImage(\"assets/images/AU_FG_Texture-2.jpg\");\n  fadeOutLoadingScreen();\n}\n\n// **************************\n// *          SETUP         *\n// **************************\n\nfunction setup() {\n  console.log(\"started setup\");\n  frameRate(24);\n\n  setDimensions();\n\n  if (isCentered) {\n    centerCanvas();\n  }\n\n  var p5Canvas = createCanvas(canvasSize, canvasSize);\n  canvas = p5Canvas.canvas;\n\n  stars = createGraphics(width, height);\n  stars.background(0);\n  pg = createGraphics(width, height);\n}\n\n// **************************\n// *          DRAW          *\n// **************************\n\nfunction draw() {\n  w = pg.width;\n  h = pg.height;\n\n  t = frameCount * 0.005;\n\n  let anim = (sin(t * 2.5) + 1) * 0.5;\n\n  let circleDiameter = w * 0.6;\n\n  // stars\n  let particleCount = map(anim, 0, 1, 20, 30);\n  let s = w * 0.003;\n  stars.push();\n  stars.translate(w * 0.5, h * 0.5);\n  for (let i = 0; i < particleCount; i++) {\n    let a = random(TAU);\n    let r = w * 0.6 * random();\n    let x = cos(a) * r;\n    let y = sin(a) * r;\n    let c = get(x - w * 0.5, y - h * 0.5);\n    let grey = map(c[0], 0, 50, 255, 0, true);\n    let alpha = random(70, 255);\n    stars.noStroke();\n    stars.fill(grey, alpha);\n    stars.circle(x, y, s); // particle\n  }\n  stars.pop();\n\n  // draw black hole\n  stars.push();\n  stars.translate(w * 0.5, h * 0.5);\n  stars.fill(0);\n  stars.ellipse(0, 0, circleDiameter * 0.5, circleDiameter * 0.5);\n  stars.pop();\n\n  // flares\n  pg.push();\n  pg.noFill();\n  pg.stroke(255);\n  pg.translate(w * 0.5, h * 0.5);\n  pg.rotate(QUARTER_PI);\n  pg.rotate(HALF_PI);\n  pg.fill(0);\n  pg.strokeWeight(3);\n  let dotCount = 360;\n  let angleBetween = TAU / dotCount;\n  for (let i = 0; i < dotCount; i++) {\n    let angle = i * angleBetween;\n    let r = circleDiameter * 0.25;\n    let x = cos(angle) * r;\n    let y = sin(angle) * r;\n    let nx = x * 0.03;\n    let ny = y * 0.03;\n    let nz = t * 3;\n    let n = noise(nx, ny, nz);\n    pg.noStroke();\n    pg.fill(n * n * 255);\n    pg.circle(x, y, w * 0.01);\n  }\n  pg.pop();\n\n  // random darkening frame\n  if (random() > 0.5) {\n    pg.fill(0, 10);\n    pg.rect(0, 0, w, h);\n  }\n\n  // feedback loops\n  applyFeedbackTo(stars, 0, -w * 0.002);\n  applyFeedbackTo(pg, 1, w * 0.006);\n\n  // draw the final result on screen\n  \n  \n  // blendMode(BLEND);\n  image(stars, 0, 0, width, height);\n  // blendMode(ADD);\n  // image(pg, 0, 0, width, height);\n\n  // filmGrain(grain);\n\n  if (isDebug) showFPS();\n}\n\n// **************************\n// *       FEEDBACK         *\n// **************************\n\nfunction applyFeedbackTo(buffer, type, crop) {\n  let cropAngle = t;\n  let cropSize = crop;\n\n  let feedbackImg;\n  if (type === 1) {\n    let cropRotationSpeed = 3;\n    feedbackImg = buffer.get(\n      cropSize + sin(cropAngle * cropRotationSpeed),\n      cropSize + sin((cropAngle + PI) * cropRotationSpeed),\n      buffer.width -\n        (cropSize * 2 + sin((cropAngle + TWO_PI) * cropRotationSpeed)),\n      buffer.height -\n        (cropSize * 2 + sin((cropAngle + PI * 3) * cropRotationSpeed))\n    );\n  } else {\n    feedbackImg = buffer.get(\n      cropSize,\n      cropSize,\n      buffer.width - cropSize * 2,\n      buffer.height - cropSize * 2\n    );\n  }\n\n  buffer.background(255);\n  buffer.image(feedbackImg, 0, 0, buffer.width, buffer.height);\n}\n\n// **************************\n// *       FILM GRAIN       *\n// **************************\n\nfunction filmGrain(grain) {\n  let grainIndex = frameCount % 2;\n  let texture = grain[grainIndex];\n\n  let w = texture.width;\n  let h = texture.height;\n\n  let ts = min(w, h) * 0.75;\n  let sx = random(w - ts);\n  let sy = random(h - ts);\n  let sw = ts;\n  let sh = ts;\n\n  let dx = 0;\n  let dy = 0;\n  let dw = width;\n  let dh = height;\n\n  //blendMode(ADD);\n  image(texture, dx, dy, dw, dh, sx, sy, sw, sh);\n}\n\n// **************************\n// *        RESIZE          *\n// **************************\n\nfunction windowResized() {\n  setDimensions();\n  resizeCanvas(canvasSize, canvasSize);\n  pg = resizeGraphics(pg);\n  stars = resizeGraphics(stars);\n}",
        "children": [],
        "fileType": "file",
        "_id": "61748762706e644915e9b706",
        "isSelectedFile": true,
        "createdAt": "2021-10-23T23:02:32.808Z",
        "updatedAt": "2021-10-23T23:02:32.808Z",
        "id": "61748762706e644915e9b706"
      },
      {
        "name": "index.html",
        "content": "<html><head>\n  \n    <title>âš«ï¸</title>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <meta property=\"og:image\" content=\"thumbnail.gif\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"loader.css\">\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"style.css\">\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"libraries/prism.css\">\n    <script src=\"libraries/p5.js\"></script>\n    <script src=\"libraries/prism.js\"></script>\n  </head>\n  <body>\n    <div id=\"loading-screen\">\n      <div id=\"loader\"></div>\n    </div>\n    <script src=\"loader.js\"></script>\n    <script src=\"utils.js\"></script>\n    <script src=\"sketch.js\"></script>\n    <div id=\"code-container\" class=\"hide\">\n      <pre id=\"source-viewer\" data-src=\"sketch.js\" class=\"language-javascript\"></pre>\n    </div>\n    <button onclick=\"toggleCode()\" class=\"noSelect\">&lt;&gt;</button>\n    <script type=\"text/javascript\" src=\"script.js\"></script>\n  \n\n</body></html>",
        "children": [],
        "fileType": "file",
        "_id": "61748762706e644915e9b707",
        "createdAt": "2021-10-23T23:02:32.808Z",
        "updatedAt": "2021-10-23T23:02:32.808Z",
        "isSelectedFile": false,
        "id": "61748762706e644915e9b707"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "6174891086817300241d5e3e",
          "617488c53a018900246628f5"
        ],
        "fileType": "folder",
        "_id": "6174889286817300241d5d75",
        "isSelectedFile": false,
        "updatedAt": "2021-10-23T23:02:32.808Z",
        "createdAt": "2021-10-23T23:02:32.808Z",
        "id": "6174889286817300241d5d75"
      },
      {
        "name": "images",
        "content": "",
        "children": [
          "617488e1e3e0370024b5e421",
          "617488e486817300241d5dda"
        ],
        "fileType": "folder",
        "_id": "617488c53a018900246628f5",
        "isSelectedFile": false,
        "updatedAt": "2021-10-23T23:02:32.808Z",
        "createdAt": "2021-10-23T23:02:32.808Z",
        "id": "617488c53a018900246628f5"
      },
      {
        "name": "AU_FG_Texture-1.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "617488e1e3e0370024b5e421",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/a5861936-a4ad-43df-945b-6103a92abe79.jpg",
        "isSelectedFile": false,
        "updatedAt": "2021-10-23T23:02:32.808Z",
        "createdAt": "2021-10-23T23:02:32.808Z",
        "id": "617488e1e3e0370024b5e421"
      },
      {
        "name": "AU_FG_Texture-2.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "617488e486817300241d5dda",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/15a7d948-1f6b-498f-b11e-7b151c00e410.jpg",
        "isSelectedFile": false,
        "updatedAt": "2021-10-23T23:02:32.808Z",
        "createdAt": "2021-10-23T23:02:32.808Z",
        "id": "617488e486817300241d5dda"
      },
      {
        "name": "fonts",
        "content": "",
        "children": [
          "6174891986817300241d5e47"
        ],
        "fileType": "folder",
        "_id": "6174891086817300241d5e3e",
        "isSelectedFile": false,
        "updatedAt": "2021-10-23T23:02:32.808Z",
        "createdAt": "2021-10-23T23:02:32.808Z",
        "id": "6174891086817300241d5e3e"
      },
      {
        "name": "JetBrainsMonoNL-Bold.ttf",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6174891986817300241d5e47",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/ceaf0850-1e31-4665-8b3b-d7802429560e.ttf",
        "isSelectedFile": false,
        "updatedAt": "2021-10-23T23:02:32.808Z",
        "createdAt": "2021-10-23T23:02:32.808Z",
        "id": "6174891986817300241d5e47"
      },
      {
        "name": "libraries",
        "content": "",
        "children": [
          "617489ac86817300241d5f3a",
          "6174897586817300241d5ec0",
          "617489ae3a01890024662b33"
        ],
        "fileType": "folder",
        "_id": "6174896ee3e0370024b5e57b",
        "isSelectedFile": false,
        "updatedAt": "2021-10-23T23:02:32.808Z",
        "createdAt": "2021-10-23T23:02:32.808Z",
        "id": "6174896ee3e0370024b5e57b"
      },
      {
        "name": "prism.css",
        "content": "/* PrismJS 1.23.0\r\nhttps://prismjs.com/download.html#themes=prism&languages=markup+css+clike+javascript */\r\n/**\r\n * prism.js default theme for JavaScript, CSS and HTML\r\n * Based on dabblet (http://dabblet.com)\r\n * @author Lea Verou\r\n */\r\n\r\ncode[class*=\"language-\"],\r\npre[class*=\"language-\"] {\r\n\tcolor: black;\r\n\tbackground: none;\r\n\ttext-shadow: 0 1px white;\r\n\tfont-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\r\n\tfont-size: 1em;\r\n\ttext-align: left;\r\n\twhite-space: pre;\r\n\tword-spacing: normal;\r\n\tword-break: normal;\r\n\tword-wrap: normal;\r\n\tline-height: 1.5;\r\n\r\n\t-moz-tab-size: 4;\r\n\t-o-tab-size: 4;\r\n\ttab-size: 4;\r\n\r\n\t-webkit-hyphens: none;\r\n\t-moz-hyphens: none;\r\n\t-ms-hyphens: none;\r\n\thyphens: none;\r\n}\r\n\r\npre[class*=\"language-\"]::-moz-selection, pre[class*=\"language-\"] ::-moz-selection,\r\ncode[class*=\"language-\"]::-moz-selection, code[class*=\"language-\"] ::-moz-selection {\r\n\ttext-shadow: none;\r\n\tbackground: #b3d4fc;\r\n}\r\n\r\npre[class*=\"language-\"]::selection, pre[class*=\"language-\"] ::selection,\r\ncode[class*=\"language-\"]::selection, code[class*=\"language-\"] ::selection {\r\n\ttext-shadow: none;\r\n\tbackground: #b3d4fc;\r\n}\r\n\r\n@media print {\r\n\tcode[class*=\"language-\"],\r\n\tpre[class*=\"language-\"] {\r\n\t\ttext-shadow: none;\r\n\t}\r\n}\r\n\r\n/* Code blocks */\r\npre[class*=\"language-\"] {\r\n\tpadding: 1em;\r\n\tmargin: 0;\r\n\toverflow: auto;\r\n}\r\n\r\n:not(pre) > code[class*=\"language-\"],\r\npre[class*=\"language-\"] {\r\n\tbackground: #f5f2f0;\r\n}\r\n\r\n/* Inline code */\r\n:not(pre) > code[class*=\"language-\"] {\r\n\tpadding: .1em;\r\n\tborder-radius: .3em;\r\n\twhite-space: normal;\r\n}\r\n\r\n.token.comment,\r\n.token.prolog,\r\n.token.doctype,\r\n.token.cdata {\r\n\tcolor: slategray;\r\n}\r\n\r\n.token.punctuation {\r\n\tcolor: #999;\r\n}\r\n\r\n.token.namespace {\r\n\topacity: .7;\r\n}\r\n\r\n.token.property,\r\n.token.tag,\r\n.token.boolean,\r\n.token.number,\r\n.token.constant,\r\n.token.symbol,\r\n.token.deleted {\r\n\tcolor: #905;\r\n}\r\n\r\n.token.selector,\r\n.token.attr-name,\r\n.token.string,\r\n.token.char,\r\n.token.builtin,\r\n.token.inserted {\r\n\tcolor: #690;\r\n}\r\n\r\n.token.operator {\r\n\tbackground-color: transparent;\r\n}\r\n\r\n.token.entity,\r\n.token.url,\r\n.language-css .token.string,\r\n.style .token.string {\r\n\tcolor: #9a6e3a;\r\n\t/* This background color was intended by the author of this theme. */\r\n\tbackground: hsla(0, 0%, 100%, .5);\r\n}\r\n\r\n.token.atrule,\r\n.token.attr-value,\r\n.token.keyword {\r\n\tcolor: #07a;\r\n}\r\n\r\n.token.function,\r\n.token.class-name {\r\n\tcolor: #DD4A68;\r\n}\r\n\r\n.token.regex,\r\n.token.important,\r\n.token.variable {\r\n\tcolor: #e90;\r\n}\r\n\r\n.token.important,\r\n.token.bold {\r\n\tfont-weight: bold;\r\n}\r\n.token.italic {\r\n\tfont-style: italic;\r\n}\r\n\r\n.token.entity {\r\n\tcursor: help;\r\n}\r\n\r\n",
        "children": [],
        "fileType": "file",
        "_id": "6174897586817300241d5ec0",
        "isSelectedFile": false,
        "updatedAt": "2021-10-23T23:02:32.808Z",
        "createdAt": "2021-10-23T23:02:32.808Z",
        "id": "6174897586817300241d5ec0"
      },
      {
        "name": "p5.js",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "617489ac86817300241d5f3a",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/33d1d23d-a67e-401a-afd5-4d24990012a2.js",
        "isSelectedFile": false,
        "updatedAt": "2021-10-23T23:02:32.808Z",
        "createdAt": "2021-10-23T23:02:32.808Z",
        "id": "617489ac86817300241d5f3a"
      },
      {
        "name": "prism.js",
        "content": "/* PrismJS 1.23.0\r\nhttps://prismjs.com/download.html#themes=prism-twilight&languages=markup+css+clike+javascript&plugins=autolinker+file-highlight */\r\n/// <reference lib=\"WebWorker\"/>\r\n\r\nvar _self = (typeof window !== 'undefined')\r\n\t? window   // if in browser\r\n\t: (\r\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\r\n\t\t? self // if in worker\r\n\t\t: {}   // if in node js\r\n\t);\r\n\r\n/**\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n *\r\n * @license MIT <https://opensource.org/licenses/MIT>\r\n * @author Lea Verou <https://lea.verou.me>\r\n * @namespace\r\n * @public\r\n */\r\nvar Prism = (function (_self){\r\n\r\n// Private helper vars\r\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\r\nvar uniqueId = 0;\r\n\r\n// The grammar object for plaintext\r\nvar plainTextGrammar = {};\r\n\r\n\r\nvar _ = {\r\n\t/**\r\n\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\r\n\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\r\n\t * additional languages or plugins yourself.\r\n\t *\r\n\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\r\n\t *\r\n\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\r\n\t * empty Prism object into the global scope before loading the Prism script like this:\r\n\t *\r\n\t * ```js\r\n\t * window.Prism = window.Prism || {};\r\n\t * Prism.manual = true;\r\n\t * // add a new <script> to load Prism's script\r\n\t * ```\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t * @memberof Prism\r\n\t * @public\r\n\t */\r\n\tmanual: _self.Prism && _self.Prism.manual,\r\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\r\n\r\n\t/**\r\n\t * A namespace for utility methods.\r\n\t *\r\n\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\r\n\t * change or disappear at any time.\r\n\t *\r\n\t * @namespace\r\n\t * @memberof Prism\r\n\t */\r\n\tutil: {\r\n\t\tencode: function encode(tokens) {\r\n\t\t\tif (tokens instanceof Token) {\r\n\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\r\n\t\t\t} else if (Array.isArray(tokens)) {\r\n\t\t\t\treturn tokens.map(encode);\r\n\t\t\t} else {\r\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns the name of the type of the given value.\r\n\t\t *\r\n\t\t * @param {any} o\r\n\t\t * @returns {string}\r\n\t\t * @example\r\n\t\t * type(null)      === 'Null'\r\n\t\t * type(undefined) === 'Undefined'\r\n\t\t * type(123)       === 'Number'\r\n\t\t * type('foo')     === 'String'\r\n\t\t * type(true)      === 'Boolean'\r\n\t\t * type([1, 2])    === 'Array'\r\n\t\t * type({})        === 'Object'\r\n\t\t * type(String)    === 'Function'\r\n\t\t * type(/abc+/)    === 'RegExp'\r\n\t\t */\r\n\t\ttype: function (o) {\r\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns a unique number for the given object. Later calls will still return the same number.\r\n\t\t *\r\n\t\t * @param {Object} obj\r\n\t\t * @returns {number}\r\n\t\t */\r\n\t\tobjId: function (obj) {\r\n\t\t\tif (!obj['__id']) {\r\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\r\n\t\t\t}\r\n\t\t\treturn obj['__id'];\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Creates a deep clone of the given object.\r\n\t\t *\r\n\t\t * The main intended use of this function is to clone language definitions.\r\n\t\t *\r\n\t\t * @param {T} o\r\n\t\t * @param {Record<number, any>} [visited]\r\n\t\t * @returns {T}\r\n\t\t * @template T\r\n\t\t */\r\n\t\tclone: function deepClone(o, visited) {\r\n\t\t\tvisited = visited || {};\r\n\r\n\t\t\tvar clone, id;\r\n\t\t\tswitch (_.util.type(o)) {\r\n\t\t\t\tcase 'Object':\r\n\t\t\t\t\tid = _.util.objId(o);\r\n\t\t\t\t\tif (visited[id]) {\r\n\t\t\t\t\t\treturn visited[id];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\r\n\t\t\t\t\tvisited[id] = clone;\r\n\r\n\t\t\t\t\tfor (var key in o) {\r\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\r\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn /** @type {any} */ (clone);\r\n\r\n\t\t\t\tcase 'Array':\r\n\t\t\t\t\tid = _.util.objId(o);\r\n\t\t\t\t\tif (visited[id]) {\r\n\t\t\t\t\t\treturn visited[id];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclone = [];\r\n\t\t\t\t\tvisited[id] = clone;\r\n\r\n\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\r\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\treturn /** @type {any} */ (clone);\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn o;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\r\n\t\t *\r\n\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\r\n\t\t *\r\n\t\t * @param {Element} element\r\n\t\t * @returns {string}\r\n\t\t */\r\n\t\tgetLanguage: function (element) {\r\n\t\t\twhile (element && !lang.test(element.className)) {\r\n\t\t\t\telement = element.parentElement;\r\n\t\t\t}\r\n\t\t\tif (element) {\r\n\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\r\n\t\t\t}\r\n\t\t\treturn 'none';\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns the script element that is currently executing.\r\n\t\t *\r\n\t\t * This does __not__ work for line script element.\r\n\t\t *\r\n\t\t * @returns {HTMLScriptElement | null}\r\n\t\t */\r\n\t\tcurrentScript: function () {\r\n\t\t\tif (typeof document === 'undefined') {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\r\n\t\t\t\treturn /** @type {any} */ (document.currentScript);\r\n\t\t\t}\r\n\r\n\t\t\t// IE11 workaround\r\n\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\r\n\t\t\t// this will not work for inline scripts\r\n\r\n\t\t\ttry {\r\n\t\t\t\tthrow new Error();\r\n\t\t\t} catch (err) {\r\n\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\r\n\t\t\t\t// A stack will look like this:\r\n\t\t\t\t//\r\n\t\t\t\t// Error\r\n\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\r\n\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\r\n\r\n\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\r\n\t\t\t\tif (src) {\r\n\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\r\n\t\t\t\t\tfor (var i in scripts) {\r\n\t\t\t\t\t\tif (scripts[i].src == src) {\r\n\t\t\t\t\t\t\treturn scripts[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns whether a given class is active for `element`.\r\n\t\t *\r\n\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\r\n\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\r\n\t\t * given class is just the given class with a `no-` prefix.\r\n\t\t *\r\n\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\r\n\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\r\n\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\r\n\t\t *\r\n\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\r\n\t\t * version of it, the class is considered active.\r\n\t\t *\r\n\t\t * @param {Element} element\r\n\t\t * @param {string} className\r\n\t\t * @param {boolean} [defaultActivation=false]\r\n\t\t * @returns {boolean}\r\n\t\t */\r\n\t\tisActive: function (element, className, defaultActivation) {\r\n\t\t\tvar no = 'no-' + className;\r\n\r\n\t\t\twhile (element) {\r\n\t\t\t\tvar classList = element.classList;\r\n\t\t\t\tif (classList.contains(className)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tif (classList.contains(no)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\telement = element.parentElement;\r\n\t\t\t}\r\n\t\t\treturn !!defaultActivation;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\r\n\t *\r\n\t * @namespace\r\n\t * @memberof Prism\r\n\t * @public\r\n\t */\r\n\tlanguages: {\r\n\t\t/**\r\n\t\t * The grammar for plain, unformatted text.\r\n\t\t */\r\n\t\tplain: plainTextGrammar,\r\n\t\tplaintext: plainTextGrammar,\r\n\t\ttext: plainTextGrammar,\r\n\t\ttxt: plainTextGrammar,\r\n\r\n\t\t/**\r\n\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\r\n\t\t *\r\n\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\r\n\t\t * will be overwritten at its original position.\r\n\t\t *\r\n\t\t * ## Best practices\r\n\t\t *\r\n\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\r\n\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\r\n\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\r\n\t\t *\r\n\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\r\n\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\r\n\t\t *\r\n\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\r\n\t\t * @param {Grammar} redef The new tokens to append.\r\n\t\t * @returns {Grammar} The new language created.\r\n\t\t * @public\r\n\t\t * @example\r\n\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\r\n\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\r\n\t\t *     // at its original position\r\n\t\t *     'comment': { ... },\r\n\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\r\n\t\t *     'color': /\\b(?:red|green|blue)\\b/\r\n\t\t * });\r\n\t\t */\r\n\t\textend: function (id, redef) {\r\n\t\t\tvar lang = _.util.clone(_.languages[id]);\r\n\r\n\t\t\tfor (var key in redef) {\r\n\t\t\t\tlang[key] = redef[key];\r\n\t\t\t}\r\n\r\n\t\t\treturn lang;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\r\n\t\t *\r\n\t\t * ## Usage\r\n\t\t *\r\n\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\r\n\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\r\n\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\r\n\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\r\n\t\t * this:\r\n\t\t *\r\n\t\t * ```js\r\n\t\t * Prism.languages.markup.style = {\r\n\t\t *     // token\r\n\t\t * };\r\n\t\t * ```\r\n\t\t *\r\n\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\r\n\t\t * before existing tokens. For the CSS example above, you would use it like this:\r\n\t\t *\r\n\t\t * ```js\r\n\t\t * Prism.languages.insertBefore('markup', 'cdata', {\r\n\t\t *     'style': {\r\n\t\t *         // token\r\n\t\t *     }\r\n\t\t * });\r\n\t\t * ```\r\n\t\t *\r\n\t\t * ## Special cases\r\n\t\t *\r\n\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\r\n\t\t * will be ignored.\r\n\t\t *\r\n\t\t * This behavior can be used to insert tokens after `before`:\r\n\t\t *\r\n\t\t * ```js\r\n\t\t * Prism.languages.insertBefore('markup', 'comment', {\r\n\t\t *     'comment': Prism.languages.markup.comment,\r\n\t\t *     // tokens after 'comment'\r\n\t\t * });\r\n\t\t * ```\r\n\t\t *\r\n\t\t * ## Limitations\r\n\t\t *\r\n\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\r\n\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\r\n\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\r\n\t\t * deleting properties which is necessary to insert at arbitrary positions.\r\n\t\t *\r\n\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\r\n\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\r\n\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\r\n\t\t *\r\n\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\r\n\t\t * you hold the target object in a variable, then the value of the variable will not change.\r\n\t\t *\r\n\t\t * ```js\r\n\t\t * var oldMarkup = Prism.languages.markup;\r\n\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\r\n\t\t *\r\n\t\t * assert(oldMarkup !== Prism.languages.markup);\r\n\t\t * assert(newMarkup === Prism.languages.markup);\r\n\t\t * ```\r\n\t\t *\r\n\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\r\n\t\t * object to be modified.\r\n\t\t * @param {string} before The key to insert before.\r\n\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\r\n\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\r\n\t\t * object to be modified.\r\n\t\t *\r\n\t\t * Defaults to `Prism.languages`.\r\n\t\t * @returns {Grammar} The new grammar object.\r\n\t\t * @public\r\n\t\t */\r\n\t\tinsertBefore: function (inside, before, insert, root) {\r\n\t\t\troot = root || /** @type {any} */ (_.languages);\r\n\t\t\tvar grammar = root[inside];\r\n\t\t\t/** @type {Grammar} */\r\n\t\t\tvar ret = {};\r\n\r\n\t\t\tfor (var token in grammar) {\r\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\r\n\r\n\t\t\t\t\tif (token == before) {\r\n\t\t\t\t\t\tfor (var newToken in insert) {\r\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\r\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\r\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\r\n\t\t\t\t\t\tret[token] = grammar[token];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar old = root[inside];\r\n\t\t\troot[inside] = ret;\r\n\r\n\t\t\t// Update references in other language definitions\r\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\r\n\t\t\t\tif (value === old && key != inside) {\r\n\t\t\t\t\tthis[key] = ret;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn ret;\r\n\t\t},\r\n\r\n\t\t// Traverse a language definition with Depth First Search\r\n\t\tDFS: function DFS(o, callback, type, visited) {\r\n\t\t\tvisited = visited || {};\r\n\r\n\t\t\tvar objId = _.util.objId;\r\n\r\n\t\t\tfor (var i in o) {\r\n\t\t\t\tif (o.hasOwnProperty(i)) {\r\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\r\n\r\n\t\t\t\t\tvar property = o[i];\r\n\t\t\t\t\tvar propertyType = _.util.type(property);\r\n\r\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\r\n\t\t\t\t\t\tvisited[objId(property)] = true;\r\n\t\t\t\t\t\tDFS(property, callback, null, visited);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\r\n\t\t\t\t\t\tvisited[objId(property)] = true;\r\n\t\t\t\t\t\tDFS(property, callback, i, visited);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tplugins: {},\r\n\r\n\t/**\r\n\t * This is the most high-level function in Prism’s API.\r\n\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\r\n\t * each one of them.\r\n\t *\r\n\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\r\n\t *\r\n\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\r\n\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\r\n\t * @memberof Prism\r\n\t * @public\r\n\t */\r\n\thighlightAll: function(async, callback) {\r\n\t\t_.highlightAllUnder(document, async, callback);\r\n\t},\r\n\r\n\t/**\r\n\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\r\n\t * {@link Prism.highlightElement} on each one of them.\r\n\t *\r\n\t * The following hooks will be run:\r\n\t * 1. `before-highlightall`\r\n\t * 2. `before-all-elements-highlight`\r\n\t * 3. All hooks of {@link Prism.highlightElement} for each element.\r\n\t *\r\n\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\r\n\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\r\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\r\n\t * @memberof Prism\r\n\t * @public\r\n\t */\r\n\thighlightAllUnder: function(container, async, callback) {\r\n\t\tvar env = {\r\n\t\t\tcallback: callback,\r\n\t\t\tcontainer: container,\r\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\r\n\t\t};\r\n\r\n\t\t_.hooks.run('before-highlightall', env);\r\n\r\n\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\r\n\r\n\t\t_.hooks.run('before-all-elements-highlight', env);\r\n\r\n\t\tfor (var i = 0, element; element = env.elements[i++];) {\r\n\t\t\t_.highlightElement(element, async === true, env.callback);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Highlights the code inside a single element.\r\n\t *\r\n\t * The following hooks will be run:\r\n\t * 1. `before-sanity-check`\r\n\t * 2. `before-highlight`\r\n\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\r\n\t * 4. `before-insert`\r\n\t * 5. `after-highlight`\r\n\t * 6. `complete`\r\n\t *\r\n\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\r\n\t * the element's language.\r\n\t *\r\n\t * @param {Element} element The element containing the code.\r\n\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\r\n\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\r\n\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\r\n\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\r\n\t *\r\n\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\r\n\t * asynchronous highlighting to work. You can build your own bundle on the\r\n\t * [Download page](https://prismjs.com/download.html).\r\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\r\n\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\r\n\t * @memberof Prism\r\n\t * @public\r\n\t */\r\n\thighlightElement: function(element, async, callback) {\r\n\t\t// Find language\r\n\t\tvar language = _.util.getLanguage(element);\r\n\t\tvar grammar = _.languages[language];\r\n\r\n\t\t// Set language on the element, if not present\r\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n\r\n\t\t// Set language on the parent, for styling\r\n\t\tvar parent = element.parentElement;\r\n\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\r\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n\t\t}\r\n\r\n\t\tvar code = element.textContent;\r\n\r\n\t\tvar env = {\r\n\t\t\telement: element,\r\n\t\t\tlanguage: language,\r\n\t\t\tgrammar: grammar,\r\n\t\t\tcode: code\r\n\t\t};\r\n\r\n\t\tfunction insertHighlightedCode(highlightedCode) {\r\n\t\t\tenv.highlightedCode = highlightedCode;\r\n\r\n\t\t\t_.hooks.run('before-insert', env);\r\n\r\n\t\t\tenv.element.innerHTML = env.highlightedCode;\r\n\r\n\t\t\t_.hooks.run('after-highlight', env);\r\n\t\t\t_.hooks.run('complete', env);\r\n\t\t\tcallback && callback.call(env.element);\r\n\t\t}\r\n\r\n\t\t_.hooks.run('before-sanity-check', env);\r\n\r\n\t\t// plugins may change/add the parent/element\r\n\t\tparent = env.element.parentElement;\r\n\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\r\n\t\t\tparent.setAttribute('tabindex', '0');\r\n\t\t}\r\n\r\n\t\tif (!env.code) {\r\n\t\t\t_.hooks.run('complete', env);\r\n\t\t\tcallback && callback.call(env.element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t_.hooks.run('before-highlight', env);\r\n\r\n\t\tif (!env.grammar) {\r\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (async && _self.Worker) {\r\n\t\t\tvar worker = new Worker(_.filename);\r\n\r\n\t\t\tworker.onmessage = function(evt) {\r\n\t\t\t\tinsertHighlightedCode(evt.data);\r\n\t\t\t};\r\n\r\n\t\t\tworker.postMessage(JSON.stringify({\r\n\t\t\t\tlanguage: env.language,\r\n\t\t\t\tcode: env.code,\r\n\t\t\t\timmediateClose: true\r\n\t\t\t}));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\r\n\t * and the language definitions to use, and returns a string with the HTML produced.\r\n\t *\r\n\t * The following hooks will be run:\r\n\t * 1. `before-tokenize`\r\n\t * 2. `after-tokenize`\r\n\t * 3. `wrap`: On each {@link Token}.\r\n\t *\r\n\t * @param {string} text A string with the code to be highlighted.\r\n\t * @param {Grammar} grammar An object containing the tokens to use.\r\n\t *\r\n\t * Usually a language definition like `Prism.languages.markup`.\r\n\t * @param {string} language The name of the language definition passed to `grammar`.\r\n\t * @returns {string} The highlighted HTML.\r\n\t * @memberof Prism\r\n\t * @public\r\n\t * @example\r\n\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\r\n\t */\r\n\thighlight: function (text, grammar, language) {\r\n\t\tvar env = {\r\n\t\t\tcode: text,\r\n\t\t\tgrammar: grammar,\r\n\t\t\tlanguage: language\r\n\t\t};\r\n\t\t_.hooks.run('before-tokenize', env);\r\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\r\n\t\t_.hooks.run('after-tokenize', env);\r\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\r\n\t},\r\n\r\n\t/**\r\n\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\r\n\t * and the language definitions to use, and returns an array with the tokenized code.\r\n\t *\r\n\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\r\n\t *\r\n\t * This method could be useful in other contexts as well, as a very crude parser.\r\n\t *\r\n\t * @param {string} text A string with the code to be highlighted.\r\n\t * @param {Grammar} grammar An object containing the tokens to use.\r\n\t *\r\n\t * Usually a language definition like `Prism.languages.markup`.\r\n\t * @returns {TokenStream} An array of strings and tokens, a token stream.\r\n\t * @memberof Prism\r\n\t * @public\r\n\t * @example\r\n\t * let code = `var foo = 0;`;\r\n\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\r\n\t * tokens.forEach(token => {\r\n\t *     if (token instanceof Prism.Token && token.type === 'number') {\r\n\t *         console.log(`Found numeric literal: ${token.content}`);\r\n\t *     }\r\n\t * });\r\n\t */\r\n\ttokenize: function(text, grammar) {\r\n\t\tvar rest = grammar.rest;\r\n\t\tif (rest) {\r\n\t\t\tfor (var token in rest) {\r\n\t\t\t\tgrammar[token] = rest[token];\r\n\t\t\t}\r\n\r\n\t\t\tdelete grammar.rest;\r\n\t\t}\r\n\r\n\t\tvar tokenList = new LinkedList();\r\n\t\taddAfter(tokenList, tokenList.head, text);\r\n\r\n\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\r\n\r\n\t\treturn toArray(tokenList);\r\n\t},\r\n\r\n\t/**\r\n\t * @namespace\r\n\t * @memberof Prism\r\n\t * @public\r\n\t */\r\n\thooks: {\r\n\t\tall: {},\r\n\r\n\t\t/**\r\n\t\t * Adds the given callback to the list of callbacks for the given hook.\r\n\t\t *\r\n\t\t * The callback will be invoked when the hook it is registered for is run.\r\n\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\r\n\t\t *\r\n\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\r\n\t\t *\r\n\t\t * @param {string} name The name of the hook.\r\n\t\t * @param {HookCallback} callback The callback function which is given environment variables.\r\n\t\t * @public\r\n\t\t */\r\n\t\tadd: function (name, callback) {\r\n\t\t\tvar hooks = _.hooks.all;\r\n\r\n\t\t\thooks[name] = hooks[name] || [];\r\n\r\n\t\t\thooks[name].push(callback);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\r\n\t\t *\r\n\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\r\n\t\t *\r\n\t\t * @param {string} name The name of the hook.\r\n\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\r\n\t\t * @public\r\n\t\t */\r\n\t\trun: function (name, env) {\r\n\t\t\tvar callbacks = _.hooks.all[name];\r\n\r\n\t\t\tif (!callbacks || !callbacks.length) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\r\n\t\t\t\tcallback(env);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tToken: Token\r\n};\r\n_self.Prism = _;\r\n\r\n\r\n// Typescript note:\r\n// The following can be used to import the Token type in JSDoc:\r\n//\r\n//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\r\n\r\n/**\r\n * Creates a new token.\r\n *\r\n * @param {string} type See {@link Token#type type}\r\n * @param {string | TokenStream} content See {@link Token#content content}\r\n * @param {string|string[]} [alias] The alias(es) of the token.\r\n * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\r\n * @class\r\n * @global\r\n * @public\r\n */\r\nfunction Token(type, content, alias, matchedStr) {\r\n\t/**\r\n\t * The type of the token.\r\n\t *\r\n\t * This is usually the key of a pattern in a {@link Grammar}.\r\n\t *\r\n\t * @type {string}\r\n\t * @see GrammarToken\r\n\t * @public\r\n\t */\r\n\tthis.type = type;\r\n\t/**\r\n\t * The strings or tokens contained by this token.\r\n\t *\r\n\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\r\n\t *\r\n\t * @type {string | TokenStream}\r\n\t * @public\r\n\t */\r\n\tthis.content = content;\r\n\t/**\r\n\t * The alias(es) of the token.\r\n\t *\r\n\t * @type {string|string[]}\r\n\t * @see GrammarToken\r\n\t * @public\r\n\t */\r\n\tthis.alias = alias;\r\n\t// Copy of the full string this token was created from\r\n\tthis.length = (matchedStr || '').length | 0;\r\n}\r\n\r\n/**\r\n * A token stream is an array of strings and {@link Token Token} objects.\r\n *\r\n * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\r\n * them.\r\n *\r\n * 1. No adjacent strings.\r\n * 2. No empty strings.\r\n *\r\n *    The only exception here is the token stream that only contains the empty string and nothing else.\r\n *\r\n * @typedef {Array<string | Token>} TokenStream\r\n * @global\r\n * @public\r\n */\r\n\r\n/**\r\n * Converts the given token or token stream to an HTML representation.\r\n *\r\n * The following hooks will be run:\r\n * 1. `wrap`: On each {@link Token}.\r\n *\r\n * @param {string | Token | TokenStream} o The token or token stream to be converted.\r\n * @param {string} language The name of current language.\r\n * @returns {string} The HTML representation of the token or token stream.\r\n * @memberof Token\r\n * @static\r\n */\r\nToken.stringify = function stringify(o, language) {\r\n\tif (typeof o == 'string') {\r\n\t\treturn o;\r\n\t}\r\n\tif (Array.isArray(o)) {\r\n\t\tvar s = '';\r\n\t\to.forEach(function (e) {\r\n\t\t\ts += stringify(e, language);\r\n\t\t});\r\n\t\treturn s;\r\n\t}\r\n\r\n\tvar env = {\r\n\t\ttype: o.type,\r\n\t\tcontent: stringify(o.content, language),\r\n\t\ttag: 'span',\r\n\t\tclasses: ['token', o.type],\r\n\t\tattributes: {},\r\n\t\tlanguage: language\r\n\t};\r\n\r\n\tvar aliases = o.alias;\r\n\tif (aliases) {\r\n\t\tif (Array.isArray(aliases)) {\r\n\t\t\tArray.prototype.push.apply(env.classes, aliases);\r\n\t\t} else {\r\n\t\t\tenv.classes.push(aliases);\r\n\t\t}\r\n\t}\r\n\r\n\t_.hooks.run('wrap', env);\r\n\r\n\tvar attributes = '';\r\n\tfor (var name in env.attributes) {\r\n\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\r\n\t}\r\n\r\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\r\n};\r\n\r\n/**\r\n * @param {RegExp} pattern\r\n * @param {number} pos\r\n * @param {string} text\r\n * @param {boolean} lookbehind\r\n * @returns {RegExpExecArray | null}\r\n */\r\nfunction matchPattern(pattern, pos, text, lookbehind) {\r\n\tpattern.lastIndex = pos;\r\n\tvar match = pattern.exec(text);\r\n\tif (match && lookbehind && match[1]) {\r\n\t\t// change the match to remove the text matched by the Prism lookbehind group\r\n\t\tvar lookbehindLength = match[1].length;\r\n\t\tmatch.index += lookbehindLength;\r\n\t\tmatch[0] = match[0].slice(lookbehindLength);\r\n\t}\r\n\treturn match;\r\n}\r\n\r\n/**\r\n * @param {string} text\r\n * @param {LinkedList<string | Token>} tokenList\r\n * @param {any} grammar\r\n * @param {LinkedListNode<string | Token>} startNode\r\n * @param {number} startPos\r\n * @param {RematchOptions} [rematch]\r\n * @returns {void}\r\n * @private\r\n *\r\n * @typedef RematchOptions\r\n * @property {string} cause\r\n * @property {number} reach\r\n */\r\nfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\r\n\tfor (var token in grammar) {\r\n\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tvar patterns = grammar[token];\r\n\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\r\n\r\n\t\tfor (var j = 0; j < patterns.length; ++j) {\r\n\t\t\tif (rematch && rematch.cause == token + ',' + j) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar patternObj = patterns[j],\r\n\t\t\t\tinside = patternObj.inside,\r\n\t\t\t\tlookbehind = !!patternObj.lookbehind,\r\n\t\t\t\tgreedy = !!patternObj.greedy,\r\n\t\t\t\talias = patternObj.alias;\r\n\r\n\t\t\tif (greedy && !patternObj.pattern.global) {\r\n\t\t\t\t// Without the global flag, lastIndex won't work\r\n\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\r\n\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\r\n\t\t\t}\r\n\r\n\t\t\t/** @type {RegExp} */\r\n\t\t\tvar pattern = patternObj.pattern || patternObj;\r\n\r\n\t\t\tfor ( // iterate the token list and keep track of the current token/string position\r\n\t\t\t\tvar currentNode = startNode.next, pos = startPos;\r\n\t\t\t\tcurrentNode !== tokenList.tail;\r\n\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\r\n\t\t\t) {\r\n\r\n\t\t\t\tif (rematch && pos >= rematch.reach) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar str = currentNode.value;\r\n\r\n\t\t\t\tif (tokenList.length > text.length) {\r\n\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (str instanceof Token) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\r\n\t\t\t\tvar match;\r\n\r\n\t\t\t\tif (greedy) {\r\n\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\r\n\t\t\t\t\tif (!match) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar from = match.index;\r\n\t\t\t\t\tvar to = match.index + match[0].length;\r\n\t\t\t\t\tvar p = pos;\r\n\r\n\t\t\t\t\t// find the node that contains the match\r\n\t\t\t\t\tp += currentNode.value.length;\r\n\t\t\t\t\twhile (from >= p) {\r\n\t\t\t\t\t\tcurrentNode = currentNode.next;\r\n\t\t\t\t\t\tp += currentNode.value.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// adjust pos (and p)\r\n\t\t\t\t\tp -= currentNode.value.length;\r\n\t\t\t\t\tpos = p;\r\n\r\n\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\r\n\t\t\t\t\tif (currentNode.value instanceof Token) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// find the last node which is affected by this match\r\n\t\t\t\t\tfor (\r\n\t\t\t\t\t\tvar k = currentNode;\r\n\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\r\n\t\t\t\t\t\tk = k.next\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tremoveCount++;\r\n\t\t\t\t\t\tp += k.value.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tremoveCount--;\r\n\r\n\t\t\t\t\t// replace with the new match\r\n\t\t\t\t\tstr = text.slice(pos, p);\r\n\t\t\t\t\tmatch.index -= pos;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\r\n\t\t\t\t\tif (!match) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// eslint-disable-next-line no-redeclare\r\n\t\t\t\tvar from = match.index,\r\n\t\t\t\t\tmatchStr = match[0],\r\n\t\t\t\t\tbefore = str.slice(0, from),\r\n\t\t\t\t\tafter = str.slice(from + matchStr.length);\r\n\r\n\t\t\t\tvar reach = pos + str.length;\r\n\t\t\t\tif (rematch && reach > rematch.reach) {\r\n\t\t\t\t\trematch.reach = reach;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar removeFrom = currentNode.prev;\r\n\r\n\t\t\t\tif (before) {\r\n\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\r\n\t\t\t\t\tpos += before.length;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\r\n\r\n\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\r\n\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\r\n\r\n\t\t\t\tif (after) {\r\n\t\t\t\t\taddAfter(tokenList, currentNode, after);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (removeCount > 1) {\r\n\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\r\n\t\t\t\t\t// this can only happen if the current pattern is greedy\r\n\r\n\t\t\t\t\t/** @type {RematchOptions} */\r\n\t\t\t\t\tvar nestedRematch = {\r\n\t\t\t\t\t\tcause: token + ',' + j,\r\n\t\t\t\t\t\treach: reach\r\n\t\t\t\t\t};\r\n\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\r\n\r\n\t\t\t\t\t// the reach might have been extended because of the rematching\r\n\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\r\n\t\t\t\t\t\trematch.reach = nestedRematch.reach;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @typedef LinkedListNode\r\n * @property {T} value\r\n * @property {LinkedListNode<T> | null} prev The previous node.\r\n * @property {LinkedListNode<T> | null} next The next node.\r\n * @template T\r\n * @private\r\n */\r\n\r\n/**\r\n * @template T\r\n * @private\r\n */\r\nfunction LinkedList() {\r\n\t/** @type {LinkedListNode<T>} */\r\n\tvar head = { value: null, prev: null, next: null };\r\n\t/** @type {LinkedListNode<T>} */\r\n\tvar tail = { value: null, prev: head, next: null };\r\n\thead.next = tail;\r\n\r\n\t/** @type {LinkedListNode<T>} */\r\n\tthis.head = head;\r\n\t/** @type {LinkedListNode<T>} */\r\n\tthis.tail = tail;\r\n\tthis.length = 0;\r\n}\r\n\r\n/**\r\n * Adds a new node with the given value to the list.\r\n * @param {LinkedList<T>} list\r\n * @param {LinkedListNode<T>} node\r\n * @param {T} value\r\n * @returns {LinkedListNode<T>} The added node.\r\n * @template T\r\n */\r\nfunction addAfter(list, node, value) {\r\n\t// assumes that node != list.tail && values.length >= 0\r\n\tvar next = node.next;\r\n\r\n\tvar newNode = { value: value, prev: node, next: next };\r\n\tnode.next = newNode;\r\n\tnext.prev = newNode;\r\n\tlist.length++;\r\n\r\n\treturn newNode;\r\n}\r\n/**\r\n * Removes `count` nodes after the given node. The given node will not be removed.\r\n * @param {LinkedList<T>} list\r\n * @param {LinkedListNode<T>} node\r\n * @param {number} count\r\n * @template T\r\n */\r\nfunction removeRange(list, node, count) {\r\n\tvar next = node.next;\r\n\tfor (var i = 0; i < count && next !== list.tail; i++) {\r\n\t\tnext = next.next;\r\n\t}\r\n\tnode.next = next;\r\n\tnext.prev = node;\r\n\tlist.length -= i;\r\n}\r\n/**\r\n * @param {LinkedList<T>} list\r\n * @returns {T[]}\r\n * @template T\r\n */\r\nfunction toArray(list) {\r\n\tvar array = [];\r\n\tvar node = list.head.next;\r\n\twhile (node !== list.tail) {\r\n\t\tarray.push(node.value);\r\n\t\tnode = node.next;\r\n\t}\r\n\treturn array;\r\n}\r\n\r\n\r\nif (!_self.document) {\r\n\tif (!_self.addEventListener) {\r\n\t\t// in Node.js\r\n\t\treturn _;\r\n\t}\r\n\r\n\tif (!_.disableWorkerMessageHandler) {\r\n\t\t// In worker\r\n\t\t_self.addEventListener('message', function (evt) {\r\n\t\t\tvar message = JSON.parse(evt.data),\r\n\t\t\t\tlang = message.language,\r\n\t\t\t\tcode = message.code,\r\n\t\t\t\timmediateClose = message.immediateClose;\r\n\r\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\r\n\t\t\tif (immediateClose) {\r\n\t\t\t\t_self.close();\r\n\t\t\t}\r\n\t\t}, false);\r\n\t}\r\n\r\n\treturn _;\r\n}\r\n\r\n// Get current script and highlight\r\nvar script = _.util.currentScript();\r\n\r\nif (script) {\r\n\t_.filename = script.src;\r\n\r\n\tif (script.hasAttribute('data-manual')) {\r\n\t\t_.manual = true;\r\n\t}\r\n}\r\n\r\nfunction highlightAutomaticallyCallback() {\r\n\tif (!_.manual) {\r\n\t\t_.highlightAll();\r\n\t}\r\n}\r\n\r\nif (!_.manual) {\r\n\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\r\n\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\r\n\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\r\n\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\r\n\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\r\n\t// See https://github.com/PrismJS/prism/issues/2102\r\n\tvar readyState = document.readyState;\r\n\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\r\n\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\r\n\t} else {\r\n\t\tif (window.requestAnimationFrame) {\r\n\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nreturn _;\r\n\r\n})(_self);\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n\tmodule.exports = Prism;\r\n}\r\n\r\n// hack for components to work correctly in node.js\r\nif (typeof global !== 'undefined') {\r\n\tglobal.Prism = Prism;\r\n}\r\n\r\n// some additional documentation/types\r\n\r\n/**\r\n * The expansion of a simple `RegExp` literal to support additional properties.\r\n *\r\n * @typedef GrammarToken\r\n * @property {RegExp} pattern The regular expression of the token.\r\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\r\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\r\n * @property {boolean} [greedy=false] Whether the token is greedy.\r\n * @property {string|string[]} [alias] An optional alias or list of aliases.\r\n * @property {Grammar} [inside] The nested grammar of this token.\r\n *\r\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\r\n *\r\n * This can be used to make nested and even recursive language definitions.\r\n *\r\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\r\n * each another.\r\n * @global\r\n * @public\r\n*/\r\n\r\n/**\r\n * @typedef Grammar\r\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\r\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\r\n * @global\r\n * @public\r\n */\r\n\r\n/**\r\n * A function which will invoked after an element was successfully highlighted.\r\n *\r\n * @callback HighlightCallback\r\n * @param {Element} element The element successfully highlighted.\r\n * @returns {void}\r\n * @global\r\n * @public\r\n*/\r\n\r\n/**\r\n * @callback HookCallback\r\n * @param {Object<string, any>} env The environment variables of the hook.\r\n * @returns {void}\r\n * @global\r\n * @public\r\n */\r\n;\r\nPrism.languages.markup = {\r\n\t'comment': /<!--[\\s\\S]*?-->/,\r\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\r\n\t'doctype': {\r\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\r\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\r\n\t\tgreedy: true,\r\n\t\tinside: {\r\n\t\t\t'internal-subset': {\r\n\t\t\t\tpattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tgreedy: true,\r\n\t\t\t\tinside: null // see below\r\n\t\t\t},\r\n\t\t\t'string': {\r\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\r\n\t\t\t\tgreedy: true\r\n\t\t\t},\r\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\r\n\t\t\t'doctype-tag': /^DOCTYPE/,\r\n\t\t\t'name': /[^\\s<>'\"]+/\r\n\t\t}\r\n\t},\r\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\r\n\t'tag': {\r\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\r\n\t\tgreedy: true,\r\n\t\tinside: {\r\n\t\t\t'tag': {\r\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': /^<\\/?/,\r\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'special-attr': [],\r\n\t\t\t'attr-value': {\r\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpattern: /^=/,\r\n\t\t\t\t\t\t\talias: 'attr-equals'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t/\"|'/\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'punctuation': /\\/?>/,\r\n\t\t\t'attr-name': {\r\n\t\t\t\tpattern: /[^\\s>\\/]+/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t},\r\n\t'entity': [\r\n\t\t{\r\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\r\n\t\t\talias: 'named-entity'\r\n\t\t},\r\n\t\t/&#x?[\\da-f]{1,8};/i\r\n\t]\r\n};\r\n\r\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\r\n\tPrism.languages.markup['entity'];\r\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\r\n\r\n// Plugin to make entity title show the real entity, idea by Roman Komarov\r\nPrism.hooks.add('wrap', function (env) {\r\n\r\n\tif (env.type === 'entity') {\r\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\r\n\t}\r\n});\r\n\r\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\r\n\t/**\r\n\t * Adds an inlined language to markup.\r\n\t *\r\n\t * An example of an inlined language is CSS with `<style>` tags.\r\n\t *\r\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\r\n\t * case insensitive.\r\n\t * @param {string} lang The language key.\r\n\t * @example\r\n\t * addInlined('style', 'css');\r\n\t */\r\n\tvalue: function addInlined(tagName, lang) {\r\n\t\tvar includedCdataInside = {};\r\n\t\tincludedCdataInside['language-' + lang] = {\r\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: Prism.languages[lang]\r\n\t\t};\r\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\r\n\r\n\t\tvar inside = {\r\n\t\t\t'included-cdata': {\r\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\r\n\t\t\t\tinside: includedCdataInside\r\n\t\t\t}\r\n\t\t};\r\n\t\tinside['language-' + lang] = {\r\n\t\t\tpattern: /[\\s\\S]+/,\r\n\t\t\tinside: Prism.languages[lang]\r\n\t\t};\r\n\r\n\t\tvar def = {};\r\n\t\tdef[tagName] = {\r\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: inside\r\n\t\t};\r\n\r\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\r\n\t}\r\n});\r\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\r\n\t/**\r\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\r\n\t *\r\n\t * An example of an inlined language is CSS with `style` attributes.\r\n\t *\r\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\r\n\t * case insensitive.\r\n\t * @param {string} lang The language key.\r\n\t * @example\r\n\t * addAttribute('style', 'css');\r\n\t */\r\n\tvalue: function (attrName, lang) {\r\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\r\n\t\t\tpattern: RegExp(\r\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\r\n\t\t\t\t'i'\r\n\t\t\t),\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'attr-name': /^[^\\s=]+/,\r\n\t\t\t\t'attr-value': {\r\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'value': {\r\n\t\t\t\t\t\t\tpattern: /(=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\r\n\t\t\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\r\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'punctuation': [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpattern: /^=/,\r\n\t\t\t\t\t\t\t\talias: 'attr-equals'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t/\"|'/\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n});\r\n\r\nPrism.languages.html = Prism.languages.markup;\r\nPrism.languages.mathml = Prism.languages.markup;\r\nPrism.languages.svg = Prism.languages.markup;\r\n\r\nPrism.languages.xml = Prism.languages.extend('markup', {});\r\nPrism.languages.ssml = Prism.languages.xml;\r\nPrism.languages.atom = Prism.languages.xml;\r\nPrism.languages.rss = Prism.languages.xml;\r\n\r\n(function (Prism) {\r\n\r\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\r\n\r\n\tPrism.languages.css = {\r\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\r\n\t\t'atrule': {\r\n\t\t\tpattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\r\n\t\t\tinside: {\r\n\t\t\t\t'rule': /^@[\\w-]+/,\r\n\t\t\t\t'selector-function-argument': {\r\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\r\n\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\talias: 'selector'\r\n\t\t\t\t},\r\n\t\t\t\t'keyword': {\r\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\r\n\t\t\t\t\tlookbehind: true\r\n\t\t\t\t}\r\n\t\t\t\t// See rest below\r\n\t\t\t}\r\n\t\t},\r\n\t\t'url': {\r\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\r\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'function': /^url/i,\r\n\t\t\t\t'punctuation': /^\\(|\\)$/,\r\n\t\t\t\t'string': {\r\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\r\n\t\t\t\t\talias: 'url'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\r\n\t\t'string': {\r\n\t\t\tpattern: string,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t'property': /(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\r\n\t\t'important': /!important\\b/i,\r\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\r\n\t\t'punctuation': /[(){};:,]/\r\n\t};\r\n\r\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\r\n\r\n\tvar markup = Prism.languages.markup;\r\n\tif (markup) {\r\n\t\tmarkup.tag.addInlined('style', 'css');\r\n\t\tmarkup.tag.addAttribute('style', 'css');\r\n\t}\r\n\r\n}(Prism));\r\n\r\nPrism.languages.clike = {\r\n\t'comment': [\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true\r\n\t\t}\r\n\t],\r\n\t'string': {\r\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'class-name': {\r\n\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'punctuation': /[.\\\\]/\r\n\t\t}\r\n\t},\r\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\r\n\t'boolean': /\\b(?:true|false)\\b/,\r\n\t'function': /\\w+(?=\\()/,\r\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\r\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\r\n\t'punctuation': /[{}[\\];(),.:]/\r\n};\r\n\r\nPrism.languages.javascript = Prism.languages.extend('clike', {\r\n\t'class-name': [\r\n\t\tPrism.languages.clike['class-name'],\r\n\t\t{\r\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'keyword': [\r\n\t\t{\r\n\t\t\tpattern: /((?:^|})\\s*)catch\\b/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t],\r\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\r\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\r\n\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\r\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\r\n});\r\n\r\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\r\n\r\nPrism.languages.insertBefore('javascript', 'keyword', {\r\n\t'regex': {\r\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\r\n\t\tlookbehind: true,\r\n\t\tgreedy: true,\r\n\t\tinside: {\r\n\t\t\t'regex-source': {\r\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\talias: 'language-regex',\r\n\t\t\t\tinside: Prism.languages.regex\r\n\t\t\t},\r\n\t\t\t'regex-flags': /[a-z]+$/,\r\n\t\t\t'regex-delimiter': /^\\/|\\/$/\r\n\t\t}\r\n\t},\r\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\r\n\t'function-variable': {\r\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\r\n\t\talias: 'function'\r\n\t},\r\n\t'parameter': [\r\n\t\t{\r\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: Prism.languages.javascript\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\r\n\t\t\tinside: Prism.languages.javascript\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: Prism.languages.javascript\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: Prism.languages.javascript\r\n\t\t}\r\n\t],\r\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\r\n});\r\n\r\nPrism.languages.insertBefore('javascript', 'string', {\r\n\t'hashbang': {\r\n\t\tpattern: /^#!.*/,\r\n\t\tgreedy: true,\r\n\t\talias: 'comment'\r\n\t},\r\n\t'template-string': {\r\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\r\n\t\tgreedy: true,\r\n\t\tinside: {\r\n\t\t\t'template-punctuation': {\r\n\t\t\t\tpattern: /^`|`$/,\r\n\t\t\t\talias: 'string'\r\n\t\t\t},\r\n\t\t\t'interpolation': {\r\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'interpolation-punctuation': {\r\n\t\t\t\t\t\tpattern: /^\\${|}$/,\r\n\t\t\t\t\t\talias: 'punctuation'\r\n\t\t\t\t\t},\r\n\t\t\t\t\trest: Prism.languages.javascript\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'string': /[\\s\\S]+/\r\n\t\t}\r\n\t}\r\n});\r\n\r\nif (Prism.languages.markup) {\r\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\r\n\r\n\t// add attribute support for all DOM events.\r\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\r\n\tPrism.languages.markup.tag.addAttribute(\r\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\r\n\t\t'javascript'\r\n\t);\r\n}\r\n\r\nPrism.languages.js = Prism.languages.javascript;\r\n\r\n(function(){\r\n\r\nif (typeof Prism === 'undefined') {\r\n\treturn;\r\n}\r\n\r\nvar url = /\\b([a-z]{3,7}:\\/\\/|tel:)[\\w\\-+%~/.:=&@]+(?:\\?[\\w\\-+%~/.:=?&!$'()*,;@]*)?(?:#[\\w\\-+%~/.:#=?&!$'()*,;@]*)?/,\r\n    email = /\\b\\S+@[\\w.]+[a-z]{2}/,\r\n    linkMd = /\\[([^\\]]+)]\\(([^)]+)\\)/,\r\n\r\n\t// Tokens that may contain URLs and emails\r\n    candidates = ['comment', 'url', 'attr-value', 'string'];\r\n\r\nPrism.plugins.autolinker = {\r\n\tprocessGrammar: function (grammar) {\r\n\t\t// Abort if grammar has already been processed\r\n\t\tif (!grammar || grammar['url-link']) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tPrism.languages.DFS(grammar, function (key, def, type) {\r\n\t\t\tif (candidates.indexOf(type) > -1 && !Array.isArray(def)) {\r\n\t\t\t\tif (!def.pattern) {\r\n\t\t\t\t\tdef = this[key] = {\r\n\t\t\t\t\t\tpattern: def\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdef.inside = def.inside || {};\r\n\r\n\t\t\t\tif (type == 'comment') {\r\n\t\t\t\t\tdef.inside['md-link'] = linkMd;\r\n\t\t\t\t}\r\n\t\t\t\tif (type == 'attr-value') {\r\n\t\t\t\t\tPrism.languages.insertBefore('inside', 'punctuation', { 'url-link': url }, def);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdef.inside['url-link'] = url;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdef.inside['email-link'] = email;\r\n\t\t\t}\r\n\t\t});\r\n\t\tgrammar['url-link'] = url;\r\n\t\tgrammar['email-link'] = email;\r\n\t}\r\n};\r\n\r\nPrism.hooks.add('before-highlight', function(env) {\r\n\tPrism.plugins.autolinker.processGrammar(env.grammar);\r\n});\r\n\r\nPrism.hooks.add('wrap', function(env) {\r\n\tif (/-link$/.test(env.type)) {\r\n\t\tenv.tag = 'a';\r\n\r\n\t\tvar href = env.content;\r\n\r\n\t\tif (env.type == 'email-link' && href.indexOf('mailto:') != 0) {\r\n\t\t\thref = 'mailto:' + href;\r\n\t\t}\r\n\t\telse if (env.type == 'md-link') {\r\n\t\t\t// Markdown\r\n\t\t\tvar match = env.content.match(linkMd);\r\n\r\n\t\t\thref = match[2];\r\n\t\t\tenv.content = match[1];\r\n\t\t}\r\n\r\n\t\tenv.attributes.href = href;\r\n\r\n\t\t// Silently catch any error thrown by decodeURIComponent (#1186)\r\n\t\ttry {\r\n\t\t\tenv.content = decodeURIComponent(env.content);\r\n\t\t} catch(e) { /* noop */ }\r\n\t}\r\n});\r\n\r\n})();\r\n\r\n(function () {\r\n\r\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\r\n\tif (!Element.prototype.matches) {\r\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\r\n\t}\r\n\r\n\tvar LOADING_MESSAGE = 'Loading…';\r\n\tvar FAILURE_MESSAGE = function (status, message) {\r\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\r\n\t};\r\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\r\n\r\n\tvar EXTENSIONS = {\r\n\t\t'js': 'javascript',\r\n\t\t'py': 'python',\r\n\t\t'rb': 'ruby',\r\n\t\t'ps1': 'powershell',\r\n\t\t'psm1': 'powershell',\r\n\t\t'sh': 'bash',\r\n\t\t'bat': 'batch',\r\n\t\t'h': 'c',\r\n\t\t'tex': 'latex'\r\n\t};\r\n\r\n\tvar STATUS_ATTR = 'data-src-status';\r\n\tvar STATUS_LOADING = 'loading';\r\n\tvar STATUS_LOADED = 'loaded';\r\n\tvar STATUS_FAILED = 'failed';\r\n\r\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\r\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\r\n\r\n\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\r\n\r\n\t/**\r\n\t * Sets the Prism `language-xxxx` or `lang-xxxx` class to the given language.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t * @param {string} language\r\n\t * @returns {void}\r\n\t */\r\n\tfunction setLanguageClass(element, language) {\r\n\t\tvar className = element.className;\r\n\t\tclassName = className.replace(lang, ' ') + ' language-' + language;\r\n\t\telement.className = className.replace(/\\s+/g, ' ').trim();\r\n\t}\r\n\r\n\r\n\tPrism.hooks.add('before-highlightall', function (env) {\r\n\t\tenv.selector += ', ' + SELECTOR;\r\n\t});\r\n\r\n\tPrism.hooks.add('before-sanity-check', function (env) {\r\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\r\n\t\tif (pre.matches(SELECTOR)) {\r\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\r\n\r\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\r\n\r\n\t\t\t// add code element with loading message\r\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\r\n\t\t\tcode.textContent = LOADING_MESSAGE;\r\n\r\n\t\t\tvar src = pre.getAttribute('data-src');\r\n\r\n\t\t\tvar language = env.language;\r\n\t\t\tif (language === 'none') {\r\n\t\t\t\t// the language might be 'none' because there is no language set;\r\n\t\t\t\t// in this case, we want to use the extension as the language\r\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\r\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\r\n\t\t\t}\r\n\r\n\t\t\t// set language classes\r\n\t\t\tsetLanguageClass(code, language);\r\n\t\t\tsetLanguageClass(pre, language);\r\n\r\n\t\t\t// preload the language\r\n\t\t\tvar autoloader = Prism.plugins.autoloader;\r\n\t\t\tif (autoloader) {\r\n\t\t\t\tautoloader.loadLanguages(language);\r\n\t\t\t}\r\n\r\n\t\t\t// load file\r\n\t\t\tvar xhr = new XMLHttpRequest();\r\n\t\t\txhr.open('GET', src, true);\r\n\t\t\txhr.onreadystatechange = function () {\r\n\t\t\t\tif (xhr.readyState == 4) {\r\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\r\n\t\t\t\t\t\t// mark as loaded\r\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\r\n\r\n\t\t\t\t\t\t// highlight code\r\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\r\n\t\t\t\t\t\tPrism.highlightElement(code);\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// mark as failed\r\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\r\n\r\n\t\t\t\t\t\tif (xhr.status >= 400) {\r\n\t\t\t\t\t\t\tcode.textContent = FAILURE_MESSAGE(xhr.status, xhr.statusText);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcode.textContent = FAILURE_EMPTY_MESSAGE;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\txhr.send(null);\r\n\t\t}\r\n\t});\r\n\r\n\tPrism.plugins.fileHighlight = {\r\n\t\t/**\r\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\r\n\t\t *\r\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\r\n\t\t *\r\n\t\t * @param {ParentNode} [container=document]\r\n\t\t */\r\n\t\thighlight: function highlight(container) {\r\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\r\n\r\n\t\t\tfor (var i = 0, element; element = elements[i++];) {\r\n\t\t\t\tPrism.highlightElement(element);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar logged = false;\r\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\r\n\tPrism.fileHighlight = function () {\r\n\t\tif (!logged) {\r\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\r\n\t\t\tlogged = true;\r\n\t\t}\r\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\r\n\t}\r\n\r\n})();\r\n\r\n",
        "children": [],
        "fileType": "file",
        "_id": "617489ae3a01890024662b33",
        "isSelectedFile": false,
        "updatedAt": "2021-10-23T23:02:32.808Z",
        "createdAt": "2021-10-23T23:02:32.808Z",
        "id": "617489ae3a01890024662b33"
      },
      {
        "name": "loader.js",
        "content": "function fadeOutLoadingScreen() {\r\n  // grab the loader element from the DOM\r\n  let loadingScreen = document.getElementById(\"loading-screen\");\r\n\r\n  // fade out the loader\r\n  loadingScreen.classList.add(\"fade-out\");\r\n\r\n  // optional: remove loader from DOM via event listener\r\n  loadingScreen.addEventListener(\"transitionend\", () => {\r\n    const element = event.target;\r\n    element.remove();\r\n  });\r\n}\r\n",
        "children": [],
        "fileType": "file",
        "_id": "617489ed3a01890024662be0",
        "isSelectedFile": false,
        "updatedAt": "2021-10-23T23:02:32.808Z",
        "createdAt": "2021-10-23T23:02:32.808Z",
        "id": "617489ed3a01890024662be0"
      },
      {
        "name": "utils.js",
        "content": "function showFPS() {\n  let w = 110;\n  let h = 20;\n  let fps = frameRate();\n  let x = w / 2;\n  let y = height;\n  rectMode(CENTER);\n  fill(255);\n  textSize(16);\n  textFont(font);\n  fill(\"black\");\n  noStroke();\n  rect(x + 5, y - (h / 2 + 5), w, h);\n  strokeWeight(20);\n  fill(\"white\");\n  text(\"FPS: \" + fps.toFixed(2), x - w / 2 + 10, y - 10);\n}\n\nfunction toggleButtonVisible(isButtonHidden) {\n  let button = document.querySelector(\"button\");\n  if (isButtonHidden) {\n    button.style.display = \"none\";\n  } else {\n    button.style.display = \"block\";\n  }\n}\n\nfunction setDimensions() {\n  // This is how we constrain the canvas to the smallest dimension of the window\n  canvasSize = min(windowWidth, windowHeight);\n  if (hasMaxSize) {\n    canvasSize = min(referenceSize, canvasSize);\n  }\n  // windowScale goes from 0.0 to 1.0 as canvasSize goes from 0.0 to referenceSize\n  // if hasMaxSize is set to true, it will be clamped to 1.0 otherwise it keeps growing over 1.0\n  windowScale = map(canvasSize, 0, referenceSize, 0, 1, hasMaxSize);\n}\n\nfunction centerCanvas() {\n  var s = document.body.style;\n  s.display = \"flex\";\n  s.overflow = \"hidden\";\n  s.height = \"100vh\";\n  s.alignItems = \"center\";\n  s.justifyContent = \"center\";\n}\n\nfunction distSquared(x1, y1, x2, y2) {\n  let dx = x2 - x1;\n  let dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\nfunction resizeGraphics(pg) {\n  let newPG = createGraphics(pg.width, pg.height);\n  pg.canvas.remove();\n  newPG.image(pg, 0, 0, newPG.width, newPG.height);\n  return newPG;\n}\n\n// **************************\n// *         INPUT          *\n// **************************\n\n// http://keycode.info/\n\nfunction keyPressed() {\n  if (mouseIsPressed) {\n    if (keyCode === 68) {\n      if (!isDebug) {\n        isDebug = true;\n        console.log(\"debug mode ON\");\n      } else {\n        isDebug = false;\n        console.log(\"debug mode OFF\");\n      }\n    }\n    if (keyCode === 66) {\n      if (!isButtonHidden) {\n        isButtonHidden = true;\n        toggleButtonVisible(isButtonHidden);\n        console.log(\"hiding the button\");\n      } else {\n        isButtonHidden = false;\n        toggleButtonVisible(isButtonHidden);\n        console.log(\"showing the button\");\n      }\n    }\n    if (keyCode === 83) {\n      saveCanvas();\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "617489f186817300241d5faa",
        "isSelectedFile": false,
        "updatedAt": "2021-10-23T23:02:32.808Z",
        "createdAt": "2021-10-23T23:02:32.808Z",
        "id": "617489f186817300241d5faa"
      },
      {
        "name": "script.js",
        "content": "/**\n * NOTE:\n * Please read the README.md file provided in this template.\n */\n\n// If you want to create OBJKT's with different seeds, you can access the creator and viewer wallet ids. This values will only be injected once the piece has been minted\n// they will not work locally.\n// if the user is not sync, the viewer comes in as false\nconst creator = new URLSearchParams(window.location.search).get(\"creator\");\nconst viewer = new URLSearchParams(window.location.search).get(\"viewer\");\n\nconsole.log(\"NFT created by\", creator);\nconsole.log(\"NFT viewed by\", viewer);\n\n// Dont forget to add your own resize handler. hicetnunc expects to get content in the whole width and heght\n// const resize = () => {\n//     console.log('resize')\n// }\n// window.addEventListener('resize', resize);\n\nfunction toggleCode() {\n  let viewer = document.getElementById(\"code-container\");\n  let button = document.querySelector(\"button\");\n\n  if (viewer.classList.contains(\"show\")) {\n    viewer.classList.replace(\"show\", \"hide\");\n    button.firstChild.data = \"<>\";\n  } else {\n    viewer.classList.replace(\"hide\", \"show\");\n    button.firstChild.data = \"><\";\n  }\n}\n\n// the keyboardNav class is used to show\n// accessibility highlights only if tabbing is detected\nfunction detectKeyboardUser(e) {\n  if (e.keyCode === 9) {\n    document.body.classList.add(\"keyboardNav\");\n    window.removeEventListener(\"keydown\", detectKeyboardUser);\n  }\n}\nwindow.addEventListener(\"keydown\", detectKeyboardUser);\n",
        "children": [],
        "fileType": "file",
        "_id": "61748a123a01890024662c16",
        "isSelectedFile": false,
        "updatedAt": "2021-10-23T23:02:32.808Z",
        "createdAt": "2021-10-23T23:02:32.808Z",
        "id": "61748a123a01890024662c16"
      },
      {
        "name": "loader.css",
        "content": "#loading-screen {\r\n  position: absolute;\r\n  z-index: 2;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: white;\r\n  opacity: 1;\r\n  transition: 1s opacity;\r\n}\r\n\r\n#loading-screen.fade-out {\r\n  opacity: 0;\r\n}\r\n\r\n#loader {\r\n  display: block;\r\n  position: relative;\r\n  left: 50%;\r\n  top: 50%;\r\n  width: 150px;\r\n  height: 150px;\r\n  margin: -75px 0 0 -75px;\r\n  border-radius: 50%;\r\n  border: 3px solid transparent;\r\n  border-top-color: #000;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n}\r\n#loader:before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 5px;\r\n  left: 5px;\r\n  right: 5px;\r\n  bottom: 5px;\r\n  border-radius: 50%;\r\n  border: 3px solid transparent;\r\n  border-top-color: #000;\r\n  -webkit-animation: spin 3s linear infinite;\r\n  animation: spin 3s linear infinite;\r\n}\r\n#loader:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 15px;\r\n  left: 15px;\r\n  right: 15px;\r\n  bottom: 15px;\r\n  border-radius: 50%;\r\n  border: 3px solid transparent;\r\n  border-top-color: #000;\r\n  -webkit-animation: spin 1.5s linear infinite;\r\n  animation: spin 1.5s linear infinite;\r\n}\r\n@-webkit-keyframes spin {\r\n  0%   {\r\n    -webkit-transform: rotate(0deg);\r\n    -ms-transform: rotate(0deg);\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    -webkit-transform: rotate(360deg);\r\n    -ms-transform: rotate(360deg);\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n@keyframes spin {\r\n  0%   {\r\n    -webkit-transform: rotate(0deg);\r\n    -ms-transform: rotate(0deg);\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    -webkit-transform: rotate(360deg);\r\n    -ms-transform: rotate(360deg);\r\n    transform: rotate(360deg);\r\n  }\r\n}",
        "children": [],
        "fileType": "file",
        "_id": "61748a783a01890024662cab",
        "updatedAt": "2021-10-23T23:02:32.808Z",
        "createdAt": "2021-10-23T23:02:32.808Z",
        "isSelectedFile": false,
        "id": "61748a783a01890024662cab"
      },
      {
        "name": "style.css",
        "content": "html,\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n}\r\n\r\n* {\r\n  -webkit-box-sizing: border-box;\r\n  box-sizing: border-box;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  -webkit-font-smoothing: antialiased;\r\n  -webkit-tap-highlight-color: transparent;\r\n  -webkit-touch-callout: none;\r\n}\r\n\r\n.p5canvas {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n}\r\n\r\n#code-container {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  padding: .5em;\r\n  background-color:#d6d6d6;\r\n}\r\n\r\n#source-viewer {\r\n  font-size:max(0.65em, min(1em, 2.333vw));\r\n  height: 100%;\r\n}\r\n\r\nbutton {\r\n  background-color: #000;\r\n  color:#fff;\r\n  position:absolute;\r\n  cursor: pointer;\r\n  right:6px;\r\n  top:6px;\r\n  margin:0;\r\n  border:0;\r\n  padding:4px;\r\n  text-align:right;\r\n  font-size: 16px;\r\n  text-decoration: none;\r\n  font-family: \"Courier New\",Courier,monospace;\r\n}\r\n\r\n@media (hover: hover) and (pointer: fine) {\r\n  button:hover {\r\n    background-color: #fff;\r\n    color:#000;\r\n  }\r\n}\r\n\r\n.hide {\r\n  opacity: 0;\r\n  -webkit-transition: opacity 1s ease-out;\r\n  -moz-transition: opacity 1s ease-out;\r\n  -ms-transition: opacity 1s ease-out;\r\n  -o-transition: opacity 1s ease-out;\r\n  transition: opacity 1s ease-out;\r\n}\r\n\r\n.show {\r\n  opacity: 1;\r\n  -webkit-transition: opacity 1s ease-out;\r\n  -moz-transition: opacity 1s ease-out;\r\n  -ms-transition: opacity 1s ease-out;\r\n  -o-transition: opacity 1s ease-out;\r\n  transition: opacity 1s ease-out;\r\n}\r\n\r\n.noSelect {\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n}\r\n\r\nbody:not(.keyboardNav) pre:focus,\r\nbody:not(.keyboardNav) button:focus,\r\nbody:not(.keyboardNav) input:focus,\r\nbody:not(.keyboardNav) select:focus,\r\nbody:not(.keyboardNav) textarea:focus {\r\n  outline: none;\r\n}",
        "children": [],
        "fileType": "file",
        "_id": "61748a7be3e0370024b5e76c",
        "updatedAt": "2021-10-23T23:02:32.808Z",
        "createdAt": "2021-10-23T23:02:32.808Z",
        "isSelectedFile": false,
        "id": "61748a7be3e0370024b5e76c"
      }
    ],
    "createdAt": "2021-10-23T22:08:18.934Z",
    "id": "IvtPHQ0sJ"
  },
  {
    "name": "not a sphere v1",
    "_id": "wnb-v-ZlM",
    "updatedAt": "2022-01-01T18:56:40.828Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61bd6d61aa456981bde9aa57",
          "61bd6d61aa456981bde9aa56",
          "61bd6d61aa456981bde9aa58"
        ],
        "fileType": "folder",
        "_id": "61bd6d61aa456981bde9aa59",
        "createdAt": "2022-01-01T18:56:40.828Z",
        "updatedAt": "2022-01-01T18:56:40.828Z",
        "isSelectedFile": false,
        "id": "61bd6d61aa456981bde9aa59"
      },
      {
        "name": "sketch.js",
        "content": "let orbitCenterX;\nlet orbitCenterY;\nlet radius;\n\nlet coords;\n\nlet hue;\n\nlet canvasWidth = 800;\nlet canvasHeight = 800;\nlet size;\nlet cvn;\n\nfunction setup() {\n  cvn = createCanvas(canvasWidth, canvasHeight);\n  \n  size = canvasWidth < canvasHeight? canvasWidth: canvasHeight;\n  \n  colorMode(HSB);\n  \n  orbitCenterX = width / 2;\n  orbitCenterY = height / 2;\n  \n  radius = size * 0.666 / 2;\n  \n  \n  hue = 50;\n  \n  background(0);\n}\n\nfunction draw() { \n    \n  let angle1 = random(2*PI);\n  let angle2 = random(2*PI);\n  \n  let p1x = orbitCenterX + cos(angle1) * radius;\n  let p1y = orbitCenterY + sin(angle1) * radius;\n  \n  let p2x = orbitCenterX + cos(angle2) * radius;\n  let p2y = orbitCenterY + sin(angle2) * radius;\n\n  \n  let d = dist(p1x, p1y, p2x, p2y);\n  \n  let maxD = radius*2*1.25;\n  \n  let strokeB = map(d, 0, maxD, 100, 0, true);\n  let alpha = map(strokeB, 0, radius/2, 0, 1);\n  \n  stroke(hue, 100, strokeB, alpha);\n  \n  line(p1x, p1y, p2x, p2y);\n  \n  if(frameCount >= (width * height * 0.003)) {\n    print(\"Stopped at frame: \" + frameCount);\n    noLoop();\n  }\n}\n\nfunction keyPressed() {\n  saveCanvas(cvn, 'not-a-sphere');\n}",
        "children": [],
        "fileType": "file",
        "_id": "61bd6d61aa456981bde9aa56",
        "isSelectedFile": true,
        "createdAt": "2022-01-01T18:56:40.828Z",
        "updatedAt": "2022-01-01T18:56:40.828Z",
        "id": "61bd6d61aa456981bde9aa56"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61bd6d61aa456981bde9aa57",
        "createdAt": "2022-01-01T18:56:40.828Z",
        "updatedAt": "2022-01-01T18:56:40.828Z",
        "isSelectedFile": false,
        "id": "61bd6d61aa456981bde9aa57"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61bd6d61aa456981bde9aa58",
        "createdAt": "2022-01-01T18:56:40.828Z",
        "updatedAt": "2022-01-01T18:56:40.828Z",
        "isSelectedFile": false,
        "id": "61bd6d61aa456981bde9aa58"
      }
    ],
    "createdAt": "2021-12-18T15:16:00.388Z",
    "id": "wnb-v-ZlM"
  },
  {
    "name": "not a sphere v2",
    "_id": "7T2MfjIIT",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61bdfb33aa456981bde9aa5b",
          "61bdfb33aa456981bde9aa5c",
          "61bdfb33aa456981bde9aa5d"
        ],
        "fileType": "folder",
        "_id": "61bdfb33aa456981bde9aa5a",
        "createdAt": "2021-12-20T13:00:23.810Z",
        "updatedAt": "2021-12-20T13:00:23.810Z",
        "isSelectedFile": false,
        "id": "61bdfb33aa456981bde9aa5a"
      },
      {
        "name": "sketch.js",
        "content": "let orbitCenterX;\nlet orbitCenterY;\n\nlet coords;\n\nlet hue;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  colorMode(HSB);\n  \n  orbitCenterX = width / 2;\n  orbitCenterY = height / 2;\n  \n  hue = 50;\n  \n  background(0);\n}\n\nfunction draw() { \n  \n  // coords = \"[\" + mouseX + \",\" + mouseY + \"]\";\n  // fill(0);\n  // noStroke(0);\n  // rect(0, 0, 100, 100);\n  // fill(255);\n  // text(coords, 20, 20);\n  \n  \n  let angle1 = random(360) / 50;\n  let angle2 = random(360) / 50;\n  \n  let p1x = orbitCenterX + cos(angle1) * (width * 0.666 / 2);\n  let p1y = orbitCenterY + sin(angle1) * (height * 0.666 / 2);\n  \n  let p2x = orbitCenterX + cos(angle2) * 300;\n  let p2y = orbitCenterY + sin(angle2) * 300;  \n\n  \n  let d = dist(p1x, p1y, p2x, p2y);\n\n  let strokeB = map(d, 0, 500, 100, 0, true);\n  let alpha = map(strokeB, 0, 100, 0, 1);\n  \n  stroke(hue, 100, strokeB, alpha);\n  \n  line(p1x, p1y, p2x, p2y);\n  \n  if(frameCount == 4000) {\n    noFill();\n    strokeWeight(1);\n    let a = 0;\n    for(let i = 300; i < width+200; i++) {\n      stroke(0, 0, 0, a);\n      a += 0.005\n      circle(width/2, height/2, i);\n    }\n    noLoop();\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "61bdfb33aa456981bde9aa5c",
        "isSelectedFile": true,
        "createdAt": "2021-12-20T13:00:23.810Z",
        "updatedAt": "2021-12-20T13:00:23.810Z",
        "id": "61bdfb33aa456981bde9aa5c"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61bdfb33aa456981bde9aa5b",
        "createdAt": "2021-12-20T13:00:23.810Z",
        "updatedAt": "2021-12-20T13:00:23.810Z",
        "isSelectedFile": false,
        "id": "61bdfb33aa456981bde9aa5b"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61bdfb33aa456981bde9aa5d",
        "createdAt": "2021-12-20T13:00:23.810Z",
        "updatedAt": "2021-12-20T13:00:23.810Z",
        "isSelectedFile": false,
        "id": "61bdfb33aa456981bde9aa5d"
      }
    ],
    "createdAt": "2021-12-18T15:16:03.275Z",
    "updatedAt": "2021-12-20T13:00:23.810Z",
    "id": "7T2MfjIIT"
  },
  {
    "name": "Orientation Game",
    "_id": "7izGleTXv",
    "updatedAt": "2020-10-21T19:32:12.016Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5f908a34494931784e467dfc",
          "5f908a34494931784e467dfb",
          "5f908a34494931784e467dfd"
        ],
        "fileType": "folder",
        "_id": "5f908a34494931784e467dfe",
        "createdAt": "2020-10-21T19:32:12.016Z",
        "updatedAt": "2020-10-21T19:32:12.016Z",
        "id": "5f908a34494931784e467dfe"
      },
      {
        "name": "sketch.js",
        "content": "let x;\nlet y;\n\nfunction setup() {\n  createCanvas(400, 400);\n  rectMode(CENTER);\n  x = width / 2;\n  y = height / 2;\n}\n\nfunction draw() {\n  background(220);\n  rotX = rotationX;\n  text(\"RotX: \" + rotationX, 10, 20)\n  text(\"RotY: \" + rotationY, 10, 40)\n  text(\"RotZ: \" + rotationZ, 10, 60)\n  \n  fill(\"blue\");\n  \n  x += rotationY;\n  y += rotationX;\n  \n  ellipse(x, y, 50, 50);\n}",
        "children": [],
        "fileType": "file",
        "_id": "5f908a34494931784e467dfb",
        "isSelectedFile": true,
        "createdAt": "2020-10-21T19:32:12.016Z",
        "updatedAt": "2020-10-21T19:32:12.016Z",
        "id": "5f908a34494931784e467dfb"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "5f908a34494931784e467dfc",
        "createdAt": "2020-10-21T19:32:12.016Z",
        "updatedAt": "2020-10-21T19:32:12.016Z",
        "id": "5f908a34494931784e467dfc"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5f908a34494931784e467dfd",
        "createdAt": "2020-10-21T19:32:12.016Z",
        "updatedAt": "2020-10-21T19:32:12.016Z",
        "id": "5f908a34494931784e467dfd"
      }
    ],
    "createdAt": "2020-10-21T19:23:23.993Z",
    "id": "7izGleTXv"
  },
  {
    "name": "out-step ellipses",
    "_id": "C54w1qwxr",
    "updatedAt": "2022-11-19T14:27:43.546Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6378df402f67173a76a6823a",
          "6378df402f67173a76a68239",
          "6378df402f67173a76a6823b"
        ],
        "fileType": "folder",
        "_id": "6378df402f67173a76a6823c",
        "createdAt": "2022-11-19T14:27:43.546Z",
        "updatedAt": "2022-11-19T14:27:43.546Z",
        "id": "6378df402f67173a76a6823c"
      },
      {
        "name": "sketch.js",
        "content": "// by ktorn\n// 19.11.2022\n\nfunction setup() {\n  createCanvas(800, 800);\n  strokeWeight(45);\n  stroke(240);\n  noFill();\n  angleMode(DEGREES);\n}\n\nfunction draw() {\n  background(100);\n  \n  translate(width/2, height/2);\n  \n  for(let i = 0; i < 11; i++) {\n    let w = width*2 - 50 - (i*150);\n    let h = w - 40;\n    push();\n    rotate(frameCount/2 * i / 5);\n    ellipse(0, 0, w, h);\n    pop();\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "6378df402f67173a76a68239",
        "isSelectedFile": true,
        "createdAt": "2022-11-19T14:27:43.546Z",
        "updatedAt": "2022-11-19T14:27:43.546Z",
        "id": "6378df402f67173a76a68239"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6378df402f67173a76a6823a",
        "createdAt": "2022-11-19T14:27:43.546Z",
        "updatedAt": "2022-11-19T14:27:43.546Z",
        "id": "6378df402f67173a76a6823a"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6378df402f67173a76a6823b",
        "createdAt": "2022-11-19T14:27:43.546Z",
        "updatedAt": "2022-11-19T14:27:43.546Z",
        "id": "6378df402f67173a76a6823b"
      }
    ],
    "createdAt": "2022-11-19T14:27:04.543Z",
    "id": "C54w1qwxr"
  },
  {
    "name": "p5.play keyboard/mouse example",
    "_id": "_T4LZFveC",
    "updatedAt": "2020-10-27T03:57:11.504Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5f9798a675c20b3acc7c8cdf",
          "5f97989c75c20b3acc7c8cdc",
          "5f9798e075c20b3acc7c8d51",
          "5f97989c75c20b3acc7c8cdb",
          "5f97989c75c20b3acc7c8cdd"
        ],
        "fileType": "folder",
        "_id": "5f97989c75c20b3acc7c8cde",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f97989c75c20b3acc7c8cde"
      },
      {
        "name": "sketch.js",
        "content": "//keyboard events\n//capturing key presses and mouse buttons once\n//press x and z or mouse left and right\n\nvar asterisk;\nvar ghost;\nvar platform;\n\nvar GRAVITY = 1;\nvar JUMP = 15;\n\nfunction setup() {\n  createCanvas(800, 400);\n\n  ghost = createSprite(600, 200);\n  ghost.addAnimation('normal', 'assets/ghost_spin0001.png', 'assets/ghost_spin0003.png');\n  ghost.debug = true\n\n  asterisk = createSprite(200, 200);\n  asterisk.addAnimation('normal', 'assets/asterisk_normal0001.png', 'assets/asterisk_normal0003.png');\n  asterisk.addAnimation('stretch', 'assets/asterisk_stretching0001.png', 'assets/asterisk_stretching0008.png');\n  asterisk.debug = true\n\n  //if defined, the collider will be used for mouse events\n  asterisk.setCollider('circle', 0, 0, 64);\n\n  platform = createSprite(200, 300);\n  platform.addAnimation('normal', 'assets/small_platform0001.png', 'assets/small_platform0003.png');\n  platform.debug = true\n}\n\nfunction draw() {\n  background(255, 255, 255);\n  \n  text(asterisk.position.y, 10, 10)\n\n  fill(200);\n  textAlign(CENTER);\n  text('Press x and z', width/2, 20);\n\n  asterisk.velocity.y += GRAVITY;\n\n  if(asterisk.collide(platform)) {\n    asterisk.velocity.y = 0;\n    asterisk.changeAnimation('normal');\n  }\n\n  //keyDown returns true for a cycle if the key was just pressed\n  //during this cycle. Useful to capture instant events in the draw cycle\n  //without moving game logic to the mousePressed() function\n  //mouseWentDown works the same way with mouse input\n  if(keyWentDown('x') || mouseWentDown(LEFT))\n  {\n    asterisk.changeAnimation('stretch');\n    asterisk.animation.rewind();\n    asterisk.velocity.y = -JUMP;\n  }\n\n  //same as keyWentDown\n  //RIGHT = right mouse button\n  if(keyWentUp('z') || mouseWentUp(RIGHT))\n    ghost.rotation = 0;\n\n  //keyDown is similar to keyIsDown() except it accepts both key codes and characters\n  if(keyDown('z') || mouseDown(RIGHT))\n    ghost.rotation -= 10;\n\n  drawSprites();\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5f97989c75c20b3acc7c8cdb",
        "isSelectedFile": true,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f97989c75c20b3acc7c8cdb"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/addons/p5.sound.min.js\"></script>\n    <script src=\"lib/p5.play.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "5f97989c75c20b3acc7c8cdc",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f97989c75c20b3acc7c8cdc"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5f97989c75c20b3acc7c8cdd",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f97989c75c20b3acc7c8cdd"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "5f9798b775c20b3acc7c8cff",
          "5f9798ae75c20b3acc7c8ce2",
          "5f9798af75c20b3acc7c8ce3",
          "5f9798af75c20b3acc7c8ce5",
          "5f9798af75c20b3acc7c8ce4",
          "5f9798b075c20b3acc7c8ce7",
          "5f9798b075c20b3acc7c8ce6",
          "5f9798b075c20b3acc7c8ce8",
          "5f9798b175c20b3acc7c8ce9",
          "5f9798b175c20b3acc7c8cea",
          "5f9798ae75c20b3acc7c8ce0",
          "5f9798b175c20b3acc7c8ceb",
          "5f9798b175c20b3acc7c8cec",
          "5f9798b275c20b3acc7c8ced",
          "5f9798ae75c20b3acc7c8ce1",
          "5f9798b275c20b3acc7c8cee",
          "5f9798b375c20b3acc7c8cf0",
          "5f9798b375c20b3acc7c8cef",
          "5f9798b375c20b3acc7c8cf1",
          "5f9798b375c20b3acc7c8cf2",
          "5f9798b475c20b3acc7c8cf3",
          "5f9798b475c20b3acc7c8cf4",
          "5f9798b475c20b3acc7c8cf5",
          "5f9798b575c20b3acc7c8cf6",
          "5f9798b575c20b3acc7c8cf7",
          "5f9798b575c20b3acc7c8cf8",
          "5f9798b575c20b3acc7c8cf9",
          "5f9798b675c20b3acc7c8cfa",
          "5f9798b675c20b3acc7c8cfb",
          "5f9798b675c20b3acc7c8cfc",
          "5f9798b675c20b3acc7c8cfd",
          "5f9798b775c20b3acc7c8cfe",
          "5f9798b875c20b3acc7c8d01",
          "5f9798b775c20b3acc7c8d00",
          "5f9798b875c20b3acc7c8d02",
          "5f9798b875c20b3acc7c8d03",
          "5f9798b975c20b3acc7c8d05",
          "5f9798b975c20b3acc7c8d04",
          "5f9798b975c20b3acc7c8d06",
          "5f9798b975c20b3acc7c8d07",
          "5f9798b975c20b3acc7c8d08",
          "5f9798ba75c20b3acc7c8d09",
          "5f9798ba75c20b3acc7c8d0a",
          "5f9798ba75c20b3acc7c8d0b",
          "5f9798bb75c20b3acc7c8d0c",
          "5f9798bb75c20b3acc7c8d0d",
          "5f9798bb75c20b3acc7c8d0e",
          "5f9798bb75c20b3acc7c8d0f",
          "5f9798bc75c20b3acc7c8d10",
          "5f9798bc75c20b3acc7c8d11",
          "5f9798bc75c20b3acc7c8d12",
          "5f9798c175c20b3acc7c8d23",
          "5f9798bc75c20b3acc7c8d13",
          "5f9798bd75c20b3acc7c8d14",
          "5f9798bd75c20b3acc7c8d15",
          "5f9798bd75c20b3acc7c8d16",
          "5f9798bd75c20b3acc7c8d17",
          "5f9798be75c20b3acc7c8d18",
          "5f9798be75c20b3acc7c8d19",
          "5f9798be75c20b3acc7c8d1a",
          "5f9798bf75c20b3acc7c8d1b",
          "5f9798bf75c20b3acc7c8d1c",
          "5f9798bf75c20b3acc7c8d1d",
          "5f9798bf75c20b3acc7c8d1e",
          "5f9798c075c20b3acc7c8d1f",
          "5f9798c075c20b3acc7c8d20",
          "5f9798c075c20b3acc7c8d21",
          "5f9798c075c20b3acc7c8d22",
          "5f9798c175c20b3acc7c8d24",
          "5f9798c175c20b3acc7c8d25",
          "5f9798c275c20b3acc7c8d26",
          "5f9798c275c20b3acc7c8d27",
          "5f9798c275c20b3acc7c8d28",
          "5f9798c275c20b3acc7c8d29",
          "5f9798c375c20b3acc7c8d2a",
          "5f9798c375c20b3acc7c8d2b",
          "5f9798c375c20b3acc7c8d2c",
          "5f9798c375c20b3acc7c8d2d",
          "5f9798c475c20b3acc7c8d2e",
          "5f9798c475c20b3acc7c8d2f",
          "5f9798c475c20b3acc7c8d30",
          "5f9798c575c20b3acc7c8d31",
          "5f9798c575c20b3acc7c8d32",
          "5f9798c575c20b3acc7c8d33",
          "5f9798c575c20b3acc7c8d34",
          "5f9798c675c20b3acc7c8d35",
          "5f9798c675c20b3acc7c8d36",
          "5f9798c675c20b3acc7c8d37",
          "5f9798c775c20b3acc7c8d38",
          "5f9798c775c20b3acc7c8d39",
          "5f9798c775c20b3acc7c8d3a",
          "5f9798c775c20b3acc7c8d3b",
          "5f9798c875c20b3acc7c8d3d",
          "5f9798c875c20b3acc7c8d3c",
          "5f9798c975c20b3acc7c8d3e",
          "5f9798c975c20b3acc7c8d3f",
          "5f9798c975c20b3acc7c8d40",
          "5f9798c975c20b3acc7c8d41",
          "5f9798ca75c20b3acc7c8d43",
          "5f9798ca75c20b3acc7c8d42",
          "5f9798ca75c20b3acc7c8d44",
          "5f9798cb75c20b3acc7c8d45",
          "5f9798cb75c20b3acc7c8d46",
          "5f9798cb75c20b3acc7c8d47",
          "5f9798cb75c20b3acc7c8d48",
          "5f9798cc75c20b3acc7c8d49",
          "5f9798cc75c20b3acc7c8d4a",
          "5f9798cc75c20b3acc7c8d4b",
          "5f9798cd75c20b3acc7c8d4c",
          "5f9798cd75c20b3acc7c8d4d",
          "5f9798cd75c20b3acc7c8d4e",
          "5f9798ce75c20b3acc7c8d4f",
          "5f9798ce75c20b3acc7c8d50"
        ],
        "fileType": "folder",
        "_id": "5f9798a675c20b3acc7c8cdf",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798a675c20b3acc7c8cdf"
      },
      {
        "name": "asterisk_explode0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798ae75c20b3acc7c8ce0",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/4ea97e1a-2bd3-4b86-9d22-80a98d93a64d.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798ae75c20b3acc7c8ce0"
      },
      {
        "name": "asterisk_explode0005.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798ae75c20b3acc7c8ce1",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/9cb86faa-5ded-4b28-abe2-5e22c0186d5f.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798ae75c20b3acc7c8ce1"
      },
      {
        "name": "asterisk_circle0000.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798ae75c20b3acc7c8ce2",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/58f198f5-011f-43cc-a599-4a14d15abcc2.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798ae75c20b3acc7c8ce2"
      },
      {
        "name": "asterisk_circle0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798af75c20b3acc7c8ce3",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/993413dd-55e5-4b49-92ee-b519b8b7c38f.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798af75c20b3acc7c8ce3"
      },
      {
        "name": "asterisk_circle0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798af75c20b3acc7c8ce4",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/983ffba0-8bed-4a1f-a70c-8b1c89282528.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798af75c20b3acc7c8ce4"
      },
      {
        "name": "asterisk_circle0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798af75c20b3acc7c8ce5",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/01213158-9ca3-462a-9cdf-5120e417006d.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798af75c20b3acc7c8ce5"
      },
      {
        "name": "asterisk_circle0005.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b075c20b3acc7c8ce6",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/983de40a-b763-44d9-a2e1-5504f5fe71fd.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b075c20b3acc7c8ce6"
      },
      {
        "name": "asterisk_circle0004.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b075c20b3acc7c8ce7",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/9924808c-fa2e-495e-8413-5e2fe37bc32f.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b075c20b3acc7c8ce7"
      },
      {
        "name": "asterisk_circle0006.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b075c20b3acc7c8ce8",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/71d30a98-9aa1-4259-957e-41cd44a09c08.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b075c20b3acc7c8ce8"
      },
      {
        "name": "asterisk_circle0007.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b175c20b3acc7c8ce9",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/783d04ca-7276-4d53-a323-3003747873cc.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b175c20b3acc7c8ce9"
      },
      {
        "name": "asterisk_circle0008.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b175c20b3acc7c8cea",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/f493a602-d1ad-458c-928c-d3d7d9df6c0d.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b175c20b3acc7c8cea"
      },
      {
        "name": "asterisk_explode0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b175c20b3acc7c8ceb",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/94b73296-dd12-4a8d-87ac-29af7b80e815.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b175c20b3acc7c8ceb"
      },
      {
        "name": "asterisk_explode0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b175c20b3acc7c8cec",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/c8b1b981-cf60-424d-b902-3819bc180766.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b175c20b3acc7c8cec"
      },
      {
        "name": "asterisk_explode0004.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b275c20b3acc7c8ced",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/56c05a55-5ae4-44dd-a374-54aff5ef2878.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b275c20b3acc7c8ced"
      },
      {
        "name": "asterisk_explode0006.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b275c20b3acc7c8cee",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/ee514e5a-51bf-4f9c-9616-a3f4d4423ac2.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b275c20b3acc7c8cee"
      },
      {
        "name": "asterisk_explode0008.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b375c20b3acc7c8cef",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/63bb6946-8f2c-4a50-8db1-124b0f454d8b.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b375c20b3acc7c8cef"
      },
      {
        "name": "asterisk_explode0007.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b375c20b3acc7c8cf0",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/411604c8-ac5b-4673-83f6-df87b00c2754.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b375c20b3acc7c8cf0"
      },
      {
        "name": "asterisk_explode0009.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b375c20b3acc7c8cf1",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/934de77a-65c0-4f84-a213-693772c44546.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b375c20b3acc7c8cf1"
      },
      {
        "name": "asterisk_explode0010.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b375c20b3acc7c8cf2",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/543853c3-897e-4135-ab51-b1ccfb01dacd.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b375c20b3acc7c8cf2"
      },
      {
        "name": "asterisk_explode0011.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b475c20b3acc7c8cf3",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/03cd53bb-f55d-4899-bfc6-46ef1ccd447c.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b475c20b3acc7c8cf3"
      },
      {
        "name": "asterisk_normal0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b475c20b3acc7c8cf4",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/92390e39-10c1-48fe-bd3e-4d82d354bab7.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b475c20b3acc7c8cf4"
      },
      {
        "name": "asterisk_normal0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b475c20b3acc7c8cf5",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/06dd3e18-25d6-44b9-86ee-316085dff4a0.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b475c20b3acc7c8cf5"
      },
      {
        "name": "asterisk_normal0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b575c20b3acc7c8cf6",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/a09dd11b-73c0-4608-be1e-c8b1ae9b5131.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b575c20b3acc7c8cf6"
      },
      {
        "name": "asterisk_stretching0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b575c20b3acc7c8cf7",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/80356043-cbe5-4da5-9f73-5ea69d3834fa.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b575c20b3acc7c8cf7"
      },
      {
        "name": "asterisk_stretching0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b575c20b3acc7c8cf8",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/11638963-e91a-4492-b5c8-60e73f74b8b3.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b575c20b3acc7c8cf8"
      },
      {
        "name": "asterisk_stretching0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b575c20b3acc7c8cf9",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/19418cad-c5c0-4ce9-a679-494e893f7e0d.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b575c20b3acc7c8cf9"
      },
      {
        "name": "asterisk_stretching0004.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b675c20b3acc7c8cfa",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/75db53d7-1316-478b-8451-4e00751ffe9d.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b675c20b3acc7c8cfa"
      },
      {
        "name": "asterisk_stretching0005.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b675c20b3acc7c8cfb",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/4bc35fa0-2bdf-44f1-a260-a2fc9279c333.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b675c20b3acc7c8cfb"
      },
      {
        "name": "asterisk_stretching0006.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b675c20b3acc7c8cfc",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/85e305b0-6200-45f6-a838-bc7b23784a4b.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b675c20b3acc7c8cfc"
      },
      {
        "name": "asterisk_stretching0007.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b675c20b3acc7c8cfd",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/71c83209-4a0f-4a96-8b03-5a73cc4a4573.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b675c20b3acc7c8cfd"
      },
      {
        "name": "asterisk_stretching0008.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b775c20b3acc7c8cfe",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/d53b56c9-44d5-484e-b5ba-0ba8ec4e3db4.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b775c20b3acc7c8cfe"
      },
      {
        "name": "asterisk.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b775c20b3acc7c8cff",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/dffe336f-4cc8-47db-b014-640e76d69a8e.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b775c20b3acc7c8cff"
      },
      {
        "name": "asteroid1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b775c20b3acc7c8d00",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/e839b25e-e5bc-484e-a693-b1c45d2c5192.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b775c20b3acc7c8d00"
      },
      {
        "name": "asteroid0.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b875c20b3acc7c8d01",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/08e55a8f-684e-4584-9d9b-c088e90e89f2.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b875c20b3acc7c8d01"
      },
      {
        "name": "asteroid2.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b875c20b3acc7c8d02",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/d818d38e-8793-4d9e-938c-c81f84690e87.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b875c20b3acc7c8d02"
      },
      {
        "name": "asteroids_bullet.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b875c20b3acc7c8d03",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/01c0e59e-6d06-4799-8922-6f0d5ff94350.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b875c20b3acc7c8d03"
      },
      {
        "name": "asteroids_ship0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b975c20b3acc7c8d04",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/53d55192-4ae3-4ac4-a35f-ac256e9fe46e.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b975c20b3acc7c8d04"
      },
      {
        "name": "asteroids_particle.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b975c20b3acc7c8d05",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/5ac45ee5-01d9-4e31-871c-c5284f738e27.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b975c20b3acc7c8d05"
      },
      {
        "name": "asteroids_ship0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b975c20b3acc7c8d06",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/5fa91f10-9e77-4afa-b0ce-12f7e67fb42b.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b975c20b3acc7c8d06"
      },
      {
        "name": "asteroids_ship0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b975c20b3acc7c8d07",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/98a3b891-f0a1-46f9-9ec9-f010760bdb00.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b975c20b3acc7c8d07"
      },
      {
        "name": "asteroids_ship0004.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798b975c20b3acc7c8d08",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/6ea0f127-8ae1-42ce-a982-473043fc49c2.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798b975c20b3acc7c8d08"
      },
      {
        "name": "asteroids_ship0005.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798ba75c20b3acc7c8d09",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/6ddf98f1-eb95-47c4-9848-2839624a25f8.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798ba75c20b3acc7c8d09"
      },
      {
        "name": "asteroids_ship0006.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798ba75c20b3acc7c8d0a",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/284260c9-44b5-4ad6-8939-d32750f3b19f.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798ba75c20b3acc7c8d0a"
      },
      {
        "name": "asteroids_ship0007.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798ba75c20b3acc7c8d0b",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/8dd47cc2-126c-4a9a-ad91-73128e68b85d.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798ba75c20b3acc7c8d0b"
      },
      {
        "name": "box0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798bb75c20b3acc7c8d0c",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/5495e29e-bcaf-425d-a95d-2db74564e3e9.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798bb75c20b3acc7c8d0c"
      },
      {
        "name": "box0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798bb75c20b3acc7c8d0d",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/1bbdca89-6cf5-4b50-80f0-5be3e5d6e43b.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798bb75c20b3acc7c8d0d"
      },
      {
        "name": "box0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798bb75c20b3acc7c8d0e",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/514e5d95-6015-4efa-ab84-e22f02605210.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798bb75c20b3acc7c8d0e"
      },
      {
        "name": "bubbly0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798bb75c20b3acc7c8d0f",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/b667910a-de6d-43ea-951f-ec50f5926300.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798bb75c20b3acc7c8d0f"
      },
      {
        "name": "bubbly0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798bc75c20b3acc7c8d10",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/67029863-b9b3-4dee-9301-c78214379160.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798bc75c20b3acc7c8d10"
      },
      {
        "name": "bubbly0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798bc75c20b3acc7c8d11",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/de6578c1-27e8-4011-b227-9683510a7b0c.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798bc75c20b3acc7c8d11"
      },
      {
        "name": "bubbly0004.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798bc75c20b3acc7c8d12",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/f7b37fd7-5597-4ddf-811e-e7303a0ebc78.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798bc75c20b3acc7c8d12"
      },
      {
        "name": "cloud_breathing0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798bc75c20b3acc7c8d13",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/f3242c37-95ce-410c-9744-9b32ad75031a.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798bc75c20b3acc7c8d13"
      },
      {
        "name": "cloud_breathing0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798bd75c20b3acc7c8d14",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/a96570dd-9729-4244-90a2-5452628f952c.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798bd75c20b3acc7c8d14"
      },
      {
        "name": "cloud_breathing0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798bd75c20b3acc7c8d15",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/dd521f05-dd4c-4d79-98a2-16f97e91838c.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798bd75c20b3acc7c8d15"
      },
      {
        "name": "cloud_breathing0004.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798bd75c20b3acc7c8d16",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/c36b0bb7-895d-45bc-acca-4d0c91ad45c4.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798bd75c20b3acc7c8d16"
      },
      {
        "name": "cloud_breathing0005.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798bd75c20b3acc7c8d17",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/995dbcc9-e582-4d73-a3fe-b8e1f2166afe.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798bd75c20b3acc7c8d17"
      },
      {
        "name": "cloud_breathing0006.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798be75c20b3acc7c8d18",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/69607d35-43c9-4524-b944-fc2566481f41.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798be75c20b3acc7c8d18"
      },
      {
        "name": "cloud_breathing0007.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798be75c20b3acc7c8d19",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/f56eb8f4-ddca-49bb-8ed0-d7e018c0a9ba.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798be75c20b3acc7c8d19"
      },
      {
        "name": "cloud_breathing0008.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798be75c20b3acc7c8d1a",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/35006d47-4c89-465f-839a-57812fe14142.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798be75c20b3acc7c8d1a"
      },
      {
        "name": "cloud_breathing0009.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798bf75c20b3acc7c8d1b",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/e142d8bb-83f4-4b54-bddb-a04b8d500a16.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798bf75c20b3acc7c8d1b"
      },
      {
        "name": "cloud_pulsing0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798bf75c20b3acc7c8d1c",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/c30b12e6-7edd-44f6-99be-d0c97b9f1e1d.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798bf75c20b3acc7c8d1c"
      },
      {
        "name": "cloud_pulsing0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798bf75c20b3acc7c8d1d",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/62afb125-52ed-400a-94c3-67eacbbf9825.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798bf75c20b3acc7c8d1d"
      },
      {
        "name": "cloud_pulsing0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798bf75c20b3acc7c8d1e",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/d32d14e2-c309-4fff-b514-292873f823d1.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798bf75c20b3acc7c8d1e"
      },
      {
        "name": "cloud_pulsing0004.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c075c20b3acc7c8d1f",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/f9bf4e99-44eb-4e84-b583-dda61c930554.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c075c20b3acc7c8d1f"
      },
      {
        "name": "cloud_pulsing0005.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c075c20b3acc7c8d20",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/2c2e7770-8a6e-4500-9875-93b510e1c62b.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c075c20b3acc7c8d20"
      },
      {
        "name": "cloud_pulsing0006.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c075c20b3acc7c8d21",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/9e344ba8-d79a-439a-a4e5-4a8f6c780d19.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c075c20b3acc7c8d21"
      },
      {
        "name": "cloud_pulsing0007.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c075c20b3acc7c8d22",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/5a37c73d-955e-486e-9e71-3bff428a5e52.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c075c20b3acc7c8d22"
      },
      {
        "name": "cloud.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c175c20b3acc7c8d23",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/727b54d6-acc6-4732-a0fa-e1939e9a0e4d.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c175c20b3acc7c8d23"
      },
      {
        "name": "explode_sprite_sheet.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c175c20b3acc7c8d24",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/6ceb984b-405b-4811-bf84-4881401109ab.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c175c20b3acc7c8d24"
      },
      {
        "name": "face.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c175c20b3acc7c8d25",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/9baf9df0-2a64-4283-9bb3-d762f60ecafc.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c175c20b3acc7c8d25"
      },
      {
        "name": "flappy_bg.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c275c20b3acc7c8d26",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/71fc7fdd-8303-4435-9724-0a69a3546f47.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c275c20b3acc7c8d26"
      },
      {
        "name": "flappy_bird.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c275c20b3acc7c8d27",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/a5a973b6-fd5a-4167-81a4-21b906e85718.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c275c20b3acc7c8d27"
      },
      {
        "name": "flappy_ground copy.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c275c20b3acc7c8d28",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/cb2ac51f-d14d-4cc2-b397-aa35144bfb7e.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c275c20b3acc7c8d28"
      },
      {
        "name": "flappy_ground.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c275c20b3acc7c8d29",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/cab91be9-f490-4124-a87e-36a8daff8a7a.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c275c20b3acc7c8d29"
      },
      {
        "name": "flappy_pipe.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c375c20b3acc7c8d2a",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/994a5370-2a5c-4de5-935c-48b37defc835.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c375c20b3acc7c8d2a"
      },
      {
        "name": "frame.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c375c20b3acc7c8d2b",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/21d376b7-1045-45a8-84e5-a84028ee175c.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c375c20b3acc7c8d2b"
      },
      {
        "name": "ghost_spin0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c375c20b3acc7c8d2c",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/eb6967f3-9714-4e82-a8e1-1741140ff428.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c375c20b3acc7c8d2c"
      },
      {
        "name": "ghost_spin0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c375c20b3acc7c8d2d",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/53d6a59a-1f9f-45f1-83fa-8290f45c976c.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c375c20b3acc7c8d2d"
      },
      {
        "name": "ghost_spin0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c475c20b3acc7c8d2e",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/c44bdc2d-b215-4efb-89a9-d4e5822e9097.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c475c20b3acc7c8d2e"
      },
      {
        "name": "ghost_standing0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c475c20b3acc7c8d2f",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/ea238315-a931-485e-adb1-dc26dd0554c9.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c475c20b3acc7c8d2f"
      },
      {
        "name": "ghost_standing0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c475c20b3acc7c8d30",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/584f9398-6783-45ae-be8d-e928111f8d2a.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c475c20b3acc7c8d30"
      },
      {
        "name": "ghost_standing0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c575c20b3acc7c8d31",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/b29be0ac-b126-4276-b959-4249f3a0e586.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c575c20b3acc7c8d31"
      },
      {
        "name": "ghost_standing0004.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c575c20b3acc7c8d32",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/5eebfc7f-2ee9-47d7-9a42-8a00c0be9e75.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c575c20b3acc7c8d32"
      },
      {
        "name": "ghost_standing0005.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c575c20b3acc7c8d33",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/0ea793b6-b073-4784-9ac3-2ac639f77c59.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c575c20b3acc7c8d33"
      },
      {
        "name": "ghost_standing0006.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c575c20b3acc7c8d34",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/74d1be49-95bd-4618-b8da-4da6dc042ad4.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c575c20b3acc7c8d34"
      },
      {
        "name": "ghost_standing0007.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c675c20b3acc7c8d35",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/ff44a2bf-ea27-43d9-8c7b-e3b2026be53f.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c675c20b3acc7c8d35"
      },
      {
        "name": "ghost_walk0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c675c20b3acc7c8d36",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/a0566e22-eeb1-49a9-94fc-3216bcd73f88.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c675c20b3acc7c8d36"
      },
      {
        "name": "ghost_walk0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c675c20b3acc7c8d37",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/0a25577b-93a9-4e4a-988d-aaa736123acc.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c675c20b3acc7c8d37"
      },
      {
        "name": "ghost_walk0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c775c20b3acc7c8d38",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/1c7ec17d-d38a-4c29-949e-e2bf2b276512.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c775c20b3acc7c8d38"
      },
      {
        "name": "ghost_walk0004.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c775c20b3acc7c8d39",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/eb64714c-05f8-4cb2-9e52-be481f3b59d1.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c775c20b3acc7c8d39"
      },
      {
        "name": "mess.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c775c20b3acc7c8d3a",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/03c3bc27-7c33-4611-a75f-b1986dc62e83.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c775c20b3acc7c8d3a"
      },
      {
        "name": "monster.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c775c20b3acc7c8d3b",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/804d9e82-e7c6-445c-8467-17b5116573ca.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c775c20b3acc7c8d3b"
      },
      {
        "name": "platform.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c875c20b3acc7c8d3c",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/3fb9122f-beae-4d80-be3e-be07b6d55841.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c875c20b3acc7c8d3c"
      },
      {
        "name": "plain_circle.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c875c20b3acc7c8d3d",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/30206c09-ddeb-474f-847d-3bb79f26fb3f.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c875c20b3acc7c8d3d"
      },
      {
        "name": "player_spritesheet.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c975c20b3acc7c8d3e",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/659ce7e3-2ade-4a47-a47c-9143deecc8cd.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c975c20b3acc7c8d3e"
      },
      {
        "name": "rocks0.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c975c20b3acc7c8d3f",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/7b878126-a79c-42d3-af40-2f2ec8467bdb.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c975c20b3acc7c8d3f"
      },
      {
        "name": "rocks1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c975c20b3acc7c8d40",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/37a15670-2ed6-4fff-ae7e-5f36ed792aed.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c975c20b3acc7c8d40"
      },
      {
        "name": "rocks2.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798c975c20b3acc7c8d41",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/c8e49350-d8c1-468f-bee2-e8bb6075e2c6.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798c975c20b3acc7c8d41"
      },
      {
        "name": "small_circle0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798ca75c20b3acc7c8d42",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/6c59e8c3-357e-449f-9b15-4f83ecaaf985.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798ca75c20b3acc7c8d42"
      },
      {
        "name": "rocks3.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798ca75c20b3acc7c8d43",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/a844a078-7cde-495d-bf2b-8d2f9dfb5e1c.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798ca75c20b3acc7c8d43"
      },
      {
        "name": "small_circle0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798ca75c20b3acc7c8d44",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/7999c019-1137-4660-b377-df872bf3d2e0.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798ca75c20b3acc7c8d44"
      },
      {
        "name": "small_circle0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798cb75c20b3acc7c8d45",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/cd674347-cbeb-4550-b9f4-03065ba8d7c4.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798cb75c20b3acc7c8d45"
      },
      {
        "name": "small_platform0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798cb75c20b3acc7c8d46",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/175c09b9-7516-47c2-af72-f41f06e0b879.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798cb75c20b3acc7c8d46"
      },
      {
        "name": "small_platform0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798cb75c20b3acc7c8d47",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/eb3ed941-7fce-45f2-bc32-e5493458702c.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798cb75c20b3acc7c8d47"
      },
      {
        "name": "small_platform0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798cb75c20b3acc7c8d48",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/d81c811f-a40b-408f-8374-972fbbf7a955.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798cb75c20b3acc7c8d48"
      },
      {
        "name": "small_rectangle.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798cc75c20b3acc7c8d49",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/10457b1f-4194-43b7-8116-9402e96a04c1.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798cc75c20b3acc7c8d49"
      },
      {
        "name": "small_square.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798cc75c20b3acc7c8d4a",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/9b4dcc91-449e-4572-98d7-458e7bd95969.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798cc75c20b3acc7c8d4a"
      },
      {
        "name": "small_triangle.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798cc75c20b3acc7c8d4b",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/36dd63cd-d222-4e3e-b215-d728864ec527.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798cc75c20b3acc7c8d4b"
      },
      {
        "name": "square.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798cd75c20b3acc7c8d4c",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/a3842336-b7f1-46d1-a6ec-ff38f202cad5.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798cd75c20b3acc7c8d4c"
      },
      {
        "name": "star.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798cd75c20b3acc7c8d4d",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/841ccbdb-ccba-4b1f-959b-9a6f4538a06f.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798cd75c20b3acc7c8d4d"
      },
      {
        "name": "sun1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798cd75c20b3acc7c8d4e",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/35695acd-0192-4b9f-bd34-59d9fb0b3f88.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798cd75c20b3acc7c8d4e"
      },
      {
        "name": "sun2.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798ce75c20b3acc7c8d4f",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/8d34fd40-e3b6-44e6-87c4-3f3cd0d1b501.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798ce75c20b3acc7c8d4f"
      },
      {
        "name": "sun3.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f9798ce75c20b3acc7c8d50",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/7051f0ba-3f84-419c-b050-d2fc35944a6f.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798ce75c20b3acc7c8d50"
      },
      {
        "name": "lib",
        "content": "",
        "children": [
          "5f9798e775c20b3acc7c8d52"
        ],
        "fileType": "folder",
        "_id": "5f9798e075c20b3acc7c8d51",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798e075c20b3acc7c8d51"
      },
      {
        "name": "p5.play.js",
        "content": "/*\np5.play\nby Paolo Pedercini/molleindustria, 2015\nhttp://molleindustria.org/\n*/\n\n(function(root, factory) {\nif (typeof define === 'function' && define.amd)\ndefine('p5.play', ['p5'], function(p5) { (factory(p5)); });\nelse if (typeof exports === 'object')\nfactory(require('../p5'));\nelse\nfactory(root.p5);\n}(this, function(p5) {\n/**\n * p5.play is a library for p5.js to facilitate the creation of games and gamelike\n * projects.\n *\n * It provides a flexible Sprite class to manage visual objects in 2D space\n * and features such as animation support, basic collision detection\n * and resolution, mouse and keyboard interactions, and a virtual camera.\n *\n * p5.play is not a box2D-derived physics engine, it doesn't use events, and it's\n * designed to be understood and possibly modified by intermediate programmers.\n *\n * See the examples folder for more info on how to use this library.\n *\n * @module p5.play\n * @submodule p5.play\n * @for p5.play\n * @main\n */\n\n// =============================================================================\n//                         initialization\n// =============================================================================\n\n// This is the new way to initialize custom p5 properties for any p5 instance.\n// The goal is to migrate lazy P5 properties over to this method.\n// @see https://github.com/molleindustria/p5.play/issues/46\np5.prototype.registerMethod('init', function p5PlayInit() {\n  /**\n   * The sketch camera automatically created at the beginning of a sketch.\n   * A camera facilitates scrolling and zooming for scenes extending beyond\n   * the canvas. A camera has a position, a zoom factor, and the mouse\n   * coordinates relative to the view.\n   *\n   * In p5.js terms the camera wraps the whole drawing cycle in a\n   * transformation matrix but it can be disabled anytime during the draw\n   * cycle, for example to draw interface elements in an absolute position.\n   *\n   * @property camera\n   * @type {camera}\n   */\n  this.camera = new Camera(this, 0, 0, 1);\n  this.camera.init = false;\n});\n\n// This provides a way for us to lazily define properties that\n// are global to p5 instances.\n//\n// Note that this isn't just an optimization: p5 currently provides no\n// way for add-ons to be notified when new p5 instances are created, so\n// lazily creating these properties is the *only* mechanism available\n// to us. For more information, see:\n//\n// https://github.com/processing/p5.js/issues/1263\nfunction defineLazyP5Property(name, getter) {\n  Object.defineProperty(p5.prototype, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var context = (this instanceof p5 && !this._isGlobal) ? this : window;\n\n      if (typeof(context._p5PlayProperties) === 'undefined') {\n        context._p5PlayProperties = {};\n      }\n      if (!(name in context._p5PlayProperties)) {\n        context._p5PlayProperties[name] = getter.call(context);\n      }\n      return context._p5PlayProperties[name];\n    }\n  });\n}\n\n// This returns a factory function, suitable for passing to\n// defineLazyP5Property, that returns a subclass of the given\n// constructor that is always bound to a particular p5 instance.\nfunction boundConstructorFactory(constructor) {\n  if (typeof(constructor) !== 'function')\n    throw new Error('constructor must be a function');\n\n  return function createBoundConstructor() {\n    var pInst = this;\n\n    function F() {\n      var args = Array.prototype.slice.call(arguments);\n\n      return constructor.apply(this, [pInst].concat(args));\n    }\n    F.prototype = constructor.prototype;\n\n    return F;\n  };\n}\n\n// This is a utility that makes it easy to define convenient aliases to\n// pre-bound p5 instance methods.\n//\n// For example:\n//\n//   var pInstBind = createPInstBinder(pInst);\n//\n//   var createVector = pInstBind('createVector');\n//   var loadImage = pInstBind('loadImage');\n//\n// The above will create functions createVector and loadImage, which can be\n// used similar to p5 global mode--however, they're bound to specific p5\n// instances, and can thus be used outside of global mode.\nfunction createPInstBinder(pInst) {\n  return function pInstBind(methodName) {\n    var method = pInst[methodName];\n\n    if (typeof(method) !== 'function')\n      throw new Error('\"' + methodName + '\" is not a p5 method');\n    return method.bind(pInst);\n  };\n}\n\n// These are utility p5 functions that don't depend on p5 instance state in\n// order to work properly, so we'll go ahead and make them easy to\n// access without needing to bind them to a p5 instance.\nvar abs = p5.prototype.abs;\nvar radians = p5.prototype.radians;\nvar dist = p5.prototype.dist;\nvar degrees = p5.prototype.degrees;\nvar pow = p5.prototype.pow;\nvar round = p5.prototype.round;\n\n\n// =============================================================================\n//                         p5 additions\n// =============================================================================\n\n/**\n* A Group containing all the sprites in the sketch.\n*\n* @property allSprites\n* @type {Group}\n*/\n\ndefineLazyP5Property('allSprites', function() {\n  return new p5.prototype.Group();\n});\n\np5.prototype.spriteUpdate = true;\n\n/**\n   * A Sprite is the main building block of p5.play:\n   * an element able to store images or animations with a set of\n   * properties such as position and visibility.\n   * A Sprite can have a collider that defines the active area to detect\n   * collisions or overlappings with other sprites and mouse interactions.\n   *\n   * Sprites created using createSprite (the preferred way) are added to the\n   * allSprites group and given a depth value that puts it in front of all\n   * other sprites.\n   *\n   * @method createSprite\n   * @param {Number} x Initial x coordinate\n   * @param {Number} y Initial y coordinate\n   * @param {Number} width Width of the placeholder rectangle and of the\n   *                       collider until an image or new collider are set\n   * @param {Number} height Height of the placeholder rectangle and of the\n   *                       collider until an image or new collider are set\n   * @return {Object} The new sprite instance\n   */\n\np5.prototype.createSprite = function(x, y, width, height) {\n  var s = new Sprite(this, x, y, width, height);\n  s.depth = this.allSprites.maxDepth()+1;\n  this.allSprites.add(s);\n  return s;\n};\n\n\n/**\n   * Removes a Sprite from the sketch.\n   * The removed Sprite won't be drawn or updated anymore.\n   * Equivalent to Sprite.remove()\n   *\n   * @method removeSprite\n   * @param {Object} sprite Sprite to be removed\n*/\np5.prototype.removeSprite = function(sprite) {\n  sprite.remove();\n};\n\n/**\n* Updates all the sprites in the sketch (position, animation...)\n* it's called automatically at every draw().\n* It can be paused by passing a parameter true or false;\n* Note: it does not render the sprites.\n*\n* @method updateSprites\n* @param {Boolean} updating false to pause the update, true to resume\n*/\np5.prototype.updateSprites = function(upd) {\n\n  if(upd === false)\n    this.spriteUpdate = false;\n  if(upd === true)\n    this.spriteUpdate = true;\n\n  if(this.spriteUpdate)\n  for(var i = 0; i<this.allSprites.size(); i++)\n  {\n    this.allSprites.get(i).update();\n  }\n};\n\n/**\n* Returns all the sprites in the sketch as an array\n*\n* @method getSprites\n* @return {Array} Array of Sprites\n*/\np5.prototype.getSprites = function() {\n\n  //draw everything\n  if(arguments.length===0)\n  {\n    return this.allSprites.toArray();\n  }\n  else\n  {\n    var arr = [];\n    //for every tag\n    for(var j=0; j<arguments.length; j++)\n    {\n      for(var i = 0; i<this.allSprites.size(); i++)\n      {\n        if(this.allSprites.get(i).isTagged(arguments[j]))\n          arr.push(this.allSprites.get(i));\n      }\n    }\n\n    return arr;\n  }\n\n};\n\n/**\n* Displays a Group of sprites.\n* If no parameter is specified, draws all sprites in the\n* sketch.\n* The drawing order is determined by the Sprite property \"depth\"\n*\n* @method drawSprites\n* @param {Group} [group] Group of Sprites to be displayed\n*/\np5.prototype.drawSprites = function(group) {\n  // If no group is provided, draw the allSprites group.\n  group = group || this.allSprites;\n\n  if (typeof group.draw !== 'function')\n  {\n    throw('Error: with drawSprites you can only draw all sprites or a group');\n  }\n\n  group.draw();\n};\n\n/**\n* Displays a Sprite.\n* To be typically used in the main draw function.\n*\n* @method drawSprite\n* @param {Sprite} sprite Sprite to be displayed\n*/\np5.prototype.drawSprite = function(sprite) {\n  if(sprite)\n  sprite.display();\n};\n\n/**\n* Loads an animation.\n* To be typically used in the preload() function of the sketch.\n*\n* @method loadAnimation\n* @param {Sprite} sprite Sprite to be displayed\n*/\np5.prototype.loadAnimation = function() {\n  return construct(this.Animation, arguments);\n};\n\n/**\n * Loads a Sprite Sheet.\n * To be typically used in the preload() function of the sketch.\n *\n * @method loadSpriteSheet\n */\np5.prototype.loadSpriteSheet = function() {\n  return construct(this.SpriteSheet, arguments);\n};\n\n/**\n* Displays an animation.\n*\n* @method animation\n* @param {Animation} anim Animation to be displayed\n* @param {Number} x X coordinate\n* @param {Number} y Y coordinate\n*\n*/\np5.prototype.animation = function(anim, x, y) {\n  anim.draw(x, y);\n};\n\n//variable to detect instant presses\ndefineLazyP5Property('_p5play', function() {\n  return {\n    keyStates: {},\n    mouseStates: {}\n  };\n});\n\nvar KEY_IS_UP = 0;\nvar KEY_WENT_DOWN = 1;\nvar KEY_IS_DOWN = 2;\nvar KEY_WENT_UP = 3;\n\n/**\n* Detects if a key was pressed during the last cycle.\n* It can be used to trigger events once, when a key is pressed or released.\n* Example: Super Mario jumping.\n*\n* @method keyWentDown\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key was pressed\n*/\np5.prototype.keyWentDown = function(key) {\n  return this._isKeyInState(key, KEY_WENT_DOWN);\n};\n\n\n/**\n* Detects if a key was released during the last cycle.\n* It can be used to trigger events once, when a key is pressed or released.\n* Example: Spaceship shooting.\n*\n* @method keyWentUp\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key was released\n*/\np5.prototype.keyWentUp = function(key) {\n  return this._isKeyInState(key, KEY_WENT_UP);\n};\n\n/**\n* Detects if a key is currently pressed\n* Like p5 keyIsDown but accepts strings and codes\n*\n* @method keyDown\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key is down\n*/\np5.prototype.keyDown = function(key) {\n  return this._isKeyInState(key, KEY_IS_DOWN);\n};\n\n/**\n * Detects if a key is in the given state during the last cycle.\n * Helper method encapsulating common key state logic; it may be preferable\n * to call keyDown or other methods directly.\n *\n * @private\n * @method _isKeyInState\n * @param {Number|String} key Key code or character\n * @param {Number} state Key state to check against\n * @return {Boolean} True if the key is in the given state\n */\np5.prototype._isKeyInState = function(key, state) {\n  var keyCode;\n  var keyStates = this._p5play.keyStates;\n\n  if(typeof key === 'string')\n  {\n    keyCode = this._keyCodeFromAlias(key);\n  }\n  else\n  {\n    keyCode = key;\n  }\n\n  //if undefined start checking it\n  if(keyStates[keyCode]===undefined)\n  {\n    if(this.keyIsDown(keyCode))\n      keyStates[keyCode] = KEY_IS_DOWN;\n    else\n      keyStates[keyCode] = KEY_IS_UP;\n  }\n\n  return (keyStates[keyCode] === state);\n};\n\n/**\n* Detects if a mouse button is currently down\n* Combines mouseIsPressed and mouseButton of p5\n*\n* @method mouseDown\n* @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n* @return {Boolean} True if the button is down\n*/\np5.prototype.mouseDown = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_IS_DOWN);\n};\n\n/**\n* Detects if a mouse button is currently up\n* Combines mouseIsPressed and mouseButton of p5\n*\n* @method mouseUp\n* @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n* @return {Boolean} True if the button is up\n*/\np5.prototype.mouseUp = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_IS_UP);\n};\n\n/**\n * Detects if a mouse button was released during the last cycle.\n * It can be used to trigger events once, to be checked in the draw cycle\n *\n * @method mouseWentUp\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @return {Boolean} True if the button was just released\n */\np5.prototype.mouseWentUp = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_WENT_UP);\n};\n\n\n/**\n * Detects if a mouse button was pressed during the last cycle.\n * It can be used to trigger events once, to be checked in the draw cycle\n *\n * @method mouseWentDown\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @return {Boolean} True if the button was just pressed\n */\np5.prototype.mouseWentDown = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_WENT_DOWN);\n};\n\n/**\n * Detects if a mouse button is in the given state during the last cycle.\n * Helper method encapsulating common mouse button state logic; it may be\n * preferable to call mouseWentUp, etc, directly.\n *\n * @private\n * @method _isMouseButtonInState\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @param {Number} state\n * @return {boolean} True if the button was in the given state\n */\np5.prototype._isMouseButtonInState = function(buttonCode, state) {\n  var mouseStates = this._p5play.mouseStates;\n\n  if(buttonCode === undefined)\n    buttonCode = this.LEFT;\n\n  //undefined = not tracked yet, start tracking\n  if(mouseStates[buttonCode]===undefined)\n  {\n  if(this.mouseIsPressed && this.mouseButton === buttonCode)\n    mouseStates[buttonCode] = KEY_IS_DOWN;\n  else\n    mouseStates[buttonCode] = KEY_IS_UP;\n  }\n\n  return (mouseStates[buttonCode] === state);\n};\n\n\n/**\n * An object storing all useful keys for easy access\n * Key.tab = 9\n *\n * @private\n * @property KEY\n * @type {Object}\n */\np5.prototype.KEY = {\n    'BACKSPACE': 8,\n    'TAB': 9,\n    'ENTER': 13,\n    'SHIFT': 16,\n    'CTRL': 17,\n    'ALT': 18,\n    'PAUSE': 19,\n    'CAPS_LOCK': 20,\n    'ESC': 27,\n    'SPACE': 32,\n    ' ': 32,\n    'PAGE_UP': 33,\n    'PAGE_DOWN': 34,\n    'END': 35,\n    'HOME': 36,\n    'LEFT_ARROW': 37,\n    'LEFT': 37,\n    'UP_ARROW': 38,\n    'UP': 38,\n    'RIGHT_ARROW': 39,\n    'RIGHT': 39,\n    'DOWN_ARROW': 40,\n    'DOWN': 40,\n    'INSERT': 45,\n    'DELETE': 46,\n    '0': 48,\n    '1': 49,\n    '2': 50,\n    '3': 51,\n    '4': 52,\n    '5': 53,\n    '6': 54,\n    '7': 55,\n    '8': 56,\n    '9': 57,\n    'A': 65,\n    'B': 66,\n    'C': 67,\n    'D': 68,\n    'E': 69,\n    'F': 70,\n    'G': 71,\n    'H': 72,\n    'I': 73,\n    'J': 74,\n    'K': 75,\n    'L': 76,\n    'M': 77,\n    'N': 78,\n    'O': 79,\n    'P': 80,\n    'Q': 81,\n    'R': 82,\n    'S': 83,\n    'T': 84,\n    'U': 85,\n    'V': 86,\n    'W': 87,\n    'X': 88,\n    'Y': 89,\n    'Z': 90,\n    '0NUMPAD': 96,\n    '1NUMPAD': 97,\n    '2NUMPAD': 98,\n    '3NUMPAD': 99,\n    '4NUMPAD': 100,\n    '5NUMPAD': 101,\n    '6NUMPAD': 102,\n    '7NUMPAD': 103,\n    '8NUMPAD': 104,\n    '9NUMPAD': 105,\n    'MULTIPLY': 106,\n    'PLUS': 107,\n    'MINUS': 109,\n    'DOT': 110,\n    'SLASH1': 111,\n    'F1': 112,\n    'F2': 113,\n    'F3': 114,\n    'F4': 115,\n    'F5': 116,\n    'F6': 117,\n    'F7': 118,\n    'F8': 119,\n    'F9': 120,\n    'F10': 121,\n    'F11': 122,\n    'F12': 123,\n    'EQUAL': 187,\n    'COMMA': 188,\n    'SLASH': 191,\n    'BACKSLASH': 220\n};\n\n/**\n * An object storing deprecated key aliases, which we still support but\n * should be mapped to valid aliases and generate warnings.\n *\n * @private\n * @property KEY_DEPRECATIONS\n * @type {Object}\n */\np5.prototype.KEY_DEPRECATIONS = {\n  'MINUT': 'MINUS',\n  'COMA': 'COMMA'\n};\n\n/**\n * Given a string key alias (as defined in the KEY property above), look up\n * and return the numeric JavaScript key code for that key.  If a deprecated\n * alias is passed (as defined in the KEY_DEPRECATIONS property) it will be\n * mapped to a valid key code, but will also generate a warning about use\n * of the deprecated alias.\n *\n * @private\n * @method _keyCodeFromAlias\n * @param {!string} alias - a case-insensitive key alias\n * @return {number|undefined} a numeric JavaScript key code, or undefined\n *          if no key code matching the given alias is found.\n */\np5.prototype._keyCodeFromAlias = function(alias) {\n  alias = alias.toUpperCase();\n  if (this.KEY_DEPRECATIONS[alias]) {\n    this._warn('Key literal \"' + alias + '\" is deprecated and may be removed ' +\n      'in a future version of p5.play. ' +\n      'Please use \"' + this.KEY_DEPRECATIONS[alias] + '\" instead.');\n    alias = this.KEY_DEPRECATIONS[alias];\n  }\n  return this.KEY[alias];\n};\n\n//pre draw: detect keyStates\np5.prototype.readPresses = function() {\n  var keyStates = this._p5play.keyStates;\n  var mouseStates = this._p5play.mouseStates;\n\n  for (var key in keyStates) {\n    if(this.keyIsDown(key)) //if is down\n    {\n      if(keyStates[key] === KEY_IS_UP)//and was up\n        keyStates[key] = KEY_WENT_DOWN;\n      else\n        keyStates[key] = KEY_IS_DOWN; //now is simply down\n    }\n    else //if it's up\n    {\n      if(keyStates[key] === KEY_IS_DOWN)//and was up\n        keyStates[key] = KEY_WENT_UP;\n      else\n        keyStates[key] = KEY_IS_UP; //now is simply down\n    }\n  }\n\n  //mouse\n  for (var btn in mouseStates) {\n\n    if(this.mouseIsPressed && this.mouseButton === btn) //if is down\n    {\n      if(mouseStates[btn] === KEY_IS_UP)//and was up\n        mouseStates[btn] = KEY_WENT_DOWN;\n      else\n        mouseStates[btn] = KEY_IS_DOWN; //now is simply down\n    }\n    else //if it's up\n    {\n      if(mouseStates[btn] === KEY_IS_DOWN)//and was up\n        mouseStates[btn] = KEY_WENT_UP;\n      else\n        mouseStates[btn] = KEY_IS_UP; //now is simply down\n    }\n  }\n\n};\n\n/**\n* Turns the quadTree on or off.\n* A quadtree is a data structure used to optimize collision detection.\n* It can improve performance when there is a large number of Sprites to be\n* checked continuously for overlapping.\n*\n* p5.play will create and update a quadtree automatically.\n*\n* @method useQuadTree\n* @param {Boolean} use Pass true to enable, false to disable\n*/\np5.prototype.useQuadTree = function(use) {\n\n  if(this.quadTree !== undefined)\n  {\n    if(use === undefined)\n      return this.quadTree.active;\n    else if(use)\n      this.quadTree.active = true;\n    else\n      this.quadTree.active = false;\n  }\n  else\n    return false;\n};\n\n//the actual quadTree\ndefineLazyP5Property('quadTree', function() {\n  return new Quadtree({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  }, 4);\n});\n\n/*\n//framerate independent delta, doesn't really work\np5.prototype.deltaTime = 1;\n\nvar now = Date.now();\nvar then = Date.now();\nvar INTERVAL_60 = 0.0166666; //60 fps\n\nfunction updateDelta() {\nthen = now;\nnow = Date.now();\ndeltaTime = ((now - then) / 1000)/INTERVAL_60; // seconds since last frame\n}\n*/\n\n/**\n   * A Sprite is the main building block of p5.play:\n   * an element able to store images or animations with a set of\n   * properties such as position and visibility.\n   * A Sprite can have a collider that defines the active area to detect\n   * collisions or overlappings with other sprites and mouse interactions.\n   *\n   * To create a Sprite, use\n   * {{#crossLink \"p5.play/createSprite:method\"}}{{/crossLink}}.\n   *\n   * @class Sprite\n   */\n\n// For details on why these docs aren't in a YUIDoc comment block, see:\n//\n// https://github.com/molleindustria/p5.play/pull/67\n//\n// @param {Number} x Initial x coordinate\n// @param {Number} y Initial y coordinate\n// @param {Number} width Width of the placeholder rectangle and of the\n//                       collider until an image or new collider are set\n// @param {Number} height Height of the placeholder rectangle and of the\n//                        collider until an image or new collider are set\nfunction Sprite(pInst, _x, _y, _w, _h) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n  var color = pInstBind('color');\n  var random = pInstBind('random');\n  var print = pInstBind('print');\n  var push = pInstBind('push');\n  var pop = pInstBind('pop');\n  var colorMode = pInstBind('colorMode');\n  var noStroke = pInstBind('noStroke');\n  var rectMode = pInstBind('rectMode');\n  var ellipseMode = pInstBind('ellipseMode');\n  var imageMode = pInstBind('imageMode');\n  var translate = pInstBind('translate');\n  var scale = pInstBind('scale');\n  var rotate = pInstBind('rotate');\n  var stroke = pInstBind('stroke');\n  var strokeWeight = pInstBind('strokeWeight');\n  var line = pInstBind('line');\n  var noFill = pInstBind('noFill');\n  var fill = pInstBind('fill');\n  var textAlign = pInstBind('textAlign');\n  var textSize = pInstBind('textSize');\n  var text = pInstBind('text');\n  var rect = pInstBind('rect');\n  var cos = pInstBind('cos');\n  var sin = pInstBind('sin');\n  var atan2 = pInstBind('atan2');\n\n  var quadTree = pInst.quadTree;\n  var camera = pInst.camera;\n\n\n  // These are p5 constants that we'd like easy access to.\n  var RGB = p5.prototype.RGB;\n  var CENTER = p5.prototype.CENTER;\n  var LEFT = p5.prototype.LEFT;\n  var BOTTOM = p5.prototype.BOTTOM;\n\n  /**\n  * The sprite's position of the sprite as a vector (x,y).\n  * @property position\n  * @type {p5.Vector}\n  */\n  this.position = createVector(_x, _y);\n\n  /**\n  * The sprite's position at the beginning of the last update as a vector (x,y).\n  * @property previousPosition\n  * @type {p5.Vector}\n  */\n  this.previousPosition = createVector(_x, _y);\n\n  /*\n  The sprite's position at the end of the last update as a vector (x,y).\n  Note: this will differ from position whenever the position is changed\n  directly by assignment.\n  */\n  this.newPosition = createVector(_x, _y);\n\n  //Position displacement on the x coordinate since the last update\n  this.deltaX = 0;\n  this.deltaY = 0;\n\n  /**\n  * The sprite's velocity as a vector (x,y)\n  * Velocity is speed broken down to its vertical and horizontal components.\n  *\n  * @property velocity\n  * @type {p5.Vector}\n  */\n  this.velocity = createVector(0, 0);\n\n  /**\n  * Set a limit to the sprite's scalar speed regardless of the direction.\n  * The value can only be positive. If set to -1, there's no limit.\n  *\n  * @property maxSpeed\n  * @type {Number}\n  * @default -1\n  */\n  this.maxSpeed = -1;\n\n  /**\n  * Friction factor, reduces the sprite's velocity.\n  * The friction should be close to 0 (eg. 0.01)\n  * 0: no friction\n  * 1: full friction\n  *\n  * @property friction\n  * @type {Number}\n  * @default 0\n  */\n  this.friction = 0;\n\n  /**\n  * The sprite's current collider.\n  * It can either be an Axis Aligned Bounding Box (a non-rotated rectangle)\n  * or a circular collider.\n  * If the sprite is checked for collision, bounce, overlapping or mouse events the\n  * collider is automatically created from the width and height\n  * of the sprite or from the image dimension in case of animate sprites\n  *\n  * You can set a custom collider with Sprite.setCollider\n  *\n  * @property collider\n  * @type {Object}\n  */\n  this.collider = undefined;\n\n  //internal use\n  //\"default\" - no image or custom collider is specified, use the shape width / height\n  //\"custom\" - specified with setCollider\n  //\"image\" - no collider is set with setCollider and an image is added\n  this.colliderType = 'none';\n\n  /**\n  * Object containing information about the most recent collision/overlapping\n  * To be typically used in combination with Sprite.overlap or Sprite.collide\n  * functions.\n  * The properties are touching.left, touching.right, touching.top,\n  * touching.bottom and are either true or false depending on the side of the\n  * collider.\n  *\n  * @property touching\n  * @type {Object}\n  */\n  this.touching = {};\n  this.touching.left = false;\n  this.touching.right = false;\n  this.touching.top = false;\n  this.touching.bottom = false;\n\n  /**\n  * The mass determines the velocity transfer when sprites bounce\n  * against each other. See Sprite.bounce\n  * The higher the mass the least the sprite will be affected by collisions.\n  *\n  * @property mass\n  * @type {Number}\n  * @default 1\n  */\n  this.mass = 1;\n\n  /**\n  * If set to true the sprite won't bounce or be displaced by collisions\n  * Simulates an infinite mass or an anchored object.\n  *\n  * @property immovable\n  * @type {Boolean}\n  * @default false\n  */\n  this.immovable = false;\n\n  //Coefficient of restitution - velocity lost in the bouncing\n  //0 perfectly inelastic , 1 elastic, > 1 hyper elastic\n\n  /**\n  * Coefficient of restitution. The velocity lost after bouncing.\n  * 1: perfectly elastic, no energy is lost\n  * 0: perfectly inelastic, no bouncing\n  * less than 1: inelastic, this is the most common in nature\n  * greater than 1: hyper elastic, energy is increased like in a pinball bumper\n  *\n  * @property restitution\n  * @type {Number}\n  * @default 1\n  */\n  this.restitution = 1;\n\n  /**\n  * Rotation in degrees of the visual element (image or animation)\n  * Note: this is not the movement's direction, see getDirection.\n  *\n  * @property rotation\n  * @type {Number}\n  * @default 0\n  */\n  Object.defineProperty(this, 'rotation', {\n    enumerable: true,\n    get: function() {\n      return this._rotation;\n    },\n    set: function(value) {\n      this._rotation = value;\n      if (this.rotateToDirection) {\n        this.setSpeed(this.getSpeed(), value);\n      }\n    }\n  });\n\n  /**\n  * Internal rotation variable (expressed in degrees).\n  * Note: external callers access this through the rotation property above.\n  *\n  * @private\n  * @property _rotation\n  * @type {Number}\n  * @default 0\n  */\n  this._rotation = 0;\n\n  /**\n  * Rotation change in degrees per frame of thevisual element (image or animation)\n  * Note: this is not the movement's direction, see getDirection.\n  *\n  * @property rotationSpeed\n  * @type {Number}\n  * @default 0\n  */\n  this.rotationSpeed = 0;\n\n\n  /**\n  * Automatically lock the rotation property of the visual element\n  * (image or animation) to the sprite's movement direction and vice versa.\n  *\n  * @property rotateToDirection\n  * @type {Boolean}\n  * @default false\n  */\n  this.rotateToDirection = false;\n\n\n  /**\n  * Determines the rendering order within a group: a sprite with\n  * lower depth will appear below the ones with higher depth.\n  *\n  * Note: drawing a group before another with drawSprites will make\n  * its members appear below the second one, like in normal p5 canvas\n  * drawing.\n  *\n  * @property depth\n  * @type {Number}\n  * @default One more than the greatest existing sprite depth, when calling\n  *          createSprite().  When calling new Sprite() directly, depth will\n  *          initialize to 0 (not recommended).\n  */\n  this.depth = 0;\n\n  /**\n  * Determines the sprite's scale.\n  * Example: 2 will be twice the native size of the visuals,\n  * 0.5 will be half. Scaling up may make images blurry.\n  *\n  * @property scale\n  * @type {Number}\n  * @default 1\n  */\n  this.scale = 1;\n\n  var dirX = 1;\n  var dirY = 1;\n\n  /**\n  * The sprite's visibility.\n  *\n  * @property visible\n  * @type {Boolean}\n  * @default true\n  */\n  this.visible = true;\n\n  /**\n  * If set to true sprite will track its mouse state.\n  * the properties mouseIsPressed and mouseIsOver will be updated.\n  * Note: automatically set to true if the functions\n  * onMouseReleased or onMousePressed are set.\n  *\n  * @property mouseActive\n  * @type {Boolean}\n  * @default false\n  */\n  this.mouseActive = false;\n\n  /**\n  * True if mouse is on the sprite's collider.\n  * Read only.\n  *\n  * @property mouseIsOver\n  * @type {Boolean}\n  */\n  this.mouseIsOver = false;\n\n  /**\n  * True if mouse is pressed on the sprite's collider.\n  * Read only.\n  *\n  * @property mouseIsPressed\n  * @type {Boolean}\n  */\n  this.mouseIsPressed = false;\n\n  /*\n  * Width of the sprite's current image.\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  * Used internally to make calculations and draw the sprite.\n  *\n  * @private\n  * @property _internalWidth\n  * @type {Number}\n  * @default 100\n  */\n  this._internalWidth = _w;\n\n  /*\n  * Height of the sprite's current image.\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  * Used internally to make calculations and draw the sprite.\n  *\n  * @private\n  * @property _internalHeight\n  * @type {Number}\n  * @default 100\n  */\n  this._internalHeight = _h;\n\n  /*\n   * _internalWidth and _internalHeight are used for all p5.play\n   * calculations, but width and height can be extended. For example,\n   * you may want users to always get and set a scaled width:\n      Object.defineProperty(this, 'width', {\n        enumerable: true,\n        configurable: true,\n        get: function() {\n          return this._internalWidth * this.scale;\n        },\n        set: function(value) {\n          this._internalWidth = value / this.scale;\n        }\n      });\n   */\n\n  /**\n  * Width of the sprite's current image.\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  *\n  * @property width\n  * @type {Number}\n  * @default 100\n  */\n  Object.defineProperty(this, 'width', {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return this._internalWidth;\n    },\n    set: function(value) {\n      this._internalWidth = value;\n    }\n  });\n\n  if(_w === undefined)\n    this.width = 100;\n  else\n    this.width = _w;\n\n  /**\n  * Height of the sprite's current image.\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  *\n  * @property height\n  * @type {Number}\n  * @default 100\n  */\n  Object.defineProperty(this, 'height', {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return this._internalHeight;\n    },\n    set: function(value) {\n      this._internalHeight = value;\n    }\n  });\n\n  if(_h === undefined)\n    this.height = 100;\n  else\n    this.height = _h;\n\n  /**\n  * Unscaled width of the sprite\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  *\n  * @property originalWidth\n  * @type {Number}\n  * @default 100\n  */\n  this.originalWidth = this._internalWidth;\n\n  /**\n  * Unscaled height of the sprite\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  *\n  * @property originalHeight\n  * @type {Number}\n  * @default 100\n  */\n  this.originalHeight = this._internalHeight;\n\n  /**\n  * True if the sprite has been removed.\n  *\n  * @property removed\n  * @type {Boolean}\n  */\n  this.removed = false;\n\n  /**\n  * Cycles before self removal.\n  * Set it to initiate a countdown, every draw cycle the property is\n  * reduced by 1 unit. At 0 it will call a sprite.remove()\n  * Disabled if set to -1.\n  *\n  * @property life\n  * @type {Number}\n  * @default -1\n  */\n  this.life = -1;\n\n  /**\n  * If set to true, draws an outline of the collider, the depth, and center.\n  *\n  * @property debug\n  * @type {Boolean}\n  * @default false\n  */\n  this.debug = false;\n\n  /**\n  * If no image or animations are set this is color of the\n  * placeholder rectangle\n  *\n  * @property shapeColor\n  * @type {color}\n  */\n  this.shapeColor = color(random(255), random(255), random(255));\n\n  /**\n  * Groups the sprite belongs to, including allSprites\n  *\n  * @property groups\n  * @type {Array}\n  */\n  this.groups = [];\n\n  var animations = {};\n\n  //The current animation's label.\n  var currentAnimation = '';\n\n  /**\n  * Reference to the current animation.\n  *\n  * @property animation\n  * @type {Animation}\n  */\n  this.animation = undefined;\n\n  /**\n  * Internal variable to keep track of whether this sprite is drawn while\n  * the camera is active.\n  * Used in Sprite.update() to know whether to use camera mouse coordinates.\n  * @see https://github.com/molleindustria/p5.play/issues/107\n  *\n  * @private\n  * @property _drawnWithCamera\n  * @type {Boolean}\n  * @default false\n  */\n  this._drawnWithCamera = false;\n\n  /*\n   * @private\n   * Keep animation properties in sync with how the animation changes.\n   */\n  this._syncAnimationSizes = function() {\n    //has an animation but the collider is still default\n    //the animation wasn't loaded. if the animation is not a 1x1 image\n    //it means it just finished loading\n    if(this.colliderType === 'default' &&\n      animations[currentAnimation].getWidth() !== 1 && animations[currentAnimation].getHeight() !== 1)\n    {\n      this.collider = this.getBoundingBox();\n      this.colliderType = 'image';\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n      //quadTree.insert(this);\n    }\n\n    //update size and collider\n    if(animations[currentAnimation].frameChanged || this.width === undefined || this.height === undefined)\n    {\n      //this.collider = this.getBoundingBox();\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n    }\n  };\n\n  /**\n  * Updates the sprite.\n  * Called automatically at the beginning of the draw cycle.\n  *\n  * @method update\n  */\n  this.update = function() {\n\n    if(!this.removed)\n    {\n      //if there has been a change somewhere after the last update\n      //the old position is the last position registered in the update\n      if(this.newPosition !== this.position)\n        this.previousPosition = createVector(this.newPosition.x, this.newPosition.y);\n      else\n        this.previousPosition = createVector(this.position.x, this.position.y);\n\n      this.velocity.x *= 1 - this.friction;\n      this.velocity.y *= 1 - this.friction;\n\n      if(this.maxSpeed !== -1)\n        this.limitSpeed(this.maxSpeed);\n\n      if(this.rotateToDirection && this.velocity.mag() > 0)\n        this._rotation = this.getDirection();\n\n      this.rotation += this.rotationSpeed;\n\n      this.position.x += this.velocity.x;\n      this.position.y += this.velocity.y;\n\n      this.newPosition = createVector(this.position.x, this.position.y);\n\n      this.deltaX = this.position.x - this.previousPosition.x;\n      this.deltaY = this.position.y - this.previousPosition.y;\n\n      //if there is an animation\n      if(animations[currentAnimation])\n      {\n        //update it\n        animations[currentAnimation].update();\n\n        this._syncAnimationSizes();\n      }\n\n      //a collider is created either manually with setCollider or\n      //when I check this sprite for collisions or overlaps\n      if(this.collider)\n      {\n        if(this.collider instanceof AABB)\n        {\n        //scale / rotate collider\n        var t;\n        if (pInst._angleMode === pInst.RADIANS) {\n          t = radians(this.rotation);\n        } else {\n          t = this.rotation;\n        }\n\n        if(this.colliderType === 'custom')\n          {\n          this.collider.extents.x = this.collider.originalExtents.x * abs(this._getScaleX()) * abs(cos(t)) +\n          this.collider.originalExtents.y * abs(this._getScaleY()) * abs(sin(t));\n\n          this.collider.extents.y = this.collider.originalExtents.x * abs(this._getScaleX()) * abs(sin(t)) +\n          this.collider.originalExtents.y * abs(this._getScaleY()) * abs(cos(t));\n          }\n        else if(this.colliderType === 'default')\n          {\n          this.collider.extents.x = this._internalWidth * abs(this._getScaleX()) * abs(cos(t)) +\n          this._internalHeight * abs(this._getScaleY()) * abs(sin(t));\n          this.collider.extents.y = this._internalWidth * abs(this._getScaleX()) * abs(sin(t)) +\n          this._internalHeight * abs(this._getScaleY()) * abs(cos(t));\n          }\n        else if(this.colliderType === 'image')\n          {\n          this.collider.extents.x = this._internalWidth * abs(cos(t)) +\n          this._internalHeight * abs(sin(t));\n\n          this.collider.extents.y = this._internalWidth * abs(sin(t)) +\n          this._internalHeight * abs(cos(t));\n          }\n        }\n\n        if(this.collider instanceof CircleCollider)\n        {\n        //print(this.scale);\n        this.collider.radius = this.collider.originalRadius * abs(this.scale);\n        }\n\n      }//end collider != null\n\n      //mouse actions\n      if (this.mouseActive)\n      {\n        //if no collider set it\n          if(!this.collider)\n            this.setDefaultCollider();\n\n        this.mouseUpdate();\n      }\n      else\n      {\n        if (typeof(this.onMouseOver) === 'function' ||\n            typeof(this.onMouseOut) === 'function' ||\n            typeof(this.onMousePressed) === 'function' ||\n            typeof(this.onMouseReleased) === 'function')\n        {\n          //if a mouse function is set\n          //it's implied we want to have it mouse active so\n          //we do this automatically\n          this.mouseActive = true;\n\n          //if no collider set it\n          if(!this.collider)\n            this.setDefaultCollider();\n\n          this.mouseUpdate();\n        }\n      }\n\n      //self destruction countdown\n      if (this.life>0)\n        this.life--;\n      if (this.life === 0)\n        this.remove();\n    }\n  };//end update\n\n  /**\n   * Creates a default collider matching the size of the\n   * placeholder rectangle or the bounding box of the image.\n   *\n   * @method setDefaultCollider\n   */\n  this.setDefaultCollider = function() {\n\n    //if has animation get the animation bounding box\n    //working only for preloaded images\n    if(animations[currentAnimation] && (animations[currentAnimation].getWidth() !== 1 && animations[currentAnimation].getHeight() !== 1))\n    {\n      this.collider = this.getBoundingBox();\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n      //quadTree.insert(this);\n      this.colliderType = 'image';\n      //print(\"IMAGE COLLIDER ADDED\");\n    }\n    else if(animations[currentAnimation] && animations[currentAnimation].getWidth() === 1 && animations[currentAnimation].getHeight() === 1)\n    {\n    //animation is still loading\n    //print(\"wait\");\n    }\n    else //get the with and height defined at the creation\n    {\n      this.collider = new AABB(pInst, this.position, createVector(this._internalWidth, this._internalHeight));\n      //quadTree.insert(this);\n      this.colliderType = 'default';\n    }\n\n    pInst.quadTree.insert(this);\n  };\n\n  /**\n   * Updates the sprite mouse states and triggers the mouse events:\n   * onMouseOver, onMouseOut, onMousePressed, onMouseReleased\n   *\n   * @method mouseUpdate\n   */\n  this.mouseUpdate = function() {\n\n    var mouseWasOver = this.mouseIsOver;\n    var mouseWasPressed = this.mouseIsPressed;\n\n    this.mouseIsOver = false;\n    this.mouseIsPressed = false;\n\n    var mousePosition;\n\n    if(this._drawnWithCamera)\n      mousePosition = createVector(camera.mouseX, camera.mouseY);\n    else\n      mousePosition = createVector(pInst.mouseX, pInst.mouseY);\n\n      //rollover\n      if(this.collider)\n      {\n\n        if (this.collider instanceof CircleCollider)\n        {\n          if (dist(mousePosition.x, mousePosition.y, this.collider.center.x, this.collider.center.y) < this.collider.radius)\n            this.mouseIsOver = true;\n        } else if (this.collider instanceof AABB)\n        {\n          if (mousePosition.x > this.collider.left() &&\n              mousePosition.y > this.collider.top() &&\n              mousePosition.x < this.collider.right() &&\n              mousePosition.y < this.collider.bottom())\n          {\n            this.mouseIsOver = true;\n          }\n        }\n\n        //global p5 var\n        if(this.mouseIsOver && pInst.mouseIsPressed)\n          this.mouseIsPressed = true;\n\n        //event change - call functions\n        if(!mouseWasOver && this.mouseIsOver && this.onMouseOver !== undefined)\n          if(typeof(this.onMouseOver) === 'function')\n            this.onMouseOver.call(this, this);\n          else\n            print('Warning: onMouseOver should be a function');\n\n        if(mouseWasOver && !this.mouseIsOver && this.onMouseOut !== undefined)\n          if(typeof(this.onMouseOut) === 'function')\n            this.onMouseOut.call(this, this);\n          else\n            print('Warning: onMouseOut should be a function');\n\n        if(!mouseWasPressed && this.mouseIsPressed && this.onMousePressed !== undefined)\n          if(typeof(this.onMousePressed) === 'function')\n            this.onMousePressed.call(this, this);\n          else\n            print('Warning: onMousePressed should be a function');\n\n        if(mouseWasPressed && !pInst.mouseIsPressed && !this.mouseIsPressed && this.onMouseReleased !== undefined)\n          if(typeof(this.onMouseReleased) === 'function')\n            this.onMouseReleased.call(this, this);\n          else\n            print('Warning: onMouseReleased should be a function');\n\n      }\n\n  };\n\n  /**\n  * Sets a collider for the sprite.\n  *\n  * In p5.play a Collider is an invisible circle or rectangle\n  * that can have any size or position relative to the sprite and which\n  * will be used to detect collisions and overlapping with other sprites,\n  * or the mouse cursor.\n  *\n  * If the sprite is checked for collision, bounce, overlapping or mouse events\n  * a collider is automatically created from the width and height parameter\n  * passed at the creation of the sprite or the from the image dimension in case\n  * of animated sprites.\n  *\n  * Often the image bounding box is not appropriate as the active area for\n  * collision detection so you can set a circular or rectangular sprite with\n  * different dimensions and offset from the sprite's center.\n  *\n  * There are four ways to call this method:\n  *\n  * 1. setCollider(\"rectangle\")\n  * 2. setCollider(\"rectangle\", offsetX, offsetY, width, height)\n  * 3. setCollider(\"circle\")\n  * 4. setCollider(\"circle\", offsetX, offsetY, radius)\n  *\n  * @method setCollider\n  * @param {String} type Either \"rectangle\" or \"circle\"\n  * @param {Number} offsetX Collider x position from the center of the sprite\n  * @param {Number} offsetY Collider y position from the center of the sprite\n  * @param {Number} width Collider width or radius\n  * @param {Number} height Collider height\n  * @throws {TypeError} if given invalid parameters.\n  */\n  this.setCollider = function(type, offsetX, offsetY, width, height) {\n    if (!(type === 'rectangle' || type === 'circle')) {\n      throw new TypeError('setCollider expects the first argument to be either \"circle\" or \"rectangle\"');\n    } else if (type === 'circle' && arguments.length > 1 && arguments.length < 4) {\n      throw new TypeError('Usage: setCollider(\"circle\") or setCollider(\"circle\", offsetX, offsetY, radius)');\n    } else if (type === 'circle' && arguments.length > 4) {\n      pInst._warn('Extra parameters to setCollider were ignored. Usage: setCollider(\"circle\") or setCollider(\"circle\", offsetX, offsetY, radius)');\n    } else if (type === 'rectangle' && arguments.length > 1 && arguments.length < 5) {\n      throw new TypeError('Usage: setCollider(\"rectangle\") or setCollider(\"rectangle\", offsetX, offsetY, width, height)');\n    } else if (type === 'rectangle' && arguments.length > 5) {\n      pInst._warn('Extra parameters to setCollider were ignored. Usage: setCollider(\"rectangle\") or setCollider(\"rectangle\", offsetX, offsetY, width, height)');\n    }\n\n    this.colliderType = 'custom';\n\n    var v = createVector(offsetX, offsetY);\n    if (type === 'rectangle' && arguments.length === 1) {\n      this.collider = new AABB(pInst, this.position, createVector(this.width, this.height));\n    } else if (type === 'rectangle' && arguments.length >= 5) {\n      this.collider = new AABB(pInst, this.position, createVector(width, height), v);\n    } else if (type === 'circle' && arguments.length === 1) {\n      this.collider = new CircleCollider(pInst, this.position, Math.floor(Math.max(this.width, this.height) / 2));\n    } else if (type === 'circle' && arguments.length >= 4) {\n      this.collider = new CircleCollider(pInst, this.position, width, v);\n    }\n\n    quadTree.insert(this);\n  };\n\n  /**\n   * Returns a the bounding box of the current image\n   * @method getBoundingBox\n   */\n  this.getBoundingBox = function() {\n\n    var w = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n    var h = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n\n    //if the bounding box is 1x1 the image is not loaded\n    //potential issue with actual 1x1 images\n    if(w === 1 && h === 1) {\n      //not loaded yet\n      return new AABB(pInst, this.position, createVector(w, h));\n    }\n    else {\n      return new AABB(pInst, this.position, createVector(w, h));\n    }\n  };\n\n  /**\n  * Sets the sprite's horizontal mirroring.\n  * If 1 the images displayed normally\n  * If -1 the images are flipped horizontally\n  * If no argument returns the current x mirroring\n  *\n  * @method mirrorX\n  * @param {Number} dir Either 1 or -1\n  * @return {Number} Current mirroring if no parameter is specified\n  */\n  this.mirrorX = function(dir) {\n    if(dir === 1 || dir === -1)\n      dirX = dir;\n    else\n      return dirX;\n  };\n\n  /**\n  * Sets the sprite's vertical mirroring.\n  * If 1 the images displayed normally\n  * If -1 the images are flipped vertically\n  * If no argument returns the current y mirroring\n  *\n  * @method mirrorY\n  * @param {Number} dir Either 1 or -1\n  * @return {Number} Current mirroring if no parameter is specified\n  */\n  this.mirrorY = function(dir) {\n    if(dir === 1 || dir === -1)\n      dirY = dir;\n    else\n      return dirY;\n  };\n\n  /*\n   * Returns the value the sprite should be scaled in the X direction.\n   * Used to calculate rendering and collisions.\n   * @private\n   */\n  this._getScaleX = function()\n  {\n    return this.scale;\n  };\n\n  /*\n   * Returns the value the sprite should be scaled in the Y direction.\n   * Used to calculate rendering and collisions.\n   * @private\n   */\n  this._getScaleY = function()\n  {\n    return this.scale;\n  };\n\n  /**\n   * Manages the positioning, scale and rotation of the sprite\n   * Called automatically, it should not be overridden\n   * @private\n   * @final\n   * @method display\n   */\n  this.display = function()\n  {\n    if (this.visible && !this.removed)\n    {\n      push();\n      colorMode(RGB);\n\n      noStroke();\n      rectMode(CENTER);\n      ellipseMode(CENTER);\n      imageMode(CENTER);\n\n      translate(this.position.x, this.position.y);\n      scale(this._getScaleX()*dirX, this._getScaleY()*dirY);\n      if (pInst._angleMode === pInst.RADIANS) {\n        rotate(radians(this.rotation));\n      } else {\n        rotate(this.rotation);\n      }\n      this.draw();\n      //draw debug info\n      pop();\n\n      this._drawnWithCamera = camera.active;\n\n      if(this.debug)\n      {\n        push();\n        //draw the anchor point\n        stroke(0, 255, 0);\n        strokeWeight(1);\n        line(this.position.x-10, this.position.y, this.position.x+10, this.position.y);\n        line(this.position.x, this.position.y-10, this.position.x, this.position.y+10);\n        noFill();\n\n        //depth number\n        noStroke();\n        fill(0, 255, 0);\n        textAlign(LEFT, BOTTOM);\n        textSize(16);\n        text(this.depth+'', this.position.x+4, this.position.y-2);\n\n        noFill();\n        stroke(0, 255, 0);\n\n        //bounding box\n        if(this.collider !== undefined)\n        {\n          this.collider.draw();\n        }\n        pop();\n      }\n\n    }\n  };\n\n\n  /**\n  * Manages the visuals of the sprite.\n  * It can be overridden with a custom drawing function.\n  * The 0,0 point will be the center of the sprite.\n  * Example:\n  * sprite.draw = function() { ellipse(0,0,10,10) }\n  * Will display the sprite as circle.\n  *\n  * @method draw\n  */\n  this.draw = function()\n  {\n    if(currentAnimation !== '' && animations)\n    {\n      if(animations[currentAnimation])\n        animations[currentAnimation].draw(0, 0, 0);\n    }\n    else\n    {\n      noStroke();\n      fill(this.shapeColor);\n      rect(0, 0, this._internalWidth, this._internalHeight);\n    }\n  };\n\n  /**\n   * Removes the Sprite from the sketch.\n   * The removed Sprite won't be drawn or updated anymore.\n   *\n   * @method remove\n   */\n  this.remove = function() {\n    this.removed = true;\n\n    quadTree.removeObject(this);\n\n    //when removed from the \"scene\" also remove all the references in all the groups\n    while (this.groups.length > 0) {\n      this.groups[0].remove(this);\n    }\n  };\n\n  /**\n  * Sets the velocity vector.\n  *\n  * @method setVelocity\n  * @param {Number} x X component\n  * @param {Number} y Y component\n  */\n  this.setVelocity = function(x, y) {\n    this.velocity.x = x;\n    this.velocity.y = y;\n  };\n\n  /**\n  * Calculates the scalar speed.\n  *\n  * @method getSpeed\n  * @return {Number} Scalar speed\n  */\n  this.getSpeed = function() {\n    return this.velocity.mag();\n  };\n\n  /**\n  * Calculates the movement's direction in degrees.\n  *\n  * @method getDirection\n  * @return {Number} Angle in degrees\n  */\n  this.getDirection = function() {\n\n    var direction = atan2(this.velocity.y, this.velocity.x);\n\n    if(isNaN(direction))\n      direction = 0;\n\n    // Unlike Math.atan2, the atan2 method above will return degrees if\n    // the current p5 angleMode is DEGREES, and radians if the p5 angleMode is\n    // RADIANS.  This method should always return degrees (for now).\n    // See https://github.com/molleindustria/p5.play/issues/94\n    if (pInst._angleMode === pInst.RADIANS) {\n      direction = degrees(direction);\n    }\n\n    return direction;\n  };\n\n  /**\n  * Adds the sprite to an existing group\n  *\n  * @method addToGroup\n  * @param {Object} group\n  */\n  this.addToGroup = function(group) {\n    if(group instanceof Array)\n      group.add(this);\n    else\n      print('addToGroup error: '+group+' is not a group');\n  };\n\n  /**\n  * Limits the scalar speed.\n  *\n  * @method limitSpeed\n  * @param {Number} max Max speed: positive number\n  */\n  this.limitSpeed = function(max) {\n\n    //update linear speed\n    var speed = this.getSpeed();\n\n    if(abs(speed)>max)\n    {\n      //find reduction factor\n      var k = max/abs(speed);\n      this.velocity.x *= k;\n      this.velocity.y *= k;\n    }\n  };\n\n  /**\n  * Set the speed and direction of the sprite.\n  * The action overwrites the current velocity.\n  * If direction is not supplied, the current direction is maintained.\n  * If direction is not supplied and there is no current velocity, the current\n  * rotation angle used for the direction.\n  *\n  * @method setSpeed\n  * @param {Number}  speed Scalar speed\n  * @param {Number}  [angle] Direction in degrees\n  */\n  this.setSpeed = function(speed, angle) {\n    var a;\n    if (typeof angle === 'undefined') {\n      if (this.velocity.x !== 0 || this.velocity.y !== 0) {\n        a = pInst.atan2(this.velocity.y, this.velocity.x);\n      } else {\n        if (pInst._angleMode === pInst.RADIANS) {\n          a = radians(this._rotation);\n        } else {\n          a = this._rotation;\n        }\n      }\n    } else {\n      if (pInst._angleMode === pInst.RADIANS) {\n        a = radians(angle);\n      } else {\n        a = angle;\n      }\n    }\n    this.velocity.x = cos(a)*speed;\n    this.velocity.y = sin(a)*speed;\n  };\n\n  /**\n  * Pushes the sprite in a direction defined by an angle.\n  * The force is added to the current velocity.\n  *\n  * @method addSpeed\n  * @param {Number}  speed Scalar speed to add\n  * @param {Number}  angle Direction in degrees\n  */\n  this.addSpeed = function(speed, angle) {\n    var a;\n    if (pInst._angleMode === pInst.RADIANS) {\n      a = radians(angle);\n    } else {\n      a = angle;\n    }\n    this.velocity.x += cos(a) * speed;\n    this.velocity.y += sin(a) * speed;\n  };\n\n  /**\n  * Pushes the sprite toward a point.\n  * The force is added to the current velocity.\n  *\n  * @method attractionPoint\n  * @param {Number}  magnitude Scalar speed to add\n  * @param {Number}  pointX Direction x coordinate\n  * @param {Number}  pointY Direction y coordinate\n  */\n  this.attractionPoint = function(magnitude, pointX, pointY) {\n    var angle = atan2(pointY-this.position.y, pointX-this.position.x);\n    this.velocity.x += cos(angle) * magnitude;\n    this.velocity.y += sin(angle) * magnitude;\n  };\n\n\n  /**\n  * Adds an image to the sprite.\n  * An image will be considered a one-frame animation.\n  * The image should be preloaded in the preload() function using p5 loadImage.\n  * Animations require a identifying label (string) to change them.\n  * The image is stored in the sprite but not necessarily displayed\n  * until Sprite.changeAnimation(label) is called\n  *\n  * Usages:\n  * - sprite.addImage(label, image);\n  * - sprite.addImage(image);\n  *\n  * If only an image is passed no label is specified\n  *\n  * @method addImage\n  * @param {String|p5.Image} label Label or image\n  * @param {p5.Image} [img] Image\n  */\n  this.addImage = function()\n  {\n    if(typeof arguments[0] === 'string' && arguments[1] instanceof p5.Image)\n      this.addAnimation(arguments[0], arguments[1]);\n    else if(arguments[0] instanceof p5.Image)\n      this.addAnimation('normal', arguments[0]);\n    else\n      throw('addImage error: allowed usages are <image> or <label>, <image>');\n  };\n\n  /**\n  * Adds an animation to the sprite.\n  * The animation should be preloaded in the preload() function\n  * using loadAnimation.\n  * Animations require a identifying label (string) to change them.\n  * Animations are stored in the sprite but not necessarily displayed\n  * until Sprite.changeAnimation(label) is called.\n  *\n  * Usage:\n  * - sprite.addAnimation(label, animation);\n  *\n  * Alternative usages. See Animation for more information on file sequences:\n  * - sprite.addAnimation(label, firstFrame, lastFrame);\n  * - sprite.addAnimation(label, frame1, frame2, frame3...);\n  *\n  * @method addAnimation\n  * @param {String} label Animation identifier\n  * @param {Animation} animation The preloaded animation\n  */\n  this.addAnimation = function(label)\n  {\n    var anim;\n\n    if(typeof label !== 'string')\n    {\n      print('Sprite.addAnimation error: the first argument must be a label (String)');\n      return -1;\n    }\n    else if(arguments.length < 2)\n    {\n      print('addAnimation error: you must specify a label and n frame images');\n      return -1;\n    }\n    else if(arguments[1] instanceof Animation)\n    {\n\n      var sourceAnimation = arguments[1];\n\n      var newAnimation = sourceAnimation.clone();\n\n      animations[label] = newAnimation;\n\n      if(currentAnimation === '')\n      {\n        currentAnimation = label;\n        this.animation = newAnimation;\n      }\n\n      newAnimation.isSpriteAnimation = true;\n\n      this._internalWidth = newAnimation.getWidth()*abs(this._getScaleX());\n      this._internalHeight = newAnimation.getHeight()*abs(this._getScaleY());\n\n      return newAnimation;\n    }\n    else\n    {\n      var animFrames = [];\n      for(var i=1; i<arguments.length; i++)\n        animFrames.push(arguments[i]);\n\n      anim = construct(pInst.Animation, animFrames);\n      animations[label] = anim;\n\n      if(currentAnimation === '')\n      {\n        currentAnimation = label;\n        this.animation = anim;\n      }\n      anim.isSpriteAnimation = true;\n\n      this._internalWidth = anim.getWidth()*abs(this._getScaleX());\n      this._internalHeight = anim.getHeight()*abs(this._getScaleY());\n\n      return anim;\n    }\n\n  };\n\n  /**\n  * Changes the displayed image/animation.\n  * Equivalent to changeAnimation\n  *\n  * @method changeImage\n  * @param {String} label Image/Animation identifier\n  */\n  this.changeImage = function(label) {\n    this.changeAnimation(label);\n  };\n\n   /**\n  * Returns the label of the current animation\n  *\n  * @method getAnimationLabel\n  * @return {String} label Image/Animation identifier\n  */\n  this.getAnimationLabel = function() {\n    return currentAnimation;\n  };\n\n  /**\n  * Changes the displayed animation.\n  * See Animation for more control over the sequence.\n  *\n  * @method changeAnimation\n  * @param {String} label Animation identifier\n  */\n  this.changeAnimation = function(label) {\n    if(!animations[label])\n      print('changeAnimation error: no animation labeled '+label);\n    else\n    {\n      currentAnimation = label;\n      this.animation = animations[label];\n    }\n  };\n\n  /**\n  * Checks if the given point corresponds to a transparent pixel\n  * in the sprite's current image. It can be used to check a point collision\n  * against only the visible part of the sprite.\n  *\n  * @method overlapPixel\n  * @param {Number} pointX x coordinate of the point to check\n  * @param {Number} pointY y coordinate of the point to check\n  * @return {Boolean} result True if non-transparent\n  */\n  this.overlapPixel = function(pointX, pointY) {\n    var point = createVector(pointX, pointY);\n\n    var img = this.animation.getFrameImage();\n\n    //convert point to img relative position\n    point.x -= this.position.x-img.width/2;\n    point.y -= this.position.y-img.height/2;\n\n    //out of the image entirely\n    if(point.x<0 || point.x>img.width || point.y<0 || point.y>img.height)\n      return false;\n    else if(this.rotation === 0 && this.scale === 1)\n    {\n      //true if full opacity\n      var values = img.get(point.x, point.y);\n      return values[3] === 255;\n    }\n    else\n    {\n      print('Error: overlapPixel doesn\\'t work with scaled or rotated sprites yet');\n      //offscreen printing to be implemented bleurch\n      return false;\n    }\n  };\n\n  /**\n  * Checks if the given point is inside the sprite's collider.\n  *\n  * @method overlapPoint\n  * @param {Number} pointX x coordinate of the point to check\n  * @param {Number} pointY y coordinate of the point to check\n  * @return {Boolean} result True if inside\n  */\n  this.overlapPoint = function(pointX, pointY) {\n    var point = createVector(pointX, pointY);\n\n    if(!this.collider)\n      this.setDefaultCollider();\n\n    if(this.collider !== undefined)\n    {\n      if(this.collider instanceof AABB)\n        return (point.x > this.collider.left() && point.x < this.collider.right() && point.y > this.collider.top() && point.y < this.collider.bottom());\n      if(this.collider instanceof CircleCollider)\n      {\n        var sqRadius = this.collider.radius * this.collider.radius;\n        var sqDist = pow(this.collider.center.x - point.x, 2) + pow(this.collider.center.y - point.y, 2);\n        return sqDist<sqRadius;\n      }\n      else\n        return false;\n    }\n    else\n      return false;\n\n  };\n\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * If the target is a group the function will be called for each single\n  * sprite overlapping. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.overlap(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method overlap\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.overlap = function(target, callback) {\n    //if(this.collider instanceof AABB && target.collider instanceof AABB)\n    return this.AABBops('overlap', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the current sprite will be displace by\n  * the colliding one in the closest non-overlapping position.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.collide(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method collide\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.collide = function(target, callback) {\n    //if(this.collider instanceof AABB && target.collider instanceof AABB)\n    return this.AABBops('collide', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the current sprite will displace\n  * the colliding one to the closest non-overlapping position.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.displace(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method displace\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.displace = function(target, callback) {\n    return this.AABBops('displace', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the sprites will bounce affecting each\n  * other's trajectories depending on their .velocity, .mass and .restitution\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.bounce(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method bounce\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.bounce = function(target, callback) {\n    return this.AABBops('bounce', target, callback);\n  };\n\n  // Internal collision detection function. Do not use directly.\n  this.AABBops = function(type, target, callback) {\n\n    this.touching.left = false;\n    this.touching.right = false;\n    this.touching.top = false;\n    this.touching.bottom = false;\n\n    var result = false;\n\n    //if single sprite turn into array anyway\n    var others = [];\n\n    if(target instanceof Sprite)\n      others.push(target);\n    else if(target instanceof Array)\n    {\n      if(quadTree !== undefined && quadTree.active)\n        others = quadTree.retrieveFromGroup( this, target);\n\n      if(others.length === 0)\n        others = target;\n\n    }\n    else\n      throw('Error: overlap can only be checked between sprites or groups');\n\n    for(var i=0; i<others.length; i++)\n      if(this !== others[i] && !this.removed) //you can check collisions within the same group but not on itself\n      {\n        var displacement;\n        var other = others[i];\n\n        if(this.collider === undefined)\n          this.setDefaultCollider();\n\n        if(other.collider === undefined)\n          other.setDefaultCollider();\n\n        /*\n        if(this.colliderType==\"default\" && animations[currentAnimation]!=null)\n        {\n          print(\"busted\");\n          return false;\n        }*/\n        if(this.collider !== undefined && other.collider !== undefined)\n        {\n        if(type === 'overlap') {\n            var over;\n\n            //if the other is a circle I calculate the displacement from here\n            if(this.collider instanceof CircleCollider)\n                over = other.collider.overlap(this.collider);\n            else\n                over = this.collider.overlap(other.collider);\n\n            if(over)\n            {\n\n              result = true;\n\n              if(callback !== undefined && typeof callback === 'function')\n                callback.call(this, this, other);\n            }\n          }\n        else if(type === 'collide' || type === 'displace' || type === 'bounce')\n          {\n            displacement = createVector(0, 0);\n\n            //if the sum of the speed is more than the collider i may\n            //have a tunnelling problem\n            var tunnelX = abs(this.velocity.x-other.velocity.x) >= other.collider.extents.x/2 && round(this.deltaX - this.velocity.x) === 0;\n\n            var tunnelY = abs(this.velocity.y-other.velocity.y) >= other.collider.size().y/2 && round(this.deltaY - this.velocity.y) === 0;\n\n\n            if(tunnelX || tunnelY)\n            {\n              //instead of using the colliders I use the bounding box\n              //around the previous position and current position\n              //this is regardless of the collider type\n\n              //the center is the average of the coll centers\n              var c = createVector(\n                (this.position.x+this.previousPosition.x)/2,\n                (this.position.y+this.previousPosition.y)/2);\n\n              //the extents are the distance between the coll centers\n              //plus the extents of both\n              var e = createVector(\n                abs(this.position.x -this.previousPosition.x) + this.collider.extents.x,\n                abs(this.position.y -this.previousPosition.y) + this.collider.extents.y);\n\n              var bbox = new AABB(pInst, c, e, this.collider.offset);\n\n              //bbox.draw();\n\n              if(bbox.overlap(other.collider))\n              {\n                if(tunnelX) {\n\n                  //entering from the right\n                  if(this.velocity.x < 0)\n                    displacement.x = other.collider.right() - this.collider.left() + 1;\n                  else if(this.velocity.x > 0 )\n                    displacement.x = other.collider.left() - this.collider.right() -1;\n                  }\n\n                if(tunnelY) {\n                  //from top\n                  if(this.velocity.y > 0)\n                    displacement.y = other.collider.top() - this.collider.bottom() - 1;\n                  else if(this.velocity.y < 0 )\n                    displacement.y = other.collider.bottom() - this.collider.top() + 1;\n\n                  }\n\n              }//end overlap\n\n            }\n            else //non tunnel overlap\n            {\n\n              //if the other is a circle I calculate the displacement from here\n              //and reverse it\n              if(this.collider instanceof CircleCollider)\n                {\n                displacement = other.collider.collide(this.collider).mult(-1);\n                }\n              else\n                displacement = this.collider.collide(other.collider);\n\n            }\n\n            if(displacement.x !== 0 || displacement.y !== 0)\n            {\n              var newVelX1, newVelY1, newVelX2, newVelY2;\n\n              if (type === 'displace' && !other.immovable) {\n                other.position.sub(displacement);\n              } else if ((type === 'collide' || type === 'bounce') && !this.immovable) {\n                this.position.add(displacement);\n                this.previousPosition = createVector(this.position.x, this.position.y);\n                this.newPosition = createVector(this.position.x, this.position.y);\n              }\n\n              if(displacement.x > 0)\n                this.touching.left = true;\n              if(displacement.x < 0)\n                this.touching.right = true;\n              if(displacement.y < 0)\n                this.touching.bottom = true;\n              if(displacement.y > 0)\n                this.touching.top = true;\n\n              if(type === 'bounce')\n              {\n                if (this.collider instanceof CircleCollider && other.collider instanceof CircleCollider) {\n                  var dx1 = p5.Vector.sub(this.position, other.position);\n                  var dx2 = p5.Vector.sub(other.position, this.position);\n                  var magnitude = dx1.magSq();\n                  var totalMass = this.mass + other.mass;\n                  var m1 = 0, m2 = 0;\n                  if (this.immovable) {\n                    m2 = 2;\n                  } else if (other.immovable) {\n                    m1 = 2;\n                  } else {\n                    m1 = 2 * other.mass / totalMass;\n                    m2 = 2 * this.mass / totalMass;\n                  }\n                  var newVel1 = dx1.mult(m1 * p5.Vector.sub(this.velocity, other.velocity).dot(dx1) / magnitude);\n                  var newVel2 = dx2.mult(m2 * p5.Vector.sub(other.velocity, this.velocity).dot(dx2) / magnitude);\n\n                  this.velocity.sub(newVel1.mult(this.restitution));\n                  other.velocity.sub(newVel2.mult(other.restitution));\n                }\n                else {\n                if(other.immovable)\n                {\n                  newVelX1 = -this.velocity.x+other.velocity.x;\n                  newVelY1 = -this.velocity.y+other.velocity.y;\n                }\n                else\n                {\n                  newVelX1 = (this.velocity.x * (this.mass - other.mass) + (2 * other.mass * other.velocity.x)) / (this.mass + other.mass);\n                  newVelY1 = (this.velocity.y * (this.mass - other.mass) + (2 * other.mass * other.velocity.y)) / (this.mass + other.mass);\n                  newVelX2 = (other.velocity.x * (other.mass - this.mass) + (2 * this.mass * this.velocity.x)) / (this.mass + other.mass);\n                  newVelY2 = (other.velocity.y * (other.mass - this.mass) + (2 * this.mass * this.velocity.y)) / (this.mass + other.mass);\n                }\n\n                //var bothCircles = (this.collider instanceof CircleCollider &&\n                //                   other.collider  instanceof CircleCollider);\n\n                //if(this.touching.left || this.touching.right || this.collider instanceof CircleCollider)\n\n                //print(displacement);\n\n                if(abs(displacement.x)>abs(displacement.y))\n                {\n\n\n                  if(!this.immovable)\n                  {\n                    this.velocity.x = newVelX1*this.restitution;\n\n                  }\n\n                  if(!other.immovable)\n                    other.velocity.x = newVelX2*other.restitution;\n\n                }\n                //if(this.touching.top || this.touching.bottom || this.collider instanceof CircleCollider)\n                if(abs(displacement.x)<abs(displacement.y))\n                {\n\n                  if(!this.immovable)\n                    this.velocity.y = newVelY1*this.restitution;\n\n                  if(!other.immovable)\n                    other.velocity.y = newVelY2*other.restitution;\n                }\n                }\n              }\n              //else if(type == \"collide\")\n                //this.velocity = createVector(0,0);\n\n              if(callback !== undefined && typeof callback === 'function')\n                callback.call(this, this, other);\n\n              result = true;\n            }\n          }\n        }//end collider exists\n      }\n\n    return result;\n  };\n} //end Sprite class\n\ndefineLazyP5Property('Sprite', boundConstructorFactory(Sprite));\n\n/**\n   * A camera facilitates scrolling and zooming for scenes extending beyond\n   * the canvas. A camera has a position, a zoom factor, and the mouse\n   * coordinates relative to the view.\n   * The camera is automatically created on the first draw cycle.\n   *\n   * In p5.js terms the camera wraps the whole drawing cycle in a\n   * transformation matrix but it can be disable anytime during the draw\n   * cycle for example to draw interface elements in an absolute position.\n   *\n   * @class Camera\n   * @constructor\n   * @param {Number} x Initial x coordinate\n   * @param {Number} y Initial y coordinate\n   * @param {Number} zoom magnification\n   **/\nfunction Camera(pInst, x, y, zoom) {\n  /**\n  * Camera position. Defines the global offset of the sketch.\n  *\n  * @property position\n  * @type {p5.Vector}\n  */\n  this.position = pInst.createVector(x, y);\n\n  /**\n  * Camera zoom. Defines the global scale of the sketch.\n  * A scale of 1 will be the normal size. Setting it to 2 will make everything\n  * twice the size. .5 will make everything half size.\n  *\n  * @property zoom\n  * @type {Number}\n  */\n  this.zoom = zoom;\n\n  /**\n  * MouseX translated to the camera view.\n  * Offsetting and scaling the canvas will not change the sprites' position\n  * nor the mouseX and mouseY variables. Use this property to read the mouse\n  * position if the camera moved or zoomed.\n  *\n  * @property mouseX\n  * @type {Number}\n  */\n  this.mouseX = pInst.mouseX;\n\n  /**\n  * MouseY translated to the camera view.\n  * Offsetting and scaling the canvas will not change the sprites' position\n  * nor the mouseX and mouseY variables. Use this property to read the mouse\n  * position if the camera moved or zoomed.\n  *\n  * @property mouseY\n  * @type {Number}\n  */\n  this.mouseY = pInst.mouseY;\n\n  /**\n  * True if the camera is active.\n  * Read only property. Use the methods Camera.on() and Camera.off()\n  * to enable or disable the camera.\n  *\n  * @property active\n  * @type {Boolean}\n  */\n  this.active = false;\n\n  /**\n  * Activates the camera.\n  * The canvas will be drawn according to the camera position and scale until\n  * Camera.off() is called\n  *\n  * @method on\n  */\n  this.on = function() {\n    if(!this.active)\n    {\n      cameraPush.call(pInst);\n      this.active = true;\n    }\n  };\n\n  /**\n  * Deactivates the camera.\n  * The canvas will be drawn normally, ignoring the camera's position\n  * and scale until Camera.on() is called\n  *\n  * @method off\n  */\n  this.off = function() {\n    if(this.active)\n    {\n      cameraPop.call(pInst);\n      this.active = false;\n    }\n  };\n} //end camera class\n\ndefineLazyP5Property('Camera', boundConstructorFactory(Camera));\n\n//called pre draw by default\nfunction cameraPush() {\n  var pInst = this;\n  var camera = pInst.camera;\n\n  //awkward but necessary in order to have the camera at the center\n  //of the canvas by default\n  if(!camera.init && camera.position.x === 0 && camera.position.y === 0)\n    {\n    camera.position.x=pInst.width/2;\n    camera.position.y=pInst.height/2;\n    camera.init = true;\n    }\n\n  camera.mouseX = pInst.mouseX+camera.position.x-pInst.width/2;\n  camera.mouseY = pInst.mouseY+camera.position.y-pInst.height/2;\n\n  if(!camera.active)\n  {\n    camera.active = true;\n    pInst.push();\n    pInst.scale(camera.zoom);\n    pInst.translate(-camera.position.x+pInst.width/2/camera.zoom, -camera.position.y+pInst.height/2/camera.zoom);\n  }\n}\n\n//called postdraw by default\nfunction cameraPop() {\n  var pInst = this;\n\n  if(pInst.camera.active)\n  {\n    pInst.pop();\n    pInst.camera.active = false;\n  }\n}\n\n\n\n\n/**\n   * In p5.play groups are collections of sprites with similar behavior.\n   * For example a group may contain all the sprites in the background\n   * or all the sprites that \"kill\" the player.\n   *\n   * Groups are \"extended\" arrays and inherit all their properties\n   * e.g. group.length\n   *\n   * Since groups contain only references, a sprite can be in multiple\n   * groups and deleting a group doesn't affect the sprites themselves.\n   *\n   * Sprite.remove() will also remove the sprite from all the groups\n   * it belongs to.\n   *\n   * @class Group\n   * @constructor\n   */\nfunction Group() {\n\n  //basically extending the array\n  var array = [];\n\n  /**\n  * Gets the member at index i.\n  *\n  * @method get\n  * @param {Number} i The index of the object to retrieve\n  */\n  array.get = function(i) {\n    return array[i];\n  };\n\n  /**\n  * Checks if the group contains a sprite.\n  *\n  * @method contains\n  * @param {Sprite} sprite The sprite to search\n  * @return {Number} Index or -1 if not found\n  */\n  array.contains = function(sprite) {\n    return this.indexOf(sprite)>-1;\n  };\n\n  /**\n   * Same as Group.contains\n   * @method indexOf\n   */\n  array.indexOf = function(item) {\n    for (var i = 0, len = array.length; i < len; ++i) {\n      if (virtEquals(item, array[i])) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  /**\n  * Adds a sprite to the group.\n  *\n  * @method add\n  * @param {Sprite} s The sprite to be added\n  */\n  array.add = function(s) {\n    if(!(s instanceof Sprite)) {\n      throw('Error: you can only add sprites to a group');\n    }\n\n    if (-1 === this.indexOf(s)) {\n      array.push(s);\n      s.groups.push(this);\n    }\n  };\n\n  /**\n   * Same as group.length\n   * @method size\n   */\n  array.size = function() {\n    return array.length;\n  };\n\n  /**\n  * Removes all the sprites in the group\n  * from the scene.\n  *\n  * @method removeSprites\n  */\n  array.removeSprites = function() {\n    while (array.length > 0) {\n      array[0].remove();\n    }\n  };\n\n  /**\n  * Removes all references to the group.\n  * Does not remove the actual sprites.\n  *\n  * @method clear\n  */\n  array.clear = function() {\n    array.length = 0;\n  };\n\n  /**\n  * Removes a sprite from the group.\n  * Does not remove the actual sprite, only the affiliation (reference).\n  *\n  * @method remove\n  * @param {Sprite} item The sprite to be removed\n  * @return {Boolean} True if sprite was found and removed\n  */\n  array.remove = function(item) {\n    if(!(item instanceof Sprite)) {\n      throw('Error: you can only remove sprites from a group');\n    }\n\n    var i, removed = false;\n    for (i = array.length - 1; i >= 0; i--) {\n      if (array[i] === item) {\n        array.splice(i, 1);\n        removed = true;\n      }\n    }\n\n    if (removed) {\n      for (i = item.groups.length - 1; i >= 0; i--) {\n        if (item.groups[i] === this) {\n          item.groups.splice(i, 1);\n        }\n      }\n    }\n\n    return removed;\n  };\n\n  /**\n   * Returns a copy of the group as standard array.\n   * @method toArray\n   */\n  array.toArray = function() {\n    return array.slice(0);\n  };\n\n  /**\n  * Returns the highest depth in a group\n  *\n  * @method maxDepth\n  * @return {Number} The depth of the sprite drawn on the top\n  */\n  array.maxDepth = function() {\n    if (array.length === 0) {\n      return 0;\n    }\n\n    return array.reduce(function(maxDepth, sprite) {\n      return Math.max(maxDepth, sprite.depth);\n    }, -Infinity);\n  };\n\n  /**\n  * Returns the lowest depth in a group\n  *\n  * @method minDepth\n  * @return {Number} The depth of the sprite drawn on the bottom\n  */\n  array.minDepth = function() {\n    if (array.length === 0) {\n      return 99999;\n    }\n\n    return array.reduce(function(minDepth, sprite) {\n      return Math.min(minDepth, sprite.depth);\n    }, Infinity);\n  };\n\n  /**\n  * Draws all the sprites in the group.\n  *\n  * @method draw\n  */\n  array.draw = function() {\n\n    //sort by depth\n    this.sort(function(a, b) {\n      return a.depth - b.depth;\n    });\n\n    for(var i = 0; i<this.size(); i++)\n    {\n      this.get(i).display();\n    }\n  };\n\n  //internal use\n  function virtEquals(obj, other) {\n    if (obj === null || other === null) {\n      return (obj === null) && (other === null);\n    }\n    if (typeof (obj) === 'string') {\n      return obj === other;\n    }\n    if (typeof(obj) !== 'object') {\n      return obj === other;\n    }\n    if (obj.equals instanceof Function) {\n      return obj.equals(other);\n    }\n    return obj === other;\n  }\n\n  /**\n   * Collide each member of group against the target using the given collision\n   * type.  Return true if any collision occurred.\n   * Internal use\n   *\n   * @private\n   * @method _groupCollide\n   * @param {!string} type one of 'overlap', 'collide', 'displace', 'bounce'\n   * @param {Object} target Group or Sprite\n   * @param {Function} [callback] on collision.\n   * @return {boolean} True if any collision/overlap occurred\n   */\n  function _groupCollide(type, target, callback) {\n    var didCollide = false;\n    for(var i = 0; i<this.size(); i++)\n      didCollide = this.get(i).AABBops(type, target, callback) || didCollide;\n    return didCollide;\n  }\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occurs.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.overlap(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method overlap\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.overlap = _groupCollide.bind(array, 'overlap');\n\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites in the group will be displaced\n  * by the colliding one to the closest non-overlapping positions.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.collide(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method collide\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.collide = _groupCollide.bind(array, 'collide');\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites in the group will displace\n  * the colliding ones to the closest non-overlapping positions.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occurs.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.displace(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method displace\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.displace = _groupCollide.bind(array, 'displace');\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites will bounce affecting each\n  * other's trajectories depending on their .velocity, .mass and .restitution.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.bounce(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method bounce\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.bounce = _groupCollide.bind(array, 'bounce');\n\n  return array;\n}\n\np5.prototype.Group = Group;\n\n//circle collider - used internally\nfunction CircleCollider(pInst, _center, _radius, _offset) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n\n  var CENTER = p5.prototype.CENTER;\n\n  this.center = _center;\n  this.radius = _radius;\n  this.originalRadius = _radius;\n\n  if(_offset === undefined)\n    this.offset = createVector(0, 0);\n  else\n    this.offset = _offset;\n  this.extents = createVector(_radius*2, _radius*2);\n\n  this.draw = function()\n  {\n    pInst.noFill();\n    pInst.stroke(0, 255, 0);\n    pInst.rectMode(CENTER);\n    pInst.ellipse(this.center.x+this.offset.x, this.center.y+this.offset.y, this.radius*2, this.radius*2);\n  };\n\n  //should be called only for circle vs circle\n  this.overlap = function(other)\n  {\n    //square dist\n    var r = this.radius + other.radius;\n    r *= r;\n    var thisCenterX = this.center.x + this.offset.x;\n    var thisCenterY = this.center.y + this.offset.y;\n    var otherCenterX = other.center.x + other.offset.x;\n    var otherCenterY = other.center.y + other.offset.y;\n    var sqDist = pow(thisCenterX - otherCenterX, 2) + pow(thisCenterY - otherCenterY, 2);\n    return r > sqDist;\n  };\n\n  //should be called only for circle vs circle\n  this.collide = function(other)\n  {\n    if(this.overlap(other)) {\n      var thisCenterX = this.center.x + this.offset.x;\n      var thisCenterY = this.center.y + this.offset.y;\n      var otherCenterX = other.center.x + other.offset.x;\n      var otherCenterY = other.center.y + other.offset.y;\n      var a = pInst.atan2(thisCenterY-otherCenterY, thisCenterX-otherCenterX);\n      var radii = this.radius+other.radius;\n      var intersection = abs(radii - dist(thisCenterX, thisCenterY, otherCenterX, otherCenterY));\n\n      var displacement = createVector(pInst.cos(a)*intersection, pInst.sin(a)*intersection);\n\n      return displacement;\n    } else {\n      return createVector(0, 0);\n    }\n  };\n\n  this.size = function()\n  {\n    return createVector(this.radius*2, this.radius*2);\n  };\n\n  this.left = function()\n  {\n    return this.center.x+this.offset.x - this.radius;\n  };\n\n  this.right = function()\n  {\n    return this.center.x+this.offset.x + this.radius;\n  };\n\n  this.top = function()\n  {\n    return this.center.y+this.offset.y - this.radius;\n  };\n\n  this.bottom = function()\n  {\n    return this.center.y+this.offset.y + this.radius;\n  };\n\n\n\n}\ndefineLazyP5Property('CircleCollider', boundConstructorFactory(CircleCollider));\n\n//axis aligned bounding box - extents are the half sizes - used internally\nfunction AABB(pInst, _center, _extents, _offset) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n\n  var CENTER = p5.prototype.CENTER;\n  var PI = p5.prototype.PI;\n\n  this.center = _center;\n  this.extents = _extents;\n  this.originalExtents = _extents.copy();\n\n  if(_offset === undefined)\n    this.offset = createVector(0, 0);\n  else\n    this.offset = _offset;\n\n  this.min = function()\n  {\n    return createVector(this.center.x+this.offset.x - this.extents.x, this.center.y+this.offset.y - this.extents.y);\n  };\n\n  this.max = function()\n  {\n    return createVector(this.center.x+this.offset.x + this.extents.x, this.center.y+this.offset.y + this.extents.y);\n  };\n\n  this.right = function()\n  {\n    return this.center.x+this.offset.x + this.extents.x/2;\n  };\n\n  this.left = function()\n  {\n    return this.center.x+this.offset.x - this.extents.x/2;\n  };\n\n  this.top = function()\n  {\n    return this.center.y+this.offset.y - this.extents.y/2;\n  };\n\n  this.bottom = function()\n  {\n    return this.center.y+this.offset.y + this.extents.y/2;\n  };\n\n  this.size = function()\n  {\n    return createVector(this.extents.x * 2, this.extents.y * 2);\n  };\n\n  this.rotate = function(r)\n  {\n    //rotate the bbox\n    var t;\n    if (pInst._angleMode === pInst.RADIANS) {\n      t = radians(r);\n    } else {\n      t = r;\n    }\n\n    var w2 = this.extents.x * abs(pInst.cos(t)) + this.extents.y * abs(pInst.sin(t));\n    var h2 = this.extents.x * abs(pInst.sin(t)) + this.extents.y * abs(pInst.cos(t));\n\n    this.extents.x = w2;\n    this.extents.y = h2;\n\n  };\n\n  this.draw = function()\n  {\n    //fill(col);\n    pInst.noFill();\n    pInst.stroke(0, 255, 0);\n    pInst.rectMode(CENTER);\n    pInst.rect(this.center.x+this.offset.x, this.center.y+this.offset.y, this.size().x/2, this.size().y/2);\n  };\n\n  this.overlap = function(other)\n  {\n    //box vs box\n    if(other instanceof AABB)\n    {\n      var md = other.minkowskiDifference(this);\n\n      if (md.min().x <= 0 &&\n          md.max().x >= 0 &&\n          md.min().y <= 0 &&\n          md.max().y >= 0)\n      {\n        return true;\n      }\n      else\n        return false;\n    }\n    //box vs circle\n    else if(other instanceof CircleCollider)\n    {\n\n      //find closest point to the circle on the box\n      var pt = createVector(other.center.x, other.center.y);\n\n      //I don't know what's going o try to trace a line from centers to see\n      if( other.center.x < this.left() )\n        pt.x = this.left();\n      else if( other.center.x > this.right())\n        pt.x = this.right();\n\n      if( other.center.y < this.top() )\n        pt.y = this.top();\n      else if( other.center.y > this.bottom())\n        pt.y = this.bottom();\n\n      var distance = pt.dist(other.center);\n\n      return distance<other.radius;\n    }\n  };\n\n  this.collide = function(other)\n  {\n\n    if(other instanceof AABB)\n    {\n      var md = other.minkowskiDifference(this);\n\n      if (md.min().x <= 0 &&\n          md.max().x >= 0 &&\n          md.min().y <= 0 &&\n          md.max().y >= 0)\n      {\n        var boundsPoint = md.closestPointOnBoundsToPoint(createVector(0, 0));\n\n        return boundsPoint;\n      }\n      else\n        return createVector(0, 0);\n    }\n    //box vs circle\n    else if(other instanceof CircleCollider)\n    {\n\n      //find closest point to the circle on the box\n      var pt = createVector(other.center.x, other.center.y);\n\n      //I don't know what's going o try to trace a line from centers to see\n      if( other.center.x < this.left() )\n        pt.x = this.left();\n      else if( other.center.x > this.right())\n        pt.x = this.right();\n\n      if( other.center.y < this.top() )\n        pt.y = this.top();\n      else if( other.center.y > this.bottom())\n        pt.y = this.bottom();\n\n\n      var distance = pt.dist(other.center);\n      var a;\n\n      if(distance<other.radius)\n      {\n        //reclamp point\n        if(pt.x === other.center.x && pt.y === other.center.y)\n        {\n          var xOverlap = pt.x - this.center.x;\n          var yOverlap = pt.y - this.center.y;\n\n\n          if(abs(xOverlap) < abs(yOverlap))\n          {\n            if(xOverlap > 0 )\n              pt.x = this.right();\n            else\n              pt.x = this.left();\n          }\n          else\n          {\n            if(yOverlap < 0 )\n              pt.y = this.top();\n            else\n              pt.y = this.bottom();\n          }\n\n          a = pInst.atan2(other.center.y-pt.y, other.center.x-pt.x);\n\n          //fix exceptions\n          if(a === 0)\n          {\n            if(pt.x === this.right()) a = PI;\n            if(pt.y === this.top()) a = PI/2;\n            if(pt.y === this.bottom()) a = -PI/2;\n          }\n        }\n        else\n        {\n          //angle bw point and center\n          a = pInst.atan2(pt.y-other.center.y, pt.x-other.center.x);\n          //project the normal (line between pt and center) onto the circle\n        }\n\n        var d = createVector(pt.x-other.center.x, pt.y-other.center.y);\n        var displacement = createVector(pInst.cos(a)*other.radius-d.x, pInst.sin(a)*other.radius-d.y);\n\n        //if(pt.x === other.center.x && pt.y === other.center.y)\n        //displacement = displacement.mult(-1);\n\n        return displacement;\n        //return createVector(0,0);\n      }\n      else\n        return createVector(0, 0);\n    }\n  };\n\n  this.minkowskiDifference = function(other)\n  {\n    var topLeft = this.min().sub(other.max());\n    var fullSize = this.size().add(other.size());\n    return new AABB(pInst, topLeft.add(fullSize.div(2)), fullSize.div(2));\n  };\n\n\n  this.closestPointOnBoundsToPoint = function(point)\n  {\n    // test x first\n    var minDist = abs(point.x - this.min().x);\n    var boundsPoint = createVector(this.min().x, point.y);\n\n    if (abs(this.max().x - point.x) < minDist)\n    {\n      minDist = abs(this.max().x - point.x);\n      boundsPoint = createVector(this.max().x, point.y);\n    }\n\n    if (abs(this.max().y - point.y) < minDist)\n    {\n      minDist = abs(this.max().y - point.y);\n      boundsPoint = createVector(point.x, this.max().y);\n    }\n\n    if (abs(this.min().y - point.y) < minDist)\n    {\n      minDist = abs(this.min.y - point.y);\n      boundsPoint = createVector(point.x, this.min().y);\n    }\n\n    return boundsPoint;\n  };\n\n\n}//end AABB\ndefineLazyP5Property('AABB', boundConstructorFactory(AABB));\n\n\n\n/**\n * An Animation object contains a series of images (p5.Image) that\n * can be displayed sequentially.\n *\n * All files must be png images. You must include the directory from the sketch root,\n * and the extension .png\n *\n * A sprite can have multiple labeled animations, see Sprite.addAnimation\n * and Sprite.changeAnimation, however an animation can be used independently.\n *\n * An animation can be created either by passing a series of file names,\n * no matter how many or by passing the first and the last file name\n * of a numbered sequence.\n * p5.play will try to detect the sequence pattern.\n *\n * For example if the given filenames are\n * \"data/file0001.png\" and \"data/file0005.png\" the images\n * \"data/file0003.png\" and \"data/file0004.png\" will be loaded as well.\n *\n * @example\n *     var sequenceAnimation;\n *     var glitch;\n *\n *     function preload() {\n *       sequenceAnimation = loadAnimation(\"data/walking0001.png\", \"data/walking0005.png\");\n *       glitch = loadAnimation(\"data/dog.png\", \"data/horse.png\", \"data/cat.png\", \"data/snake.png\");\n *     }\n *\n *     function setup() {\n *       createCanvas(800, 600);\n *     }\n *\n *     function draw() {\n *       background(0);\n *       animation(sequenceAnimation, 100, 100);\n *       animation(glitch, 200, 100);\n *     }\n *\n * @class Animation\n * @constructor\n * @param {String} fileName1 First file in a sequence OR first image file\n * @param {String} fileName2 Last file in a sequence OR second image file\n * @param {String} [...fileNameN] Any number of image files after the first two\n */\nfunction Animation(pInst) {\n  var frameArguments = Array.prototype.slice.call(arguments, 1);\n  var i;\n\n  var CENTER = p5.prototype.CENTER;\n\n  /**\n  * Array of frames (p5.Image)\n  *\n  * @property images\n  * @type {Array}\n  */\n  this.images = [];\n\n  var frame = 0;\n  var cycles = 0;\n  var targetFrame = -1;\n\n  this.offX = 0;\n  this.offY = 0;\n\n  /**\n  * Delay between frames in number of draw cycles.\n  * If set to 4 the framerate of the animation would be the\n  * sketch framerate divided by 4 (60fps = 15fps)\n  *\n  * @property frameDelay\n  * @type {Number}\n  * @default 4\n  */\n  this.frameDelay = 4;\n\n  /**\n  * True if the animation is currently playing.\n  *\n  * @property playing\n  * @type {Boolean}\n  * @default true\n  */\n  this.playing = true;\n\n  /**\n  * Animation visibility.\n  *\n  * @property visible\n  * @type {Boolean}\n  * @default true\n  */\n  this.visible = true;\n\n  /**\n  * If set to false the animation will stop after reaching the last frame\n  *\n  * @property looping\n  * @type {Boolean}\n  * @default true\n  */\n  this.looping = true;\n\n  /**\n  * True if frame changed during the last draw cycle\n  *\n  * @property frameChanged\n  * @type {Boolean}\n  */\n  this.frameChanged = false;\n\n  //is the collider defined manually or defined\n  //by the current frame size\n  this.imageCollider = false;\n\n\n  //sequence mode\n  if(frameArguments.length === 2 && typeof frameArguments[0] === 'string' && typeof frameArguments[1] === 'string')\n  {\n    var from = frameArguments[0];\n    var to = frameArguments[1];\n\n    //print(\"sequence mode \"+from+\" -> \"+to);\n\n    //make sure the extensions are fine\n    var ext1 = from.substring(from.length-4, from.length);\n    if(ext1 !== '.png')\n    {\n      pInst.print('Animation error: you need to use .png files (filename '+from+')');\n      from = -1;\n    }\n\n    var ext2 = to.substring(to.length-4, to.length);\n    if(ext2 !== '.png')\n    {\n      pInst.print('Animation error: you need to use .png files (filename '+to+')');\n      to = -1;\n    }\n\n    //extensions are fine\n    if(from !== -1 && to !== -1)\n    {\n      var digits1 = 0;\n      var digits2 = 0;\n\n      //skip extension work backwards to find the numbers\n      for (i = from.length-5; i >= 0; i--) {\n        if(from.charAt(i) >= '0' && from.charAt(i) <= '9')\n          digits1++;\n      }\n\n      for (i = to.length-5; i >= 0; i--) {\n        if(to.charAt(i) >= '0' && to.charAt(i) <= '9')\n          digits2++;\n      }\n\n      var prefix1 = from.substring(0, from.length-(4+digits1));\n      var prefix2 = to.substring(0, to.length-(4+digits2) );\n\n      // Our numbers likely have leading zeroes, which means that some\n      // browsers (e.g., PhantomJS) will interpret them as base 8 (octal)\n      // instead of decimal. To fix this, we'll explicity tell parseInt to\n      // use a base of 10 (decimal). For more details on this issue, see\n      // http://stackoverflow.com/a/8763427/2422398.\n      var number1 = parseInt(from.substring(from.length-(4+digits1), from.length-4), 10);\n      var number2 = parseInt(to.substring(to.length-(4+digits2), to.length-4), 10);\n\n      //swap if inverted\n      if(number2<number1)\n      {\n        var t = number2;\n        number2 = number1;\n        number1 = t;\n      }\n\n      //two different frames\n      if(prefix1 !== prefix2 )\n      {\n        //print(\"2 separate images\");\n        this.images.push(pInst.loadImage(from));\n        this.images.push(pInst.loadImage(to));\n      }\n      //same digits: case img0001, img0002\n      else\n      {\n        var fileName;\n        if(digits1 === digits2)\n        {\n\n          //load all images\n          for (i = number1; i <= number2; i++) {\n            // Use nf() to number format 'i' into four digits\n            fileName = prefix1 + pInst.nf(i, digits1) + '.png';\n            this.images.push(pInst.loadImage(fileName));\n\n          }\n\n        }\n        else //case: case img1, img2\n        {\n          //print(\"from \"+prefix1+\" \"+number1 +\" to \"+number2);\n          for (i = number1; i <= number2; i++) {\n            // Use nf() to number format 'i' into four digits\n            fileName = prefix1 + i + '.png';\n            this.images.push(pInst.loadImage(fileName));\n\n          }\n\n        }\n      }\n\n    }//end no ext error\n\n  }//end sequence mode\n  // Sprite sheet mode\n  else if (frameArguments.length === 1 && (frameArguments[0] instanceof SpriteSheet))\n  {\n    this.spriteSheet = frameArguments[0];\n    this.images = this.spriteSheet.frames;\n  }\n  else if(frameArguments.length !== 0)//arbitrary list of images\n  {\n    //print(\"Animation arbitrary mode\");\n    for (i = 0; i < frameArguments.length; i++) {\n      //print(\"loading \"+fileNames[i]);\n      if(frameArguments[i] instanceof p5.Image)\n        this.images.push(frameArguments[i]);\n      else\n        this.images.push(pInst.loadImage(frameArguments[i]));\n    }\n  }\n\n  /**\n  * Objects are passed by reference so to have different sprites\n  * using the same animation you need to clone it.\n  *\n  * @method clone\n  * @return {Animation} A clone of the current animation\n  */\n  this.clone = function() {\n    var myClone = new Animation(pInst); //empty\n    myClone.images = [];\n\n    if (this.spriteSheet) {\n      myClone.spriteSheet = this.spriteSheet.clone();\n    }\n    myClone.images = this.images.slice();\n\n    myClone.offX = this.offX;\n    myClone.offY = this.offY;\n    myClone.frameDelay = this.frameDelay;\n    myClone.playing = this.playing;\n    myClone.looping = this.looping;\n\n    return myClone;\n  };\n\n  /**\n   * Draws the animation at coordinate x and y.\n   * Updates the frames automatically.\n   *\n   * @method draw\n   * @param {Number} x x coordinate\n   * @param {Number} y y coordinate\n   * @param {Number} [r=0] rotation\n   */\n  this.draw = function(x, y, r) {\n    this.xpos = x;\n    this.ypos = y;\n    this.rotation = r || 0;\n\n    if (this.visible)\n    {\n\n      //only connection with the sprite class\n      //if animation is used independently draw and update are the sam\n      if(!this.isSpriteAnimation)\n        this.update();\n\n      //this.currentImageMode = g.imageMode;\n      pInst.push();\n      pInst.imageMode(CENTER);\n\n      pInst.translate(this.xpos, this.ypos);\n      if (pInst._angleMode === pInst.RADIANS) {\n        pInst.rotate(radians(this.rotation));\n      } else {\n        pInst.rotate(this.rotation);\n      }\n\n      if(this.images[frame] !== undefined)\n      {\n        if (this.spriteSheet) {\n          var frame_info = this.images[frame].frame;\n          pInst.image(this.spriteSheet.image, this.offX, this.offY, frame_info.width, frame_info.height,\n            frame_info.x, frame_info.y, frame_info.width, frame_info.height);\n        } else {\n          pInst.image(this.images[frame], this.offX, this.offY);\n        }\n      }\n      else\n      {\n        pInst.print('Warning undefined frame '+frame);\n        //this.isActive = false;\n      }\n\n      pInst.pop();\n    }\n  };\n\n  //called by draw\n  this.update = function() {\n    cycles++;\n    var previousFrame = frame;\n    this.frameChanged = false;\n\n\n    //go to frame\n    if(this.images.length === 1)\n    {\n      this.playing = false;\n      frame = 0;\n    }\n\n    if ( this.playing && cycles%this.frameDelay === 0)\n    {\n      //going to target frame up\n      if(targetFrame>frame && targetFrame !== -1)\n      {\n        frame++;\n      }\n      //going to taget frame down\n      else if(targetFrame<frame && targetFrame !== -1)\n      {\n        frame--;\n      }\n      else if(targetFrame === frame && targetFrame !== -1)\n      {\n        this.playing=false;\n      }\n      else if (this.looping) //advance frame\n      {\n        //if next frame is too high\n        if (frame>=this.images.length-1)\n          frame = 0;\n        else\n          frame++;\n      } else\n      {\n        //if next frame is too high\n        if (frame<this.images.length-1)\n          frame++;\n      }\n    }\n    if (frame == this.images.length - 1 && this.onComplete != undefined)\n      this.onComplete(); //fire when on last frame\n\n    if(previousFrame !== frame)\n      this.frameChanged = true;\n\n    \n\n  };//end update\n\n  /**\n  * Plays the animation.\n  *\n  * @method play\n  */\n  this.play = function() {\n    this.playing = true;\n    targetFrame = -1;\n  };\n\n  /**\n  * Stops the animation.\n  *\n  * @method stop\n  */\n  this.stop = function(){\n    this.playing = false;\n  };\n\n  /**\n  * Rewinds the animation to the first frame.\n  *\n  * @method rewind\n  */\n  this.rewind = function() {\n    frame = 0;\n  };\n\n  /**\n  * fire when animation ends\n  *\n  * @method onComplete\n  * @return {Animation} \n  */\n  this.onComplete = function () {\n    return undefined;\n  };\n\n  /**\n  * Changes the current frame.\n  *\n  * @method changeFrame\n  * @param {Number} frame Frame number (starts from 0).\n  */\n  this.changeFrame = function(f) {\n    if (f<this.images.length)\n      frame = f;\n    else\n      frame = this.images.length - 1;\n\n    targetFrame = -1;\n    //this.playing = false;\n  };\n\n   /**\n  * Goes to the next frame and stops.\n  *\n  * @method nextFrame\n  */\n  this.nextFrame = function() {\n\n    if (frame<this.images.length-1)\n      frame = frame+1;\n    else if(this.looping)\n      frame = 0;\n\n    targetFrame = -1;\n    this.playing = false;\n  };\n\n   /**\n  * Goes to the previous frame and stops.\n  *\n  * @method previousFrame\n  */\n  this.previousFrame = function() {\n\n    if (frame>0)\n      frame = frame-1;\n    else if(this.looping)\n      frame = this.images.length-1;\n\n    targetFrame = -1;\n    this.playing = false;\n  };\n\n  /**\n  * Plays the animation forward or backward toward a target frame.\n  *\n  * @method goToFrame\n  * @param {Number} toFrame Frame number destination (starts from 0)\n  */\n  this.goToFrame = function(toFrame) {\n    if(toFrame < 0 || toFrame >= this.images.length) {\n      return;\n    }\n\n    // targetFrame gets used by the update() method to decide what frame to\n    // select next.  When it's not being used it gets set to -1.\n    targetFrame = toFrame;\n\n    if(targetFrame !== frame) {\n      this.playing = true;\n    }\n  };\n\n  /**\n  * Returns the current frame number.\n  *\n  * @method getFrame\n  * @return {Number} Current frame (starts from 0)\n  */\n  this.getFrame = function() {\n    return frame;\n  };\n\n  /**\n  * Returns the last frame number.\n  *\n  * @method getLastFrame\n  * @return {Number} Last frame number (starts from 0)\n  */\n  this.getLastFrame = function() {\n    return this.images.length-1;\n  };\n\n  /**\n  * Returns the current frame image as p5.Image.\n  *\n  * @method getFrameImage\n  * @return {p5.Image} Current frame image\n  */\n  this.getFrameImage = function() {\n    return this.images[frame];\n  };\n\n  /**\n  * Returns the frame image at the specified frame number.\n  *\n  * @method getImageAt\n  * @param {Number} frame Frame number\n  * @return {p5.Image} Frame image\n  */\n  this.getImageAt = function(f) {\n    return this.images[f];\n  };\n\n  /**\n  * Returns the current frame width in pixels.\n  * If there is no image loaded, returns 1.\n  *\n  * @method getWidth\n  * @return {Number} Frame width\n  */\n  this.getWidth = function() {\n    if (this.images[frame] instanceof p5.Image) {\n      return this.images[frame].width;\n    } else if (this.images[frame]) {\n      // Special case: Animation-from-spritesheet treats its images array differently.\n      return this.images[frame].frame.width;\n    } else {\n      return 1;\n    }\n  };\n\n  /**\n  * Returns the current frame height in pixels.\n  * If there is no image loaded, returns 1.\n  *\n  * @method getHeight\n  * @return {Number} Frame height\n  */\n  this.getHeight = function() {\n    if (this.images[frame] instanceof p5.Image) {\n      return this.images[frame].height;\n    } else if (this.images[frame]) {\n      // Special case: Animation-from-spritesheet treats its images array differently.\n      return this.images[frame].frame.height;\n    } else {\n      return 1;\n    }\n  };\n\n}\n\ndefineLazyP5Property('Animation', boundConstructorFactory(Animation));\n\n/**\n * Represents a sprite sheet and all it's frames.  To be used with Animation,\n * or static drawing single frames.\n *\n *  There are two different ways to load a SpriteSheet\n *\n * 1. Given width, height that will be used for every frame and the\n *    number of frames to cycle through. The sprite sheet must have a\n *    uniform grid with consistent rows and columns.\n *\n * 2. Given an array of frame objects that define the position and\n *    dimensions of each frame.  This is Flexible because you can use\n *    sprite sheets that don't have uniform rows and columns.\n *\n * @example\n *     // Method 1 - Using width, height for each frame and number of frames\n *     explode_sprite_sheet = loadSpriteSheet('assets/explode_sprite_sheet.png', 171, 158, 11);\n *\n *     // Method 2 - Using an array of objects that define each frame\n *     var player_frames = loadJSON('assets/tiles.json');\n *     player_sprite_sheet = loadSpriteSheet('assets/player_spritesheet.png', player_frames);\n *\n * @class SpriteSheet\n * @constructor\n * @param image String image path or p5.Image object\n */\nfunction SpriteSheet(pInst) {\n  var spriteSheetArgs = Array.prototype.slice.call(arguments, 1);\n\n  this.image = null;\n  this.frames = [];\n  this.frame_width = 0;\n  this.frame_height = 0;\n  this.num_frames = 0;\n\n  /**\n   * Generate the frames data for this sprite sheet baesd on user params\n   * @private\n   * @method _generateSheetFrames\n   */\n  this._generateSheetFrames = function() {\n    var sX = 0, sY = 0;\n    for (var i = 0; i < this.num_frames; i++) {\n      this.frames.push(\n        {\n          'name': i,\n          'frame': {\n            'x': sX,\n            'y': sY,\n            'width': this.frame_width,\n            'height': this.frame_height\n          }\n        });\n      sX += this.frame_width;\n      if (sX >= this.image.width) {\n        sX = 0;\n        sY += this.frame_height;\n        if (sY >= this.image.height) {\n          sY = 0;\n        }\n      }\n    }\n  };\n\n  if (spriteSheetArgs.length === 2 && Array.isArray(spriteSheetArgs[1])) {\n    this.frames = spriteSheetArgs[1];\n    this.num_frames = this.frames.length;\n  } else if (spriteSheetArgs.length === 4 &&\n    (typeof spriteSheetArgs[1] === 'number') &&\n    (typeof spriteSheetArgs[2] === 'number') &&\n    (typeof spriteSheetArgs[3] === 'number')) {\n    this.frame_width = spriteSheetArgs[1];\n    this.frame_height = spriteSheetArgs[2];\n    this.num_frames = spriteSheetArgs[3];\n  }\n\n  if(spriteSheetArgs[0] instanceof p5.Image) {\n    this.image = spriteSheetArgs[0];\n    if (spriteSheetArgs.length === 4) {\n      this._generateSheetFrames();\n    }\n  } else {\n    if (spriteSheetArgs.length === 2) {\n      this.image = pInst.loadImage(spriteSheetArgs[0]);\n    } else if (spriteSheetArgs.length === 4) {\n      this.image = pInst.loadImage(spriteSheetArgs[0], this._generateSheetFrames.bind(this));\n    }\n  }\n\n  /**\n   * Draws a specific frame to the canvas.\n   * @param frame_name  Can either be a string name, or a numeric index.\n   * @param x   x position to draw the frame at\n   * @param y   y position to draw the frame at\n   * @param [width]   optional width to draw the frame\n   * @param [height]  optional height to draw the frame\n   * @method drawFrame\n   */\n  this.drawFrame = function(frame_name, x, y, width, height) {\n    var frameToDraw;\n    if (typeof frame_name === 'number') {\n      frameToDraw = this.frames[frame_name].frame;\n    } else {\n      for (var i = 0; i < this.frames.length; i++) {\n        if (this.frames[i].name === frame_name) {\n          frameToDraw = this.frames[i].frame;\n          break;\n        }\n      }\n    }\n    var dWidth = width || frameToDraw.width;\n    var dHeight = height || frameToDraw.height;\n    pInst.image(this.image, frameToDraw.x, frameToDraw.y,\n      frameToDraw.width, frameToDraw.height, x, y, dWidth, dHeight);\n  };\n\n  /**\n   * Objects are passed by reference so to have different sprites\n   * using the same animation you need to clone it.\n   *\n   * @method clone\n   * @return {SpriteSheet} A clone of the current SpriteSheet\n   */\n  this.clone = function() {\n    var myClone = new SpriteSheet(pInst); //empty\n\n    // Deep clone the frames by value not reference\n    for(var i = 0; i < this.frames.length; i++) {\n      var frame = this.frames[i].frame;\n      var cloneFrame = {\n        'name':frame.name,\n        'frame': {\n          'x':frame.x,\n          'y':frame.y,\n          'width':frame.width,\n          'height':frame.height\n        }\n      };\n      myClone.frames.push(cloneFrame);\n    }\n\n    // clone other fields\n    myClone.image = this.image;\n    myClone.frame_width = this.frame_width;\n    myClone.frame_height = this.frame_height;\n    myClone.num_frames = this.num_frames;\n\n    return myClone;\n  };\n}\n\ndefineLazyP5Property('SpriteSheet', boundConstructorFactory(SpriteSheet));\n\n//general constructor to be able to feed arguments as array\nfunction construct(constructor, args) {\n  function F() {\n    return constructor.apply(this, args);\n  }\n  F.prototype = constructor.prototype;\n  return new F();\n}\n\n\n\n\n\n/*\n * Javascript Quadtree\n * based on\n * https://github.com/timohausmann/quadtree-js/\n * Copyright © 2012 Timo Hausmann\n*/\n\nfunction Quadtree( bounds, max_objects, max_levels, level ) {\n\n  this.active = true;\n  this.max_objects\t= max_objects || 10;\n  this.max_levels\t\t= max_levels || 4;\n\n  this.level \t\t\t= level || 0;\n  this.bounds \t\t= bounds;\n\n  this.objects \t\t= [];\n  this.object_refs\t= [];\n  this.nodes \t\t\t= [];\n}\n\nQuadtree.prototype.updateBounds = function() {\n\n  //find maximum area\n  var objects = this.getAll();\n  var x = 10000;\n  var y = 10000;\n  var w = -10000;\n  var h = -10000;\n\n  for( var i=0; i < objects.length; i++ )\n    {\n      if(objects[i].position.x < x)\n        x = objects[i].position.x;\n      if(objects[i].position.y < y)\n        y = objects[i].position.y;\n      if(objects[i].position.x > w)\n        w = objects[i].position.x;\n      if(objects[i].position.y > h)\n        h = objects[i].position.y;\n    }\n\n\n  this.bounds = {\n    x:x,\n    y:y,\n    width:w,\n    height:h\n  };\n  //print(this.bounds);\n};\n\n/*\n\t * Split the node into 4 subnodes\n\t */\nQuadtree.prototype.split = function() {\n\n  var nextLevel\t= this.level + 1,\n      subWidth\t= Math.round( this.bounds.width / 2 ),\n      subHeight \t= Math.round( this.bounds.height / 2 ),\n      x \t\t\t= Math.round( this.bounds.x ),\n      y \t\t\t= Math.round( this.bounds.y );\n\n  //top right node\n  this.nodes[0] = new Quadtree({\n    x\t: x + subWidth,\n    y\t: y,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //top left node\n  this.nodes[1] = new Quadtree({\n    x\t: x,\n    y\t: y,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //bottom left node\n  this.nodes[2] = new Quadtree({\n    x\t: x,\n    y\t: y + subHeight,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //bottom right node\n  this.nodes[3] = new Quadtree({\n    x\t: x + subWidth,\n    y\t: y + subHeight,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n};\n\n\n/*\n\t * Determine the quadtrant for an area in this node\n\t */\nQuadtree.prototype.getIndex = function( pRect ) {\n  if(!pRect.collider)\n    return -1;\n  else\n  {\n    var index \t\t\t\t= -1,\n        verticalMidpoint \t= this.bounds.x + (this.bounds.width / 2),\n        horizontalMidpoint \t= this.bounds.y + (this.bounds.height / 2),\n\n        //pRect can completely fit within the top quadrants\n        topQuadrant = (pRect.collider.top() < horizontalMidpoint && pRect.collider.top() + pRect.collider.size().y < horizontalMidpoint),\n\n        //pRect can completely fit within the bottom quadrants\n        bottomQuadrant = (pRect.collider.top() > horizontalMidpoint);\n\n    //pRect can completely fit within the left quadrants\n    if( pRect.collider.left() < verticalMidpoint && pRect.collider.left() + pRect.collider.size().x < verticalMidpoint ) {\n      if( topQuadrant ) {\n        index = 1;\n      } else if( bottomQuadrant ) {\n        index = 2;\n      }\n\n      //pRect can completely fit within the right quadrants\n    } else if( pRect.collider.left() > verticalMidpoint ) {\n      if( topQuadrant ) {\n        index = 0;\n      } else if( bottomQuadrant ) {\n        index = 3;\n      }\n    }\n\n    return index;\n  }\n};\n\n\n/*\n\t * Insert an object into the node. If the node\n\t * exceeds the capacity, it will split and add all\n\t * objects to their corresponding subnodes.\n\t */\nQuadtree.prototype.insert = function( obj ) {\n  //avoid double insertion\n  if(this.objects.indexOf(obj) === -1)\n  {\n\n    var i = 0,\n        index;\n\n    //if we have subnodes ...\n    if( typeof this.nodes[0] !== 'undefined' ) {\n      index = this.getIndex( obj );\n\n      if( index !== -1 ) {\n        this.nodes[index].insert( obj );\n        return;\n      }\n    }\n\n    this.objects.push( obj );\n\n    if( this.objects.length > this.max_objects && this.level < this.max_levels ) {\n\n      //split if we don't already have subnodes\n      if( typeof this.nodes[0] === 'undefined' ) {\n        this.split();\n      }\n\n      //add all objects to there corresponding subnodes\n      while( i < this.objects.length ) {\n\n        index = this.getIndex( this.objects[i] );\n\n        if( index !== -1 ) {\n          this.nodes[index].insert( this.objects.splice(i, 1)[0] );\n        } else {\n          i = i + 1;\n        }\n      }\n    }\n  }\n};\n\n\n/*\n\t * Return all objects that could collide with a given area\n\t */\nQuadtree.prototype.retrieve = function( pRect ) {\n\n\n  var index = this.getIndex( pRect ),\n      returnObjects = this.objects;\n\n  //if we have subnodes ...\n  if( typeof this.nodes[0] !== 'undefined' ) {\n\n    //if pRect fits into a subnode ..\n    if( index !== -1 ) {\n      returnObjects = returnObjects.concat( this.nodes[index].retrieve( pRect ) );\n\n      //if pRect does not fit into a subnode, check it against all subnodes\n    } else {\n      for( var i=0; i < this.nodes.length; i=i+1 ) {\n        returnObjects = returnObjects.concat( this.nodes[i].retrieve( pRect ) );\n      }\n    }\n  }\n\n  return returnObjects;\n};\n\nQuadtree.prototype.retrieveFromGroup = function( pRect, group ) {\n\n  var results = [];\n  var candidates = this.retrieve(pRect);\n\n  for(var i=0; i<candidates.length; i++)\n    if(group.contains(candidates[i]))\n    results.push(candidates[i]);\n\n  return results;\n};\n\n/*\n\t * Get all objects stored in the quadtree\n\t */\nQuadtree.prototype.getAll = function() {\n\n  var objects = this.objects;\n\n  for( var i=0; i < this.nodes.length; i=i+1 ) {\n    objects = objects.concat( this.nodes[i].getAll() );\n  }\n\n  return objects;\n};\n\n\n/*\n\t * Get the node in which a certain object is stored\n\t */\nQuadtree.prototype.getObjectNode = function( obj ) {\n\n  var index;\n\n  //if there are no subnodes, object must be here\n  if( !this.nodes.length ) {\n\n    return this;\n\n  } else {\n\n    index = this.getIndex( obj );\n\n    //if the object does not fit into a subnode, it must be here\n    if( index === -1 ) {\n\n      return this;\n\n      //if it fits into a subnode, continue deeper search there\n    } else {\n      var node = this.nodes[index].getObjectNode( obj );\n      if( node ) return node;\n    }\n  }\n\n  return false;\n};\n\n\n/*\n\t * Removes a specific object from the quadtree\n\t * Does not delete empty subnodes. See cleanup-function\n\t */\nQuadtree.prototype.removeObject = function( obj ) {\n\n  var node = this.getObjectNode( obj ),\n      index = node.objects.indexOf( obj );\n\n  if( index === -1 ) return false;\n\n  node.objects.splice( index, 1);\n};\n\n\n/*\n\t * Clear the quadtree and delete all objects\n\t */\nQuadtree.prototype.clear = function() {\n\n  this.objects = [];\n\n  if( !this.nodes.length ) return;\n\n  for( var i=0; i < this.nodes.length; i=i+1 ) {\n\n    this.nodes[i].clear();\n  }\n\n  this.nodes = [];\n};\n\n\n/*\n\t * Clean up the quadtree\n\t * Like clear, but objects won't be deleted but re-inserted\n\t */\nQuadtree.prototype.cleanup = function() {\n\n  var objects = this.getAll();\n\n  this.clear();\n\n  for( var i=0; i < objects.length; i++ ) {\n    this.insert( objects[i] );\n  }\n};\n\n\n\nfunction updateTree() {\n  if(this.quadTree.active)\n  {\n    this.quadTree.updateBounds();\n    this.quadTree.cleanup();\n  }\n}\n\n//keyboard input\np5.prototype.registerMethod('pre', p5.prototype.readPresses);\n\n//automatic sprite update\np5.prototype.registerMethod('pre', p5.prototype.updateSprites);\n\n//quadtree update\np5.prototype.registerMethod('post', updateTree);\n\n//camera push and pop\np5.prototype.registerMethod('pre', cameraPush);\np5.prototype.registerMethod('post', cameraPop);\n\n//deltaTime\n//p5.prototype.registerMethod('pre', updateDelta);\n\n/**\n * Log a warning message to the host console, using native `console.warn`\n * if it is available but falling back on `console.log` if not.  If no\n * console is available, this method will fail silently.\n * @method _warn\n * @param {!string} message\n * @private\n */\np5.prototype._warn = function(message) {\n  var console = window.console;\n\n  if(console)\n  {\n    if('function' === typeof console.warn)\n    {\n      console.warn(message);\n    }\n    else if('function' === typeof console.log)\n    {\n      console.log('Warning: ' + message);\n    }\n  }\n};\n\n}));\n",
        "children": [],
        "fileType": "file",
        "_id": "5f9798e775c20b3acc7c8d52",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:57:11.504Z",
        "updatedAt": "2020-10-27T03:57:11.504Z",
        "id": "5f9798e775c20b3acc7c8d52"
      }
    ],
    "createdAt": "2020-10-27T03:50:18.167Z",
    "id": "_T4LZFveC"
  },
  {
    "name": "p5.play keyboard/mouse example 2",
    "_id": "ooA13XnGY",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5f979a9d90d09f6532fc1bee",
          "5f979a9d90d09f6532fc1c60",
          "5f979a9d90d09f6532fc1c61",
          "5f979a9d90d09f6532fc1c63",
          "5f979a9d90d09f6532fc1c64"
        ],
        "fileType": "folder",
        "_id": "5f979a9d90d09f6532fc1bed",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1bed"
      },
      {
        "name": "sketch.js",
        "content": "let hero;\nlet platform;\n\nvar GRAVITY = 1;\nvar JUMP = 15;\n\nfunction setup() {\n  createCanvas(800, 400);\n\n\n  hero = createSprite(400, 200, 32, 32);\n\n\n\n  hero.addAnimation(\"stopped\", \"assets/bmg1_fr1.png\");\n  hero.addAnimation(\"walk-up\", \"assets/bmg1_bk1.png\", \"assets/bmg1_bk2.png\");\n  hero.addAnimation(\"walk-down\", \"assets/bmg1_fr1.png\", \"assets/bmg1_fr2.png\");\n  hero.addAnimation(\"walk-left\", \"assets/bmg1_lf1.png\", \"assets/bmg1_lf2.png\");\n  hero.addAnimation(\"walk-right\", \"assets/bmg1_rt1.png\", \"assets/bmg1_rt2.png\");\n  \n  \n  hero.debug = true;\n\n\n  platform = createSprite(width / 2, 350, width, 10);\n  platform.immovable = true;\n  platform.debug = true;\n\n}\n\nfunction draw() {\n  background(255, 255, 255);\n\n\n  text(hero.velocity.y, 10, 10)\n  \n  \n  if (hero.collide(platform)) {\n    hero.velocity.y = 0;\n  }\n  \n  heroFollowMouse();\n  updateSpriteAnimations();\n  drawSprites();\n}\n\n\n// makes the sprite follow the mouse\nfunction heroFollowMouse() {\n  hero.velocity.x = (camera.mouseX - hero.position.x) / 20;\n}\n\nfunction mouseClicked() {\n  \n  if(hero.velocity.y == 1) {\n    hero.position.y = hero.position.y - 1;\n    hero.velocity.y = -JUMP;\n  }\n}\n\n\nfunction mouseDragged() {\n  heroFollowMouse();\n}\n\nfunction updateSpriteAnimations() {\n\n  if (mouseIsPressed) {\n    heroFollowMouse();\n  }\n\n  let heroVelX = int(hero.velocity.x);\n\n  hero.velocity.y += GRAVITY;\n\n\n  if (heroVelX == 0) {\n    hero.velocity.x = 0;\n  }\n\n  if (heroVelX > 0) {\n    hero.changeAnimation(\"walk-right\");\n  } else if (heroVelX < 0) {\n    hero.changeAnimation(\"walk-left\");\n  } else if (heroVelX == 0) {\n    hero.changeAnimation(\"stopped\");\n  }\n\n}",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c63",
        "isSelectedFile": true,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c63"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/addons/p5.sound.min.js\"></script>\n    <script src=\"lib/p5.play.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c60",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c60"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c64",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c64"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "5f979a9d90d09f6532fc1bef",
          "5f979a9d90d09f6532fc1bf0",
          "5f979a9d90d09f6532fc1bf1",
          "5f979a9d90d09f6532fc1bf2",
          "5f979a9d90d09f6532fc1bf3",
          "5f979a9d90d09f6532fc1bf4",
          "5f979a9d90d09f6532fc1bf5",
          "5f979a9d90d09f6532fc1bf6",
          "5f979a9d90d09f6532fc1bf7",
          "5f979a9d90d09f6532fc1bf8",
          "5f979a9d90d09f6532fc1bf9",
          "5f979a9d90d09f6532fc1bfa",
          "5f979a9d90d09f6532fc1bfb",
          "5f979a9d90d09f6532fc1bfc",
          "5f979a9d90d09f6532fc1bfd",
          "5f979a9d90d09f6532fc1bfe",
          "5f979a9d90d09f6532fc1bff",
          "5f979a9d90d09f6532fc1c00",
          "5f979a9d90d09f6532fc1c01",
          "5f979a9d90d09f6532fc1c02",
          "5f979a9d90d09f6532fc1c03",
          "5f979a9d90d09f6532fc1c04",
          "5f979a9d90d09f6532fc1c05",
          "5f979a9d90d09f6532fc1c06",
          "5f979a9d90d09f6532fc1c07",
          "5f979a9d90d09f6532fc1c08",
          "5f979a9d90d09f6532fc1c09",
          "5f979a9d90d09f6532fc1c0a",
          "5f979a9d90d09f6532fc1c0b",
          "5f979a9d90d09f6532fc1c0c",
          "5f979a9d90d09f6532fc1c0d",
          "5f979a9d90d09f6532fc1c0e",
          "5f979a9d90d09f6532fc1c0f",
          "5f979a9d90d09f6532fc1c10",
          "5f979a9d90d09f6532fc1c11",
          "5f979a9d90d09f6532fc1c12",
          "5f979a9d90d09f6532fc1c13",
          "5f979a9d90d09f6532fc1c14",
          "5f979a9d90d09f6532fc1c15",
          "5f979a9d90d09f6532fc1c16",
          "5f979a9d90d09f6532fc1c17",
          "5f979a9d90d09f6532fc1c18",
          "5f979a9d90d09f6532fc1c19",
          "5f979a9d90d09f6532fc1c1a",
          "5f979ace485db300241ea76d",
          "5f979acf485db300241ea76e",
          "5f979acfd0a8830024f31bf4",
          "5f979acf360d1d002435b763",
          "5f979ad1485db300241ea786",
          "5f979ad160525b00207b5e01",
          "5f979ad160525b00207b5e02",
          "5f979ad1d0a8830024f31bf5",
          "5f979a9d90d09f6532fc1c1b",
          "5f979a9d90d09f6532fc1c1c",
          "5f979a9d90d09f6532fc1c1d",
          "5f979a9d90d09f6532fc1c1e",
          "5f979a9d90d09f6532fc1c1f",
          "5f979a9d90d09f6532fc1c20",
          "5f979a9d90d09f6532fc1c21",
          "5f979a9d90d09f6532fc1c22",
          "5f979a9d90d09f6532fc1c23",
          "5f979a9d90d09f6532fc1c24",
          "5f979a9d90d09f6532fc1c25",
          "5f979a9d90d09f6532fc1c26",
          "5f979a9d90d09f6532fc1c27",
          "5f979a9d90d09f6532fc1c28",
          "5f979a9d90d09f6532fc1c29",
          "5f979a9d90d09f6532fc1c2a",
          "5f979a9d90d09f6532fc1c2b",
          "5f979a9d90d09f6532fc1c2c",
          "5f979a9d90d09f6532fc1c2d",
          "5f979a9d90d09f6532fc1c2e",
          "5f979a9d90d09f6532fc1c2f",
          "5f979a9d90d09f6532fc1c30",
          "5f979a9d90d09f6532fc1c31",
          "5f979a9d90d09f6532fc1c32",
          "5f979a9d90d09f6532fc1c33",
          "5f979a9d90d09f6532fc1c34",
          "5f979a9d90d09f6532fc1c35",
          "5f979a9d90d09f6532fc1c36",
          "5f979a9d90d09f6532fc1c37",
          "5f979a9d90d09f6532fc1c38",
          "5f979a9d90d09f6532fc1c39",
          "5f979a9d90d09f6532fc1c3a",
          "5f979a9d90d09f6532fc1c3b",
          "5f979a9d90d09f6532fc1c3c",
          "5f979a9d90d09f6532fc1c3d",
          "5f979a9d90d09f6532fc1c3e",
          "5f979a9d90d09f6532fc1c3f",
          "5f979a9d90d09f6532fc1c40",
          "5f979a9d90d09f6532fc1c41",
          "5f979a9d90d09f6532fc1c42",
          "5f979a9d90d09f6532fc1c43",
          "5f979a9d90d09f6532fc1c44",
          "5f979a9d90d09f6532fc1c45",
          "5f979a9d90d09f6532fc1c46",
          "5f979a9d90d09f6532fc1c47",
          "5f979a9d90d09f6532fc1c48",
          "5f979a9d90d09f6532fc1c49",
          "5f979a9d90d09f6532fc1c4a",
          "5f979a9d90d09f6532fc1c4b",
          "5f979a9d90d09f6532fc1c4c",
          "5f979a9d90d09f6532fc1c4d",
          "5f979a9d90d09f6532fc1c4e",
          "5f979a9d90d09f6532fc1c4f",
          "5f979a9d90d09f6532fc1c50",
          "5f979a9d90d09f6532fc1c51",
          "5f979a9d90d09f6532fc1c52",
          "5f979a9d90d09f6532fc1c53",
          "5f979a9d90d09f6532fc1c54",
          "5f979a9d90d09f6532fc1c55",
          "5f979a9d90d09f6532fc1c56",
          "5f979a9d90d09f6532fc1c57",
          "5f979a9d90d09f6532fc1c58",
          "5f979a9d90d09f6532fc1c59",
          "5f979a9d90d09f6532fc1c5a",
          "5f979a9d90d09f6532fc1c5b",
          "5f979a9d90d09f6532fc1c5c",
          "5f979a9d90d09f6532fc1c5d",
          "5f979a9d90d09f6532fc1c5e",
          "5f979a9d90d09f6532fc1c5f"
        ],
        "fileType": "folder",
        "_id": "5f979a9d90d09f6532fc1bee",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1bee"
      },
      {
        "name": "asterisk_explode0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1bf9",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/1fbbfca7-4691-41c1-9e73-3a7ed020105a.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1bf9"
      },
      {
        "name": "asterisk_explode0005.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1bfd",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/034fd6b5-98dc-4354-8ab1-e9ab2b562d76.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1bfd"
      },
      {
        "name": "asterisk_circle0000.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1bf0",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/64904acd-b5bb-43ad-851f-0f60be325c8a.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1bf0"
      },
      {
        "name": "asterisk_circle0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1bf1",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/76a74d8b-3e92-4ace-9d3f-e546a3d80dcd.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1bf1"
      },
      {
        "name": "asterisk_circle0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1bf3",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/2a630915-d36b-4216-83ad-32b751010fcf.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1bf3"
      },
      {
        "name": "asterisk_circle0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1bf2",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/dd06f626-75aa-48ef-bc8c-31949af953c0.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1bf2"
      },
      {
        "name": "asterisk_circle0005.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1bf5",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/8e8b3cb8-297f-4d6c-af37-1ab89264b493.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1bf5"
      },
      {
        "name": "asterisk_circle0004.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1bf4",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/93f4ccfb-2919-476f-bf2e-b746e342c6a6.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1bf4"
      },
      {
        "name": "asterisk_circle0006.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1bf6",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/dbe32891-1214-406e-bf56-d1e93d2fa6b1.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1bf6"
      },
      {
        "name": "asterisk_circle0007.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1bf7",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/37213182-bc5b-4d14-ad5a-dd6eec51e833.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1bf7"
      },
      {
        "name": "asterisk_circle0008.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1bf8",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/c76b3f75-9914-4725-b946-89c0984ac54d.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1bf8"
      },
      {
        "name": "asterisk_explode0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1bfa",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/bd9be690-e242-4615-807f-c5d980f08ef5.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1bfa"
      },
      {
        "name": "asterisk_explode0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1bfb",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/08aadb25-e759-4da7-a5ba-8c107c73dce1.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1bfb"
      },
      {
        "name": "asterisk_explode0004.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1bfc",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/c3e23592-00bd-436e-b5c6-ba8b8a7d92ea.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1bfc"
      },
      {
        "name": "asterisk_explode0006.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1bfe",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/b08adec2-625a-4be8-ba1a-f1f6c759103c.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1bfe"
      },
      {
        "name": "asterisk_explode0008.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c00",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/c5d9b659-2298-464d-97e0-e116a2cd559c.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c00"
      },
      {
        "name": "asterisk_explode0007.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1bff",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/b0fe5f66-2b98-4942-9fab-f5ac7c3d98a8.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1bff"
      },
      {
        "name": "asterisk_explode0009.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c01",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/a38ed930-4833-4dcc-b541-7707c6764a04.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c01"
      },
      {
        "name": "asterisk_explode0010.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c02",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/387778e5-d3fe-4c75-9f2b-328287b8729f.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c02"
      },
      {
        "name": "asterisk_explode0011.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c03",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/40c0dacd-7757-4cc7-8c26-2f8754af6dc7.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c03"
      },
      {
        "name": "asterisk_normal0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c04",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/9a4004d1-dc03-49ad-af50-07445494a8e2.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c04"
      },
      {
        "name": "asterisk_normal0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c05",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/e0383ccb-8268-4296-a44e-765e2c88051b.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c05"
      },
      {
        "name": "asterisk_normal0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c06",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/6f5055ba-5972-49a9-a079-b8ffe31a2c90.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c06"
      },
      {
        "name": "asterisk_stretching0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c07",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/9ad2ac0a-cc10-425d-8830-911687463a90.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c07"
      },
      {
        "name": "asterisk_stretching0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c08",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/cdeb6d0d-f79d-4294-a5f4-bfc2bf4298da.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c08"
      },
      {
        "name": "asterisk_stretching0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c09",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/0e8e1af1-2968-4617-ae53-765cc2ff0b61.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c09"
      },
      {
        "name": "asterisk_stretching0004.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c0a",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/9aa54645-a905-4b89-9284-2a954608b05f.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c0a"
      },
      {
        "name": "asterisk_stretching0005.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c0b",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/2ed0e4ab-d880-46a6-90c6-0a3948edd60e.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c0b"
      },
      {
        "name": "asterisk_stretching0006.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c0c",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/ad0eb77a-7105-4c24-be29-9347dd964cb5.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c0c"
      },
      {
        "name": "asterisk_stretching0007.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c0d",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/72644eaa-0970-4f01-a60d-82646631a9b9.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c0d"
      },
      {
        "name": "asterisk_stretching0008.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c0e",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/f45c6d89-e6ea-4e14-80c8-33382479eb29.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c0e"
      },
      {
        "name": "asterisk.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1bef",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/f5f4035d-83c3-4d31-bbb1-e348520141e0.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1bef"
      },
      {
        "name": "asteroid1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c10",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/f1e41aa9-f29b-47fd-96c6-5bf8bded54d8.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c10"
      },
      {
        "name": "asteroid0.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c0f",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/e2b6673d-4a3f-451c-af6a-2f3bd3d67408.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c0f"
      },
      {
        "name": "asteroid2.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c11",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/a5f5a2ad-ec19-4d20-aa4f-a09a9268f00a.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c11"
      },
      {
        "name": "asteroids_bullet.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c12",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/a47813cc-1b7b-4d77-b189-1fc154350929.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c12"
      },
      {
        "name": "asteroids_ship0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c14",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/e0fd0037-516c-4e22-8c40-3ba877401cfd.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c14"
      },
      {
        "name": "asteroids_particle.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c13",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/73fc4d5e-aed7-4bf6-80cb-a07fce9d57c2.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c13"
      },
      {
        "name": "asteroids_ship0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c15",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/51091ba1-cebc-400f-baa2-08286192a5d6.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c15"
      },
      {
        "name": "asteroids_ship0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c16",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/ec7abfdd-6504-457f-bdee-4218bd39da9e.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c16"
      },
      {
        "name": "asteroids_ship0004.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c17",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/3441d29f-b1d5-4e6a-8d49-4f8da230b0f6.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c17"
      },
      {
        "name": "asteroids_ship0005.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c18",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/6363258c-6c77-40b8-a1cd-6cad248deb76.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c18"
      },
      {
        "name": "asteroids_ship0006.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c19",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/aa3dfa24-6444-45e0-8975-d264767aa9a1.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c19"
      },
      {
        "name": "asteroids_ship0007.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c1a",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/89ecd353-e530-41f3-b5bf-d1ab707ddcc3.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c1a"
      },
      {
        "name": "box0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c1b",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/686163f7-793e-42c2-bf8b-9499d444b677.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c1b"
      },
      {
        "name": "box0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c1c",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/fb10802e-128f-40df-83d5-87ce6a072637.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c1c"
      },
      {
        "name": "box0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c1d",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/abaca8d3-6577-46c5-8cda-8587830f6457.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c1d"
      },
      {
        "name": "bubbly0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c1e",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/91199e98-4143-4505-8cba-fce8691e839d.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c1e"
      },
      {
        "name": "bubbly0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c1f",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/196f687b-18c6-4b82-b830-a90c7a4d0146.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c1f"
      },
      {
        "name": "bubbly0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c20",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/563113f3-06a0-410a-9af5-43063548c82c.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c20"
      },
      {
        "name": "bubbly0004.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c21",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/4706ac1a-a1a3-44ec-a01d-8418bced5ef7.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c21"
      },
      {
        "name": "cloud_breathing0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c23",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/47ae033a-2e96-467c-a5d4-663cec99b798.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c23"
      },
      {
        "name": "cloud_breathing0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c24",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/f3910274-aaf5-4b39-8dd7-0043015e8f7c.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c24"
      },
      {
        "name": "cloud_breathing0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c25",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/945ba38e-2be4-4505-abfc-0a38302030c4.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c25"
      },
      {
        "name": "cloud_breathing0004.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c26",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/f222aaad-904a-459b-9880-df44219001d6.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c26"
      },
      {
        "name": "cloud_breathing0005.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c27",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/24d5f1b4-9f84-4625-9519-4968d0eada35.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c27"
      },
      {
        "name": "cloud_breathing0006.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c28",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/4917e7d9-31fe-4b03-add7-b9e65ecbdb5c.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c28"
      },
      {
        "name": "cloud_breathing0007.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c29",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/f857c62c-42af-4748-982d-22030690ad6f.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c29"
      },
      {
        "name": "cloud_breathing0008.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c2a",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/3ee46d88-b3c4-4108-b068-d482be4432b4.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c2a"
      },
      {
        "name": "cloud_breathing0009.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c2b",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/6dd52811-475a-4528-95bc-1247ac59aade.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c2b"
      },
      {
        "name": "cloud_pulsing0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c2c",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/61ed2e66-2561-4063-97ee-1b4a5964b5be.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c2c"
      },
      {
        "name": "cloud_pulsing0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c2d",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/3d3d677a-da3b-4d36-a81f-bf9cac08ff78.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c2d"
      },
      {
        "name": "cloud_pulsing0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c2e",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/5cd6208b-b673-4d47-b022-73085bea981a.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c2e"
      },
      {
        "name": "cloud_pulsing0004.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c2f",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/6f9772dc-1493-4262-8322-5adba374eed4.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c2f"
      },
      {
        "name": "cloud_pulsing0005.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c30",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/d2f4790c-53ac-495f-8a5f-82ae9be60182.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c30"
      },
      {
        "name": "cloud_pulsing0006.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c31",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/2ab2aeef-aad6-40a6-bbbe-810cf3144c68.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c31"
      },
      {
        "name": "cloud_pulsing0007.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c32",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/d0756d53-68a6-4d17-bb7e-3a283947b20b.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c32"
      },
      {
        "name": "cloud.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c22",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/4b2ffc39-6a18-444c-9079-45c77ffdb563.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c22"
      },
      {
        "name": "explode_sprite_sheet.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c33",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/77e7bfb9-9a02-414b-8be9-eb086e7c27a7.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c33"
      },
      {
        "name": "face.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c34",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/d0a099fa-4922-4246-8396-8685209e5eb2.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c34"
      },
      {
        "name": "flappy_bg.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c35",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/458dacf9-ed1d-4374-9eb9-8485b1de2891.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c35"
      },
      {
        "name": "flappy_bird.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c36",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/7f1c1323-cbb2-4a80-97cb-995b118c3d82.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c36"
      },
      {
        "name": "flappy_ground copy.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c37",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/351d2ea0-b7d9-45b4-a46b-7803f14aa980.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c37"
      },
      {
        "name": "flappy_ground.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c38",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/19654655-d4e8-4032-a43d-db7da80fb8aa.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c38"
      },
      {
        "name": "flappy_pipe.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c39",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/a26cc78d-ee8f-4cc5-b191-7c0d763f9874.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c39"
      },
      {
        "name": "frame.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c3a",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/adc1af5c-0752-4305-965a-28d299153a21.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c3a"
      },
      {
        "name": "ghost_spin0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c3b",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/27f7fda2-4044-483c-a74e-a21619c421aa.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c3b"
      },
      {
        "name": "ghost_spin0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c3c",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/ce0636f9-905d-4d66-ba64-0e44ea5ed63d.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c3c"
      },
      {
        "name": "ghost_spin0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c3d",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/c52aab02-8921-4922-a15f-7027f96f6425.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c3d"
      },
      {
        "name": "ghost_standing0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c3e",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/2877d804-c108-4841-a928-703c73e452c6.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c3e"
      },
      {
        "name": "ghost_standing0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c3f",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/ab716526-fd44-4e22-8850-561f957a9022.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c3f"
      },
      {
        "name": "ghost_standing0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c40",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/b7f1d9b2-0f28-4b63-912d-65eef7812ca9.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c40"
      },
      {
        "name": "ghost_standing0004.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c41",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/cc4342df-8132-40da-89e1-f52b399eae15.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c41"
      },
      {
        "name": "ghost_standing0005.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c42",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/2f360a9b-a590-4e6e-92e2-d2c37342bdd2.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c42"
      },
      {
        "name": "ghost_standing0006.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c43",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/a05d0a48-a39a-4502-a683-5572c5f8e9cf.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c43"
      },
      {
        "name": "ghost_standing0007.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c44",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/ee12b198-e963-4a0c-8237-8e6fb0a6f60e.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c44"
      },
      {
        "name": "ghost_walk0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c45",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/0e2a64a1-463a-497c-98cf-fe74b86ab1e0.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c45"
      },
      {
        "name": "ghost_walk0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c46",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/17b5e34a-ef77-455e-a5ba-e193da18f257.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c46"
      },
      {
        "name": "ghost_walk0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c47",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/81cf50ea-25c4-4f26-84df-2b3cf721c896.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c47"
      },
      {
        "name": "ghost_walk0004.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c48",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/a1bf3cb6-42ca-4ff3-9a74-614cfcd2d603.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c48"
      },
      {
        "name": "mess.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c49",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/1aec5c7a-612f-4b3f-840f-94bd89d188f5.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c49"
      },
      {
        "name": "monster.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c4a",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/64b76bd3-f0b0-40d8-b47e-493b6ff2bded.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c4a"
      },
      {
        "name": "platform.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c4c",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/5cf98e70-4a77-4864-b578-2bf6d5662317.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c4c"
      },
      {
        "name": "plain_circle.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c4b",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/fd4ad99f-20b2-4718-a4db-d970db5cab7b.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c4b"
      },
      {
        "name": "player_spritesheet.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c4d",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/5934d740-7f5c-458f-b10a-ec4293bc49f0.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c4d"
      },
      {
        "name": "rocks0.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c4e",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/b97ab8b0-14b4-42c0-80ef-8e6c4d1a706f.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c4e"
      },
      {
        "name": "rocks1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c4f",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/39314098-b244-4ea1-9be1-f4fed7ea20b2.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c4f"
      },
      {
        "name": "rocks2.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c50",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/701dc799-8110-4d1f-bdca-df45f5f7cc51.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c50"
      },
      {
        "name": "small_circle0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c52",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/895886ee-5265-4ad1-bbfb-28c41231c25f.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c52"
      },
      {
        "name": "rocks3.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c51",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/24a2e975-f73a-49f1-8d67-6cd312dbd8d3.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c51"
      },
      {
        "name": "small_circle0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c53",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/c08760a3-20fd-49e8-803a-7307d6fcc3a5.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c53"
      },
      {
        "name": "small_circle0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c54",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/b0cd99df-1e0b-4f39-9c67-f03ef7855be9.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c54"
      },
      {
        "name": "small_platform0001.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c55",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/3770d2a9-1b81-4abf-af31-037ddb8e63ed.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c55"
      },
      {
        "name": "small_platform0002.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c56",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/6229305c-ccc0-42fc-ba61-adb486726901.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c56"
      },
      {
        "name": "small_platform0003.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c57",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/8c032daf-a0de-4e8a-9bae-587bc6cd9de9.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c57"
      },
      {
        "name": "small_rectangle.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c58",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/73c8b7c9-e383-4362-adb9-ebbe35e89902.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c58"
      },
      {
        "name": "small_square.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c59",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/ba8973d1-78ea-4b60-ac30-15b6297f7034.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c59"
      },
      {
        "name": "small_triangle.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c5a",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/edab0e6c-3691-4da1-bb00-199d80f22244.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c5a"
      },
      {
        "name": "square.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c5b",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/2b40a237-d9be-40a5-9470-59e84524732c.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c5b"
      },
      {
        "name": "star.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c5c",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/2d5b182a-a338-44a3-9b2a-06b7e3945c4e.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c5c"
      },
      {
        "name": "sun1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c5d",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/e6f8d666-36ee-4168-8c83-0f7638023b58.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c5d"
      },
      {
        "name": "sun2.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c5e",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/95035b56-97a5-44ea-9d85-2a6f3a073d04.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c5e"
      },
      {
        "name": "sun3.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c5f",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/74d520be-7888-4d9f-bda4-efb42ee57976.png",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c5f"
      },
      {
        "name": "lib",
        "content": "",
        "children": [
          "5f979a9d90d09f6532fc1c62"
        ],
        "fileType": "folder",
        "_id": "5f979a9d90d09f6532fc1c61",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c61"
      },
      {
        "name": "p5.play.js",
        "content": "/*\np5.play\nby Paolo Pedercini/molleindustria, 2015\nhttp://molleindustria.org/\n*/\n\n(function(root, factory) {\nif (typeof define === 'function' && define.amd)\ndefine('p5.play', ['p5'], function(p5) { (factory(p5)); });\nelse if (typeof exports === 'object')\nfactory(require('../p5'));\nelse\nfactory(root.p5);\n}(this, function(p5) {\n/**\n * p5.play is a library for p5.js to facilitate the creation of games and gamelike\n * projects.\n *\n * It provides a flexible Sprite class to manage visual objects in 2D space\n * and features such as animation support, basic collision detection\n * and resolution, mouse and keyboard interactions, and a virtual camera.\n *\n * p5.play is not a box2D-derived physics engine, it doesn't use events, and it's\n * designed to be understood and possibly modified by intermediate programmers.\n *\n * See the examples folder for more info on how to use this library.\n *\n * @module p5.play\n * @submodule p5.play\n * @for p5.play\n * @main\n */\n\n// =============================================================================\n//                         initialization\n// =============================================================================\n\n// This is the new way to initialize custom p5 properties for any p5 instance.\n// The goal is to migrate lazy P5 properties over to this method.\n// @see https://github.com/molleindustria/p5.play/issues/46\np5.prototype.registerMethod('init', function p5PlayInit() {\n  /**\n   * The sketch camera automatically created at the beginning of a sketch.\n   * A camera facilitates scrolling and zooming for scenes extending beyond\n   * the canvas. A camera has a position, a zoom factor, and the mouse\n   * coordinates relative to the view.\n   *\n   * In p5.js terms the camera wraps the whole drawing cycle in a\n   * transformation matrix but it can be disabled anytime during the draw\n   * cycle, for example to draw interface elements in an absolute position.\n   *\n   * @property camera\n   * @type {camera}\n   */\n  this.camera = new Camera(this, 0, 0, 1);\n  this.camera.init = false;\n});\n\n// This provides a way for us to lazily define properties that\n// are global to p5 instances.\n//\n// Note that this isn't just an optimization: p5 currently provides no\n// way for add-ons to be notified when new p5 instances are created, so\n// lazily creating these properties is the *only* mechanism available\n// to us. For more information, see:\n//\n// https://github.com/processing/p5.js/issues/1263\nfunction defineLazyP5Property(name, getter) {\n  Object.defineProperty(p5.prototype, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var context = (this instanceof p5 && !this._isGlobal) ? this : window;\n\n      if (typeof(context._p5PlayProperties) === 'undefined') {\n        context._p5PlayProperties = {};\n      }\n      if (!(name in context._p5PlayProperties)) {\n        context._p5PlayProperties[name] = getter.call(context);\n      }\n      return context._p5PlayProperties[name];\n    }\n  });\n}\n\n// This returns a factory function, suitable for passing to\n// defineLazyP5Property, that returns a subclass of the given\n// constructor that is always bound to a particular p5 instance.\nfunction boundConstructorFactory(constructor) {\n  if (typeof(constructor) !== 'function')\n    throw new Error('constructor must be a function');\n\n  return function createBoundConstructor() {\n    var pInst = this;\n\n    function F() {\n      var args = Array.prototype.slice.call(arguments);\n\n      return constructor.apply(this, [pInst].concat(args));\n    }\n    F.prototype = constructor.prototype;\n\n    return F;\n  };\n}\n\n// This is a utility that makes it easy to define convenient aliases to\n// pre-bound p5 instance methods.\n//\n// For example:\n//\n//   var pInstBind = createPInstBinder(pInst);\n//\n//   var createVector = pInstBind('createVector');\n//   var loadImage = pInstBind('loadImage');\n//\n// The above will create functions createVector and loadImage, which can be\n// used similar to p5 global mode--however, they're bound to specific p5\n// instances, and can thus be used outside of global mode.\nfunction createPInstBinder(pInst) {\n  return function pInstBind(methodName) {\n    var method = pInst[methodName];\n\n    if (typeof(method) !== 'function')\n      throw new Error('\"' + methodName + '\" is not a p5 method');\n    return method.bind(pInst);\n  };\n}\n\n// These are utility p5 functions that don't depend on p5 instance state in\n// order to work properly, so we'll go ahead and make them easy to\n// access without needing to bind them to a p5 instance.\nvar abs = p5.prototype.abs;\nvar radians = p5.prototype.radians;\nvar dist = p5.prototype.dist;\nvar degrees = p5.prototype.degrees;\nvar pow = p5.prototype.pow;\nvar round = p5.prototype.round;\n\n\n// =============================================================================\n//                         p5 additions\n// =============================================================================\n\n/**\n* A Group containing all the sprites in the sketch.\n*\n* @property allSprites\n* @type {Group}\n*/\n\ndefineLazyP5Property('allSprites', function() {\n  return new p5.prototype.Group();\n});\n\np5.prototype.spriteUpdate = true;\n\n/**\n   * A Sprite is the main building block of p5.play:\n   * an element able to store images or animations with a set of\n   * properties such as position and visibility.\n   * A Sprite can have a collider that defines the active area to detect\n   * collisions or overlappings with other sprites and mouse interactions.\n   *\n   * Sprites created using createSprite (the preferred way) are added to the\n   * allSprites group and given a depth value that puts it in front of all\n   * other sprites.\n   *\n   * @method createSprite\n   * @param {Number} x Initial x coordinate\n   * @param {Number} y Initial y coordinate\n   * @param {Number} width Width of the placeholder rectangle and of the\n   *                       collider until an image or new collider are set\n   * @param {Number} height Height of the placeholder rectangle and of the\n   *                       collider until an image or new collider are set\n   * @return {Object} The new sprite instance\n   */\n\np5.prototype.createSprite = function(x, y, width, height) {\n  var s = new Sprite(this, x, y, width, height);\n  s.depth = this.allSprites.maxDepth()+1;\n  this.allSprites.add(s);\n  return s;\n};\n\n\n/**\n   * Removes a Sprite from the sketch.\n   * The removed Sprite won't be drawn or updated anymore.\n   * Equivalent to Sprite.remove()\n   *\n   * @method removeSprite\n   * @param {Object} sprite Sprite to be removed\n*/\np5.prototype.removeSprite = function(sprite) {\n  sprite.remove();\n};\n\n/**\n* Updates all the sprites in the sketch (position, animation...)\n* it's called automatically at every draw().\n* It can be paused by passing a parameter true or false;\n* Note: it does not render the sprites.\n*\n* @method updateSprites\n* @param {Boolean} updating false to pause the update, true to resume\n*/\np5.prototype.updateSprites = function(upd) {\n\n  if(upd === false)\n    this.spriteUpdate = false;\n  if(upd === true)\n    this.spriteUpdate = true;\n\n  if(this.spriteUpdate)\n  for(var i = 0; i<this.allSprites.size(); i++)\n  {\n    this.allSprites.get(i).update();\n  }\n};\n\n/**\n* Returns all the sprites in the sketch as an array\n*\n* @method getSprites\n* @return {Array} Array of Sprites\n*/\np5.prototype.getSprites = function() {\n\n  //draw everything\n  if(arguments.length===0)\n  {\n    return this.allSprites.toArray();\n  }\n  else\n  {\n    var arr = [];\n    //for every tag\n    for(var j=0; j<arguments.length; j++)\n    {\n      for(var i = 0; i<this.allSprites.size(); i++)\n      {\n        if(this.allSprites.get(i).isTagged(arguments[j]))\n          arr.push(this.allSprites.get(i));\n      }\n    }\n\n    return arr;\n  }\n\n};\n\n/**\n* Displays a Group of sprites.\n* If no parameter is specified, draws all sprites in the\n* sketch.\n* The drawing order is determined by the Sprite property \"depth\"\n*\n* @method drawSprites\n* @param {Group} [group] Group of Sprites to be displayed\n*/\np5.prototype.drawSprites = function(group) {\n  // If no group is provided, draw the allSprites group.\n  group = group || this.allSprites;\n\n  if (typeof group.draw !== 'function')\n  {\n    throw('Error: with drawSprites you can only draw all sprites or a group');\n  }\n\n  group.draw();\n};\n\n/**\n* Displays a Sprite.\n* To be typically used in the main draw function.\n*\n* @method drawSprite\n* @param {Sprite} sprite Sprite to be displayed\n*/\np5.prototype.drawSprite = function(sprite) {\n  if(sprite)\n  sprite.display();\n};\n\n/**\n* Loads an animation.\n* To be typically used in the preload() function of the sketch.\n*\n* @method loadAnimation\n* @param {Sprite} sprite Sprite to be displayed\n*/\np5.prototype.loadAnimation = function() {\n  return construct(this.Animation, arguments);\n};\n\n/**\n * Loads a Sprite Sheet.\n * To be typically used in the preload() function of the sketch.\n *\n * @method loadSpriteSheet\n */\np5.prototype.loadSpriteSheet = function() {\n  return construct(this.SpriteSheet, arguments);\n};\n\n/**\n* Displays an animation.\n*\n* @method animation\n* @param {Animation} anim Animation to be displayed\n* @param {Number} x X coordinate\n* @param {Number} y Y coordinate\n*\n*/\np5.prototype.animation = function(anim, x, y) {\n  anim.draw(x, y);\n};\n\n//variable to detect instant presses\ndefineLazyP5Property('_p5play', function() {\n  return {\n    keyStates: {},\n    mouseStates: {}\n  };\n});\n\nvar KEY_IS_UP = 0;\nvar KEY_WENT_DOWN = 1;\nvar KEY_IS_DOWN = 2;\nvar KEY_WENT_UP = 3;\n\n/**\n* Detects if a key was pressed during the last cycle.\n* It can be used to trigger events once, when a key is pressed or released.\n* Example: Super Mario jumping.\n*\n* @method keyWentDown\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key was pressed\n*/\np5.prototype.keyWentDown = function(key) {\n  return this._isKeyInState(key, KEY_WENT_DOWN);\n};\n\n\n/**\n* Detects if a key was released during the last cycle.\n* It can be used to trigger events once, when a key is pressed or released.\n* Example: Spaceship shooting.\n*\n* @method keyWentUp\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key was released\n*/\np5.prototype.keyWentUp = function(key) {\n  return this._isKeyInState(key, KEY_WENT_UP);\n};\n\n/**\n* Detects if a key is currently pressed\n* Like p5 keyIsDown but accepts strings and codes\n*\n* @method keyDown\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key is down\n*/\np5.prototype.keyDown = function(key) {\n  return this._isKeyInState(key, KEY_IS_DOWN);\n};\n\n/**\n * Detects if a key is in the given state during the last cycle.\n * Helper method encapsulating common key state logic; it may be preferable\n * to call keyDown or other methods directly.\n *\n * @private\n * @method _isKeyInState\n * @param {Number|String} key Key code or character\n * @param {Number} state Key state to check against\n * @return {Boolean} True if the key is in the given state\n */\np5.prototype._isKeyInState = function(key, state) {\n  var keyCode;\n  var keyStates = this._p5play.keyStates;\n\n  if(typeof key === 'string')\n  {\n    keyCode = this._keyCodeFromAlias(key);\n  }\n  else\n  {\n    keyCode = key;\n  }\n\n  //if undefined start checking it\n  if(keyStates[keyCode]===undefined)\n  {\n    if(this.keyIsDown(keyCode))\n      keyStates[keyCode] = KEY_IS_DOWN;\n    else\n      keyStates[keyCode] = KEY_IS_UP;\n  }\n\n  return (keyStates[keyCode] === state);\n};\n\n/**\n* Detects if a mouse button is currently down\n* Combines mouseIsPressed and mouseButton of p5\n*\n* @method mouseDown\n* @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n* @return {Boolean} True if the button is down\n*/\np5.prototype.mouseDown = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_IS_DOWN);\n};\n\n/**\n* Detects if a mouse button is currently up\n* Combines mouseIsPressed and mouseButton of p5\n*\n* @method mouseUp\n* @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n* @return {Boolean} True if the button is up\n*/\np5.prototype.mouseUp = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_IS_UP);\n};\n\n/**\n * Detects if a mouse button was released during the last cycle.\n * It can be used to trigger events once, to be checked in the draw cycle\n *\n * @method mouseWentUp\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @return {Boolean} True if the button was just released\n */\np5.prototype.mouseWentUp = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_WENT_UP);\n};\n\n\n/**\n * Detects if a mouse button was pressed during the last cycle.\n * It can be used to trigger events once, to be checked in the draw cycle\n *\n * @method mouseWentDown\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @return {Boolean} True if the button was just pressed\n */\np5.prototype.mouseWentDown = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_WENT_DOWN);\n};\n\n/**\n * Detects if a mouse button is in the given state during the last cycle.\n * Helper method encapsulating common mouse button state logic; it may be\n * preferable to call mouseWentUp, etc, directly.\n *\n * @private\n * @method _isMouseButtonInState\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @param {Number} state\n * @return {boolean} True if the button was in the given state\n */\np5.prototype._isMouseButtonInState = function(buttonCode, state) {\n  var mouseStates = this._p5play.mouseStates;\n\n  if(buttonCode === undefined)\n    buttonCode = this.LEFT;\n\n  //undefined = not tracked yet, start tracking\n  if(mouseStates[buttonCode]===undefined)\n  {\n  if(this.mouseIsPressed && this.mouseButton === buttonCode)\n    mouseStates[buttonCode] = KEY_IS_DOWN;\n  else\n    mouseStates[buttonCode] = KEY_IS_UP;\n  }\n\n  return (mouseStates[buttonCode] === state);\n};\n\n\n/**\n * An object storing all useful keys for easy access\n * Key.tab = 9\n *\n * @private\n * @property KEY\n * @type {Object}\n */\np5.prototype.KEY = {\n    'BACKSPACE': 8,\n    'TAB': 9,\n    'ENTER': 13,\n    'SHIFT': 16,\n    'CTRL': 17,\n    'ALT': 18,\n    'PAUSE': 19,\n    'CAPS_LOCK': 20,\n    'ESC': 27,\n    'SPACE': 32,\n    ' ': 32,\n    'PAGE_UP': 33,\n    'PAGE_DOWN': 34,\n    'END': 35,\n    'HOME': 36,\n    'LEFT_ARROW': 37,\n    'LEFT': 37,\n    'UP_ARROW': 38,\n    'UP': 38,\n    'RIGHT_ARROW': 39,\n    'RIGHT': 39,\n    'DOWN_ARROW': 40,\n    'DOWN': 40,\n    'INSERT': 45,\n    'DELETE': 46,\n    '0': 48,\n    '1': 49,\n    '2': 50,\n    '3': 51,\n    '4': 52,\n    '5': 53,\n    '6': 54,\n    '7': 55,\n    '8': 56,\n    '9': 57,\n    'A': 65,\n    'B': 66,\n    'C': 67,\n    'D': 68,\n    'E': 69,\n    'F': 70,\n    'G': 71,\n    'H': 72,\n    'I': 73,\n    'J': 74,\n    'K': 75,\n    'L': 76,\n    'M': 77,\n    'N': 78,\n    'O': 79,\n    'P': 80,\n    'Q': 81,\n    'R': 82,\n    'S': 83,\n    'T': 84,\n    'U': 85,\n    'V': 86,\n    'W': 87,\n    'X': 88,\n    'Y': 89,\n    'Z': 90,\n    '0NUMPAD': 96,\n    '1NUMPAD': 97,\n    '2NUMPAD': 98,\n    '3NUMPAD': 99,\n    '4NUMPAD': 100,\n    '5NUMPAD': 101,\n    '6NUMPAD': 102,\n    '7NUMPAD': 103,\n    '8NUMPAD': 104,\n    '9NUMPAD': 105,\n    'MULTIPLY': 106,\n    'PLUS': 107,\n    'MINUS': 109,\n    'DOT': 110,\n    'SLASH1': 111,\n    'F1': 112,\n    'F2': 113,\n    'F3': 114,\n    'F4': 115,\n    'F5': 116,\n    'F6': 117,\n    'F7': 118,\n    'F8': 119,\n    'F9': 120,\n    'F10': 121,\n    'F11': 122,\n    'F12': 123,\n    'EQUAL': 187,\n    'COMMA': 188,\n    'SLASH': 191,\n    'BACKSLASH': 220\n};\n\n/**\n * An object storing deprecated key aliases, which we still support but\n * should be mapped to valid aliases and generate warnings.\n *\n * @private\n * @property KEY_DEPRECATIONS\n * @type {Object}\n */\np5.prototype.KEY_DEPRECATIONS = {\n  'MINUT': 'MINUS',\n  'COMA': 'COMMA'\n};\n\n/**\n * Given a string key alias (as defined in the KEY property above), look up\n * and return the numeric JavaScript key code for that key.  If a deprecated\n * alias is passed (as defined in the KEY_DEPRECATIONS property) it will be\n * mapped to a valid key code, but will also generate a warning about use\n * of the deprecated alias.\n *\n * @private\n * @method _keyCodeFromAlias\n * @param {!string} alias - a case-insensitive key alias\n * @return {number|undefined} a numeric JavaScript key code, or undefined\n *          if no key code matching the given alias is found.\n */\np5.prototype._keyCodeFromAlias = function(alias) {\n  alias = alias.toUpperCase();\n  if (this.KEY_DEPRECATIONS[alias]) {\n    this._warn('Key literal \"' + alias + '\" is deprecated and may be removed ' +\n      'in a future version of p5.play. ' +\n      'Please use \"' + this.KEY_DEPRECATIONS[alias] + '\" instead.');\n    alias = this.KEY_DEPRECATIONS[alias];\n  }\n  return this.KEY[alias];\n};\n\n//pre draw: detect keyStates\np5.prototype.readPresses = function() {\n  var keyStates = this._p5play.keyStates;\n  var mouseStates = this._p5play.mouseStates;\n\n  for (var key in keyStates) {\n    if(this.keyIsDown(key)) //if is down\n    {\n      if(keyStates[key] === KEY_IS_UP)//and was up\n        keyStates[key] = KEY_WENT_DOWN;\n      else\n        keyStates[key] = KEY_IS_DOWN; //now is simply down\n    }\n    else //if it's up\n    {\n      if(keyStates[key] === KEY_IS_DOWN)//and was up\n        keyStates[key] = KEY_WENT_UP;\n      else\n        keyStates[key] = KEY_IS_UP; //now is simply down\n    }\n  }\n\n  //mouse\n  for (var btn in mouseStates) {\n\n    if(this.mouseIsPressed && this.mouseButton === btn) //if is down\n    {\n      if(mouseStates[btn] === KEY_IS_UP)//and was up\n        mouseStates[btn] = KEY_WENT_DOWN;\n      else\n        mouseStates[btn] = KEY_IS_DOWN; //now is simply down\n    }\n    else //if it's up\n    {\n      if(mouseStates[btn] === KEY_IS_DOWN)//and was up\n        mouseStates[btn] = KEY_WENT_UP;\n      else\n        mouseStates[btn] = KEY_IS_UP; //now is simply down\n    }\n  }\n\n};\n\n/**\n* Turns the quadTree on or off.\n* A quadtree is a data structure used to optimize collision detection.\n* It can improve performance when there is a large number of Sprites to be\n* checked continuously for overlapping.\n*\n* p5.play will create and update a quadtree automatically.\n*\n* @method useQuadTree\n* @param {Boolean} use Pass true to enable, false to disable\n*/\np5.prototype.useQuadTree = function(use) {\n\n  if(this.quadTree !== undefined)\n  {\n    if(use === undefined)\n      return this.quadTree.active;\n    else if(use)\n      this.quadTree.active = true;\n    else\n      this.quadTree.active = false;\n  }\n  else\n    return false;\n};\n\n//the actual quadTree\ndefineLazyP5Property('quadTree', function() {\n  return new Quadtree({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  }, 4);\n});\n\n/*\n//framerate independent delta, doesn't really work\np5.prototype.deltaTime = 1;\n\nvar now = Date.now();\nvar then = Date.now();\nvar INTERVAL_60 = 0.0166666; //60 fps\n\nfunction updateDelta() {\nthen = now;\nnow = Date.now();\ndeltaTime = ((now - then) / 1000)/INTERVAL_60; // seconds since last frame\n}\n*/\n\n/**\n   * A Sprite is the main building block of p5.play:\n   * an element able to store images or animations with a set of\n   * properties such as position and visibility.\n   * A Sprite can have a collider that defines the active area to detect\n   * collisions or overlappings with other sprites and mouse interactions.\n   *\n   * To create a Sprite, use\n   * {{#crossLink \"p5.play/createSprite:method\"}}{{/crossLink}}.\n   *\n   * @class Sprite\n   */\n\n// For details on why these docs aren't in a YUIDoc comment block, see:\n//\n// https://github.com/molleindustria/p5.play/pull/67\n//\n// @param {Number} x Initial x coordinate\n// @param {Number} y Initial y coordinate\n// @param {Number} width Width of the placeholder rectangle and of the\n//                       collider until an image or new collider are set\n// @param {Number} height Height of the placeholder rectangle and of the\n//                        collider until an image or new collider are set\nfunction Sprite(pInst, _x, _y, _w, _h) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n  var color = pInstBind('color');\n  var random = pInstBind('random');\n  var print = pInstBind('print');\n  var push = pInstBind('push');\n  var pop = pInstBind('pop');\n  var colorMode = pInstBind('colorMode');\n  var noStroke = pInstBind('noStroke');\n  var rectMode = pInstBind('rectMode');\n  var ellipseMode = pInstBind('ellipseMode');\n  var imageMode = pInstBind('imageMode');\n  var translate = pInstBind('translate');\n  var scale = pInstBind('scale');\n  var rotate = pInstBind('rotate');\n  var stroke = pInstBind('stroke');\n  var strokeWeight = pInstBind('strokeWeight');\n  var line = pInstBind('line');\n  var noFill = pInstBind('noFill');\n  var fill = pInstBind('fill');\n  var textAlign = pInstBind('textAlign');\n  var textSize = pInstBind('textSize');\n  var text = pInstBind('text');\n  var rect = pInstBind('rect');\n  var cos = pInstBind('cos');\n  var sin = pInstBind('sin');\n  var atan2 = pInstBind('atan2');\n\n  var quadTree = pInst.quadTree;\n  var camera = pInst.camera;\n\n\n  // These are p5 constants that we'd like easy access to.\n  var RGB = p5.prototype.RGB;\n  var CENTER = p5.prototype.CENTER;\n  var LEFT = p5.prototype.LEFT;\n  var BOTTOM = p5.prototype.BOTTOM;\n\n  /**\n  * The sprite's position of the sprite as a vector (x,y).\n  * @property position\n  * @type {p5.Vector}\n  */\n  this.position = createVector(_x, _y);\n\n  /**\n  * The sprite's position at the beginning of the last update as a vector (x,y).\n  * @property previousPosition\n  * @type {p5.Vector}\n  */\n  this.previousPosition = createVector(_x, _y);\n\n  /*\n  The sprite's position at the end of the last update as a vector (x,y).\n  Note: this will differ from position whenever the position is changed\n  directly by assignment.\n  */\n  this.newPosition = createVector(_x, _y);\n\n  //Position displacement on the x coordinate since the last update\n  this.deltaX = 0;\n  this.deltaY = 0;\n\n  /**\n  * The sprite's velocity as a vector (x,y)\n  * Velocity is speed broken down to its vertical and horizontal components.\n  *\n  * @property velocity\n  * @type {p5.Vector}\n  */\n  this.velocity = createVector(0, 0);\n\n  /**\n  * Set a limit to the sprite's scalar speed regardless of the direction.\n  * The value can only be positive. If set to -1, there's no limit.\n  *\n  * @property maxSpeed\n  * @type {Number}\n  * @default -1\n  */\n  this.maxSpeed = -1;\n\n  /**\n  * Friction factor, reduces the sprite's velocity.\n  * The friction should be close to 0 (eg. 0.01)\n  * 0: no friction\n  * 1: full friction\n  *\n  * @property friction\n  * @type {Number}\n  * @default 0\n  */\n  this.friction = 0;\n\n  /**\n  * The sprite's current collider.\n  * It can either be an Axis Aligned Bounding Box (a non-rotated rectangle)\n  * or a circular collider.\n  * If the sprite is checked for collision, bounce, overlapping or mouse events the\n  * collider is automatically created from the width and height\n  * of the sprite or from the image dimension in case of animate sprites\n  *\n  * You can set a custom collider with Sprite.setCollider\n  *\n  * @property collider\n  * @type {Object}\n  */\n  this.collider = undefined;\n\n  //internal use\n  //\"default\" - no image or custom collider is specified, use the shape width / height\n  //\"custom\" - specified with setCollider\n  //\"image\" - no collider is set with setCollider and an image is added\n  this.colliderType = 'none';\n\n  /**\n  * Object containing information about the most recent collision/overlapping\n  * To be typically used in combination with Sprite.overlap or Sprite.collide\n  * functions.\n  * The properties are touching.left, touching.right, touching.top,\n  * touching.bottom and are either true or false depending on the side of the\n  * collider.\n  *\n  * @property touching\n  * @type {Object}\n  */\n  this.touching = {};\n  this.touching.left = false;\n  this.touching.right = false;\n  this.touching.top = false;\n  this.touching.bottom = false;\n\n  /**\n  * The mass determines the velocity transfer when sprites bounce\n  * against each other. See Sprite.bounce\n  * The higher the mass the least the sprite will be affected by collisions.\n  *\n  * @property mass\n  * @type {Number}\n  * @default 1\n  */\n  this.mass = 1;\n\n  /**\n  * If set to true the sprite won't bounce or be displaced by collisions\n  * Simulates an infinite mass or an anchored object.\n  *\n  * @property immovable\n  * @type {Boolean}\n  * @default false\n  */\n  this.immovable = false;\n\n  //Coefficient of restitution - velocity lost in the bouncing\n  //0 perfectly inelastic , 1 elastic, > 1 hyper elastic\n\n  /**\n  * Coefficient of restitution. The velocity lost after bouncing.\n  * 1: perfectly elastic, no energy is lost\n  * 0: perfectly inelastic, no bouncing\n  * less than 1: inelastic, this is the most common in nature\n  * greater than 1: hyper elastic, energy is increased like in a pinball bumper\n  *\n  * @property restitution\n  * @type {Number}\n  * @default 1\n  */\n  this.restitution = 1;\n\n  /**\n  * Rotation in degrees of the visual element (image or animation)\n  * Note: this is not the movement's direction, see getDirection.\n  *\n  * @property rotation\n  * @type {Number}\n  * @default 0\n  */\n  Object.defineProperty(this, 'rotation', {\n    enumerable: true,\n    get: function() {\n      return this._rotation;\n    },\n    set: function(value) {\n      this._rotation = value;\n      if (this.rotateToDirection) {\n        this.setSpeed(this.getSpeed(), value);\n      }\n    }\n  });\n\n  /**\n  * Internal rotation variable (expressed in degrees).\n  * Note: external callers access this through the rotation property above.\n  *\n  * @private\n  * @property _rotation\n  * @type {Number}\n  * @default 0\n  */\n  this._rotation = 0;\n\n  /**\n  * Rotation change in degrees per frame of thevisual element (image or animation)\n  * Note: this is not the movement's direction, see getDirection.\n  *\n  * @property rotationSpeed\n  * @type {Number}\n  * @default 0\n  */\n  this.rotationSpeed = 0;\n\n\n  /**\n  * Automatically lock the rotation property of the visual element\n  * (image or animation) to the sprite's movement direction and vice versa.\n  *\n  * @property rotateToDirection\n  * @type {Boolean}\n  * @default false\n  */\n  this.rotateToDirection = false;\n\n\n  /**\n  * Determines the rendering order within a group: a sprite with\n  * lower depth will appear below the ones with higher depth.\n  *\n  * Note: drawing a group before another with drawSprites will make\n  * its members appear below the second one, like in normal p5 canvas\n  * drawing.\n  *\n  * @property depth\n  * @type {Number}\n  * @default One more than the greatest existing sprite depth, when calling\n  *          createSprite().  When calling new Sprite() directly, depth will\n  *          initialize to 0 (not recommended).\n  */\n  this.depth = 0;\n\n  /**\n  * Determines the sprite's scale.\n  * Example: 2 will be twice the native size of the visuals,\n  * 0.5 will be half. Scaling up may make images blurry.\n  *\n  * @property scale\n  * @type {Number}\n  * @default 1\n  */\n  this.scale = 1;\n\n  var dirX = 1;\n  var dirY = 1;\n\n  /**\n  * The sprite's visibility.\n  *\n  * @property visible\n  * @type {Boolean}\n  * @default true\n  */\n  this.visible = true;\n\n  /**\n  * If set to true sprite will track its mouse state.\n  * the properties mouseIsPressed and mouseIsOver will be updated.\n  * Note: automatically set to true if the functions\n  * onMouseReleased or onMousePressed are set.\n  *\n  * @property mouseActive\n  * @type {Boolean}\n  * @default false\n  */\n  this.mouseActive = false;\n\n  /**\n  * True if mouse is on the sprite's collider.\n  * Read only.\n  *\n  * @property mouseIsOver\n  * @type {Boolean}\n  */\n  this.mouseIsOver = false;\n\n  /**\n  * True if mouse is pressed on the sprite's collider.\n  * Read only.\n  *\n  * @property mouseIsPressed\n  * @type {Boolean}\n  */\n  this.mouseIsPressed = false;\n\n  /*\n  * Width of the sprite's current image.\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  * Used internally to make calculations and draw the sprite.\n  *\n  * @private\n  * @property _internalWidth\n  * @type {Number}\n  * @default 100\n  */\n  this._internalWidth = _w;\n\n  /*\n  * Height of the sprite's current image.\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  * Used internally to make calculations and draw the sprite.\n  *\n  * @private\n  * @property _internalHeight\n  * @type {Number}\n  * @default 100\n  */\n  this._internalHeight = _h;\n\n  /*\n   * _internalWidth and _internalHeight are used for all p5.play\n   * calculations, but width and height can be extended. For example,\n   * you may want users to always get and set a scaled width:\n      Object.defineProperty(this, 'width', {\n        enumerable: true,\n        configurable: true,\n        get: function() {\n          return this._internalWidth * this.scale;\n        },\n        set: function(value) {\n          this._internalWidth = value / this.scale;\n        }\n      });\n   */\n\n  /**\n  * Width of the sprite's current image.\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  *\n  * @property width\n  * @type {Number}\n  * @default 100\n  */\n  Object.defineProperty(this, 'width', {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return this._internalWidth;\n    },\n    set: function(value) {\n      this._internalWidth = value;\n    }\n  });\n\n  if(_w === undefined)\n    this.width = 100;\n  else\n    this.width = _w;\n\n  /**\n  * Height of the sprite's current image.\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  *\n  * @property height\n  * @type {Number}\n  * @default 100\n  */\n  Object.defineProperty(this, 'height', {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return this._internalHeight;\n    },\n    set: function(value) {\n      this._internalHeight = value;\n    }\n  });\n\n  if(_h === undefined)\n    this.height = 100;\n  else\n    this.height = _h;\n\n  /**\n  * Unscaled width of the sprite\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  *\n  * @property originalWidth\n  * @type {Number}\n  * @default 100\n  */\n  this.originalWidth = this._internalWidth;\n\n  /**\n  * Unscaled height of the sprite\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  *\n  * @property originalHeight\n  * @type {Number}\n  * @default 100\n  */\n  this.originalHeight = this._internalHeight;\n\n  /**\n  * True if the sprite has been removed.\n  *\n  * @property removed\n  * @type {Boolean}\n  */\n  this.removed = false;\n\n  /**\n  * Cycles before self removal.\n  * Set it to initiate a countdown, every draw cycle the property is\n  * reduced by 1 unit. At 0 it will call a sprite.remove()\n  * Disabled if set to -1.\n  *\n  * @property life\n  * @type {Number}\n  * @default -1\n  */\n  this.life = -1;\n\n  /**\n  * If set to true, draws an outline of the collider, the depth, and center.\n  *\n  * @property debug\n  * @type {Boolean}\n  * @default false\n  */\n  this.debug = false;\n\n  /**\n  * If no image or animations are set this is color of the\n  * placeholder rectangle\n  *\n  * @property shapeColor\n  * @type {color}\n  */\n  this.shapeColor = color(random(255), random(255), random(255));\n\n  /**\n  * Groups the sprite belongs to, including allSprites\n  *\n  * @property groups\n  * @type {Array}\n  */\n  this.groups = [];\n\n  var animations = {};\n\n  //The current animation's label.\n  var currentAnimation = '';\n\n  /**\n  * Reference to the current animation.\n  *\n  * @property animation\n  * @type {Animation}\n  */\n  this.animation = undefined;\n\n  /**\n  * Internal variable to keep track of whether this sprite is drawn while\n  * the camera is active.\n  * Used in Sprite.update() to know whether to use camera mouse coordinates.\n  * @see https://github.com/molleindustria/p5.play/issues/107\n  *\n  * @private\n  * @property _drawnWithCamera\n  * @type {Boolean}\n  * @default false\n  */\n  this._drawnWithCamera = false;\n\n  /*\n   * @private\n   * Keep animation properties in sync with how the animation changes.\n   */\n  this._syncAnimationSizes = function() {\n    //has an animation but the collider is still default\n    //the animation wasn't loaded. if the animation is not a 1x1 image\n    //it means it just finished loading\n    if(this.colliderType === 'default' &&\n      animations[currentAnimation].getWidth() !== 1 && animations[currentAnimation].getHeight() !== 1)\n    {\n      this.collider = this.getBoundingBox();\n      this.colliderType = 'image';\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n      //quadTree.insert(this);\n    }\n\n    //update size and collider\n    if(animations[currentAnimation].frameChanged || this.width === undefined || this.height === undefined)\n    {\n      //this.collider = this.getBoundingBox();\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n    }\n  };\n\n  /**\n  * Updates the sprite.\n  * Called automatically at the beginning of the draw cycle.\n  *\n  * @method update\n  */\n  this.update = function() {\n\n    if(!this.removed)\n    {\n      //if there has been a change somewhere after the last update\n      //the old position is the last position registered in the update\n      if(this.newPosition !== this.position)\n        this.previousPosition = createVector(this.newPosition.x, this.newPosition.y);\n      else\n        this.previousPosition = createVector(this.position.x, this.position.y);\n\n      this.velocity.x *= 1 - this.friction;\n      this.velocity.y *= 1 - this.friction;\n\n      if(this.maxSpeed !== -1)\n        this.limitSpeed(this.maxSpeed);\n\n      if(this.rotateToDirection && this.velocity.mag() > 0)\n        this._rotation = this.getDirection();\n\n      this.rotation += this.rotationSpeed;\n\n      this.position.x += this.velocity.x;\n      this.position.y += this.velocity.y;\n\n      this.newPosition = createVector(this.position.x, this.position.y);\n\n      this.deltaX = this.position.x - this.previousPosition.x;\n      this.deltaY = this.position.y - this.previousPosition.y;\n\n      //if there is an animation\n      if(animations[currentAnimation])\n      {\n        //update it\n        animations[currentAnimation].update();\n\n        this._syncAnimationSizes();\n      }\n\n      //a collider is created either manually with setCollider or\n      //when I check this sprite for collisions or overlaps\n      if(this.collider)\n      {\n        if(this.collider instanceof AABB)\n        {\n        //scale / rotate collider\n        var t;\n        if (pInst._angleMode === pInst.RADIANS) {\n          t = radians(this.rotation);\n        } else {\n          t = this.rotation;\n        }\n\n        if(this.colliderType === 'custom')\n          {\n          this.collider.extents.x = this.collider.originalExtents.x * abs(this._getScaleX()) * abs(cos(t)) +\n          this.collider.originalExtents.y * abs(this._getScaleY()) * abs(sin(t));\n\n          this.collider.extents.y = this.collider.originalExtents.x * abs(this._getScaleX()) * abs(sin(t)) +\n          this.collider.originalExtents.y * abs(this._getScaleY()) * abs(cos(t));\n          }\n        else if(this.colliderType === 'default')\n          {\n          this.collider.extents.x = this._internalWidth * abs(this._getScaleX()) * abs(cos(t)) +\n          this._internalHeight * abs(this._getScaleY()) * abs(sin(t));\n          this.collider.extents.y = this._internalWidth * abs(this._getScaleX()) * abs(sin(t)) +\n          this._internalHeight * abs(this._getScaleY()) * abs(cos(t));\n          }\n        else if(this.colliderType === 'image')\n          {\n          this.collider.extents.x = this._internalWidth * abs(cos(t)) +\n          this._internalHeight * abs(sin(t));\n\n          this.collider.extents.y = this._internalWidth * abs(sin(t)) +\n          this._internalHeight * abs(cos(t));\n          }\n        }\n\n        if(this.collider instanceof CircleCollider)\n        {\n        //print(this.scale);\n        this.collider.radius = this.collider.originalRadius * abs(this.scale);\n        }\n\n      }//end collider != null\n\n      //mouse actions\n      if (this.mouseActive)\n      {\n        //if no collider set it\n          if(!this.collider)\n            this.setDefaultCollider();\n\n        this.mouseUpdate();\n      }\n      else\n      {\n        if (typeof(this.onMouseOver) === 'function' ||\n            typeof(this.onMouseOut) === 'function' ||\n            typeof(this.onMousePressed) === 'function' ||\n            typeof(this.onMouseReleased) === 'function')\n        {\n          //if a mouse function is set\n          //it's implied we want to have it mouse active so\n          //we do this automatically\n          this.mouseActive = true;\n\n          //if no collider set it\n          if(!this.collider)\n            this.setDefaultCollider();\n\n          this.mouseUpdate();\n        }\n      }\n\n      //self destruction countdown\n      if (this.life>0)\n        this.life--;\n      if (this.life === 0)\n        this.remove();\n    }\n  };//end update\n\n  /**\n   * Creates a default collider matching the size of the\n   * placeholder rectangle or the bounding box of the image.\n   *\n   * @method setDefaultCollider\n   */\n  this.setDefaultCollider = function() {\n\n    //if has animation get the animation bounding box\n    //working only for preloaded images\n    if(animations[currentAnimation] && (animations[currentAnimation].getWidth() !== 1 && animations[currentAnimation].getHeight() !== 1))\n    {\n      this.collider = this.getBoundingBox();\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n      //quadTree.insert(this);\n      this.colliderType = 'image';\n      //print(\"IMAGE COLLIDER ADDED\");\n    }\n    else if(animations[currentAnimation] && animations[currentAnimation].getWidth() === 1 && animations[currentAnimation].getHeight() === 1)\n    {\n    //animation is still loading\n    //print(\"wait\");\n    }\n    else //get the with and height defined at the creation\n    {\n      this.collider = new AABB(pInst, this.position, createVector(this._internalWidth, this._internalHeight));\n      //quadTree.insert(this);\n      this.colliderType = 'default';\n    }\n\n    pInst.quadTree.insert(this);\n  };\n\n  /**\n   * Updates the sprite mouse states and triggers the mouse events:\n   * onMouseOver, onMouseOut, onMousePressed, onMouseReleased\n   *\n   * @method mouseUpdate\n   */\n  this.mouseUpdate = function() {\n\n    var mouseWasOver = this.mouseIsOver;\n    var mouseWasPressed = this.mouseIsPressed;\n\n    this.mouseIsOver = false;\n    this.mouseIsPressed = false;\n\n    var mousePosition;\n\n    if(this._drawnWithCamera)\n      mousePosition = createVector(camera.mouseX, camera.mouseY);\n    else\n      mousePosition = createVector(pInst.mouseX, pInst.mouseY);\n\n      //rollover\n      if(this.collider)\n      {\n\n        if (this.collider instanceof CircleCollider)\n        {\n          if (dist(mousePosition.x, mousePosition.y, this.collider.center.x, this.collider.center.y) < this.collider.radius)\n            this.mouseIsOver = true;\n        } else if (this.collider instanceof AABB)\n        {\n          if (mousePosition.x > this.collider.left() &&\n              mousePosition.y > this.collider.top() &&\n              mousePosition.x < this.collider.right() &&\n              mousePosition.y < this.collider.bottom())\n          {\n            this.mouseIsOver = true;\n          }\n        }\n\n        //global p5 var\n        if(this.mouseIsOver && pInst.mouseIsPressed)\n          this.mouseIsPressed = true;\n\n        //event change - call functions\n        if(!mouseWasOver && this.mouseIsOver && this.onMouseOver !== undefined)\n          if(typeof(this.onMouseOver) === 'function')\n            this.onMouseOver.call(this, this);\n          else\n            print('Warning: onMouseOver should be a function');\n\n        if(mouseWasOver && !this.mouseIsOver && this.onMouseOut !== undefined)\n          if(typeof(this.onMouseOut) === 'function')\n            this.onMouseOut.call(this, this);\n          else\n            print('Warning: onMouseOut should be a function');\n\n        if(!mouseWasPressed && this.mouseIsPressed && this.onMousePressed !== undefined)\n          if(typeof(this.onMousePressed) === 'function')\n            this.onMousePressed.call(this, this);\n          else\n            print('Warning: onMousePressed should be a function');\n\n        if(mouseWasPressed && !pInst.mouseIsPressed && !this.mouseIsPressed && this.onMouseReleased !== undefined)\n          if(typeof(this.onMouseReleased) === 'function')\n            this.onMouseReleased.call(this, this);\n          else\n            print('Warning: onMouseReleased should be a function');\n\n      }\n\n  };\n\n  /**\n  * Sets a collider for the sprite.\n  *\n  * In p5.play a Collider is an invisible circle or rectangle\n  * that can have any size or position relative to the sprite and which\n  * will be used to detect collisions and overlapping with other sprites,\n  * or the mouse cursor.\n  *\n  * If the sprite is checked for collision, bounce, overlapping or mouse events\n  * a collider is automatically created from the width and height parameter\n  * passed at the creation of the sprite or the from the image dimension in case\n  * of animated sprites.\n  *\n  * Often the image bounding box is not appropriate as the active area for\n  * collision detection so you can set a circular or rectangular sprite with\n  * different dimensions and offset from the sprite's center.\n  *\n  * There are four ways to call this method:\n  *\n  * 1. setCollider(\"rectangle\")\n  * 2. setCollider(\"rectangle\", offsetX, offsetY, width, height)\n  * 3. setCollider(\"circle\")\n  * 4. setCollider(\"circle\", offsetX, offsetY, radius)\n  *\n  * @method setCollider\n  * @param {String} type Either \"rectangle\" or \"circle\"\n  * @param {Number} offsetX Collider x position from the center of the sprite\n  * @param {Number} offsetY Collider y position from the center of the sprite\n  * @param {Number} width Collider width or radius\n  * @param {Number} height Collider height\n  * @throws {TypeError} if given invalid parameters.\n  */\n  this.setCollider = function(type, offsetX, offsetY, width, height) {\n    if (!(type === 'rectangle' || type === 'circle')) {\n      throw new TypeError('setCollider expects the first argument to be either \"circle\" or \"rectangle\"');\n    } else if (type === 'circle' && arguments.length > 1 && arguments.length < 4) {\n      throw new TypeError('Usage: setCollider(\"circle\") or setCollider(\"circle\", offsetX, offsetY, radius)');\n    } else if (type === 'circle' && arguments.length > 4) {\n      pInst._warn('Extra parameters to setCollider were ignored. Usage: setCollider(\"circle\") or setCollider(\"circle\", offsetX, offsetY, radius)');\n    } else if (type === 'rectangle' && arguments.length > 1 && arguments.length < 5) {\n      throw new TypeError('Usage: setCollider(\"rectangle\") or setCollider(\"rectangle\", offsetX, offsetY, width, height)');\n    } else if (type === 'rectangle' && arguments.length > 5) {\n      pInst._warn('Extra parameters to setCollider were ignored. Usage: setCollider(\"rectangle\") or setCollider(\"rectangle\", offsetX, offsetY, width, height)');\n    }\n\n    this.colliderType = 'custom';\n\n    var v = createVector(offsetX, offsetY);\n    if (type === 'rectangle' && arguments.length === 1) {\n      this.collider = new AABB(pInst, this.position, createVector(this.width, this.height));\n    } else if (type === 'rectangle' && arguments.length >= 5) {\n      this.collider = new AABB(pInst, this.position, createVector(width, height), v);\n    } else if (type === 'circle' && arguments.length === 1) {\n      this.collider = new CircleCollider(pInst, this.position, Math.floor(Math.max(this.width, this.height) / 2));\n    } else if (type === 'circle' && arguments.length >= 4) {\n      this.collider = new CircleCollider(pInst, this.position, width, v);\n    }\n\n    quadTree.insert(this);\n  };\n\n  /**\n   * Returns a the bounding box of the current image\n   * @method getBoundingBox\n   */\n  this.getBoundingBox = function() {\n\n    var w = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n    var h = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n\n    //if the bounding box is 1x1 the image is not loaded\n    //potential issue with actual 1x1 images\n    if(w === 1 && h === 1) {\n      //not loaded yet\n      return new AABB(pInst, this.position, createVector(w, h));\n    }\n    else {\n      return new AABB(pInst, this.position, createVector(w, h));\n    }\n  };\n\n  /**\n  * Sets the sprite's horizontal mirroring.\n  * If 1 the images displayed normally\n  * If -1 the images are flipped horizontally\n  * If no argument returns the current x mirroring\n  *\n  * @method mirrorX\n  * @param {Number} dir Either 1 or -1\n  * @return {Number} Current mirroring if no parameter is specified\n  */\n  this.mirrorX = function(dir) {\n    if(dir === 1 || dir === -1)\n      dirX = dir;\n    else\n      return dirX;\n  };\n\n  /**\n  * Sets the sprite's vertical mirroring.\n  * If 1 the images displayed normally\n  * If -1 the images are flipped vertically\n  * If no argument returns the current y mirroring\n  *\n  * @method mirrorY\n  * @param {Number} dir Either 1 or -1\n  * @return {Number} Current mirroring if no parameter is specified\n  */\n  this.mirrorY = function(dir) {\n    if(dir === 1 || dir === -1)\n      dirY = dir;\n    else\n      return dirY;\n  };\n\n  /*\n   * Returns the value the sprite should be scaled in the X direction.\n   * Used to calculate rendering and collisions.\n   * @private\n   */\n  this._getScaleX = function()\n  {\n    return this.scale;\n  };\n\n  /*\n   * Returns the value the sprite should be scaled in the Y direction.\n   * Used to calculate rendering and collisions.\n   * @private\n   */\n  this._getScaleY = function()\n  {\n    return this.scale;\n  };\n\n  /**\n   * Manages the positioning, scale and rotation of the sprite\n   * Called automatically, it should not be overridden\n   * @private\n   * @final\n   * @method display\n   */\n  this.display = function()\n  {\n    if (this.visible && !this.removed)\n    {\n      push();\n      colorMode(RGB);\n\n      noStroke();\n      rectMode(CENTER);\n      ellipseMode(CENTER);\n      imageMode(CENTER);\n\n      translate(this.position.x, this.position.y);\n      scale(this._getScaleX()*dirX, this._getScaleY()*dirY);\n      if (pInst._angleMode === pInst.RADIANS) {\n        rotate(radians(this.rotation));\n      } else {\n        rotate(this.rotation);\n      }\n      this.draw();\n      //draw debug info\n      pop();\n\n      this._drawnWithCamera = camera.active;\n\n      if(this.debug)\n      {\n        push();\n        //draw the anchor point\n        stroke(0, 255, 0);\n        strokeWeight(1);\n        line(this.position.x-10, this.position.y, this.position.x+10, this.position.y);\n        line(this.position.x, this.position.y-10, this.position.x, this.position.y+10);\n        noFill();\n\n        //depth number\n        noStroke();\n        fill(0, 255, 0);\n        textAlign(LEFT, BOTTOM);\n        textSize(16);\n        text(this.depth+'', this.position.x+4, this.position.y-2);\n\n        noFill();\n        stroke(0, 255, 0);\n\n        //bounding box\n        if(this.collider !== undefined)\n        {\n          this.collider.draw();\n        }\n        pop();\n      }\n\n    }\n  };\n\n\n  /**\n  * Manages the visuals of the sprite.\n  * It can be overridden with a custom drawing function.\n  * The 0,0 point will be the center of the sprite.\n  * Example:\n  * sprite.draw = function() { ellipse(0,0,10,10) }\n  * Will display the sprite as circle.\n  *\n  * @method draw\n  */\n  this.draw = function()\n  {\n    if(currentAnimation !== '' && animations)\n    {\n      if(animations[currentAnimation])\n        animations[currentAnimation].draw(0, 0, 0);\n    }\n    else\n    {\n      noStroke();\n      fill(this.shapeColor);\n      rect(0, 0, this._internalWidth, this._internalHeight);\n    }\n  };\n\n  /**\n   * Removes the Sprite from the sketch.\n   * The removed Sprite won't be drawn or updated anymore.\n   *\n   * @method remove\n   */\n  this.remove = function() {\n    this.removed = true;\n\n    quadTree.removeObject(this);\n\n    //when removed from the \"scene\" also remove all the references in all the groups\n    while (this.groups.length > 0) {\n      this.groups[0].remove(this);\n    }\n  };\n\n  /**\n  * Sets the velocity vector.\n  *\n  * @method setVelocity\n  * @param {Number} x X component\n  * @param {Number} y Y component\n  */\n  this.setVelocity = function(x, y) {\n    this.velocity.x = x;\n    this.velocity.y = y;\n  };\n\n  /**\n  * Calculates the scalar speed.\n  *\n  * @method getSpeed\n  * @return {Number} Scalar speed\n  */\n  this.getSpeed = function() {\n    return this.velocity.mag();\n  };\n\n  /**\n  * Calculates the movement's direction in degrees.\n  *\n  * @method getDirection\n  * @return {Number} Angle in degrees\n  */\n  this.getDirection = function() {\n\n    var direction = atan2(this.velocity.y, this.velocity.x);\n\n    if(isNaN(direction))\n      direction = 0;\n\n    // Unlike Math.atan2, the atan2 method above will return degrees if\n    // the current p5 angleMode is DEGREES, and radians if the p5 angleMode is\n    // RADIANS.  This method should always return degrees (for now).\n    // See https://github.com/molleindustria/p5.play/issues/94\n    if (pInst._angleMode === pInst.RADIANS) {\n      direction = degrees(direction);\n    }\n\n    return direction;\n  };\n\n  /**\n  * Adds the sprite to an existing group\n  *\n  * @method addToGroup\n  * @param {Object} group\n  */\n  this.addToGroup = function(group) {\n    if(group instanceof Array)\n      group.add(this);\n    else\n      print('addToGroup error: '+group+' is not a group');\n  };\n\n  /**\n  * Limits the scalar speed.\n  *\n  * @method limitSpeed\n  * @param {Number} max Max speed: positive number\n  */\n  this.limitSpeed = function(max) {\n\n    //update linear speed\n    var speed = this.getSpeed();\n\n    if(abs(speed)>max)\n    {\n      //find reduction factor\n      var k = max/abs(speed);\n      this.velocity.x *= k;\n      this.velocity.y *= k;\n    }\n  };\n\n  /**\n  * Set the speed and direction of the sprite.\n  * The action overwrites the current velocity.\n  * If direction is not supplied, the current direction is maintained.\n  * If direction is not supplied and there is no current velocity, the current\n  * rotation angle used for the direction.\n  *\n  * @method setSpeed\n  * @param {Number}  speed Scalar speed\n  * @param {Number}  [angle] Direction in degrees\n  */\n  this.setSpeed = function(speed, angle) {\n    var a;\n    if (typeof angle === 'undefined') {\n      if (this.velocity.x !== 0 || this.velocity.y !== 0) {\n        a = pInst.atan2(this.velocity.y, this.velocity.x);\n      } else {\n        if (pInst._angleMode === pInst.RADIANS) {\n          a = radians(this._rotation);\n        } else {\n          a = this._rotation;\n        }\n      }\n    } else {\n      if (pInst._angleMode === pInst.RADIANS) {\n        a = radians(angle);\n      } else {\n        a = angle;\n      }\n    }\n    this.velocity.x = cos(a)*speed;\n    this.velocity.y = sin(a)*speed;\n  };\n\n  /**\n  * Pushes the sprite in a direction defined by an angle.\n  * The force is added to the current velocity.\n  *\n  * @method addSpeed\n  * @param {Number}  speed Scalar speed to add\n  * @param {Number}  angle Direction in degrees\n  */\n  this.addSpeed = function(speed, angle) {\n    var a;\n    if (pInst._angleMode === pInst.RADIANS) {\n      a = radians(angle);\n    } else {\n      a = angle;\n    }\n    this.velocity.x += cos(a) * speed;\n    this.velocity.y += sin(a) * speed;\n  };\n\n  /**\n  * Pushes the sprite toward a point.\n  * The force is added to the current velocity.\n  *\n  * @method attractionPoint\n  * @param {Number}  magnitude Scalar speed to add\n  * @param {Number}  pointX Direction x coordinate\n  * @param {Number}  pointY Direction y coordinate\n  */\n  this.attractionPoint = function(magnitude, pointX, pointY) {\n    var angle = atan2(pointY-this.position.y, pointX-this.position.x);\n    this.velocity.x += cos(angle) * magnitude;\n    this.velocity.y += sin(angle) * magnitude;\n  };\n\n\n  /**\n  * Adds an image to the sprite.\n  * An image will be considered a one-frame animation.\n  * The image should be preloaded in the preload() function using p5 loadImage.\n  * Animations require a identifying label (string) to change them.\n  * The image is stored in the sprite but not necessarily displayed\n  * until Sprite.changeAnimation(label) is called\n  *\n  * Usages:\n  * - sprite.addImage(label, image);\n  * - sprite.addImage(image);\n  *\n  * If only an image is passed no label is specified\n  *\n  * @method addImage\n  * @param {String|p5.Image} label Label or image\n  * @param {p5.Image} [img] Image\n  */\n  this.addImage = function()\n  {\n    if(typeof arguments[0] === 'string' && arguments[1] instanceof p5.Image)\n      this.addAnimation(arguments[0], arguments[1]);\n    else if(arguments[0] instanceof p5.Image)\n      this.addAnimation('normal', arguments[0]);\n    else\n      throw('addImage error: allowed usages are <image> or <label>, <image>');\n  };\n\n  /**\n  * Adds an animation to the sprite.\n  * The animation should be preloaded in the preload() function\n  * using loadAnimation.\n  * Animations require a identifying label (string) to change them.\n  * Animations are stored in the sprite but not necessarily displayed\n  * until Sprite.changeAnimation(label) is called.\n  *\n  * Usage:\n  * - sprite.addAnimation(label, animation);\n  *\n  * Alternative usages. See Animation for more information on file sequences:\n  * - sprite.addAnimation(label, firstFrame, lastFrame);\n  * - sprite.addAnimation(label, frame1, frame2, frame3...);\n  *\n  * @method addAnimation\n  * @param {String} label Animation identifier\n  * @param {Animation} animation The preloaded animation\n  */\n  this.addAnimation = function(label)\n  {\n    var anim;\n\n    if(typeof label !== 'string')\n    {\n      print('Sprite.addAnimation error: the first argument must be a label (String)');\n      return -1;\n    }\n    else if(arguments.length < 2)\n    {\n      print('addAnimation error: you must specify a label and n frame images');\n      return -1;\n    }\n    else if(arguments[1] instanceof Animation)\n    {\n\n      var sourceAnimation = arguments[1];\n\n      var newAnimation = sourceAnimation.clone();\n\n      animations[label] = newAnimation;\n\n      if(currentAnimation === '')\n      {\n        currentAnimation = label;\n        this.animation = newAnimation;\n      }\n\n      newAnimation.isSpriteAnimation = true;\n\n      this._internalWidth = newAnimation.getWidth()*abs(this._getScaleX());\n      this._internalHeight = newAnimation.getHeight()*abs(this._getScaleY());\n\n      return newAnimation;\n    }\n    else\n    {\n      var animFrames = [];\n      for(var i=1; i<arguments.length; i++)\n        animFrames.push(arguments[i]);\n\n      anim = construct(pInst.Animation, animFrames);\n      animations[label] = anim;\n\n      if(currentAnimation === '')\n      {\n        currentAnimation = label;\n        this.animation = anim;\n      }\n      anim.isSpriteAnimation = true;\n\n      this._internalWidth = anim.getWidth()*abs(this._getScaleX());\n      this._internalHeight = anim.getHeight()*abs(this._getScaleY());\n\n      return anim;\n    }\n\n  };\n\n  /**\n  * Changes the displayed image/animation.\n  * Equivalent to changeAnimation\n  *\n  * @method changeImage\n  * @param {String} label Image/Animation identifier\n  */\n  this.changeImage = function(label) {\n    this.changeAnimation(label);\n  };\n\n   /**\n  * Returns the label of the current animation\n  *\n  * @method getAnimationLabel\n  * @return {String} label Image/Animation identifier\n  */\n  this.getAnimationLabel = function() {\n    return currentAnimation;\n  };\n\n  /**\n  * Changes the displayed animation.\n  * See Animation for more control over the sequence.\n  *\n  * @method changeAnimation\n  * @param {String} label Animation identifier\n  */\n  this.changeAnimation = function(label) {\n    if(!animations[label])\n      print('changeAnimation error: no animation labeled '+label);\n    else\n    {\n      currentAnimation = label;\n      this.animation = animations[label];\n    }\n  };\n\n  /**\n  * Checks if the given point corresponds to a transparent pixel\n  * in the sprite's current image. It can be used to check a point collision\n  * against only the visible part of the sprite.\n  *\n  * @method overlapPixel\n  * @param {Number} pointX x coordinate of the point to check\n  * @param {Number} pointY y coordinate of the point to check\n  * @return {Boolean} result True if non-transparent\n  */\n  this.overlapPixel = function(pointX, pointY) {\n    var point = createVector(pointX, pointY);\n\n    var img = this.animation.getFrameImage();\n\n    //convert point to img relative position\n    point.x -= this.position.x-img.width/2;\n    point.y -= this.position.y-img.height/2;\n\n    //out of the image entirely\n    if(point.x<0 || point.x>img.width || point.y<0 || point.y>img.height)\n      return false;\n    else if(this.rotation === 0 && this.scale === 1)\n    {\n      //true if full opacity\n      var values = img.get(point.x, point.y);\n      return values[3] === 255;\n    }\n    else\n    {\n      print('Error: overlapPixel doesn\\'t work with scaled or rotated sprites yet');\n      //offscreen printing to be implemented bleurch\n      return false;\n    }\n  };\n\n  /**\n  * Checks if the given point is inside the sprite's collider.\n  *\n  * @method overlapPoint\n  * @param {Number} pointX x coordinate of the point to check\n  * @param {Number} pointY y coordinate of the point to check\n  * @return {Boolean} result True if inside\n  */\n  this.overlapPoint = function(pointX, pointY) {\n    var point = createVector(pointX, pointY);\n\n    if(!this.collider)\n      this.setDefaultCollider();\n\n    if(this.collider !== undefined)\n    {\n      if(this.collider instanceof AABB)\n        return (point.x > this.collider.left() && point.x < this.collider.right() && point.y > this.collider.top() && point.y < this.collider.bottom());\n      if(this.collider instanceof CircleCollider)\n      {\n        var sqRadius = this.collider.radius * this.collider.radius;\n        var sqDist = pow(this.collider.center.x - point.x, 2) + pow(this.collider.center.y - point.y, 2);\n        return sqDist<sqRadius;\n      }\n      else\n        return false;\n    }\n    else\n      return false;\n\n  };\n\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * If the target is a group the function will be called for each single\n  * sprite overlapping. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.overlap(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method overlap\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.overlap = function(target, callback) {\n    //if(this.collider instanceof AABB && target.collider instanceof AABB)\n    return this.AABBops('overlap', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the current sprite will be displace by\n  * the colliding one in the closest non-overlapping position.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.collide(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method collide\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.collide = function(target, callback) {\n    //if(this.collider instanceof AABB && target.collider instanceof AABB)\n    return this.AABBops('collide', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the current sprite will displace\n  * the colliding one to the closest non-overlapping position.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.displace(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method displace\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.displace = function(target, callback) {\n    return this.AABBops('displace', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the sprites will bounce affecting each\n  * other's trajectories depending on their .velocity, .mass and .restitution\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.bounce(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method bounce\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.bounce = function(target, callback) {\n    return this.AABBops('bounce', target, callback);\n  };\n\n  // Internal collision detection function. Do not use directly.\n  this.AABBops = function(type, target, callback) {\n\n    this.touching.left = false;\n    this.touching.right = false;\n    this.touching.top = false;\n    this.touching.bottom = false;\n\n    var result = false;\n\n    //if single sprite turn into array anyway\n    var others = [];\n\n    if(target instanceof Sprite)\n      others.push(target);\n    else if(target instanceof Array)\n    {\n      if(quadTree !== undefined && quadTree.active)\n        others = quadTree.retrieveFromGroup( this, target);\n\n      if(others.length === 0)\n        others = target;\n\n    }\n    else\n      throw('Error: overlap can only be checked between sprites or groups');\n\n    for(var i=0; i<others.length; i++)\n      if(this !== others[i] && !this.removed) //you can check collisions within the same group but not on itself\n      {\n        var displacement;\n        var other = others[i];\n\n        if(this.collider === undefined)\n          this.setDefaultCollider();\n\n        if(other.collider === undefined)\n          other.setDefaultCollider();\n\n        /*\n        if(this.colliderType==\"default\" && animations[currentAnimation]!=null)\n        {\n          print(\"busted\");\n          return false;\n        }*/\n        if(this.collider !== undefined && other.collider !== undefined)\n        {\n        if(type === 'overlap') {\n            var over;\n\n            //if the other is a circle I calculate the displacement from here\n            if(this.collider instanceof CircleCollider)\n                over = other.collider.overlap(this.collider);\n            else\n                over = this.collider.overlap(other.collider);\n\n            if(over)\n            {\n\n              result = true;\n\n              if(callback !== undefined && typeof callback === 'function')\n                callback.call(this, this, other);\n            }\n          }\n        else if(type === 'collide' || type === 'displace' || type === 'bounce')\n          {\n            displacement = createVector(0, 0);\n\n            //if the sum of the speed is more than the collider i may\n            //have a tunnelling problem\n            var tunnelX = abs(this.velocity.x-other.velocity.x) >= other.collider.extents.x/2 && round(this.deltaX - this.velocity.x) === 0;\n\n            var tunnelY = abs(this.velocity.y-other.velocity.y) >= other.collider.size().y/2 && round(this.deltaY - this.velocity.y) === 0;\n\n\n            if(tunnelX || tunnelY)\n            {\n              //instead of using the colliders I use the bounding box\n              //around the previous position and current position\n              //this is regardless of the collider type\n\n              //the center is the average of the coll centers\n              var c = createVector(\n                (this.position.x+this.previousPosition.x)/2,\n                (this.position.y+this.previousPosition.y)/2);\n\n              //the extents are the distance between the coll centers\n              //plus the extents of both\n              var e = createVector(\n                abs(this.position.x -this.previousPosition.x) + this.collider.extents.x,\n                abs(this.position.y -this.previousPosition.y) + this.collider.extents.y);\n\n              var bbox = new AABB(pInst, c, e, this.collider.offset);\n\n              //bbox.draw();\n\n              if(bbox.overlap(other.collider))\n              {\n                if(tunnelX) {\n\n                  //entering from the right\n                  if(this.velocity.x < 0)\n                    displacement.x = other.collider.right() - this.collider.left() + 1;\n                  else if(this.velocity.x > 0 )\n                    displacement.x = other.collider.left() - this.collider.right() -1;\n                  }\n\n                if(tunnelY) {\n                  //from top\n                  if(this.velocity.y > 0)\n                    displacement.y = other.collider.top() - this.collider.bottom() - 1;\n                  else if(this.velocity.y < 0 )\n                    displacement.y = other.collider.bottom() - this.collider.top() + 1;\n\n                  }\n\n              }//end overlap\n\n            }\n            else //non tunnel overlap\n            {\n\n              //if the other is a circle I calculate the displacement from here\n              //and reverse it\n              if(this.collider instanceof CircleCollider)\n                {\n                displacement = other.collider.collide(this.collider).mult(-1);\n                }\n              else\n                displacement = this.collider.collide(other.collider);\n\n            }\n\n            if(displacement.x !== 0 || displacement.y !== 0)\n            {\n              var newVelX1, newVelY1, newVelX2, newVelY2;\n\n              if (type === 'displace' && !other.immovable) {\n                other.position.sub(displacement);\n              } else if ((type === 'collide' || type === 'bounce') && !this.immovable) {\n                this.position.add(displacement);\n                this.previousPosition = createVector(this.position.x, this.position.y);\n                this.newPosition = createVector(this.position.x, this.position.y);\n              }\n\n              if(displacement.x > 0)\n                this.touching.left = true;\n              if(displacement.x < 0)\n                this.touching.right = true;\n              if(displacement.y < 0)\n                this.touching.bottom = true;\n              if(displacement.y > 0)\n                this.touching.top = true;\n\n              if(type === 'bounce')\n              {\n                if (this.collider instanceof CircleCollider && other.collider instanceof CircleCollider) {\n                  var dx1 = p5.Vector.sub(this.position, other.position);\n                  var dx2 = p5.Vector.sub(other.position, this.position);\n                  var magnitude = dx1.magSq();\n                  var totalMass = this.mass + other.mass;\n                  var m1 = 0, m2 = 0;\n                  if (this.immovable) {\n                    m2 = 2;\n                  } else if (other.immovable) {\n                    m1 = 2;\n                  } else {\n                    m1 = 2 * other.mass / totalMass;\n                    m2 = 2 * this.mass / totalMass;\n                  }\n                  var newVel1 = dx1.mult(m1 * p5.Vector.sub(this.velocity, other.velocity).dot(dx1) / magnitude);\n                  var newVel2 = dx2.mult(m2 * p5.Vector.sub(other.velocity, this.velocity).dot(dx2) / magnitude);\n\n                  this.velocity.sub(newVel1.mult(this.restitution));\n                  other.velocity.sub(newVel2.mult(other.restitution));\n                }\n                else {\n                if(other.immovable)\n                {\n                  newVelX1 = -this.velocity.x+other.velocity.x;\n                  newVelY1 = -this.velocity.y+other.velocity.y;\n                }\n                else\n                {\n                  newVelX1 = (this.velocity.x * (this.mass - other.mass) + (2 * other.mass * other.velocity.x)) / (this.mass + other.mass);\n                  newVelY1 = (this.velocity.y * (this.mass - other.mass) + (2 * other.mass * other.velocity.y)) / (this.mass + other.mass);\n                  newVelX2 = (other.velocity.x * (other.mass - this.mass) + (2 * this.mass * this.velocity.x)) / (this.mass + other.mass);\n                  newVelY2 = (other.velocity.y * (other.mass - this.mass) + (2 * this.mass * this.velocity.y)) / (this.mass + other.mass);\n                }\n\n                //var bothCircles = (this.collider instanceof CircleCollider &&\n                //                   other.collider  instanceof CircleCollider);\n\n                //if(this.touching.left || this.touching.right || this.collider instanceof CircleCollider)\n\n                //print(displacement);\n\n                if(abs(displacement.x)>abs(displacement.y))\n                {\n\n\n                  if(!this.immovable)\n                  {\n                    this.velocity.x = newVelX1*this.restitution;\n\n                  }\n\n                  if(!other.immovable)\n                    other.velocity.x = newVelX2*other.restitution;\n\n                }\n                //if(this.touching.top || this.touching.bottom || this.collider instanceof CircleCollider)\n                if(abs(displacement.x)<abs(displacement.y))\n                {\n\n                  if(!this.immovable)\n                    this.velocity.y = newVelY1*this.restitution;\n\n                  if(!other.immovable)\n                    other.velocity.y = newVelY2*other.restitution;\n                }\n                }\n              }\n              //else if(type == \"collide\")\n                //this.velocity = createVector(0,0);\n\n              if(callback !== undefined && typeof callback === 'function')\n                callback.call(this, this, other);\n\n              result = true;\n            }\n          }\n        }//end collider exists\n      }\n\n    return result;\n  };\n} //end Sprite class\n\ndefineLazyP5Property('Sprite', boundConstructorFactory(Sprite));\n\n/**\n   * A camera facilitates scrolling and zooming for scenes extending beyond\n   * the canvas. A camera has a position, a zoom factor, and the mouse\n   * coordinates relative to the view.\n   * The camera is automatically created on the first draw cycle.\n   *\n   * In p5.js terms the camera wraps the whole drawing cycle in a\n   * transformation matrix but it can be disable anytime during the draw\n   * cycle for example to draw interface elements in an absolute position.\n   *\n   * @class Camera\n   * @constructor\n   * @param {Number} x Initial x coordinate\n   * @param {Number} y Initial y coordinate\n   * @param {Number} zoom magnification\n   **/\nfunction Camera(pInst, x, y, zoom) {\n  /**\n  * Camera position. Defines the global offset of the sketch.\n  *\n  * @property position\n  * @type {p5.Vector}\n  */\n  this.position = pInst.createVector(x, y);\n\n  /**\n  * Camera zoom. Defines the global scale of the sketch.\n  * A scale of 1 will be the normal size. Setting it to 2 will make everything\n  * twice the size. .5 will make everything half size.\n  *\n  * @property zoom\n  * @type {Number}\n  */\n  this.zoom = zoom;\n\n  /**\n  * MouseX translated to the camera view.\n  * Offsetting and scaling the canvas will not change the sprites' position\n  * nor the mouseX and mouseY variables. Use this property to read the mouse\n  * position if the camera moved or zoomed.\n  *\n  * @property mouseX\n  * @type {Number}\n  */\n  this.mouseX = pInst.mouseX;\n\n  /**\n  * MouseY translated to the camera view.\n  * Offsetting and scaling the canvas will not change the sprites' position\n  * nor the mouseX and mouseY variables. Use this property to read the mouse\n  * position if the camera moved or zoomed.\n  *\n  * @property mouseY\n  * @type {Number}\n  */\n  this.mouseY = pInst.mouseY;\n\n  /**\n  * True if the camera is active.\n  * Read only property. Use the methods Camera.on() and Camera.off()\n  * to enable or disable the camera.\n  *\n  * @property active\n  * @type {Boolean}\n  */\n  this.active = false;\n\n  /**\n  * Activates the camera.\n  * The canvas will be drawn according to the camera position and scale until\n  * Camera.off() is called\n  *\n  * @method on\n  */\n  this.on = function() {\n    if(!this.active)\n    {\n      cameraPush.call(pInst);\n      this.active = true;\n    }\n  };\n\n  /**\n  * Deactivates the camera.\n  * The canvas will be drawn normally, ignoring the camera's position\n  * and scale until Camera.on() is called\n  *\n  * @method off\n  */\n  this.off = function() {\n    if(this.active)\n    {\n      cameraPop.call(pInst);\n      this.active = false;\n    }\n  };\n} //end camera class\n\ndefineLazyP5Property('Camera', boundConstructorFactory(Camera));\n\n//called pre draw by default\nfunction cameraPush() {\n  var pInst = this;\n  var camera = pInst.camera;\n\n  //awkward but necessary in order to have the camera at the center\n  //of the canvas by default\n  if(!camera.init && camera.position.x === 0 && camera.position.y === 0)\n    {\n    camera.position.x=pInst.width/2;\n    camera.position.y=pInst.height/2;\n    camera.init = true;\n    }\n\n  camera.mouseX = pInst.mouseX+camera.position.x-pInst.width/2;\n  camera.mouseY = pInst.mouseY+camera.position.y-pInst.height/2;\n\n  if(!camera.active)\n  {\n    camera.active = true;\n    pInst.push();\n    pInst.scale(camera.zoom);\n    pInst.translate(-camera.position.x+pInst.width/2/camera.zoom, -camera.position.y+pInst.height/2/camera.zoom);\n  }\n}\n\n//called postdraw by default\nfunction cameraPop() {\n  var pInst = this;\n\n  if(pInst.camera.active)\n  {\n    pInst.pop();\n    pInst.camera.active = false;\n  }\n}\n\n\n\n\n/**\n   * In p5.play groups are collections of sprites with similar behavior.\n   * For example a group may contain all the sprites in the background\n   * or all the sprites that \"kill\" the player.\n   *\n   * Groups are \"extended\" arrays and inherit all their properties\n   * e.g. group.length\n   *\n   * Since groups contain only references, a sprite can be in multiple\n   * groups and deleting a group doesn't affect the sprites themselves.\n   *\n   * Sprite.remove() will also remove the sprite from all the groups\n   * it belongs to.\n   *\n   * @class Group\n   * @constructor\n   */\nfunction Group() {\n\n  //basically extending the array\n  var array = [];\n\n  /**\n  * Gets the member at index i.\n  *\n  * @method get\n  * @param {Number} i The index of the object to retrieve\n  */\n  array.get = function(i) {\n    return array[i];\n  };\n\n  /**\n  * Checks if the group contains a sprite.\n  *\n  * @method contains\n  * @param {Sprite} sprite The sprite to search\n  * @return {Number} Index or -1 if not found\n  */\n  array.contains = function(sprite) {\n    return this.indexOf(sprite)>-1;\n  };\n\n  /**\n   * Same as Group.contains\n   * @method indexOf\n   */\n  array.indexOf = function(item) {\n    for (var i = 0, len = array.length; i < len; ++i) {\n      if (virtEquals(item, array[i])) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  /**\n  * Adds a sprite to the group.\n  *\n  * @method add\n  * @param {Sprite} s The sprite to be added\n  */\n  array.add = function(s) {\n    if(!(s instanceof Sprite)) {\n      throw('Error: you can only add sprites to a group');\n    }\n\n    if (-1 === this.indexOf(s)) {\n      array.push(s);\n      s.groups.push(this);\n    }\n  };\n\n  /**\n   * Same as group.length\n   * @method size\n   */\n  array.size = function() {\n    return array.length;\n  };\n\n  /**\n  * Removes all the sprites in the group\n  * from the scene.\n  *\n  * @method removeSprites\n  */\n  array.removeSprites = function() {\n    while (array.length > 0) {\n      array[0].remove();\n    }\n  };\n\n  /**\n  * Removes all references to the group.\n  * Does not remove the actual sprites.\n  *\n  * @method clear\n  */\n  array.clear = function() {\n    array.length = 0;\n  };\n\n  /**\n  * Removes a sprite from the group.\n  * Does not remove the actual sprite, only the affiliation (reference).\n  *\n  * @method remove\n  * @param {Sprite} item The sprite to be removed\n  * @return {Boolean} True if sprite was found and removed\n  */\n  array.remove = function(item) {\n    if(!(item instanceof Sprite)) {\n      throw('Error: you can only remove sprites from a group');\n    }\n\n    var i, removed = false;\n    for (i = array.length - 1; i >= 0; i--) {\n      if (array[i] === item) {\n        array.splice(i, 1);\n        removed = true;\n      }\n    }\n\n    if (removed) {\n      for (i = item.groups.length - 1; i >= 0; i--) {\n        if (item.groups[i] === this) {\n          item.groups.splice(i, 1);\n        }\n      }\n    }\n\n    return removed;\n  };\n\n  /**\n   * Returns a copy of the group as standard array.\n   * @method toArray\n   */\n  array.toArray = function() {\n    return array.slice(0);\n  };\n\n  /**\n  * Returns the highest depth in a group\n  *\n  * @method maxDepth\n  * @return {Number} The depth of the sprite drawn on the top\n  */\n  array.maxDepth = function() {\n    if (array.length === 0) {\n      return 0;\n    }\n\n    return array.reduce(function(maxDepth, sprite) {\n      return Math.max(maxDepth, sprite.depth);\n    }, -Infinity);\n  };\n\n  /**\n  * Returns the lowest depth in a group\n  *\n  * @method minDepth\n  * @return {Number} The depth of the sprite drawn on the bottom\n  */\n  array.minDepth = function() {\n    if (array.length === 0) {\n      return 99999;\n    }\n\n    return array.reduce(function(minDepth, sprite) {\n      return Math.min(minDepth, sprite.depth);\n    }, Infinity);\n  };\n\n  /**\n  * Draws all the sprites in the group.\n  *\n  * @method draw\n  */\n  array.draw = function() {\n\n    //sort by depth\n    this.sort(function(a, b) {\n      return a.depth - b.depth;\n    });\n\n    for(var i = 0; i<this.size(); i++)\n    {\n      this.get(i).display();\n    }\n  };\n\n  //internal use\n  function virtEquals(obj, other) {\n    if (obj === null || other === null) {\n      return (obj === null) && (other === null);\n    }\n    if (typeof (obj) === 'string') {\n      return obj === other;\n    }\n    if (typeof(obj) !== 'object') {\n      return obj === other;\n    }\n    if (obj.equals instanceof Function) {\n      return obj.equals(other);\n    }\n    return obj === other;\n  }\n\n  /**\n   * Collide each member of group against the target using the given collision\n   * type.  Return true if any collision occurred.\n   * Internal use\n   *\n   * @private\n   * @method _groupCollide\n   * @param {!string} type one of 'overlap', 'collide', 'displace', 'bounce'\n   * @param {Object} target Group or Sprite\n   * @param {Function} [callback] on collision.\n   * @return {boolean} True if any collision/overlap occurred\n   */\n  function _groupCollide(type, target, callback) {\n    var didCollide = false;\n    for(var i = 0; i<this.size(); i++)\n      didCollide = this.get(i).AABBops(type, target, callback) || didCollide;\n    return didCollide;\n  }\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occurs.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.overlap(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method overlap\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.overlap = _groupCollide.bind(array, 'overlap');\n\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites in the group will be displaced\n  * by the colliding one to the closest non-overlapping positions.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.collide(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method collide\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.collide = _groupCollide.bind(array, 'collide');\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites in the group will displace\n  * the colliding ones to the closest non-overlapping positions.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occurs.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.displace(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method displace\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.displace = _groupCollide.bind(array, 'displace');\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites will bounce affecting each\n  * other's trajectories depending on their .velocity, .mass and .restitution.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.bounce(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method bounce\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.bounce = _groupCollide.bind(array, 'bounce');\n\n  return array;\n}\n\np5.prototype.Group = Group;\n\n//circle collider - used internally\nfunction CircleCollider(pInst, _center, _radius, _offset) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n\n  var CENTER = p5.prototype.CENTER;\n\n  this.center = _center;\n  this.radius = _radius;\n  this.originalRadius = _radius;\n\n  if(_offset === undefined)\n    this.offset = createVector(0, 0);\n  else\n    this.offset = _offset;\n  this.extents = createVector(_radius*2, _radius*2);\n\n  this.draw = function()\n  {\n    pInst.noFill();\n    pInst.stroke(0, 255, 0);\n    pInst.rectMode(CENTER);\n    pInst.ellipse(this.center.x+this.offset.x, this.center.y+this.offset.y, this.radius*2, this.radius*2);\n  };\n\n  //should be called only for circle vs circle\n  this.overlap = function(other)\n  {\n    //square dist\n    var r = this.radius + other.radius;\n    r *= r;\n    var thisCenterX = this.center.x + this.offset.x;\n    var thisCenterY = this.center.y + this.offset.y;\n    var otherCenterX = other.center.x + other.offset.x;\n    var otherCenterY = other.center.y + other.offset.y;\n    var sqDist = pow(thisCenterX - otherCenterX, 2) + pow(thisCenterY - otherCenterY, 2);\n    return r > sqDist;\n  };\n\n  //should be called only for circle vs circle\n  this.collide = function(other)\n  {\n    if(this.overlap(other)) {\n      var thisCenterX = this.center.x + this.offset.x;\n      var thisCenterY = this.center.y + this.offset.y;\n      var otherCenterX = other.center.x + other.offset.x;\n      var otherCenterY = other.center.y + other.offset.y;\n      var a = pInst.atan2(thisCenterY-otherCenterY, thisCenterX-otherCenterX);\n      var radii = this.radius+other.radius;\n      var intersection = abs(radii - dist(thisCenterX, thisCenterY, otherCenterX, otherCenterY));\n\n      var displacement = createVector(pInst.cos(a)*intersection, pInst.sin(a)*intersection);\n\n      return displacement;\n    } else {\n      return createVector(0, 0);\n    }\n  };\n\n  this.size = function()\n  {\n    return createVector(this.radius*2, this.radius*2);\n  };\n\n  this.left = function()\n  {\n    return this.center.x+this.offset.x - this.radius;\n  };\n\n  this.right = function()\n  {\n    return this.center.x+this.offset.x + this.radius;\n  };\n\n  this.top = function()\n  {\n    return this.center.y+this.offset.y - this.radius;\n  };\n\n  this.bottom = function()\n  {\n    return this.center.y+this.offset.y + this.radius;\n  };\n\n\n\n}\ndefineLazyP5Property('CircleCollider', boundConstructorFactory(CircleCollider));\n\n//axis aligned bounding box - extents are the half sizes - used internally\nfunction AABB(pInst, _center, _extents, _offset) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n\n  var CENTER = p5.prototype.CENTER;\n  var PI = p5.prototype.PI;\n\n  this.center = _center;\n  this.extents = _extents;\n  this.originalExtents = _extents.copy();\n\n  if(_offset === undefined)\n    this.offset = createVector(0, 0);\n  else\n    this.offset = _offset;\n\n  this.min = function()\n  {\n    return createVector(this.center.x+this.offset.x - this.extents.x, this.center.y+this.offset.y - this.extents.y);\n  };\n\n  this.max = function()\n  {\n    return createVector(this.center.x+this.offset.x + this.extents.x, this.center.y+this.offset.y + this.extents.y);\n  };\n\n  this.right = function()\n  {\n    return this.center.x+this.offset.x + this.extents.x/2;\n  };\n\n  this.left = function()\n  {\n    return this.center.x+this.offset.x - this.extents.x/2;\n  };\n\n  this.top = function()\n  {\n    return this.center.y+this.offset.y - this.extents.y/2;\n  };\n\n  this.bottom = function()\n  {\n    return this.center.y+this.offset.y + this.extents.y/2;\n  };\n\n  this.size = function()\n  {\n    return createVector(this.extents.x * 2, this.extents.y * 2);\n  };\n\n  this.rotate = function(r)\n  {\n    //rotate the bbox\n    var t;\n    if (pInst._angleMode === pInst.RADIANS) {\n      t = radians(r);\n    } else {\n      t = r;\n    }\n\n    var w2 = this.extents.x * abs(pInst.cos(t)) + this.extents.y * abs(pInst.sin(t));\n    var h2 = this.extents.x * abs(pInst.sin(t)) + this.extents.y * abs(pInst.cos(t));\n\n    this.extents.x = w2;\n    this.extents.y = h2;\n\n  };\n\n  this.draw = function()\n  {\n    //fill(col);\n    pInst.noFill();\n    pInst.stroke(0, 255, 0);\n    pInst.rectMode(CENTER);\n    pInst.rect(this.center.x+this.offset.x, this.center.y+this.offset.y, this.size().x/2, this.size().y/2);\n  };\n\n  this.overlap = function(other)\n  {\n    //box vs box\n    if(other instanceof AABB)\n    {\n      var md = other.minkowskiDifference(this);\n\n      if (md.min().x <= 0 &&\n          md.max().x >= 0 &&\n          md.min().y <= 0 &&\n          md.max().y >= 0)\n      {\n        return true;\n      }\n      else\n        return false;\n    }\n    //box vs circle\n    else if(other instanceof CircleCollider)\n    {\n\n      //find closest point to the circle on the box\n      var pt = createVector(other.center.x, other.center.y);\n\n      //I don't know what's going o try to trace a line from centers to see\n      if( other.center.x < this.left() )\n        pt.x = this.left();\n      else if( other.center.x > this.right())\n        pt.x = this.right();\n\n      if( other.center.y < this.top() )\n        pt.y = this.top();\n      else if( other.center.y > this.bottom())\n        pt.y = this.bottom();\n\n      var distance = pt.dist(other.center);\n\n      return distance<other.radius;\n    }\n  };\n\n  this.collide = function(other)\n  {\n\n    if(other instanceof AABB)\n    {\n      var md = other.minkowskiDifference(this);\n\n      if (md.min().x <= 0 &&\n          md.max().x >= 0 &&\n          md.min().y <= 0 &&\n          md.max().y >= 0)\n      {\n        var boundsPoint = md.closestPointOnBoundsToPoint(createVector(0, 0));\n\n        return boundsPoint;\n      }\n      else\n        return createVector(0, 0);\n    }\n    //box vs circle\n    else if(other instanceof CircleCollider)\n    {\n\n      //find closest point to the circle on the box\n      var pt = createVector(other.center.x, other.center.y);\n\n      //I don't know what's going o try to trace a line from centers to see\n      if( other.center.x < this.left() )\n        pt.x = this.left();\n      else if( other.center.x > this.right())\n        pt.x = this.right();\n\n      if( other.center.y < this.top() )\n        pt.y = this.top();\n      else if( other.center.y > this.bottom())\n        pt.y = this.bottom();\n\n\n      var distance = pt.dist(other.center);\n      var a;\n\n      if(distance<other.radius)\n      {\n        //reclamp point\n        if(pt.x === other.center.x && pt.y === other.center.y)\n        {\n          var xOverlap = pt.x - this.center.x;\n          var yOverlap = pt.y - this.center.y;\n\n\n          if(abs(xOverlap) < abs(yOverlap))\n          {\n            if(xOverlap > 0 )\n              pt.x = this.right();\n            else\n              pt.x = this.left();\n          }\n          else\n          {\n            if(yOverlap < 0 )\n              pt.y = this.top();\n            else\n              pt.y = this.bottom();\n          }\n\n          a = pInst.atan2(other.center.y-pt.y, other.center.x-pt.x);\n\n          //fix exceptions\n          if(a === 0)\n          {\n            if(pt.x === this.right()) a = PI;\n            if(pt.y === this.top()) a = PI/2;\n            if(pt.y === this.bottom()) a = -PI/2;\n          }\n        }\n        else\n        {\n          //angle bw point and center\n          a = pInst.atan2(pt.y-other.center.y, pt.x-other.center.x);\n          //project the normal (line between pt and center) onto the circle\n        }\n\n        var d = createVector(pt.x-other.center.x, pt.y-other.center.y);\n        var displacement = createVector(pInst.cos(a)*other.radius-d.x, pInst.sin(a)*other.radius-d.y);\n\n        //if(pt.x === other.center.x && pt.y === other.center.y)\n        //displacement = displacement.mult(-1);\n\n        return displacement;\n        //return createVector(0,0);\n      }\n      else\n        return createVector(0, 0);\n    }\n  };\n\n  this.minkowskiDifference = function(other)\n  {\n    var topLeft = this.min().sub(other.max());\n    var fullSize = this.size().add(other.size());\n    return new AABB(pInst, topLeft.add(fullSize.div(2)), fullSize.div(2));\n  };\n\n\n  this.closestPointOnBoundsToPoint = function(point)\n  {\n    // test x first\n    var minDist = abs(point.x - this.min().x);\n    var boundsPoint = createVector(this.min().x, point.y);\n\n    if (abs(this.max().x - point.x) < minDist)\n    {\n      minDist = abs(this.max().x - point.x);\n      boundsPoint = createVector(this.max().x, point.y);\n    }\n\n    if (abs(this.max().y - point.y) < minDist)\n    {\n      minDist = abs(this.max().y - point.y);\n      boundsPoint = createVector(point.x, this.max().y);\n    }\n\n    if (abs(this.min().y - point.y) < minDist)\n    {\n      minDist = abs(this.min.y - point.y);\n      boundsPoint = createVector(point.x, this.min().y);\n    }\n\n    return boundsPoint;\n  };\n\n\n}//end AABB\ndefineLazyP5Property('AABB', boundConstructorFactory(AABB));\n\n\n\n/**\n * An Animation object contains a series of images (p5.Image) that\n * can be displayed sequentially.\n *\n * All files must be png images. You must include the directory from the sketch root,\n * and the extension .png\n *\n * A sprite can have multiple labeled animations, see Sprite.addAnimation\n * and Sprite.changeAnimation, however an animation can be used independently.\n *\n * An animation can be created either by passing a series of file names,\n * no matter how many or by passing the first and the last file name\n * of a numbered sequence.\n * p5.play will try to detect the sequence pattern.\n *\n * For example if the given filenames are\n * \"data/file0001.png\" and \"data/file0005.png\" the images\n * \"data/file0003.png\" and \"data/file0004.png\" will be loaded as well.\n *\n * @example\n *     var sequenceAnimation;\n *     var glitch;\n *\n *     function preload() {\n *       sequenceAnimation = loadAnimation(\"data/walking0001.png\", \"data/walking0005.png\");\n *       glitch = loadAnimation(\"data/dog.png\", \"data/horse.png\", \"data/cat.png\", \"data/snake.png\");\n *     }\n *\n *     function setup() {\n *       createCanvas(800, 600);\n *     }\n *\n *     function draw() {\n *       background(0);\n *       animation(sequenceAnimation, 100, 100);\n *       animation(glitch, 200, 100);\n *     }\n *\n * @class Animation\n * @constructor\n * @param {String} fileName1 First file in a sequence OR first image file\n * @param {String} fileName2 Last file in a sequence OR second image file\n * @param {String} [...fileNameN] Any number of image files after the first two\n */\nfunction Animation(pInst) {\n  var frameArguments = Array.prototype.slice.call(arguments, 1);\n  var i;\n\n  var CENTER = p5.prototype.CENTER;\n\n  /**\n  * Array of frames (p5.Image)\n  *\n  * @property images\n  * @type {Array}\n  */\n  this.images = [];\n\n  var frame = 0;\n  var cycles = 0;\n  var targetFrame = -1;\n\n  this.offX = 0;\n  this.offY = 0;\n\n  /**\n  * Delay between frames in number of draw cycles.\n  * If set to 4 the framerate of the animation would be the\n  * sketch framerate divided by 4 (60fps = 15fps)\n  *\n  * @property frameDelay\n  * @type {Number}\n  * @default 4\n  */\n  this.frameDelay = 4;\n\n  /**\n  * True if the animation is currently playing.\n  *\n  * @property playing\n  * @type {Boolean}\n  * @default true\n  */\n  this.playing = true;\n\n  /**\n  * Animation visibility.\n  *\n  * @property visible\n  * @type {Boolean}\n  * @default true\n  */\n  this.visible = true;\n\n  /**\n  * If set to false the animation will stop after reaching the last frame\n  *\n  * @property looping\n  * @type {Boolean}\n  * @default true\n  */\n  this.looping = true;\n\n  /**\n  * True if frame changed during the last draw cycle\n  *\n  * @property frameChanged\n  * @type {Boolean}\n  */\n  this.frameChanged = false;\n\n  //is the collider defined manually or defined\n  //by the current frame size\n  this.imageCollider = false;\n\n\n  //sequence mode\n  if(frameArguments.length === 2 && typeof frameArguments[0] === 'string' && typeof frameArguments[1] === 'string')\n  {\n    var from = frameArguments[0];\n    var to = frameArguments[1];\n\n    //print(\"sequence mode \"+from+\" -> \"+to);\n\n    //make sure the extensions are fine\n    var ext1 = from.substring(from.length-4, from.length);\n    if(ext1 !== '.png')\n    {\n      pInst.print('Animation error: you need to use .png files (filename '+from+')');\n      from = -1;\n    }\n\n    var ext2 = to.substring(to.length-4, to.length);\n    if(ext2 !== '.png')\n    {\n      pInst.print('Animation error: you need to use .png files (filename '+to+')');\n      to = -1;\n    }\n\n    //extensions are fine\n    if(from !== -1 && to !== -1)\n    {\n      var digits1 = 0;\n      var digits2 = 0;\n\n      //skip extension work backwards to find the numbers\n      for (i = from.length-5; i >= 0; i--) {\n        if(from.charAt(i) >= '0' && from.charAt(i) <= '9')\n          digits1++;\n      }\n\n      for (i = to.length-5; i >= 0; i--) {\n        if(to.charAt(i) >= '0' && to.charAt(i) <= '9')\n          digits2++;\n      }\n\n      var prefix1 = from.substring(0, from.length-(4+digits1));\n      var prefix2 = to.substring(0, to.length-(4+digits2) );\n\n      // Our numbers likely have leading zeroes, which means that some\n      // browsers (e.g., PhantomJS) will interpret them as base 8 (octal)\n      // instead of decimal. To fix this, we'll explicity tell parseInt to\n      // use a base of 10 (decimal). For more details on this issue, see\n      // http://stackoverflow.com/a/8763427/2422398.\n      var number1 = parseInt(from.substring(from.length-(4+digits1), from.length-4), 10);\n      var number2 = parseInt(to.substring(to.length-(4+digits2), to.length-4), 10);\n\n      //swap if inverted\n      if(number2<number1)\n      {\n        var t = number2;\n        number2 = number1;\n        number1 = t;\n      }\n\n      //two different frames\n      if(prefix1 !== prefix2 )\n      {\n        //print(\"2 separate images\");\n        this.images.push(pInst.loadImage(from));\n        this.images.push(pInst.loadImage(to));\n      }\n      //same digits: case img0001, img0002\n      else\n      {\n        var fileName;\n        if(digits1 === digits2)\n        {\n\n          //load all images\n          for (i = number1; i <= number2; i++) {\n            // Use nf() to number format 'i' into four digits\n            fileName = prefix1 + pInst.nf(i, digits1) + '.png';\n            this.images.push(pInst.loadImage(fileName));\n\n          }\n\n        }\n        else //case: case img1, img2\n        {\n          //print(\"from \"+prefix1+\" \"+number1 +\" to \"+number2);\n          for (i = number1; i <= number2; i++) {\n            // Use nf() to number format 'i' into four digits\n            fileName = prefix1 + i + '.png';\n            this.images.push(pInst.loadImage(fileName));\n\n          }\n\n        }\n      }\n\n    }//end no ext error\n\n  }//end sequence mode\n  // Sprite sheet mode\n  else if (frameArguments.length === 1 && (frameArguments[0] instanceof SpriteSheet))\n  {\n    this.spriteSheet = frameArguments[0];\n    this.images = this.spriteSheet.frames;\n  }\n  else if(frameArguments.length !== 0)//arbitrary list of images\n  {\n    //print(\"Animation arbitrary mode\");\n    for (i = 0; i < frameArguments.length; i++) {\n      //print(\"loading \"+fileNames[i]);\n      if(frameArguments[i] instanceof p5.Image)\n        this.images.push(frameArguments[i]);\n      else\n        this.images.push(pInst.loadImage(frameArguments[i]));\n    }\n  }\n\n  /**\n  * Objects are passed by reference so to have different sprites\n  * using the same animation you need to clone it.\n  *\n  * @method clone\n  * @return {Animation} A clone of the current animation\n  */\n  this.clone = function() {\n    var myClone = new Animation(pInst); //empty\n    myClone.images = [];\n\n    if (this.spriteSheet) {\n      myClone.spriteSheet = this.spriteSheet.clone();\n    }\n    myClone.images = this.images.slice();\n\n    myClone.offX = this.offX;\n    myClone.offY = this.offY;\n    myClone.frameDelay = this.frameDelay;\n    myClone.playing = this.playing;\n    myClone.looping = this.looping;\n\n    return myClone;\n  };\n\n  /**\n   * Draws the animation at coordinate x and y.\n   * Updates the frames automatically.\n   *\n   * @method draw\n   * @param {Number} x x coordinate\n   * @param {Number} y y coordinate\n   * @param {Number} [r=0] rotation\n   */\n  this.draw = function(x, y, r) {\n    this.xpos = x;\n    this.ypos = y;\n    this.rotation = r || 0;\n\n    if (this.visible)\n    {\n\n      //only connection with the sprite class\n      //if animation is used independently draw and update are the sam\n      if(!this.isSpriteAnimation)\n        this.update();\n\n      //this.currentImageMode = g.imageMode;\n      pInst.push();\n      pInst.imageMode(CENTER);\n\n      pInst.translate(this.xpos, this.ypos);\n      if (pInst._angleMode === pInst.RADIANS) {\n        pInst.rotate(radians(this.rotation));\n      } else {\n        pInst.rotate(this.rotation);\n      }\n\n      if(this.images[frame] !== undefined)\n      {\n        if (this.spriteSheet) {\n          var frame_info = this.images[frame].frame;\n          pInst.image(this.spriteSheet.image, this.offX, this.offY, frame_info.width, frame_info.height,\n            frame_info.x, frame_info.y, frame_info.width, frame_info.height);\n        } else {\n          pInst.image(this.images[frame], this.offX, this.offY);\n        }\n      }\n      else\n      {\n        pInst.print('Warning undefined frame '+frame);\n        //this.isActive = false;\n      }\n\n      pInst.pop();\n    }\n  };\n\n  //called by draw\n  this.update = function() {\n    cycles++;\n    var previousFrame = frame;\n    this.frameChanged = false;\n\n\n    //go to frame\n    if(this.images.length === 1)\n    {\n      this.playing = false;\n      frame = 0;\n    }\n\n    if ( this.playing && cycles%this.frameDelay === 0)\n    {\n      //going to target frame up\n      if(targetFrame>frame && targetFrame !== -1)\n      {\n        frame++;\n      }\n      //going to taget frame down\n      else if(targetFrame<frame && targetFrame !== -1)\n      {\n        frame--;\n      }\n      else if(targetFrame === frame && targetFrame !== -1)\n      {\n        this.playing=false;\n      }\n      else if (this.looping) //advance frame\n      {\n        //if next frame is too high\n        if (frame>=this.images.length-1)\n          frame = 0;\n        else\n          frame++;\n      } else\n      {\n        //if next frame is too high\n        if (frame<this.images.length-1)\n          frame++;\n      }\n    }\n    if (frame == this.images.length - 1 && this.onComplete != undefined)\n      this.onComplete(); //fire when on last frame\n\n    if(previousFrame !== frame)\n      this.frameChanged = true;\n\n    \n\n  };//end update\n\n  /**\n  * Plays the animation.\n  *\n  * @method play\n  */\n  this.play = function() {\n    this.playing = true;\n    targetFrame = -1;\n  };\n\n  /**\n  * Stops the animation.\n  *\n  * @method stop\n  */\n  this.stop = function(){\n    this.playing = false;\n  };\n\n  /**\n  * Rewinds the animation to the first frame.\n  *\n  * @method rewind\n  */\n  this.rewind = function() {\n    frame = 0;\n  };\n\n  /**\n  * fire when animation ends\n  *\n  * @method onComplete\n  * @return {Animation} \n  */\n  this.onComplete = function () {\n    return undefined;\n  };\n\n  /**\n  * Changes the current frame.\n  *\n  * @method changeFrame\n  * @param {Number} frame Frame number (starts from 0).\n  */\n  this.changeFrame = function(f) {\n    if (f<this.images.length)\n      frame = f;\n    else\n      frame = this.images.length - 1;\n\n    targetFrame = -1;\n    //this.playing = false;\n  };\n\n   /**\n  * Goes to the next frame and stops.\n  *\n  * @method nextFrame\n  */\n  this.nextFrame = function() {\n\n    if (frame<this.images.length-1)\n      frame = frame+1;\n    else if(this.looping)\n      frame = 0;\n\n    targetFrame = -1;\n    this.playing = false;\n  };\n\n   /**\n  * Goes to the previous frame and stops.\n  *\n  * @method previousFrame\n  */\n  this.previousFrame = function() {\n\n    if (frame>0)\n      frame = frame-1;\n    else if(this.looping)\n      frame = this.images.length-1;\n\n    targetFrame = -1;\n    this.playing = false;\n  };\n\n  /**\n  * Plays the animation forward or backward toward a target frame.\n  *\n  * @method goToFrame\n  * @param {Number} toFrame Frame number destination (starts from 0)\n  */\n  this.goToFrame = function(toFrame) {\n    if(toFrame < 0 || toFrame >= this.images.length) {\n      return;\n    }\n\n    // targetFrame gets used by the update() method to decide what frame to\n    // select next.  When it's not being used it gets set to -1.\n    targetFrame = toFrame;\n\n    if(targetFrame !== frame) {\n      this.playing = true;\n    }\n  };\n\n  /**\n  * Returns the current frame number.\n  *\n  * @method getFrame\n  * @return {Number} Current frame (starts from 0)\n  */\n  this.getFrame = function() {\n    return frame;\n  };\n\n  /**\n  * Returns the last frame number.\n  *\n  * @method getLastFrame\n  * @return {Number} Last frame number (starts from 0)\n  */\n  this.getLastFrame = function() {\n    return this.images.length-1;\n  };\n\n  /**\n  * Returns the current frame image as p5.Image.\n  *\n  * @method getFrameImage\n  * @return {p5.Image} Current frame image\n  */\n  this.getFrameImage = function() {\n    return this.images[frame];\n  };\n\n  /**\n  * Returns the frame image at the specified frame number.\n  *\n  * @method getImageAt\n  * @param {Number} frame Frame number\n  * @return {p5.Image} Frame image\n  */\n  this.getImageAt = function(f) {\n    return this.images[f];\n  };\n\n  /**\n  * Returns the current frame width in pixels.\n  * If there is no image loaded, returns 1.\n  *\n  * @method getWidth\n  * @return {Number} Frame width\n  */\n  this.getWidth = function() {\n    if (this.images[frame] instanceof p5.Image) {\n      return this.images[frame].width;\n    } else if (this.images[frame]) {\n      // Special case: Animation-from-spritesheet treats its images array differently.\n      return this.images[frame].frame.width;\n    } else {\n      return 1;\n    }\n  };\n\n  /**\n  * Returns the current frame height in pixels.\n  * If there is no image loaded, returns 1.\n  *\n  * @method getHeight\n  * @return {Number} Frame height\n  */\n  this.getHeight = function() {\n    if (this.images[frame] instanceof p5.Image) {\n      return this.images[frame].height;\n    } else if (this.images[frame]) {\n      // Special case: Animation-from-spritesheet treats its images array differently.\n      return this.images[frame].frame.height;\n    } else {\n      return 1;\n    }\n  };\n\n}\n\ndefineLazyP5Property('Animation', boundConstructorFactory(Animation));\n\n/**\n * Represents a sprite sheet and all it's frames.  To be used with Animation,\n * or static drawing single frames.\n *\n *  There are two different ways to load a SpriteSheet\n *\n * 1. Given width, height that will be used for every frame and the\n *    number of frames to cycle through. The sprite sheet must have a\n *    uniform grid with consistent rows and columns.\n *\n * 2. Given an array of frame objects that define the position and\n *    dimensions of each frame.  This is Flexible because you can use\n *    sprite sheets that don't have uniform rows and columns.\n *\n * @example\n *     // Method 1 - Using width, height for each frame and number of frames\n *     explode_sprite_sheet = loadSpriteSheet('assets/explode_sprite_sheet.png', 171, 158, 11);\n *\n *     // Method 2 - Using an array of objects that define each frame\n *     var player_frames = loadJSON('assets/tiles.json');\n *     player_sprite_sheet = loadSpriteSheet('assets/player_spritesheet.png', player_frames);\n *\n * @class SpriteSheet\n * @constructor\n * @param image String image path or p5.Image object\n */\nfunction SpriteSheet(pInst) {\n  var spriteSheetArgs = Array.prototype.slice.call(arguments, 1);\n\n  this.image = null;\n  this.frames = [];\n  this.frame_width = 0;\n  this.frame_height = 0;\n  this.num_frames = 0;\n\n  /**\n   * Generate the frames data for this sprite sheet baesd on user params\n   * @private\n   * @method _generateSheetFrames\n   */\n  this._generateSheetFrames = function() {\n    var sX = 0, sY = 0;\n    for (var i = 0; i < this.num_frames; i++) {\n      this.frames.push(\n        {\n          'name': i,\n          'frame': {\n            'x': sX,\n            'y': sY,\n            'width': this.frame_width,\n            'height': this.frame_height\n          }\n        });\n      sX += this.frame_width;\n      if (sX >= this.image.width) {\n        sX = 0;\n        sY += this.frame_height;\n        if (sY >= this.image.height) {\n          sY = 0;\n        }\n      }\n    }\n  };\n\n  if (spriteSheetArgs.length === 2 && Array.isArray(spriteSheetArgs[1])) {\n    this.frames = spriteSheetArgs[1];\n    this.num_frames = this.frames.length;\n  } else if (spriteSheetArgs.length === 4 &&\n    (typeof spriteSheetArgs[1] === 'number') &&\n    (typeof spriteSheetArgs[2] === 'number') &&\n    (typeof spriteSheetArgs[3] === 'number')) {\n    this.frame_width = spriteSheetArgs[1];\n    this.frame_height = spriteSheetArgs[2];\n    this.num_frames = spriteSheetArgs[3];\n  }\n\n  if(spriteSheetArgs[0] instanceof p5.Image) {\n    this.image = spriteSheetArgs[0];\n    if (spriteSheetArgs.length === 4) {\n      this._generateSheetFrames();\n    }\n  } else {\n    if (spriteSheetArgs.length === 2) {\n      this.image = pInst.loadImage(spriteSheetArgs[0]);\n    } else if (spriteSheetArgs.length === 4) {\n      this.image = pInst.loadImage(spriteSheetArgs[0], this._generateSheetFrames.bind(this));\n    }\n  }\n\n  /**\n   * Draws a specific frame to the canvas.\n   * @param frame_name  Can either be a string name, or a numeric index.\n   * @param x   x position to draw the frame at\n   * @param y   y position to draw the frame at\n   * @param [width]   optional width to draw the frame\n   * @param [height]  optional height to draw the frame\n   * @method drawFrame\n   */\n  this.drawFrame = function(frame_name, x, y, width, height) {\n    var frameToDraw;\n    if (typeof frame_name === 'number') {\n      frameToDraw = this.frames[frame_name].frame;\n    } else {\n      for (var i = 0; i < this.frames.length; i++) {\n        if (this.frames[i].name === frame_name) {\n          frameToDraw = this.frames[i].frame;\n          break;\n        }\n      }\n    }\n    var dWidth = width || frameToDraw.width;\n    var dHeight = height || frameToDraw.height;\n    pInst.image(this.image, frameToDraw.x, frameToDraw.y,\n      frameToDraw.width, frameToDraw.height, x, y, dWidth, dHeight);\n  };\n\n  /**\n   * Objects are passed by reference so to have different sprites\n   * using the same animation you need to clone it.\n   *\n   * @method clone\n   * @return {SpriteSheet} A clone of the current SpriteSheet\n   */\n  this.clone = function() {\n    var myClone = new SpriteSheet(pInst); //empty\n\n    // Deep clone the frames by value not reference\n    for(var i = 0; i < this.frames.length; i++) {\n      var frame = this.frames[i].frame;\n      var cloneFrame = {\n        'name':frame.name,\n        'frame': {\n          'x':frame.x,\n          'y':frame.y,\n          'width':frame.width,\n          'height':frame.height\n        }\n      };\n      myClone.frames.push(cloneFrame);\n    }\n\n    // clone other fields\n    myClone.image = this.image;\n    myClone.frame_width = this.frame_width;\n    myClone.frame_height = this.frame_height;\n    myClone.num_frames = this.num_frames;\n\n    return myClone;\n  };\n}\n\ndefineLazyP5Property('SpriteSheet', boundConstructorFactory(SpriteSheet));\n\n//general constructor to be able to feed arguments as array\nfunction construct(constructor, args) {\n  function F() {\n    return constructor.apply(this, args);\n  }\n  F.prototype = constructor.prototype;\n  return new F();\n}\n\n\n\n\n\n/*\n * Javascript Quadtree\n * based on\n * https://github.com/timohausmann/quadtree-js/\n * Copyright © 2012 Timo Hausmann\n*/\n\nfunction Quadtree( bounds, max_objects, max_levels, level ) {\n\n  this.active = true;\n  this.max_objects\t= max_objects || 10;\n  this.max_levels\t\t= max_levels || 4;\n\n  this.level \t\t\t= level || 0;\n  this.bounds \t\t= bounds;\n\n  this.objects \t\t= [];\n  this.object_refs\t= [];\n  this.nodes \t\t\t= [];\n}\n\nQuadtree.prototype.updateBounds = function() {\n\n  //find maximum area\n  var objects = this.getAll();\n  var x = 10000;\n  var y = 10000;\n  var w = -10000;\n  var h = -10000;\n\n  for( var i=0; i < objects.length; i++ )\n    {\n      if(objects[i].position.x < x)\n        x = objects[i].position.x;\n      if(objects[i].position.y < y)\n        y = objects[i].position.y;\n      if(objects[i].position.x > w)\n        w = objects[i].position.x;\n      if(objects[i].position.y > h)\n        h = objects[i].position.y;\n    }\n\n\n  this.bounds = {\n    x:x,\n    y:y,\n    width:w,\n    height:h\n  };\n  //print(this.bounds);\n};\n\n/*\n\t * Split the node into 4 subnodes\n\t */\nQuadtree.prototype.split = function() {\n\n  var nextLevel\t= this.level + 1,\n      subWidth\t= Math.round( this.bounds.width / 2 ),\n      subHeight \t= Math.round( this.bounds.height / 2 ),\n      x \t\t\t= Math.round( this.bounds.x ),\n      y \t\t\t= Math.round( this.bounds.y );\n\n  //top right node\n  this.nodes[0] = new Quadtree({\n    x\t: x + subWidth,\n    y\t: y,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //top left node\n  this.nodes[1] = new Quadtree({\n    x\t: x,\n    y\t: y,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //bottom left node\n  this.nodes[2] = new Quadtree({\n    x\t: x,\n    y\t: y + subHeight,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //bottom right node\n  this.nodes[3] = new Quadtree({\n    x\t: x + subWidth,\n    y\t: y + subHeight,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n};\n\n\n/*\n\t * Determine the quadtrant for an area in this node\n\t */\nQuadtree.prototype.getIndex = function( pRect ) {\n  if(!pRect.collider)\n    return -1;\n  else\n  {\n    var index \t\t\t\t= -1,\n        verticalMidpoint \t= this.bounds.x + (this.bounds.width / 2),\n        horizontalMidpoint \t= this.bounds.y + (this.bounds.height / 2),\n\n        //pRect can completely fit within the top quadrants\n        topQuadrant = (pRect.collider.top() < horizontalMidpoint && pRect.collider.top() + pRect.collider.size().y < horizontalMidpoint),\n\n        //pRect can completely fit within the bottom quadrants\n        bottomQuadrant = (pRect.collider.top() > horizontalMidpoint);\n\n    //pRect can completely fit within the left quadrants\n    if( pRect.collider.left() < verticalMidpoint && pRect.collider.left() + pRect.collider.size().x < verticalMidpoint ) {\n      if( topQuadrant ) {\n        index = 1;\n      } else if( bottomQuadrant ) {\n        index = 2;\n      }\n\n      //pRect can completely fit within the right quadrants\n    } else if( pRect.collider.left() > verticalMidpoint ) {\n      if( topQuadrant ) {\n        index = 0;\n      } else if( bottomQuadrant ) {\n        index = 3;\n      }\n    }\n\n    return index;\n  }\n};\n\n\n/*\n\t * Insert an object into the node. If the node\n\t * exceeds the capacity, it will split and add all\n\t * objects to their corresponding subnodes.\n\t */\nQuadtree.prototype.insert = function( obj ) {\n  //avoid double insertion\n  if(this.objects.indexOf(obj) === -1)\n  {\n\n    var i = 0,\n        index;\n\n    //if we have subnodes ...\n    if( typeof this.nodes[0] !== 'undefined' ) {\n      index = this.getIndex( obj );\n\n      if( index !== -1 ) {\n        this.nodes[index].insert( obj );\n        return;\n      }\n    }\n\n    this.objects.push( obj );\n\n    if( this.objects.length > this.max_objects && this.level < this.max_levels ) {\n\n      //split if we don't already have subnodes\n      if( typeof this.nodes[0] === 'undefined' ) {\n        this.split();\n      }\n\n      //add all objects to there corresponding subnodes\n      while( i < this.objects.length ) {\n\n        index = this.getIndex( this.objects[i] );\n\n        if( index !== -1 ) {\n          this.nodes[index].insert( this.objects.splice(i, 1)[0] );\n        } else {\n          i = i + 1;\n        }\n      }\n    }\n  }\n};\n\n\n/*\n\t * Return all objects that could collide with a given area\n\t */\nQuadtree.prototype.retrieve = function( pRect ) {\n\n\n  var index = this.getIndex( pRect ),\n      returnObjects = this.objects;\n\n  //if we have subnodes ...\n  if( typeof this.nodes[0] !== 'undefined' ) {\n\n    //if pRect fits into a subnode ..\n    if( index !== -1 ) {\n      returnObjects = returnObjects.concat( this.nodes[index].retrieve( pRect ) );\n\n      //if pRect does not fit into a subnode, check it against all subnodes\n    } else {\n      for( var i=0; i < this.nodes.length; i=i+1 ) {\n        returnObjects = returnObjects.concat( this.nodes[i].retrieve( pRect ) );\n      }\n    }\n  }\n\n  return returnObjects;\n};\n\nQuadtree.prototype.retrieveFromGroup = function( pRect, group ) {\n\n  var results = [];\n  var candidates = this.retrieve(pRect);\n\n  for(var i=0; i<candidates.length; i++)\n    if(group.contains(candidates[i]))\n    results.push(candidates[i]);\n\n  return results;\n};\n\n/*\n\t * Get all objects stored in the quadtree\n\t */\nQuadtree.prototype.getAll = function() {\n\n  var objects = this.objects;\n\n  for( var i=0; i < this.nodes.length; i=i+1 ) {\n    objects = objects.concat( this.nodes[i].getAll() );\n  }\n\n  return objects;\n};\n\n\n/*\n\t * Get the node in which a certain object is stored\n\t */\nQuadtree.prototype.getObjectNode = function( obj ) {\n\n  var index;\n\n  //if there are no subnodes, object must be here\n  if( !this.nodes.length ) {\n\n    return this;\n\n  } else {\n\n    index = this.getIndex( obj );\n\n    //if the object does not fit into a subnode, it must be here\n    if( index === -1 ) {\n\n      return this;\n\n      //if it fits into a subnode, continue deeper search there\n    } else {\n      var node = this.nodes[index].getObjectNode( obj );\n      if( node ) return node;\n    }\n  }\n\n  return false;\n};\n\n\n/*\n\t * Removes a specific object from the quadtree\n\t * Does not delete empty subnodes. See cleanup-function\n\t */\nQuadtree.prototype.removeObject = function( obj ) {\n\n  var node = this.getObjectNode( obj ),\n      index = node.objects.indexOf( obj );\n\n  if( index === -1 ) return false;\n\n  node.objects.splice( index, 1);\n};\n\n\n/*\n\t * Clear the quadtree and delete all objects\n\t */\nQuadtree.prototype.clear = function() {\n\n  this.objects = [];\n\n  if( !this.nodes.length ) return;\n\n  for( var i=0; i < this.nodes.length; i=i+1 ) {\n\n    this.nodes[i].clear();\n  }\n\n  this.nodes = [];\n};\n\n\n/*\n\t * Clean up the quadtree\n\t * Like clear, but objects won't be deleted but re-inserted\n\t */\nQuadtree.prototype.cleanup = function() {\n\n  var objects = this.getAll();\n\n  this.clear();\n\n  for( var i=0; i < objects.length; i++ ) {\n    this.insert( objects[i] );\n  }\n};\n\n\n\nfunction updateTree() {\n  if(this.quadTree.active)\n  {\n    this.quadTree.updateBounds();\n    this.quadTree.cleanup();\n  }\n}\n\n//keyboard input\np5.prototype.registerMethod('pre', p5.prototype.readPresses);\n\n//automatic sprite update\np5.prototype.registerMethod('pre', p5.prototype.updateSprites);\n\n//quadtree update\np5.prototype.registerMethod('post', updateTree);\n\n//camera push and pop\np5.prototype.registerMethod('pre', cameraPush);\np5.prototype.registerMethod('post', cameraPop);\n\n//deltaTime\n//p5.prototype.registerMethod('pre', updateDelta);\n\n/**\n * Log a warning message to the host console, using native `console.warn`\n * if it is available but falling back on `console.log` if not.  If no\n * console is available, this method will fail silently.\n * @method _warn\n * @param {!string} message\n * @private\n */\np5.prototype._warn = function(message) {\n  var console = window.console;\n\n  if(console)\n  {\n    if('function' === typeof console.warn)\n    {\n      console.warn(message);\n    }\n    else if('function' === typeof console.log)\n    {\n      console.log('Warning: ' + message);\n    }\n  }\n};\n\n}));\n",
        "children": [],
        "fileType": "file",
        "_id": "5f979a9d90d09f6532fc1c62",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T04:04:16.423Z",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979a9d90d09f6532fc1c62"
      },
      {
        "name": "bmg1_bk1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979ace485db300241ea76d",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/948c0f04-e8f7-428e-b807-b7ede264299b.png",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "createdAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979ace485db300241ea76d"
      },
      {
        "name": "bmg1_bk2.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979acf485db300241ea76e",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/9d061cbb-1215-467a-8b01-4845119b519d.png",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "createdAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979acf485db300241ea76e"
      },
      {
        "name": "bmg1_fr1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979acfd0a8830024f31bf4",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/d2a56481-c392-4651-a6c9-399a381d908f.png",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "createdAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979acfd0a8830024f31bf4"
      },
      {
        "name": "bmg1_fr2.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979acf360d1d002435b763",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/8538dec5-a0f5-412d-83b6-bf1760696656.png",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "createdAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979acf360d1d002435b763"
      },
      {
        "name": "bmg1_lf1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979ad1485db300241ea786",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/0ee00bea-1752-48e9-a327-a98bdab2a2ec.png",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "createdAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979ad1485db300241ea786"
      },
      {
        "name": "bmg1_lf2.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979ad160525b00207b5e01",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/1c5ac193-37a9-4889-af6a-ab869cbd61a7.png",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "createdAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979ad160525b00207b5e01"
      },
      {
        "name": "bmg1_rt2.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979ad1d0a8830024f31bf5",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/4c64d0cf-7af6-4821-aad4-aa789ca1524f.png",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "createdAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979ad1d0a8830024f31bf5"
      },
      {
        "name": "bmg1_rt1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f979ad160525b00207b5e02",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/1c3855fb-46dd-43f6-b7d1-27e6bb04d074.png",
        "updatedAt": "2020-10-27T04:04:16.423Z",
        "createdAt": "2020-10-27T04:04:16.423Z",
        "id": "5f979ad160525b00207b5e02"
      }
    ],
    "createdAt": "2020-10-27T03:57:21.039Z",
    "updatedAt": "2020-10-27T04:04:16.423Z",
    "id": "ooA13XnGY"
  },
  {
    "name": "p5.speech step 1",
    "_id": "_QQhqC-3I",
    "updatedAt": "2020-10-20T05:27:01.403Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5f8e73434d7a6f32ff95f2b0",
          "5f8e736e4d7a6f32ff95f2b3",
          "5f8e73434d7a6f32ff95f2af",
          "5f8e73434d7a6f32ff95f2b1"
        ],
        "fileType": "folder",
        "_id": "5f8e73434d7a6f32ff95f2b2",
        "isSelectedFile": false,
        "createdAt": "2020-10-20T05:27:01.403Z",
        "updatedAt": "2020-10-20T05:27:01.403Z",
        "id": "5f8e73434d7a6f32ff95f2b2"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n  \n  let voice = new p5.Speech();\n  voice.speak(\"Hello world!\");\n  \n}\n\nfunction draw() {\n  background(220);\n}",
        "children": [],
        "fileType": "file",
        "_id": "5f8e73434d7a6f32ff95f2af",
        "isSelectedFile": true,
        "createdAt": "2020-10-20T05:27:01.403Z",
        "updatedAt": "2020-10-20T05:27:01.403Z",
        "id": "5f8e73434d7a6f32ff95f2af"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/addons/p5.sound.min.js\"></script>\n    <script src=\"libraries/p5.speech.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "5f8e73434d7a6f32ff95f2b0",
        "isSelectedFile": false,
        "createdAt": "2020-10-20T05:27:01.403Z",
        "updatedAt": "2020-10-20T05:27:01.403Z",
        "id": "5f8e73434d7a6f32ff95f2b0"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5f8e73434d7a6f32ff95f2b1",
        "isSelectedFile": false,
        "createdAt": "2020-10-20T05:27:01.403Z",
        "updatedAt": "2020-10-20T05:27:01.403Z",
        "id": "5f8e73434d7a6f32ff95f2b1"
      },
      {
        "name": "libraries",
        "content": "",
        "children": [
          "5f8e7501ff57e90024983543"
        ],
        "fileType": "folder",
        "_id": "5f8e736e4d7a6f32ff95f2b3",
        "isSelectedFile": false,
        "createdAt": "2020-10-20T05:27:01.403Z",
        "updatedAt": "2020-10-20T05:27:01.403Z",
        "id": "5f8e736e4d7a6f32ff95f2b3"
      },
      {
        "name": "p5.speech.js",
        "content": "/*! p5.speech.js v0.0.1 2015-06-12 */\n/* updated v0.0.2 2017-10-17 */\n/**\n * @module p5.speech\n * @submodule p5.speech\n * @for p5.speech\n * @main\n */\n/**\n *  p5.speech\n *  R. Luke DuBois (dubois@nyu.edu)\n *  ABILITY Lab / Brooklyn Experimental Media Center\n *  New York University\n *  The MIT License (MIT).\n *  \n *  https://github.com/IDMNYU/p5.js-speech\n *\n *  Web Speech API: https://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html\n *  Web Speech Recognition API: https://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html\n */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd)\n    define('p5.speech', ['p5'], function (p5) { (factory(p5));});\n  else if (typeof exports === 'object')\n    factory(require('../p5'));\n  else\n    factory(root['p5']);\n}(this, function (p5) {\n// =============================================================================\n//                         p5.Speech\n// =============================================================================\n\n\n  /**\n   * Base class for a Speech Synthesizer\n   *\n   * @class p5.Speech\n   * @constructor\n   */\n  p5.Speech = function(_dv, _callback) {\n\n    //\n    // speech synthesizers consist of a single synthesis engine\n    // per window instance, and a variable number of 'utterance'\n    // objects, which can be cached and re-used for, e.g.\n    // auditory UI.\n    //\n    // this implementation assumes a monolithic (one synth, \n    // one phrase at a time) system.\n    //\n\n    // make a speech synthizer (this will load voices):\n    this.synth = window.speechSynthesis;\n\n    // make an utterance to use with this synthesizer:\n    this.utterance = new SpeechSynthesisUtterance();\n\n    this.isLoaded = 0; // do we have voices yet?\n\n    // do we queue new utterances upon firing speak() \n    // or interrupt what's speaking:\n    this.interrupt = false; \n\n    // callback properties to be filled in within the p5 sketch\n    // if the author needs custom callbacks:\n    this.onLoad; // fires when voices are loaded and synth is ready\n    this.onStart; // fires when an utterance begins...\n    this.onPause; // ...is paused...\n    this.onResume; // ...resumes...\n    this.onEnd; // ...and ends.\n\n    this.voices = []; // array of available voices (dependent on browser/OS)\n\n    // first parameter of constructor is an initial voice selector\n    this.initvoice;\n    if(_dv !== undefined) this.initvoice=_dv;\n    if(_callback !== undefined) this.onLoad =_callback;\n\n    var that = this; // some bullshit\n\n    // onvoiceschanged() fires automatically when the synthesizer\n    // is configured and has its voices loaded.  you don't need\n    // to wait for this if you're okay with the default voice.\n    // \n    // we use this function to load the voice array and bind our\n    // custom callback functions.\n    window.speechSynthesis.onvoiceschanged = function() {\n      if(that.isLoaded==0) { // run only once\n        that.voices = window.speechSynthesis.getVoices();\n        that.isLoaded = 1; // we're ready\n        console.log(\"p5.Speech: voices loaded!\");\n\n        if(that.initvoice!=undefined) {\n          that.setVoice(that.initvoice); // set a custom initial voice\n          console.log(\"p5.Speech: initial voice: \" + that.initvoice);\n        }\n\n        // fire custom onLoad() callback, if it exists:\n        if(that.onLoad!=undefined) that.onLoad();\n\n        //\n        // bind other custom callbacks:\n        //\n\n        that.utterance.onstart = function(e) {\n          //console.log(\"STARTED\");\n          if(that.onStart!=undefined) that.onStart(e);     \n        };\n        that.utterance.onpause = function(e) {\n          //console.log(\"PAUSED\");\n          if(that.onPause!=undefined) that.onPause(e);\n        };\n        that.utterance.onresume = function(e) {\n          //console.log(\"RESUMED\");\n          if(that.onResume!=undefined) that.onResume(e);\n        };\n        that.utterance.onend = function(e) {\n          //console.log(\"ENDED\");\n          if(that.onEnd!=undefined) that.onEnd(e); \n        };\n      }\n    };\n\n  };     // end p5.Speech constructor\n\n\n  // listVoices() - dump voice names to javascript console:\n  p5.Speech.prototype.listVoices = function() {\n    if(this.isLoaded)\n    {\n      for(var i = 0;i<this.voices.length;i++)\n      {\n        console.log(this.voices[i].name);\n      }\n    }\n    else\n    {\n    \tconsole.log(\"p5.Speech: voices not loaded yet!\")\n    }\n  };\n\n  // setVoice() - assign voice to speech synthesizer, by name\n  // (using voices found in the voices[] array), or by index.\n  p5.Speech.prototype.setVoice = function(_v) {\n    // type check so you can set by label or by index:\n    if(typeof(_v)=='string') this.utterance.voice = this.voices.filter(function(v) { return v.name == _v; })[0];\n    else if(typeof(_v)=='number') this.utterance.voice = this.voices[Math.min(Math.max(_v,0),this.voices.length-1)];\n  };\n\n  // volume of voice. API range 0.0-1.0.\n  p5.Speech.prototype.setVolume = function(_v) {\n    this.utterance.volume = Math.min(Math.max(_v, 0.0), 1.0);\n  };\n\n  // rate of voice.  not all voices support this feature.\n  // API range 0.1-2.0.  voice will crash out of bounds.\n  p5.Speech.prototype.setRate = function(_v) {\n    this.utterance.rate = Math.min(Math.max(_v, 0.1), 2.0);\n  };\n\n  // pitch of voice.  not all voices support this feature.\n  // API range >0.0-2.0.  voice will crash out of bounds.\n  p5.Speech.prototype.setPitch = function(_v) {\n    this.utterance.pitch = Math.min(Math.max(_v, 0.01), 2.0);\n  };\n\n  // sets the language of the voice.\n  p5.Speech.prototype.setLang = function(_lang) {\n    this.utterance.lang = _lang;\n}\n\n  // speak a phrase through the current synthesizer:\n  p5.Speech.prototype.speak = function(_phrase) {\n    if(this.interrupt) this.synth.cancel();\n    this.utterance.text = _phrase;\n\n    this.synth.speak(this.utterance);\n  };\n\n  // not working...\n  p5.Speech.prototype.pause = function() {\n    this.synth.pause();\n  };\n\n  // not working...\n  p5.Speech.prototype.resume = function() {\n    this.synth.resume();\n  };\n\n  // stop current utterance:\n  p5.Speech.prototype.stop = function() {\n    // not working...\n    //this.synth.stop();\n    this.synth.cancel();\n  };\n\n  // kill synthesizer completely, clearing any queued utterances:\n  p5.Speech.prototype.cancel = function() {\n    this.synth.cancel(); // KILL SYNTH\n  };\n\n  // Setting callbacks with functions instead\n  p5.Speech.prototype.started = function(_cb) {\n   this.onStart = _cb;\n  }\n\n  p5.Speech.prototype.ended = function(_cb) {\n    this.onEnd = _cb;\n  }\n\n  p5.Speech.prototype.paused = function(_cb) {\n    this.onPause = _cb;\n  }\n\n  p5.Speech.prototype.resumed = function(_cb) {\n    this.onResume = _cb;\n  }\n\n// =============================================================================\n//                         p5.SpeechRec\n// =============================================================================\n\n\n  /**\n   * Base class for a Speech Recognizer\n   *\n   * @class p5.SpeechRec\n   * @constructor\n   */\n  p5.SpeechRec = function(_lang, _callback) {\n\n    //\n    // speech recognition consists of a recognizer object per \n    // window instance that returns a JSON object containing\n    // recognition.  this JSON object grows when the synthesizer\n    // is in 'continuous' mode, with new recognized phrases\n    // appended into an internal array.\n    //\n    // this implementation returns the full JSON, but also a set\n    // of simple, query-ready properties containing the most\n    // recently recognized speech.\n    //\n\n    // make a recognizer object.\n    if('webkitSpeechRecognition' in window) {\n      this.rec = new webkitSpeechRecognition();\n    }\n    else {\n      this.rec = new Object();\n      console.log(\"p5.SpeechRec: webkitSpeechRecognition not supported in this browser.\");\n    }\n\n    // first parameter is language model (defaults to empty=U.S. English)\n    // no list of valid models in API, but it must use BCP-47.\n    // here's some hints:\n    // http://stackoverflow.com/questions/14257598/what-are-language-codes-for-voice-recognition-languages-in-chromes-implementati\n    if(_lang !== undefined) this.rec.lang=_lang;\n\n    // callback properties to be filled in within the p5 sketch\n    // if the author needs custom callbacks:\n    this.onResult; // fires when something has been recognized\n    this.onStart; // fires when the recognition system is started...\n    this.onError; // ...has a problem (e.g. the mic is shut off)...\n    this.onEnd; // ...and ends (in non-continuous mode).\n    if(_callback !== undefined) this.onResult=_callback;\n\n    // recognizer properties:\n\n    // continous mode means the object keeps recognizing speech,\n    // appending new tokens to the internal JSON.\n    this.continuous = false; \n    // interimResults means the object will report (i.e. fire its\n    // onresult() callback) more frequently, rather than at pauses\n    // in microphone input.  this gets you quicker, but less accurate,\n    // results.\n    this.interimResults = false;\n\n    // result data:\n\n    // resultJSON:\n    // this is a full JSON returned by onresult().  it consists of a \n    // SpeechRecognitionEvent object, which contains a (wait for it)\n    // SpeechRecognitionResultList.  this is an array.  in continuous\n    // mode, it will be appended to, not cleared.  each element is a \n    // SpeechRecognition result, which contains a (groan)\n    // SpeechRecognitionAlternative, containing a 'transcript' property.\n    // the 'transcript' is the recognized phrase.  have fun.\n    this.resultJSON; \n    // resultValue:\n    // validation flag which indicates whether the recognizer succeeded.  \n    // this is *not* a metric of speech clarity, but rather whether the\n    // speech recognition system successfully connected to and received\n    // a response from the server.  you can construct an if() around this\n    // if you're feeling worried.\n    this.resultValue; \n    // resultValue:\n    // the 'transcript' of the most recently recognized speech as a simple\n    // string.  this will be blown out and replaced at every firing of the\n    // onresult() callback.\n    this.resultString; \n    // resultConfidence:\n    // the 'confidence' (0-1) of the most recently recognized speech, e.g.\n    // that it reflects what was actually spoken.  you can use this to filter\n    // out potentially bogus recognition tokens.\n    this.resultConfidence; \n\n    var that = this; // some bullshit\n\n    // onresult() fires automatically when the recognition engine\n    // detects speech, or times out trying.\n    // \n    // it fills up a JSON array internal to the webkitSpeechRecognition\n    // object.  we reference it over in our struct here, and also copy \n    // out the most recently detected phrase and confidence value.\n    this.rec.onresult = function(e) { \n      that.resultJSON = e; // full JSON of callback event\n      that.resultValue = e.returnValue; // was successful?\n      // store latest result in top-level object struct\n      that.resultString = e.results[e.results.length-1][0].transcript.trim();\n      that.resultConfidence = e.results[e.results.length-1][0].confidence;\n      if(that.onResult!=undefined) that.onResult();\n    };\n\n    // fires when the recognition system starts (i.e. when you 'allow'\n    // the mic to be used in the browser).\n    this.rec.onstart = function(e) {\n      if(that.onStart!=undefined) that.onStart(e);\n    };\n    // fires on a client-side error (server-side errors are expressed \n    // by the resultValue in the JSON coming back as 'false').\n    this.rec.onerror = function(e) {\n      if(that.onError!=undefined) that.onError(e);\n    };\n    // fires when the recognition finishes, in non-continuous mode.\n    this.rec.onend = function() {\n      if(that.onEnd!=undefined) that.onEnd();\n    };\n\n  }; // end p5.SpeechRec constructor\n\n  // start the speech recognition engine.  this will prompt a \n  // security dialog in the browser asking for permission to \n  // use the microphone.  this permission will persist throughout\n  // this one 'start' cycle.  if you need to recognize speech more\n  // than once, use continuous mode rather than firing start() \n  // multiple times in a single script.\n  p5.SpeechRec.prototype.start = function(_continuous, _interim) {\n    if('webkitSpeechRecognition' in window) {\n      if(_continuous !== undefined) this.continuous = _continuous;\n      if(_interim !== undefined) this.interimResults = _interim;\n      this.rec.continuous = this.continuous;\n      this.rec.interimResults = this.interimResults;\n      this.rec.start();\n    }\n  };\n\n}));\n\n/*\ntodo:\n* fix callbacks (pause, resume) in synthesizer.\n* support speech grammar models for scoped auditory UI.\n* support markdown, boundaries, etc for better synthesis tracking.\n* support utterance parser for long phrases.\n*/\n\n// EOF\n\n\n\n",
        "children": [],
        "fileType": "file",
        "_id": "5f8e7501ff57e90024983543",
        "isSelectedFile": false,
        "updatedAt": "2020-10-20T05:27:01.403Z",
        "createdAt": "2020-10-20T05:27:01.403Z",
        "id": "5f8e7501ff57e90024983543"
      }
    ],
    "createdAt": "2020-10-20T05:20:17.781Z",
    "id": "_QQhqC-3I"
  },
  {
    "name": "p5.speech step 2",
    "_id": "ALIBP_oBB",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5f8e752b4d7a6f32ff95f2b6",
          "5f8e752b4d7a6f32ff95f2b7",
          "5f8e752b4d7a6f32ff95f2b9",
          "5f8e752b4d7a6f32ff95f2ba"
        ],
        "fileType": "folder",
        "_id": "5f8e752b4d7a6f32ff95f2b5",
        "isSelectedFile": false,
        "createdAt": "2020-10-20T05:41:29.305Z",
        "updatedAt": "2020-10-20T05:41:29.305Z",
        "id": "5f8e752b4d7a6f32ff95f2b5"
      },
      {
        "name": "sketch.js",
        "content": "let speech;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  speech = new p5.Speech();\n  speech.onLoad = voicesReady;  \n}\n\nfunction voicesReady() {\n  console.log(\"Voices loaded\");\n  let voices = speech.voices;\n  console.log(voices)\n}\n\nfunction mousePressed() {\n  console.log(\"Mouse pressed.\");\n  speech.setVoice(\"Alice\")\n  speech.speak(\"Hello world!\");\n}\n\nfunction draw() {\n  background(220);\n}",
        "children": [],
        "fileType": "file",
        "_id": "5f8e752b4d7a6f32ff95f2b9",
        "isSelectedFile": true,
        "createdAt": "2020-10-20T05:41:29.305Z",
        "updatedAt": "2020-10-20T05:41:29.305Z",
        "id": "5f8e752b4d7a6f32ff95f2b9"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/addons/p5.sound.min.js\"></script>\n    <script src=\"libraries/p5.speech.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "5f8e752b4d7a6f32ff95f2b6",
        "isSelectedFile": false,
        "createdAt": "2020-10-20T05:41:29.305Z",
        "updatedAt": "2020-10-20T05:41:29.305Z",
        "id": "5f8e752b4d7a6f32ff95f2b6"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5f8e752b4d7a6f32ff95f2ba",
        "isSelectedFile": false,
        "createdAt": "2020-10-20T05:41:29.305Z",
        "updatedAt": "2020-10-20T05:41:29.305Z",
        "id": "5f8e752b4d7a6f32ff95f2ba"
      },
      {
        "name": "libraries",
        "content": "",
        "children": [
          "5f8e752b4d7a6f32ff95f2b8"
        ],
        "fileType": "folder",
        "_id": "5f8e752b4d7a6f32ff95f2b7",
        "isSelectedFile": false,
        "createdAt": "2020-10-20T05:41:29.305Z",
        "updatedAt": "2020-10-20T05:41:29.305Z",
        "id": "5f8e752b4d7a6f32ff95f2b7"
      },
      {
        "name": "p5.speech.js",
        "content": "/*! p5.speech.js v0.0.1 2015-06-12 */\n/* updated v0.0.2 2017-10-17 */\n/**\n * @module p5.speech\n * @submodule p5.speech\n * @for p5.speech\n * @main\n */\n/**\n *  p5.speech\n *  R. Luke DuBois (dubois@nyu.edu)\n *  ABILITY Lab / Brooklyn Experimental Media Center\n *  New York University\n *  The MIT License (MIT).\n *  \n *  https://github.com/IDMNYU/p5.js-speech\n *\n *  Web Speech API: https://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html\n *  Web Speech Recognition API: https://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html\n */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd)\n    define('p5.speech', ['p5'], function (p5) { (factory(p5));});\n  else if (typeof exports === 'object')\n    factory(require('../p5'));\n  else\n    factory(root['p5']);\n}(this, function (p5) {\n// =============================================================================\n//                         p5.Speech\n// =============================================================================\n\n\n  /**\n   * Base class for a Speech Synthesizer\n   *\n   * @class p5.Speech\n   * @constructor\n   */\n  p5.Speech = function(_dv, _callback) {\n\n    //\n    // speech synthesizers consist of a single synthesis engine\n    // per window instance, and a variable number of 'utterance'\n    // objects, which can be cached and re-used for, e.g.\n    // auditory UI.\n    //\n    // this implementation assumes a monolithic (one synth, \n    // one phrase at a time) system.\n    //\n\n    // make a speech synthizer (this will load voices):\n    this.synth = window.speechSynthesis;\n\n    // make an utterance to use with this synthesizer:\n    this.utterance = new SpeechSynthesisUtterance();\n\n    this.isLoaded = 0; // do we have voices yet?\n\n    // do we queue new utterances upon firing speak() \n    // or interrupt what's speaking:\n    this.interrupt = false; \n\n    // callback properties to be filled in within the p5 sketch\n    // if the author needs custom callbacks:\n    this.onLoad; // fires when voices are loaded and synth is ready\n    this.onStart; // fires when an utterance begins...\n    this.onPause; // ...is paused...\n    this.onResume; // ...resumes...\n    this.onEnd; // ...and ends.\n\n    this.voices = []; // array of available voices (dependent on browser/OS)\n\n    // first parameter of constructor is an initial voice selector\n    this.initvoice;\n    if(_dv !== undefined) this.initvoice=_dv;\n    if(_callback !== undefined) this.onLoad =_callback;\n\n    var that = this; // some bullshit\n\n    // onvoiceschanged() fires automatically when the synthesizer\n    // is configured and has its voices loaded.  you don't need\n    // to wait for this if you're okay with the default voice.\n    // \n    // we use this function to load the voice array and bind our\n    // custom callback functions.\n    window.speechSynthesis.onvoiceschanged = function() {\n      if(that.isLoaded==0) { // run only once\n        that.voices = window.speechSynthesis.getVoices();\n        that.isLoaded = 1; // we're ready\n        console.log(\"p5.Speech: voices loaded!\");\n\n        if(that.initvoice!=undefined) {\n          that.setVoice(that.initvoice); // set a custom initial voice\n          console.log(\"p5.Speech: initial voice: \" + that.initvoice);\n        }\n\n        // fire custom onLoad() callback, if it exists:\n        if(that.onLoad!=undefined) that.onLoad();\n\n        //\n        // bind other custom callbacks:\n        //\n\n        that.utterance.onstart = function(e) {\n          //console.log(\"STARTED\");\n          if(that.onStart!=undefined) that.onStart(e);     \n        };\n        that.utterance.onpause = function(e) {\n          //console.log(\"PAUSED\");\n          if(that.onPause!=undefined) that.onPause(e);\n        };\n        that.utterance.onresume = function(e) {\n          //console.log(\"RESUMED\");\n          if(that.onResume!=undefined) that.onResume(e);\n        };\n        that.utterance.onend = function(e) {\n          //console.log(\"ENDED\");\n          if(that.onEnd!=undefined) that.onEnd(e); \n        };\n      }\n    };\n\n  };     // end p5.Speech constructor\n\n\n  // listVoices() - dump voice names to javascript console:\n  p5.Speech.prototype.listVoices = function() {\n    if(this.isLoaded)\n    {\n      for(var i = 0;i<this.voices.length;i++)\n      {\n        console.log(this.voices[i].name);\n      }\n    }\n    else\n    {\n    \tconsole.log(\"p5.Speech: voices not loaded yet!\")\n    }\n  };\n\n  // setVoice() - assign voice to speech synthesizer, by name\n  // (using voices found in the voices[] array), or by index.\n  p5.Speech.prototype.setVoice = function(_v) {\n    // type check so you can set by label or by index:\n    if(typeof(_v)=='string') this.utterance.voice = this.voices.filter(function(v) { return v.name == _v; })[0];\n    else if(typeof(_v)=='number') this.utterance.voice = this.voices[Math.min(Math.max(_v,0),this.voices.length-1)];\n  };\n\n  // volume of voice. API range 0.0-1.0.\n  p5.Speech.prototype.setVolume = function(_v) {\n    this.utterance.volume = Math.min(Math.max(_v, 0.0), 1.0);\n  };\n\n  // rate of voice.  not all voices support this feature.\n  // API range 0.1-2.0.  voice will crash out of bounds.\n  p5.Speech.prototype.setRate = function(_v) {\n    this.utterance.rate = Math.min(Math.max(_v, 0.1), 2.0);\n  };\n\n  // pitch of voice.  not all voices support this feature.\n  // API range >0.0-2.0.  voice will crash out of bounds.\n  p5.Speech.prototype.setPitch = function(_v) {\n    this.utterance.pitch = Math.min(Math.max(_v, 0.01), 2.0);\n  };\n\n  // sets the language of the voice.\n  p5.Speech.prototype.setLang = function(_lang) {\n    this.utterance.lang = _lang;\n}\n\n  // speak a phrase through the current synthesizer:\n  p5.Speech.prototype.speak = function(_phrase) {\n    if(this.interrupt) this.synth.cancel();\n    this.utterance.text = _phrase;\n\n    this.synth.speak(this.utterance);\n  };\n\n  // not working...\n  p5.Speech.prototype.pause = function() {\n    this.synth.pause();\n  };\n\n  // not working...\n  p5.Speech.prototype.resume = function() {\n    this.synth.resume();\n  };\n\n  // stop current utterance:\n  p5.Speech.prototype.stop = function() {\n    // not working...\n    //this.synth.stop();\n    this.synth.cancel();\n  };\n\n  // kill synthesizer completely, clearing any queued utterances:\n  p5.Speech.prototype.cancel = function() {\n    this.synth.cancel(); // KILL SYNTH\n  };\n\n  // Setting callbacks with functions instead\n  p5.Speech.prototype.started = function(_cb) {\n   this.onStart = _cb;\n  }\n\n  p5.Speech.prototype.ended = function(_cb) {\n    this.onEnd = _cb;\n  }\n\n  p5.Speech.prototype.paused = function(_cb) {\n    this.onPause = _cb;\n  }\n\n  p5.Speech.prototype.resumed = function(_cb) {\n    this.onResume = _cb;\n  }\n\n// =============================================================================\n//                         p5.SpeechRec\n// =============================================================================\n\n\n  /**\n   * Base class for a Speech Recognizer\n   *\n   * @class p5.SpeechRec\n   * @constructor\n   */\n  p5.SpeechRec = function(_lang, _callback) {\n\n    //\n    // speech recognition consists of a recognizer object per \n    // window instance that returns a JSON object containing\n    // recognition.  this JSON object grows when the synthesizer\n    // is in 'continuous' mode, with new recognized phrases\n    // appended into an internal array.\n    //\n    // this implementation returns the full JSON, but also a set\n    // of simple, query-ready properties containing the most\n    // recently recognized speech.\n    //\n\n    // make a recognizer object.\n    if('webkitSpeechRecognition' in window) {\n      this.rec = new webkitSpeechRecognition();\n    }\n    else {\n      this.rec = new Object();\n      console.log(\"p5.SpeechRec: webkitSpeechRecognition not supported in this browser.\");\n    }\n\n    // first parameter is language model (defaults to empty=U.S. English)\n    // no list of valid models in API, but it must use BCP-47.\n    // here's some hints:\n    // http://stackoverflow.com/questions/14257598/what-are-language-codes-for-voice-recognition-languages-in-chromes-implementati\n    if(_lang !== undefined) this.rec.lang=_lang;\n\n    // callback properties to be filled in within the p5 sketch\n    // if the author needs custom callbacks:\n    this.onResult; // fires when something has been recognized\n    this.onStart; // fires when the recognition system is started...\n    this.onError; // ...has a problem (e.g. the mic is shut off)...\n    this.onEnd; // ...and ends (in non-continuous mode).\n    if(_callback !== undefined) this.onResult=_callback;\n\n    // recognizer properties:\n\n    // continous mode means the object keeps recognizing speech,\n    // appending new tokens to the internal JSON.\n    this.continuous = false; \n    // interimResults means the object will report (i.e. fire its\n    // onresult() callback) more frequently, rather than at pauses\n    // in microphone input.  this gets you quicker, but less accurate,\n    // results.\n    this.interimResults = false;\n\n    // result data:\n\n    // resultJSON:\n    // this is a full JSON returned by onresult().  it consists of a \n    // SpeechRecognitionEvent object, which contains a (wait for it)\n    // SpeechRecognitionResultList.  this is an array.  in continuous\n    // mode, it will be appended to, not cleared.  each element is a \n    // SpeechRecognition result, which contains a (groan)\n    // SpeechRecognitionAlternative, containing a 'transcript' property.\n    // the 'transcript' is the recognized phrase.  have fun.\n    this.resultJSON; \n    // resultValue:\n    // validation flag which indicates whether the recognizer succeeded.  \n    // this is *not* a metric of speech clarity, but rather whether the\n    // speech recognition system successfully connected to and received\n    // a response from the server.  you can construct an if() around this\n    // if you're feeling worried.\n    this.resultValue; \n    // resultValue:\n    // the 'transcript' of the most recently recognized speech as a simple\n    // string.  this will be blown out and replaced at every firing of the\n    // onresult() callback.\n    this.resultString; \n    // resultConfidence:\n    // the 'confidence' (0-1) of the most recently recognized speech, e.g.\n    // that it reflects what was actually spoken.  you can use this to filter\n    // out potentially bogus recognition tokens.\n    this.resultConfidence; \n\n    var that = this; // some bullshit\n\n    // onresult() fires automatically when the recognition engine\n    // detects speech, or times out trying.\n    // \n    // it fills up a JSON array internal to the webkitSpeechRecognition\n    // object.  we reference it over in our struct here, and also copy \n    // out the most recently detected phrase and confidence value.\n    this.rec.onresult = function(e) { \n      that.resultJSON = e; // full JSON of callback event\n      that.resultValue = e.returnValue; // was successful?\n      // store latest result in top-level object struct\n      that.resultString = e.results[e.results.length-1][0].transcript.trim();\n      that.resultConfidence = e.results[e.results.length-1][0].confidence;\n      if(that.onResult!=undefined) that.onResult();\n    };\n\n    // fires when the recognition system starts (i.e. when you 'allow'\n    // the mic to be used in the browser).\n    this.rec.onstart = function(e) {\n      if(that.onStart!=undefined) that.onStart(e);\n    };\n    // fires on a client-side error (server-side errors are expressed \n    // by the resultValue in the JSON coming back as 'false').\n    this.rec.onerror = function(e) {\n      if(that.onError!=undefined) that.onError(e);\n    };\n    // fires when the recognition finishes, in non-continuous mode.\n    this.rec.onend = function() {\n      if(that.onEnd!=undefined) that.onEnd();\n    };\n\n  }; // end p5.SpeechRec constructor\n\n  // start the speech recognition engine.  this will prompt a \n  // security dialog in the browser asking for permission to \n  // use the microphone.  this permission will persist throughout\n  // this one 'start' cycle.  if you need to recognize speech more\n  // than once, use continuous mode rather than firing start() \n  // multiple times in a single script.\n  p5.SpeechRec.prototype.start = function(_continuous, _interim) {\n    if('webkitSpeechRecognition' in window) {\n      if(_continuous !== undefined) this.continuous = _continuous;\n      if(_interim !== undefined) this.interimResults = _interim;\n      this.rec.continuous = this.continuous;\n      this.rec.interimResults = this.interimResults;\n      this.rec.start();\n    }\n  };\n\n}));\n\n/*\ntodo:\n* fix callbacks (pause, resume) in synthesizer.\n* support speech grammar models for scoped auditory UI.\n* support markdown, boundaries, etc for better synthesis tracking.\n* support utterance parser for long phrases.\n*/\n\n// EOF\n\n\n\n",
        "children": [],
        "fileType": "file",
        "_id": "5f8e752b4d7a6f32ff95f2b8",
        "isSelectedFile": false,
        "updatedAt": "2020-10-20T05:41:29.305Z",
        "createdAt": "2020-10-20T05:41:29.305Z",
        "id": "5f8e752b4d7a6f32ff95f2b8"
      }
    ],
    "createdAt": "2020-10-20T05:27:08.196Z",
    "updatedAt": "2020-10-20T05:41:29.305Z",
    "id": "ALIBP_oBB"
  },
  {
    "name": "Perlin Noise",
    "_id": "0CRDSdRXI",
    "updatedAt": "2021-09-10T10:37:42.221Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61365944c5e7e666db5e242c",
          "61365944c5e7e666db5e242b",
          "61365944c5e7e666db5e242d"
        ],
        "fileType": "folder",
        "_id": "61365944c5e7e666db5e242e",
        "createdAt": "2021-09-10T10:37:42.221Z",
        "updatedAt": "2021-09-10T10:37:42.221Z",
        "id": "61365944c5e7e666db5e242e"
      },
      {
        "name": "sketch.js",
        "content": "let z = 1;\nlet divisor = 200;\n\nfunction setup() {\n  createCanvas(400, 400);\n  colorMode(HSB);\n\n}\n\nfunction draw() {\n  background(220);\n\n  for (let i = 1; i < width; i += 10) {\n    for (let j = 1; j < height; j += 10) {\n      let n = noise(i/divisor, j/divisor, z/(divisor*2));\n      let hue = map(n, 0, 1, 0, 360);\n      \n      strokeWeight(10);\n      stroke(hue, 200, 200);\n      fill(hue, 200, 200);\n      \n      // point(i,j);\n      rect(i, j, 10, 10);\n    }\n  }\n  \n  z++;\n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "61365944c5e7e666db5e242b",
        "isSelectedFile": true,
        "createdAt": "2021-09-10T10:37:42.221Z",
        "updatedAt": "2021-09-10T10:37:42.221Z",
        "id": "61365944c5e7e666db5e242b"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61365944c5e7e666db5e242c",
        "createdAt": "2021-09-10T10:37:42.221Z",
        "updatedAt": "2021-09-10T10:37:42.221Z",
        "id": "61365944c5e7e666db5e242c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61365944c5e7e666db5e242d",
        "createdAt": "2021-09-10T10:37:42.221Z",
        "updatedAt": "2021-09-10T10:37:42.221Z",
        "id": "61365944c5e7e666db5e242d"
      }
    ],
    "createdAt": "2021-09-06T18:14:51.628Z",
    "id": "0CRDSdRXI"
  },
  {
    "name": "point vs circle",
    "_id": "kO-oXfRYp",
    "updatedAt": "2023-01-31T18:21:25.487Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63d959797a6de403922a7720",
          "63d959797a6de403922a771f",
          "63d959797a6de403922a7721"
        ],
        "fileType": "folder",
        "_id": "63d959797a6de403922a7722",
        "isSelectedFile": false,
        "createdAt": "2023-01-31T18:21:25.487Z",
        "updatedAt": "2023-01-31T18:21:25.487Z",
        "id": "63d959797a6de403922a7722"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  clear();\n  translate(width/2, height/2);\n  \n  noStroke();\n  fill(50, 100)\n  circle(0, 0, 200);\n  \n  stroke(50, 100);\n  strokeWeight(200);\n  point(cos(frameCount/100)*20, 0);\n}",
        "children": [],
        "fileType": "file",
        "_id": "63d959797a6de403922a771f",
        "isSelectedFile": true,
        "createdAt": "2023-01-31T18:21:25.487Z",
        "updatedAt": "2023-01-31T18:21:25.487Z",
        "id": "63d959797a6de403922a771f"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63d959797a6de403922a7720",
        "isSelectedFile": false,
        "createdAt": "2023-01-31T18:21:25.487Z",
        "updatedAt": "2023-01-31T18:21:25.487Z",
        "id": "63d959797a6de403922a7720"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63d959797a6de403922a7721",
        "isSelectedFile": false,
        "createdAt": "2023-01-31T18:21:25.487Z",
        "updatedAt": "2023-01-31T18:21:25.487Z",
        "id": "63d959797a6de403922a7721"
      }
    ],
    "createdAt": "2023-01-31T18:16:21.166Z",
    "id": "kO-oXfRYp"
  },
  {
    "name": "polar points",
    "_id": "vm-qeKT_9",
    "updatedAt": "2023-01-31T19:50:28.404Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63d95055c27f453b2a418d07",
          "63d95055c27f453b2a418d06",
          "63d95055c27f453b2a418d08"
        ],
        "fileType": "folder",
        "_id": "63d95055c27f453b2a418d09",
        "createdAt": "2023-01-31T19:50:28.404Z",
        "updatedAt": "2023-01-31T19:50:28.404Z",
        "isSelectedFile": false,
        "id": "63d95055c27f453b2a418d09"
      },
      {
        "name": "sketch.js",
        "content": "let segments = 32;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight, SVG);\n  angleMode(DEGREES);\n}\n\nfunction draw() {\n  clear();\n  \n  translate(width/2, height/2);\n  \n  let angleGap = 360 / segments;\n  let startingRadius = width / 13;\n  let radiusSpacing = width / 20;\n  let numberOfRings = 6;\n  let strokeW = width / 400;\n  \n  \n  \n  for (let i = 0; i < numberOfRings; i++) {\n    let r = startingRadius + (i*radiusSpacing);\n    strokeW += width / 200;\n    strokeWeight(strokeW);\n    \n    \n    for (let angle = 0; angle < 360; angle += angleGap) {\n      let x = r * cos(angle);\n      let y = r * sin(angle);\n\n      point(x, y);\n    }\n  }\n}\n\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}\n\nfunction keyPressed() {\n  if(key == 's') {\n    save(\"polar-points\");\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "63d95055c27f453b2a418d06",
        "isSelectedFile": true,
        "createdAt": "2023-01-31T19:50:28.404Z",
        "updatedAt": "2023-01-31T19:50:28.404Z",
        "id": "63d95055c27f453b2a418d06"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/p5.js-svg@1.3.1\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63d95055c27f453b2a418d07",
        "createdAt": "2023-01-31T19:50:28.404Z",
        "updatedAt": "2023-01-31T19:50:28.404Z",
        "isSelectedFile": false,
        "id": "63d95055c27f453b2a418d07"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63d95055c27f453b2a418d08",
        "createdAt": "2023-01-31T19:50:28.404Z",
        "updatedAt": "2023-01-31T19:50:28.404Z",
        "isSelectedFile": false,
        "id": "63d95055c27f453b2a418d08"
      }
    ],
    "createdAt": "2023-01-31T17:43:43.636Z",
    "id": "vm-qeKT_9"
  },
  {
    "name": "polar points (motion)",
    "_id": "dSuUK2TU-",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63d95c527a6de403922a7724",
          "63d95c527a6de403922a7725",
          "63d95c527a6de403922a7726"
        ],
        "fileType": "folder",
        "_id": "63d95c527a6de403922a7723",
        "createdAt": "2023-01-31T19:57:58.610Z",
        "updatedAt": "2023-01-31T19:57:58.610Z",
        "isSelectedFile": false,
        "id": "63d95c527a6de403922a7723"
      },
      {
        "name": "sketch.js",
        "content": "let segments = 32;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight, SVG);\n  angleMode(DEGREES);\n}\n\nfunction draw() {\n  clear();\n  \n  translate(width/2, height/2);\n  \n  let angleGap = 360 / segments;\n  let startingRadius = width / 13;\n  let radiusSpacing = width / 20;\n  let numberOfRings = 6;\n  let strokeW = width / 400;\n\n  \n  \n  let clockWise = true;\n  \n  for (let i = 0; i < numberOfRings; i++) {\n    let radius = startingRadius + (i*radiusSpacing);\n    strokeW += width / 200;\n    strokeWeight(strokeW);\n    \n    let rotAngle = frameCount / 10;\n    \n    push();\n    if(clockWise) {\n      rotate(rotAngle);\n    } else {\n      rotate(-rotAngle);\n    }\n    \n    \n    \n    for (let angle = 0; angle < 360; angle += angleGap) {\n\n      \n      let x = cos(angle) * radius;\n      let y = sin(angle) * radius;\n\n      point(x, y);\n    }\n    pop();\n    \n    clockWise = !clockWise;\n  }\n}\n\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}\n\nfunction keyPressed() {\n  if(key == 's') {\n    save(\"polar-points\");\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "63d95c527a6de403922a7725",
        "isSelectedFile": true,
        "createdAt": "2023-01-31T19:57:58.610Z",
        "updatedAt": "2023-01-31T19:57:58.610Z",
        "id": "63d95c527a6de403922a7725"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/p5.js-svg@1.3.1\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63d95c527a6de403922a7724",
        "createdAt": "2023-01-31T19:57:58.610Z",
        "updatedAt": "2023-01-31T19:57:58.610Z",
        "isSelectedFile": false,
        "id": "63d95c527a6de403922a7724"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63d95c527a6de403922a7726",
        "createdAt": "2023-01-31T19:57:58.610Z",
        "updatedAt": "2023-01-31T19:57:58.610Z",
        "isSelectedFile": false,
        "id": "63d95c527a6de403922a7726"
      }
    ],
    "createdAt": "2023-01-31T18:22:10.494Z",
    "updatedAt": "2023-01-31T19:57:58.610Z",
    "id": "dSuUK2TU-"
  },
  {
    "name": "polar points copy",
    "_id": "EyABR7e11",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63d973d7c27f453b2a418d0b",
          "63d973d7c27f453b2a418d0c",
          "63d973d7c27f453b2a418d0d"
        ],
        "fileType": "folder",
        "_id": "63d973d7c27f453b2a418d0a",
        "createdAt": "2023-01-31T20:09:21.456Z",
        "updatedAt": "2023-01-31T20:09:21.456Z",
        "isSelectedFile": false,
        "id": "63d973d7c27f453b2a418d0a"
      },
      {
        "name": "sketch.js",
        "content": "\n\nfunction setup() {\n  createCanvas(400, 400, SVG);\n\n}\n\nfunction draw() {\n  background(210);\n  \n  translate(width/2, height/2);\n  \n  strokeWeight(width/4);\n  point(0, 0);\n}\n\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}\n\nfunction keyPressed() {\n  if(key == 's') {\n    save(\"the-point.png\");\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "63d973d7c27f453b2a418d0c",
        "isSelectedFile": true,
        "createdAt": "2023-01-31T20:09:21.456Z",
        "updatedAt": "2023-01-31T20:09:21.456Z",
        "id": "63d973d7c27f453b2a418d0c"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/p5.js-svg@1.3.1\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63d973d7c27f453b2a418d0b",
        "createdAt": "2023-01-31T20:09:21.456Z",
        "updatedAt": "2023-01-31T20:09:21.456Z",
        "isSelectedFile": false,
        "id": "63d973d7c27f453b2a418d0b"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63d973d7c27f453b2a418d0d",
        "createdAt": "2023-01-31T20:09:21.456Z",
        "updatedAt": "2023-01-31T20:09:21.456Z",
        "isSelectedFile": false,
        "id": "63d973d7c27f453b2a418d0d"
      }
    ],
    "createdAt": "2023-01-31T20:02:31.608Z",
    "updatedAt": "2023-01-31T20:09:21.456Z",
    "id": "EyABR7e11"
  },
  {
    "name": "Project #MeToo Movement Code v9 (responsive v1)",
    "_id": "Nd6wqapOa",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61971422f50b9580d11909cd",
          "61971422f50b9580d11909df",
          "61971422f50b9580d11909e0",
          "61971422f50b9580d11909e1",
          "61971422f50b9580d11909e2"
        ],
        "fileType": "folder",
        "_id": "61971422f50b9580d11909cc",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "isSelectedFile": false,
        "id": "61971422f50b9580d11909cc"
      },
      {
        "name": "sketch.js",
        "content": "let bgImg;\nlet groupImg;\n\nlet fontTitle;\nlet font;\n\n// variables for loading images\nlet hand1Img;\nlet hand2Img;\nlet hand3Img;\nlet hand4Img;\nlet hand5Img;\nlet hand6Img;\nlet hand7Img;\nlet hand8Img;\nlet hand9Img;\nlet hand10Img;\n\nlet mainText = \"Women's Stories, Experiences & Messages from the Movement \\n (click a hand to read a message)\";\n\n// variables for the actual Hand objects\n// let hand1;\n// let hand2;\n// let hand3;\n// let hand4;\n// let hand5;\n// let hand6;\n// let hand7;\n// let hand8;\n// let hand9;\n// let hand10;\n\nlet hands;\n\n\n  let Y_AXIS = 1;\n  let X_AXIS = 2;\n\nfunction preload() {\n  bgImg = loadImage(\"assets/thirdbg.jpg\");\n\n  // load all the images\n\n  hand1Img = loadImage(\"assets/hand1-cropped.png\");\n  hand2Img = loadImage(\"assets/hand2-cropped.png\");\n  hand3Img = loadImage(\"assets/hand3-cropped.png\");\n  hand4Img = loadImage(\"assets/hand4-cropped.png\");\n  hand5Img = loadImage(\"assets/hand5-cropped.png\");\n  hand6Img = loadImage(\"assets/hand6-cropped.png\");\n  hand7Img = loadImage(\"assets/hand7-cropped.png\");\n  hand8Img = loadImage(\"assets/hand8-cropped.png\");\n  hand9Img = loadImage(\"assets/hand9-cropped.png\");\n  hand10Img = loadImage(\"assets/hand10-cropped.png\");\n  // ...\n\n  //font = loadFont('assets/Petemoss-Regular.ttf');\n  fontTitle = loadFont(\"assets/PlayfairDisplay-Italic-VariableFont_wght.ttf\");\n  font = loadFont(\"assets/PTSerif-Italic.ttf\");\n}\n\nfunction setup() {\n  // createCanvas(bgImg.width, 800);\n\n  let canvasWidth = windowWidth;\n  let canvasHeight = windowHeight;\n\n  if (bgImg.width < canvasWidth) {\n    canvasWidth = bgImg.width;\n  }\n\n  if (bgImg.height < canvasHeight) {\n    canvasHeight = bgImg.height;\n  }\n\n  createCanvas(canvasWidth, canvasHeight);\n\n  // create all the hand objects\n  hands = [];\n  //                image     x              y                   text\n  hands.push(\n    new Hand(\n      hand1Img,\n      50,\n      height - hand1Img.height + 40,\n      \"Shares our work within the larger survivor justice movement, and invites a growing community of survivors and allies to go #BeyondTheHashtag with us.\"\n    )\n  );\n  hands.push(\n    new Hand(\n      hand2Img,\n      500,\n      height - hand2Img.height + 10,\n      \"We embarked on a collective journey to explore the different ways healing can look and feel like. We discussed the power of our stories and introduced tools and practices to support you in navigating trauma to restore a sense of safety, joy, and agency.\"\n    )\n  );\n  hands.push(\n    new Hand(\n      hand3Img,\n      180,\n      height - hand3Img.height + 10,\n      \"“Being abused or experiencing sexual violence does not define your entire life. It does not mean you cannot be the person you want to be. I want you to know so many survivors are healing, thriving, and living the lives they want to live! You can too, don’t give up hope!” - NIKITA MITCHELL\"\n    )\n  );\n  hands.push(\n    new Hand(\n      hand4Img,\n      550,\n      height - hand4Img.height + 200,\n      \"I carried around a physical body that was overwhelmed by trauma. Being hugged in certain ways made me stiffen up. I couldn’t stand walking past certain parts of my own campus because the memories would instantly come back. And I became so used to feeling so heavy that I operated as if all of it was normal. - KAIA NAADIRA\"\n    )\n  );\n  hands.push(\n    new Hand(\n      hand5Img,\n      290,\n      height - hand5Img.height + 70,\n      \"I carry my fears on my body because I don’t want to leave them laying around. - WARSAN SHIRE\"\n    )\n  );\n  hands.push(\n    new Hand(\n      hand6Img,\n      160,\n      height - hand6Img.height + 210,\n      \"Each story has a monster in it who made them tough instead of brave, so they open their legs rather than their hearts where that folded child is tucked. - TONI MORRISON\"\n    )\n  );\n  hands.push(\n    new Hand(\n      hand7Img,\n      300,\n      height - hand7Img.height + 250,\n      \"Vulnerability sounds like truth and feels like courage. Truth and courage aren’t always comfortable but they’re never weakness. - DR. BRENÉ BROWN\"\n    )\n  );\n  hands.push(\n    new Hand(\n      hand8Img,\n      400,\n      height - hand8Img.height + 20,\n      \"I couldn’t understand how I had it in me to be so much nicer and gentler to him than my own self. - KAIA NAADIRA\"\n    )\n  );\n  hands.push(\n    new Hand(\n      hand9Img,\n      450,\n      height - hand9Img.height + 230,\n      \"We are holding a special place in our hearts for all of the survivors who came forward, as well as those who are still holding their truths close. - Statement on R. Kelly Verdict\"\n    )\n  );\n  hands.push(\n    new Hand(\n      hand10Img,\n      20,\n      height - hand10Img.height + 230,\n      \"“As a survivor, it is important for me to serve as a member of the board not only because it provides me an opportunity to lend my voice and my perspective to building and operationalizing the mission of the organization,” - Dr. Yaba Blay (scholar-activist, public speaker, and cultural consultant)\"\n    )\n  );\n}\n\nfunction draw() {\n  background(220);\n\n  image(bgImg, 0, 0);\n\n  for (let i = 0; i < hands.length; i++) {\n    hands[i].handleMouseOver();\n    hands[i].show();\n  }\n\n  //   hand1.handleMouseOver();\n  //   hand1.show();\n\n  //   hand2.handleMouseOver();\n  //   hand2.show();\n\n  //   hand3.handleMouseOver();\n  //   hand3.show();\n\n  //   hand4.handleMouseOver();\n  //   hand4.show();\n\n  //   hand5.handleMouseOver();\n  //   hand5.show();\n\n  //   hand6.handleMouseOver();\n  //   hand6.show();\n\n  //   hand7.handleMouseOver();\n  //   hand7.show();\n\n  //   hand8.handleMouseOver();\n  //   hand8.show();\n\n  //   hand9.handleMouseOver();\n  //   hand9.show();\n\n  //   hand10.handleMouseOver();\n  //   hand10.show();\n\n  rectMode(CENTER);\n  textFont(fontTitle);\n  textAlign(CENTER);\n  textSize(60);\n  text(\"#ME TOO\", width / 2, height / 10);\n\n  // textFont(font);\n  // textAlign(CENTER);\n  // textSize(20);\n  // text(\"Women's Stories, Experiences & Messages from the Movement\", width/2, height/5);\n  \n    \n  let c1 = color(255, 255);\n  let c2 = color(255, 0);\n  \n  let cloudHeight = 200;\n  let cloudYTop = height / 4 - cloudHeight;\n  let cloudYBottom = height / 4;\n  \n  print(cloudHeight);\n  \n  setGradient(0, cloudYTop, width, cloudHeight, c2, c1, Y_AXIS);\n  setGradient(0, cloudYBottom, width, cloudHeight, c1, c2, Y_AXIS);\n\n  \n\n  fill(0);\n  noStroke(0);\n  textFont(font);\n  rectMode(CENTER);\n  textAlign(CENTER, CENTER);\n  textSize(20);\n  textWrap(WORD);\n  text(mainText, width / 2, height / 5, width * 0.9);\n  \n  stroke(0);\n  noFill();\n  //rect(width / 2, height / 5, width * 0.9);\n  //line(0, height / 5, width, height / 5);\n}\n\nfunction mousePressed() {\n  //hand1.handleMousePressed();\n  for (let i = 0; i < hands.length; i++) {\n    hands[i].handleMousePressed();\n  }\n}\n\n\nfunction setGradient(x, y, w, h, c1, c2, axis) {\n  noFill();\n\n  if (axis == Y_AXIS) {\n    // Top to bottom gradient\n    for (var i = y; i <= y + h; i++) {\n      var inter = map(i, y, y + h, 0, 1);\n      var c = lerpColor(c1, c2, inter);\n      stroke(c);\n      line(x, i, x + w, i);\n    }\n  } else if (axis == X_AXIS) {\n    // Left to right gradient\n    for (var i = x; i <= x + w; i++) {\n      var inter = map(i, x, x + w, 0, 1);\n      var c = lerpColor(c1, c2, inter);\n      stroke(c);\n      line(i, y, i, y + h);\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61971422f50b9580d11909e1",
        "isSelectedFile": true,
        "createdAt": "2021-11-19T04:03:46.171Z",
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "id": "61971422f50b9580d11909e1"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"hand.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61971422f50b9580d11909e0",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "isSelectedFile": false,
        "id": "61971422f50b9580d11909e0"
      },
      {
        "name": "style.css",
        "content": "html,\nbody {\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61971422f50b9580d11909e2",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "isSelectedFile": false,
        "id": "61971422f50b9580d11909e2"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "61971422f50b9580d11909ce",
          "61971422f50b9580d11909cf",
          "61971422f50b9580d11909d0",
          "61971422f50b9580d11909d1",
          "61971422f50b9580d11909d2",
          "61971422f50b9580d11909d3",
          "61971422f50b9580d11909d4",
          "61971422f50b9580d11909d5",
          "61971422f50b9580d11909d6",
          "61971422f50b9580d11909d7",
          "61971422f50b9580d11909d8",
          "61971422f50b9580d11909d9",
          "61971422f50b9580d11909da",
          "61971422f50b9580d11909db",
          "61971422f50b9580d11909dc",
          "61971422f50b9580d11909dd",
          "61971422f50b9580d11909de"
        ],
        "fileType": "folder",
        "_id": "61971422f50b9580d11909cd",
        "isSelectedFile": false,
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "id": "61971422f50b9580d11909cd"
      },
      {
        "name": "group.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61971422f50b9580d11909d2",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/7c64682e-7138-4280-a6c8-60122e80a130.png",
        "isSelectedFile": false,
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "id": "61971422f50b9580d11909d2"
      },
      {
        "name": "background.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61971422f50b9580d11909d1",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/bc901bad-be2c-4c76-a5ef-76f1d8b94cae.jpg",
        "isSelectedFile": false,
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "id": "61971422f50b9580d11909d1"
      },
      {
        "name": "secondbg.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61971422f50b9580d11909dd",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/00d31887-e4f4-4f78-bad6-9ccfafd55d81.jpg",
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "isSelectedFile": false,
        "id": "61971422f50b9580d11909dd"
      },
      {
        "name": "thirdbg.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61971422f50b9580d11909de",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/5db2b3ab-6ceb-44fb-9d8e-39d6ac3b0677.jpg",
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "isSelectedFile": false,
        "id": "61971422f50b9580d11909de"
      },
      {
        "name": "hand1-cropped.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61971422f50b9580d11909d3",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/841aecaf-bd11-479b-9156-d0e69bc5e6eb.png",
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "isSelectedFile": false,
        "id": "61971422f50b9580d11909d3"
      },
      {
        "name": "hand.js",
        "content": "class Hand {\n  \n  constructor(image, x, y, text) {\n    this.image = image;\n    this.x = x;\n    this.y = y;\n    this.text = text;\n    this.handIsRaised = false;\n  }\n  \n\n  show() {\n    \n      if (this.handIsRaised) {\n              image(this.image, this.x, this.y-50);\n      } else {\n              image(this.image, this.x, this.y);\n      }\n    \n      // ellipse(this.x + this.image.width / 2 + 20, this.y + this.image.height / 2 - 75, 150, 150);\n  }\n  \n  \n  \n  handleMouseOver() {\n    let hitBoxX = this.x + this.image.width / 2 + 20;\n    let hitBoxY = this.y + this.image.height / 2 - 75;\n    let hitBoxRadius = 150/2;\n    \n    let d = dist(mouseX, mouseY, hitBoxX, hitBoxY);\n    \n    if (d < hitBoxRadius) {\n      // mouse is over hand\n      this.handIsRaised = true;\n      \n    } else {\n      // mouse is away from the hand\n      this.handIsRaised = false;\n    }\n   \n  }\n  \n  handleMousePressed(){\n    \n    if (this.handIsRaised) {\n      console.log(\"I was clicked! \" + this.text);\n      mainText = this.text;\n    }\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "61971422f50b9580d11909df",
        "isSelectedFile": false,
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "id": "61971422f50b9580d11909df"
      },
      {
        "name": "Petemoss-Regular.ttf",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61971422f50b9580d11909cf",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/fe5927b8-3992-4f61-a47d-9c8e6e4ad25a.ttf",
        "isSelectedFile": false,
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "id": "61971422f50b9580d11909cf"
      },
      {
        "name": "hand2-cropped.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61971422f50b9580d11909d5",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/2222dae3-9739-45ca-8a6c-e950e627530f.png",
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "isSelectedFile": false,
        "id": "61971422f50b9580d11909d5"
      },
      {
        "name": "hand5-cropped.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61971422f50b9580d11909d8",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/36159be8-7bdf-46d9-bff1-2f35b7d5c8bf.png",
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "isSelectedFile": false,
        "id": "61971422f50b9580d11909d8"
      },
      {
        "name": "hand4-cropped.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61971422f50b9580d11909d7",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/d37b75d3-3b5e-42c3-8cc9-53eace48f49b.png",
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "isSelectedFile": false,
        "id": "61971422f50b9580d11909d7"
      },
      {
        "name": "hand3-cropped.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61971422f50b9580d11909d6",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/131ef0e3-4f40-434c-bbce-8f3ec6f7a509.png",
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "isSelectedFile": false,
        "id": "61971422f50b9580d11909d6"
      },
      {
        "name": "hand6-cropped.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61971422f50b9580d11909d9",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/46e10d42-6502-43bc-80ba-e084ce91d9fb.png",
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "isSelectedFile": false,
        "id": "61971422f50b9580d11909d9"
      },
      {
        "name": "hand7-cropped.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61971422f50b9580d11909da",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/ee5dc4f8-2c82-4b3b-a0d2-3d3d84e80a78.png",
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "isSelectedFile": false,
        "id": "61971422f50b9580d11909da"
      },
      {
        "name": "hand8-cropped.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61971422f50b9580d11909db",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/38c0c6fc-d310-4a0c-993c-198847067e9b.png",
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "isSelectedFile": false,
        "id": "61971422f50b9580d11909db"
      },
      {
        "name": "hand9-cropped.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61971422f50b9580d11909dc",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/28f88ce0-ee10-4fe9-b17a-87d3cb8172f7.png",
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "isSelectedFile": false,
        "id": "61971422f50b9580d11909dc"
      },
      {
        "name": "hand10-cropped.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61971422f50b9580d11909d4",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/6a135cb0-9311-4782-b3fe-104b7a4a8600.png",
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "isSelectedFile": false,
        "id": "61971422f50b9580d11909d4"
      },
      {
        "name": "PlayfairDisplay-Italic-VariableFont_wght.ttf",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61971422f50b9580d11909d0",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/9e6f18f7-88c2-4fe0-8e9d-4f2e27f80719.ttf",
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "isSelectedFile": false,
        "id": "61971422f50b9580d11909d0"
      },
      {
        "name": "PTSerif-Italic.ttf",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61971422f50b9580d11909ce",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/86050a70-a168-41c6-bd01-b1ac8a8b2efd.ttf",
        "updatedAt": "2021-11-19T04:03:46.171Z",
        "createdAt": "2021-11-19T04:03:46.171Z",
        "isSelectedFile": false,
        "id": "61971422f50b9580d11909ce"
      }
    ],
    "createdAt": "2021-11-19T03:04:04.004Z",
    "updatedAt": "2021-11-19T04:03:46.171Z",
    "id": "Nd6wqapOa"
  },
  {
    "name": "project 10 circular x control",
    "_id": "2jGouy4H8",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5df7b0233175f323cbf65897",
          "5df7b0233175f323cbf65898",
          "5df7b0233175f323cbf65899",
          "5df7b0233175f323cbf6589a",
          "5df7b0233175f323cbf6589b"
        ],
        "fileType": "folder",
        "_id": "5df7b0233175f323cbf65896",
        "isSelectedFile": false,
        "createdAt": "2019-12-16T16:26:53.607Z",
        "updatedAt": "2019-12-16T16:26:53.607Z",
        "id": "5df7b0233175f323cbf65896"
      },
      {
        "name": "sketch.js",
        "content": "let particles;\nlet img;\nlet littlePoint, bigPoint;\n\nvar angle;\nvar angleStep;\nvar x;\n\n\nfunction preload() {\n  img = loadImage('assets/the-starry-night.jpg');\n}\n\nfunction setup() {\n  createCanvas(950, 761);\n  littlePoint = 4;\n  bigPoint = 40;\n  let pSize = 2000;\n  \n  angle = 0;\n  angleStep = 1;\n  x = 0;\n\n  particles = [];\n\n  for (var i = 0; i <= pSize; i++) {\n    particles[i] = new Particle();\n  }\n  background(0);\n}\n\nfunction draw() {\n\n  \n  x = width / 2 * cos(radians(angle)) + width / 2;\n\n  for (var i = 0; i < particles.length; i++) {\n    particles[i].display();\n    particles[i].move();\n  }\n  \n  angle += angleStep;\n  \n  \n  fill(255);\n  ellipse(x, height / 2, 5, 5);\n}",
        "children": [],
        "fileType": "file",
        "_id": "5df7b0233175f323cbf65897",
        "isSelectedFile": true,
        "createdAt": "2019-12-16T16:26:53.607Z",
        "updatedAt": "2019-12-16T16:26:53.607Z",
        "id": "5df7b0233175f323cbf65897"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.10.2/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.10.2/addons/p5.sound.min.js\"></script>\n    <script src=\"particles.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "5df7b0233175f323cbf65898",
        "isSelectedFile": false,
        "createdAt": "2019-12-16T16:26:53.607Z",
        "updatedAt": "2019-12-16T16:26:53.607Z",
        "id": "5df7b0233175f323cbf65898"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5df7b0233175f323cbf65899",
        "isSelectedFile": false,
        "createdAt": "2019-12-16T16:26:53.607Z",
        "updatedAt": "2019-12-16T16:26:53.607Z",
        "id": "5df7b0233175f323cbf65899"
      },
      {
        "name": "particles.js",
        "content": "class Particle {\n  \n  constructor() {\n    this.x = width / 2;\n    this.y = height / 3;\n    this.a = random(TWO_PI);\n    this.speed = random(1, 2);\n    this.vx = cos(this.a) * this.speed;\n    this.vy = sin(this.a) * this.speed;\n    \n  }\n\n  display() {\n    noStroke();\n    let pointillize = map(x, 0, width, littlePoint, bigPoint);\n    let pix = img.get(int(this.x), int(this.y));\n   fill(pix[0], pix[1], pix[2],45);\n    ellipse(this.x, this.y, pointillize, pointillize);\n  }\n\n\n  move() {\n    this.x = this.x + this.vx; //random (-5, 5);\n    this.y = this.y + this.vy; // random (-5,5)\n    if (this.y < 0) {\n      this.y = height;\n    }\n\n    if (this.y > height) {\n      this.y = 0;\n    }\n\n    if (this.x < 0) {\n      this.x = width;\n    }\n\n    if (this.x > width) {\n      this.x = 0;\n    }\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "5df7b0233175f323cbf6589a",
        "isSelectedFile": false,
        "createdAt": "2019-12-16T16:26:53.607Z",
        "updatedAt": "2019-12-16T16:26:53.607Z",
        "id": "5df7b0233175f323cbf6589a"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "5df7b0233175f323cbf6589c"
        ],
        "fileType": "folder",
        "_id": "5df7b0233175f323cbf6589b",
        "isSelectedFile": false,
        "updatedAt": "2019-12-16T16:26:53.607Z",
        "createdAt": "2019-12-16T16:26:53.607Z",
        "id": "5df7b0233175f323cbf6589b"
      },
      {
        "name": "the-starry-night.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5df7b0233175f323cbf6589c",
        "url": "https://assets.editor.p5js.org/5dd25f979fa8d5001eefd44a/76ca90f5-dce4-4012-a866-bebdb9a55c94.jpg",
        "isSelectedFile": false,
        "createdAt": "2019-12-16T16:26:53.607Z",
        "updatedAt": "2019-12-16T16:26:53.607Z",
        "id": "5df7b0233175f323cbf6589c"
      }
    ],
    "createdAt": "2019-12-16T16:26:11.412Z",
    "updatedAt": "2019-12-16T16:26:53.607Z",
    "id": "2jGouy4H8"
  },
  {
    "name": "project 2 v4 - banner",
    "_id": "mrTcNtA5W",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5fc1b7c0d2000c6a7d845297",
          "5fc1b7c0d2000c6a7d845299",
          "5fc1b7c0d2000c6a7d84529d",
          "5fc1b7c0d2000c6a7d84529e",
          "5fc1b7c0d2000c6a7d84529f",
          "5fc1b7c0d2000c6a7d8452a0"
        ],
        "fileType": "folder",
        "_id": "5fc1b7c0d2000c6a7d845296",
        "createdAt": "2020-11-28T02:37:04.758Z",
        "updatedAt": "2020-11-28T02:37:04.758Z",
        "isSelectedFile": false,
        "id": "5fc1b7c0d2000c6a7d845296"
      },
      {
        "name": "sketch.js",
        "content": "let img;\nlet victoryBanner;\n\nlet puzzle;\nlet song;\nlet canvasSize;\nlet gridSize;\nlet pieceSize;\nlet isCompleted;\n\nlet blankCol = 0;\nlet blankRow = 0;\n\n\nfunction preload() {\n  img = loadImage('assets/guy.jpg');\n  victoryBanner = loadImage('assets/banner.png')\n  song = loadSound('Victory Music/epicmusic.mp3')\n}\n\nfunction setup() {\n  canvasSize = 400;\n\n  puzzle = [];\n\n  createCanvas(canvasSize, canvasSize);\n\n  gridSize = 2;\n  pieceSize = width / gridSize;\n\n  let posAvail = [];\n\n  for (let i = 0; i < gridSize; i++) {\n\n    for (let j = 0; j < gridSize; j++) {\n\n      let pieceImg = img.get(i * pieceSize, j * pieceSize, pieceSize, pieceSize);\n\n      let piece = new Piece(i, j, pieceImg);\n      \n      let pos = {row: i, col: j}\n      posAvail.push(pos);\n\n      puzzle.push(piece);\n    }\n  }\n  \n  puzzle.splice(0,1); // remove first piece\n  posAvail.splice(0,1);\n  \n  // shuffle pieces\n  for (let i = 0; i < puzzle.length; i++) {\n    let piece = puzzle[i];\n    let pos = random(posAvail);\n    \n    let posIndex = posAvail.indexOf(pos); // find the index of the pos\n    posAvail.splice(posIndex, 1);\n    \n    piece.currentRow = pos.row;\n    piece.currentCol = pos.col;\n  }\n\n}\n\nfunction draw() {\n  background(220);\n\n  for (let k = 0; k < puzzle.length; k++) {\n\n    let piece = puzzle[k];\n\n    piece.render();\n\n    let i = piece.correctRow;\n    let j = piece.correctCol;\n\n    //     if (!(i == blankRow && j == blankCol)) {\n\n    //   }\n  }\n  \n  if (isCompleted) {\n    image(victoryBanner, 0, 0, width, height);\n  }\n\n\n}\n\n\nfunction canMovePiece(piece) {\n\n  let pieceRow = piece.currentRow;\n  let pieceCol = piece.currentCol;\n  \n\n  if ((pieceCol == blankCol || pieceRow == blankRow) &&\n    (abs(pieceCol - blankCol) <= 1 && abs(pieceRow - blankRow) <= 1)\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n\n}\n\n\n\nfunction mousePressed() {\n\n  for (let i = 0; i < puzzle.length; i++) {\n\n    let piece = puzzle[i];\n\n    if (piece.isMouseOver() && canMovePiece(piece)) {\n\n      let tmpRow = blankRow;\n      let tmpCol = blankCol;\n\n      blankRow = piece.currentRow;\n      blankCol = piece.currentCol;\n\n      piece.currentRow = tmpRow;\n      piece.currentCol = tmpCol;\n\n    }\n\n  }\n  \n  // check if it is completed\n  isCompleted = true;\n  \n  for(let i = 0; i < puzzle.length; i++) {\n    let piece = puzzle[i];\n    \n    if( ! (piece.currentRow == piece.correctRow &&\n       piece.currentCol == piece.correctCol) ) { // is it in the wrong pos\n      isCompleted = false;\n    }\n  }\n  \n  if (isCompleted) {\n    console.log(\"Victory!\");\n    \n  }\n  \n  if (isCompleted) {\n    song.play()\n  }\n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "5fc1b7c0d2000c6a7d84529f",
        "isSelectedFile": true,
        "createdAt": "2020-11-28T02:37:04.758Z",
        "updatedAt": "2020-11-28T02:37:04.758Z",
        "id": "5fc1b7c0d2000c6a7d84529f"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"piece.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "5fc1b7c0d2000c6a7d84529d",
        "createdAt": "2020-11-28T02:37:04.758Z",
        "updatedAt": "2020-11-28T02:37:04.758Z",
        "isSelectedFile": false,
        "id": "5fc1b7c0d2000c6a7d84529d"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5fc1b7c0d2000c6a7d8452a0",
        "createdAt": "2020-11-28T02:37:04.758Z",
        "updatedAt": "2020-11-28T02:37:04.758Z",
        "isSelectedFile": false,
        "id": "5fc1b7c0d2000c6a7d8452a0"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "5fc1b7c0d2000c6a7d84529a",
          "5fc1b7c0d2000c6a7d84529b",
          "5fc1b7c0d2000c6a7d84529c"
        ],
        "fileType": "folder",
        "_id": "5fc1b7c0d2000c6a7d845299",
        "isSelectedFile": false,
        "updatedAt": "2020-11-28T02:37:04.758Z",
        "createdAt": "2020-11-28T02:37:04.758Z",
        "id": "5fc1b7c0d2000c6a7d845299"
      },
      {
        "name": "guy.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5fc1b7c0d2000c6a7d84529c",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/b017e719-8c71-4de4-9473-ecef608612cb.jpg",
        "isSelectedFile": false,
        "updatedAt": "2020-11-28T02:37:04.758Z",
        "createdAt": "2020-11-28T02:37:04.758Z",
        "id": "5fc1b7c0d2000c6a7d84529c"
      },
      {
        "name": "forest.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5fc1b7c0d2000c6a7d84529b",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/a1dae073-e7c6-44a5-bc29-890483b5d38c.jpg",
        "isSelectedFile": false,
        "updatedAt": "2020-11-28T02:37:04.758Z",
        "createdAt": "2020-11-28T02:37:04.758Z",
        "id": "5fc1b7c0d2000c6a7d84529b"
      },
      {
        "name": "piece.js",
        "content": "class Piece {\n  \n  constructor(row, col, img) {\n    this.correctRow = row;\n    this.correctCol = col;\n    this.currentRow = row;\n    this.currentCol = col;\n    this.img = img;\n  }\n  \n  render() {\n    let x = this.currentRow * pieceSize;\n    let y = this.currentCol * pieceSize;\n    \n    if(this.isMouseOver()) {\n      tint(0, 153, 204);\n    } else {\n      noTint();\n    }\n    \n    image(this.img, x, y);\n  }\n  \n  \n  isMouseOver() {\n    let isMouseOver = false;\n    \n      let x = this.currentRow * pieceSize;\n      let y = this.currentCol * pieceSize;\n    \n    if (mouseX > x && mouseX < x + this.img.width &&\n        mouseY > y && mouseY < y + this.img.height) {\n      isMouseOver = true\n    }\n    \n    return isMouseOver;\n  }\n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "5fc1b7c0d2000c6a7d84529e",
        "isSelectedFile": false,
        "updatedAt": "2020-11-28T02:37:04.758Z",
        "createdAt": "2020-11-28T02:37:04.758Z",
        "id": "5fc1b7c0d2000c6a7d84529e"
      },
      {
        "name": "Victory Music",
        "content": "",
        "children": [
          "5fc1b7c0d2000c6a7d845298"
        ],
        "fileType": "folder",
        "_id": "5fc1b7c0d2000c6a7d845297",
        "isSelectedFile": false,
        "updatedAt": "2020-11-28T02:37:04.758Z",
        "createdAt": "2020-11-28T02:37:04.758Z",
        "id": "5fc1b7c0d2000c6a7d845297"
      },
      {
        "name": "epicmusic.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5fc1b7c0d2000c6a7d845298",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/c2b578af-de52-4bf2-903b-0ed61aa6d5e1.mp3",
        "isSelectedFile": false,
        "updatedAt": "2020-11-28T02:37:04.758Z",
        "createdAt": "2020-11-28T02:37:04.758Z",
        "id": "5fc1b7c0d2000c6a7d845298"
      },
      {
        "name": "banner.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5fc1b7c0d2000c6a7d84529a",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/a0136720-9356-4a19-8b73-302c61d5c7c7.png",
        "isSelectedFile": false,
        "updatedAt": "2020-11-28T02:37:04.758Z",
        "createdAt": "2020-11-28T02:37:04.758Z",
        "id": "5fc1b7c0d2000c6a7d84529a"
      }
    ],
    "createdAt": "2020-11-28T02:36:50.472Z",
    "updatedAt": "2020-11-28T02:37:04.758Z",
    "id": "mrTcNtA5W"
  },
  {
    "name": "Project 5 v2 copy",
    "_id": "OSMb9RUyA",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5faaa839f852ab88d44c979a",
          "5faaa839f852ab88d44c97a2",
          "5faaa839f852ab88d44c97a3",
          "5faaa839f852ab88d44c97a5",
          "5faaa839f852ab88d44c97a6",
          "5faaa839f852ab88d44c97a7"
        ],
        "fileType": "folder",
        "_id": "5faaa839f852ab88d44c9799",
        "createdAt": "2020-11-10T14:36:05.787Z",
        "updatedAt": "2020-11-10T14:36:05.787Z",
        "isSelectedFile": false,
        "id": "5faaa839f852ab88d44c9799"
      },
      {
        "name": "sketch.js",
        "content": "let gameStart;\nlet mainGuy;\nlet bgImg;\nlet fog;\nlet sbState;\nlet sbSelX;\nlet sbSelY;\nlet wallsGroup;\nlet wallCounter;\nlet walls;\nlet bug;\n\n\nfunction preload() {\n  bgImg = loadImage(\"assets/background.png\");\n  fog = loadImage(\"assets/Foreground_1.png\");\n  bug = loadImage(\"assets/bug.png\");\n  bugLeft = loadImage(\"assets/bug_left.png\");\n  bugRight = loadImage(\"assets/bug_right.png\");\n  bugDown = loadImage(\"assets/bug_down.png\");\n}\n\nfunction setup() {\n  gameStart = 0;\n  createCanvas(400, 400);\n  walls = [];\n  sbState = 0;\n  wallCounter = 0;\n  wallsGroup = new Group();\n  mainGuy = new MainGuy(250, 250);\n  createWalls();\n  mainGuy.sprite.addImage(\"up\", bug)\n\n  mainGuy.sprite.scale = 0.6;\n  mainGuy.sprite.rotateToDirection = true;\n}\n\n\n\nfunction draw() {\n\n  clear();\n  if (gameStart == 0) {\n    createCanvas(400, 400);\n    let s = 'PRESS ENTER TO BEGIN THE MAZE';\n    text(mouseX, 10, 10)\n    text(mouseY, 10, 30)\n    rect(172, 173, 130, 100)\n    fill(0);\n    textSize(14);\n    textFont('Impact');\n    text(s, width / 2, height / 2, 80);\n  }\n\n  if (gameStart == 1) {\n    image(bgImg, 0, 0);\n    mainGuy.sprite.collide(wallsGroup);\n    drawSprites();\n    camera.off();\n    image(fog, 0, 0);\n    mainGuy.sprite.velocity.x = (mouseX - mainGuy.sprite.position.x) / 20;\n    mainGuy.sprite.velocity.y = (mouseY - mainGuy.sprite.position.y) / 20;\n    mainGuy.sprite.velocity.x = (camera.mouseX - mainGuy.sprite.position.x) / 20;\n    mainGuy.sprite.velocity.y = (camera.mouseY - mainGuy.sprite.position.y) / 20;\n    camera.position.x = mainGuy.sprite.position.x;\n    camera.position.y = mainGuy.sprite.position.y;     \n  }\n\n  \n    let guyDirection = mainGuy.sprite.getDirection();\n  \n  console.log(guyDirection);\n  \n//     if (guyDirection) {\n//       mainGuy.sprite.changeImage(\"left\");\n//     } else if (mouseX > mainGuy.sprite.position.x + 10) {\n//       mainGuy.sprite.changeImage(\"right\");\n//     } else if (mouseY < mainGuy.sprite.position.y - 10) {\n//       mainGuy.sprite.changeImage(\"down\");\n//     } else if (mouseY > mainGuy.sprite.position.y + 10){\n//       mainGuy.sprite.changeImage(\"up\");\n//     }\n    \n  \n  \n   \n\n    if (sbState == 1) {\n      fill(255, 255, 255);\n      let w = mouseX - sbSelX;\n      let h = mouseY - sbSelY;\n      rect(sbSelX, sbSelY, w, h);\n    }\n  \n}\n\n\nfunction keyPressed() {\n  if (keyCode == ENTER)\n    gameStart = 1;\n}\n\nfunction mousePressed() {\n\n  if (sbState == 0) {\n    sbState = 1;\n    sbSelX = mouseX;\n    sbSelY = mouseY;\n\n  } else if (sbState == 1) {\n    sbState = 0;\n\n    let w = mouseX - sbSelX;\n    let h = mouseY - sbSelY;\n    let x = sbSelX + w / 2;\n    let y = sbSelY + h / 2;\n\n    let s = createSprite(x, y, w, h);\n\n    s.immovable = true;\n    s.debug = true;\n\n    wallsGroup.add(s);\n\n    console.log(\"walls[\" + wallCounter + \"] = [\" + x + \",\" + y + \",\" + w + \",\" + h + \"];\");\n\n    wallCounter++;\n\n  }\n\n}\n\n\nfunction createWalls() {\n  walls[0] = [144, 316.5, 14, 113];\n  walls[1] = [215.5, 269, 129, 16];\n  walls[2] = [272.5, 284.5, 15, 47];\n  walls[3] = [256, 300.5, 46, 19];\n  walls[4] = [240.5, 346.5, 17, 111];\n  walls[5] = [256.5, 237, 239, 20];\n  walls[6] = [367.5, 189, -17, -114];\n  walls[7] = [351.5, 141.5, 111, 19];\n  walls[8] = [321, 172.5, 48, 19];\n  walls[9] = [336.5, 193.5, 15, 35];\n  walls[10] = [303, 201.5, -80, -19];\n  walls[11] = [271.5, 146, 17, -92];\n  walls[12] = [341.5, 108, 123, 16];\n  walls[13] = [217.5, 139, 99, 18];\n  walls[14] = [176, 120.5, 18, 45];\n  walls[15] = [206, 105.5, -80, -15];\n  walls[16] = [238, 74, -16, -78];\n  walls[17] = [208.5, 34, 21, 34];\n  walls[18] = [223, 44, -46, 16];\n  walls[19] = [177.5, 59.5, 17, 49];\n  walls[20] = [174.5, 75, -79, -16];\n  walls[21] = [143.5, 122, 19, 114];\n  walls[22] = [240.5, 196, 15, -62];\n  walls[23] = [198.5, 172.5, 97, 17];\n  walls[24] = [192.5, 204.5, 49, 17];\n  walls[25] = [175, 213, 16, 36];\n  walls[26] = [128, 203.5, 48, 19];\n  walls[27] = [112.5, 220.5, 15, 175];\n  walls[28] = [122, 140, 34, 20];\n  walls[29] = [92, 236.5, 40, 19];\n  walls[30] = [62.5, 267.5, -47, -17];\n  walls[31] = [64, 332.5, 48, 17];\n  walls[32] = [78, 315.5, -18, -47];\n  walls[33] = [71, 299.5, 96, 19];\n  walls[34] = [176, 292.5, 16, 31];\n  walls[35] = [208, 316, 18, 50];\n  walls[36] = [159.5, 332, -113, -18];\n  walls[37] = [46.5, 211.5, -15, -95];\n  walls[38] = [71.5, 203, 33, -16];\n  walls[39] = [62.5, 171.5, -47, -17];\n  walls[40] = [78.5, 140, -17, -80];\n  walls[41] = [80, 109, 80, 20];\n  walls[42] = [111.5, 67.5, -17, -103];\n  walls[43] = [132, 43, -38, -14];\n  walls[44] = [80.5, 59.5, 17, 49];\n  walls[45] = [54.5, 75.5, -69, -17];\n  walls[46] = [48.5, 33, 17, -34];\n  walls[47] = [39.5, 140.5, 35, 19];\n  walls[48] = [71.5, 363.5, 97, 17];\n  walls[49] = [80, 387, 18, 30];\n  walls[50] = [48.5, 395.5, 15, 15];\n  walls[51] = [208, 395.5, 14, 13];\n  walls[52] = [136.5, 394.5, 95, 15];\n  walls[53] = [174.5, 380, 17, 50];\n  walls[54] = [204, 364.5, 74, 19];\n  walls[55] = [261.5, 394.5, 33, 15];\n  walls[56] = [270.5, 378, -15, -46];\n  walls[57] = [288, 363.5, 50, 17];\n  walls[58] = [320.5, 396.5, 47, 19];\n  walls[59] = [334, 361.5, -14, -79];\n  walls[60] = [303.5, 333, 79, 18];\n  walls[61] = [304, 296.5, 18, 73];\n  walls[62] = [327.5, 269.5, 35, 19];\n  walls[63] = [334, 287.5, -18, -41];\n  walls[64] = [271, 49.5, 18, 67];\n  walls[65] = [319, 76.5, -50, -17];\n  walls[66] = [303, 51, 18, -34];\n  walls[67] = [359.5, 43, 95, 18];\n  walls[68] = [368, 77, 18, 54];\n  walls[69] = [397, 74, 12, -14];\n  walls[70] = [403, 286, 20, 238];\n  walls[71] = [367.5, 328.5, 17, 167];\n  walls[72] = [11.5, 199.5, -23, -399];\n  walls[73] = [200, 10, 400, 20];\n  walls[74] = [239, 202.5, 18, 49];\n\n  for (let i = 0; i < walls.length; i++) {\n\n    let wall = walls[i];\n\n    let s = createSprite(wall[0], wall[1], wall[2], wall[3]);\n\n    s.visible = false;\n\n    s.immovable = true;\n    s.debug = true;\n\n    wallsGroup.add(s);\n\n  }\n }\n\n \n",
        "children": [],
        "fileType": "file",
        "_id": "5faaa839f852ab88d44c97a6",
        "isSelectedFile": true,
        "createdAt": "2020-11-10T14:36:05.787Z",
        "updatedAt": "2020-11-10T14:36:05.787Z",
        "id": "5faaa839f852ab88d44c97a6"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <script src=\"lib/p5.play.js\" type=\"text/javascript\"></script>\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"mainGuy.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "5faaa839f852ab88d44c97a2",
        "createdAt": "2020-11-10T14:36:05.787Z",
        "updatedAt": "2020-11-10T14:36:05.787Z",
        "isSelectedFile": false,
        "id": "5faaa839f852ab88d44c97a2"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5faaa839f852ab88d44c97a7",
        "createdAt": "2020-11-10T14:36:05.787Z",
        "updatedAt": "2020-11-10T14:36:05.787Z",
        "isSelectedFile": false,
        "id": "5faaa839f852ab88d44c97a7"
      },
      {
        "name": "lib",
        "content": "",
        "children": [
          "5faaa839f852ab88d44c97a4"
        ],
        "fileType": "folder",
        "_id": "5faaa839f852ab88d44c97a3",
        "isSelectedFile": false,
        "updatedAt": "2020-11-10T14:36:05.787Z",
        "createdAt": "2020-11-10T14:36:05.787Z",
        "id": "5faaa839f852ab88d44c97a3"
      },
      {
        "name": "p5.play.js",
        "content": "/*\np5.play\nby Paolo Pedercini/molleindustria, 2015\nhttp://molleindustria.org/\n*/\n\n(function(root, factory) {\nif (typeof define === 'function' && define.amd)\ndefine('p5.play', ['p5'], function(p5) { (factory(p5)); });\nelse if (typeof exports === 'object')\nfactory(require('../p5'));\nelse\nfactory(root.p5);\n}(this, function(p5) {\n/**\n * p5.play is a library for p5.js to facilitate the creation of games and gamelike\n * projects.\n *\n * It provides a flexible Sprite class to manage visual objects in 2D space\n * and features such as animation support, basic collision detection\n * and resolution, mouse and keyboard interactions, and a virtual camera.\n *\n * p5.play is not a box2D-derived physics engine, it doesn't use events, and it's\n * designed to be understood and possibly modified by intermediate programmers.\n *\n * See the examples folder for more info on how to use this library.\n *\n * @module p5.play\n * @submodule p5.play\n * @for p5.play\n * @main\n */\n\n// =============================================================================\n//                         initialization\n// =============================================================================\n\n// This is the new way to initialize custom p5 properties for any p5 instance.\n// The goal is to migrate lazy P5 properties over to this method.\n// @see https://github.com/molleindustria/p5.play/issues/46\np5.prototype.registerMethod('init', function p5PlayInit() {\n  /**\n   * The sketch camera automatically created at the beginning of a sketch.\n   * A camera facilitates scrolling and zooming for scenes extending beyond\n   * the canvas. A camera has a position, a zoom factor, and the mouse\n   * coordinates relative to the view.\n   *\n   * In p5.js terms the camera wraps the whole drawing cycle in a\n   * transformation matrix but it can be disabled anytime during the draw\n   * cycle, for example to draw interface elements in an absolute position.\n   *\n   * @property camera\n   * @type {camera}\n   */\n  this.camera = new Camera(this, 0, 0, 1);\n  this.camera.init = false;\n});\n\n// This provides a way for us to lazily define properties that\n// are global to p5 instances.\n//\n// Note that this isn't just an optimization: p5 currently provides no\n// way for add-ons to be notified when new p5 instances are created, so\n// lazily creating these properties is the *only* mechanism available\n// to us. For more information, see:\n//\n// https://github.com/processing/p5.js/issues/1263\nfunction defineLazyP5Property(name, getter) {\n  Object.defineProperty(p5.prototype, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var context = (this instanceof p5 && !this._isGlobal) ? this : window;\n\n      if (typeof(context._p5PlayProperties) === 'undefined') {\n        context._p5PlayProperties = {};\n      }\n      if (!(name in context._p5PlayProperties)) {\n        context._p5PlayProperties[name] = getter.call(context);\n      }\n      return context._p5PlayProperties[name];\n    }\n  });\n}\n\n// This returns a factory function, suitable for passing to\n// defineLazyP5Property, that returns a subclass of the given\n// constructor that is always bound to a particular p5 instance.\nfunction boundConstructorFactory(constructor) {\n  if (typeof(constructor) !== 'function')\n    throw new Error('constructor must be a function');\n\n  return function createBoundConstructor() {\n    var pInst = this;\n\n    function F() {\n      var args = Array.prototype.slice.call(arguments);\n\n      return constructor.apply(this, [pInst].concat(args));\n    }\n    F.prototype = constructor.prototype;\n\n    return F;\n  };\n}\n\n// This is a utility that makes it easy to define convenient aliases to\n// pre-bound p5 instance methods.\n//\n// For example:\n//\n//   var pInstBind = createPInstBinder(pInst);\n//\n//   var createVector = pInstBind('createVector');\n//   var loadImage = pInstBind('loadImage');\n//\n// The above will create functions createVector and loadImage, which can be\n// used similar to p5 global mode--however, they're bound to specific p5\n// instances, and can thus be used outside of global mode.\nfunction createPInstBinder(pInst) {\n  return function pInstBind(methodName) {\n    var method = pInst[methodName];\n\n    if (typeof(method) !== 'function')\n      throw new Error('\"' + methodName + '\" is not a p5 method');\n    return method.bind(pInst);\n  };\n}\n\n// These are utility p5 functions that don't depend on p5 instance state in\n// order to work properly, so we'll go ahead and make them easy to\n// access without needing to bind them to a p5 instance.\nvar abs = p5.prototype.abs;\nvar radians = p5.prototype.radians;\nvar dist = p5.prototype.dist;\nvar degrees = p5.prototype.degrees;\nvar pow = p5.prototype.pow;\nvar round = p5.prototype.round;\n\n\n// =============================================================================\n//                         p5 additions\n// =============================================================================\n\n/**\n* A Group containing all the sprites in the sketch.\n*\n* @property allSprites\n* @type {Group}\n*/\n\ndefineLazyP5Property('allSprites', function() {\n  return new p5.prototype.Group();\n});\n\np5.prototype.spriteUpdate = true;\n\n/**\n   * A Sprite is the main building block of p5.play:\n   * an element able to store images or animations with a set of\n   * properties such as position and visibility.\n   * A Sprite can have a collider that defines the active area to detect\n   * collisions or overlappings with other sprites and mouse interactions.\n   *\n   * Sprites created using createSprite (the preferred way) are added to the\n   * allSprites group and given a depth value that puts it in front of all\n   * other sprites.\n   *\n   * @method createSprite\n   * @param {Number} x Initial x coordinate\n   * @param {Number} y Initial y coordinate\n   * @param {Number} width Width of the placeholder rectangle and of the\n   *                       collider until an image or new collider are set\n   * @param {Number} height Height of the placeholder rectangle and of the\n   *                       collider until an image or new collider are set\n   * @return {Object} The new sprite instance\n   */\n\np5.prototype.createSprite = function(x, y, width, height) {\n  var s = new Sprite(this, x, y, width, height);\n  s.depth = this.allSprites.maxDepth()+1;\n  this.allSprites.add(s);\n  return s;\n};\n\n\n/**\n   * Removes a Sprite from the sketch.\n   * The removed Sprite won't be drawn or updated anymore.\n   * Equivalent to Sprite.remove()\n   *\n   * @method removeSprite\n   * @param {Object} sprite Sprite to be removed\n*/\np5.prototype.removeSprite = function(sprite) {\n  sprite.remove();\n};\n\n/**\n* Updates all the sprites in the sketch (position, animation...)\n* it's called automatically at every draw().\n* It can be paused by passing a parameter true or false;\n* Note: it does not render the sprites.\n*\n* @method updateSprites\n* @param {Boolean} updating false to pause the update, true to resume\n*/\np5.prototype.updateSprites = function(upd) {\n\n  if(upd === false)\n    this.spriteUpdate = false;\n  if(upd === true)\n    this.spriteUpdate = true;\n\n  if(this.spriteUpdate)\n  for(var i = 0; i<this.allSprites.size(); i++)\n  {\n    this.allSprites.get(i).update();\n  }\n};\n\n/**\n* Returns all the sprites in the sketch as an array\n*\n* @method getSprites\n* @return {Array} Array of Sprites\n*/\np5.prototype.getSprites = function() {\n\n  //draw everything\n  if(arguments.length===0)\n  {\n    return this.allSprites.toArray();\n  }\n  else\n  {\n    var arr = [];\n    //for every tag\n    for(var j=0; j<arguments.length; j++)\n    {\n      for(var i = 0; i<this.allSprites.size(); i++)\n      {\n        if(this.allSprites.get(i).isTagged(arguments[j]))\n          arr.push(this.allSprites.get(i));\n      }\n    }\n\n    return arr;\n  }\n\n};\n\n/**\n* Displays a Group of sprites.\n* If no parameter is specified, draws all sprites in the\n* sketch.\n* The drawing order is determined by the Sprite property \"depth\"\n*\n* @method drawSprites\n* @param {Group} [group] Group of Sprites to be displayed\n*/\np5.prototype.drawSprites = function(group) {\n  // If no group is provided, draw the allSprites group.\n  group = group || this.allSprites;\n\n  if (typeof group.draw !== 'function')\n  {\n    throw('Error: with drawSprites you can only draw all sprites or a group');\n  }\n\n  group.draw();\n};\n\n/**\n* Displays a Sprite.\n* To be typically used in the main draw function.\n*\n* @method drawSprite\n* @param {Sprite} sprite Sprite to be displayed\n*/\np5.prototype.drawSprite = function(sprite) {\n  if(sprite)\n  sprite.display();\n};\n\n/**\n* Loads an animation.\n* To be typically used in the preload() function of the sketch.\n*\n* @method loadAnimation\n* @param {Sprite} sprite Sprite to be displayed\n*/\np5.prototype.loadAnimation = function() {\n  return construct(this.Animation, arguments);\n};\n\n/**\n * Loads a Sprite Sheet.\n * To be typically used in the preload() function of the sketch.\n *\n * @method loadSpriteSheet\n */\np5.prototype.loadSpriteSheet = function() {\n  return construct(this.SpriteSheet, arguments);\n};\n\n/**\n* Displays an animation.\n*\n* @method animation\n* @param {Animation} anim Animation to be displayed\n* @param {Number} x X coordinate\n* @param {Number} y Y coordinate\n*\n*/\np5.prototype.animation = function(anim, x, y) {\n  anim.draw(x, y);\n};\n\n//variable to detect instant presses\ndefineLazyP5Property('_p5play', function() {\n  return {\n    keyStates: {},\n    mouseStates: {}\n  };\n});\n\nvar KEY_IS_UP = 0;\nvar KEY_WENT_DOWN = 1;\nvar KEY_IS_DOWN = 2;\nvar KEY_WENT_UP = 3;\n\n/**\n* Detects if a key was pressed during the last cycle.\n* It can be used to trigger events once, when a key is pressed or released.\n* Example: Super Mario jumping.\n*\n* @method keyWentDown\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key was pressed\n*/\np5.prototype.keyWentDown = function(key) {\n  return this._isKeyInState(key, KEY_WENT_DOWN);\n};\n\n\n/**\n* Detects if a key was released during the last cycle.\n* It can be used to trigger events once, when a key is pressed or released.\n* Example: Spaceship shooting.\n*\n* @method keyWentUp\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key was released\n*/\np5.prototype.keyWentUp = function(key) {\n  return this._isKeyInState(key, KEY_WENT_UP);\n};\n\n/**\n* Detects if a key is currently pressed\n* Like p5 keyIsDown but accepts strings and codes\n*\n* @method keyDown\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key is down\n*/\np5.prototype.keyDown = function(key) {\n  return this._isKeyInState(key, KEY_IS_DOWN);\n};\n\n/**\n * Detects if a key is in the given state during the last cycle.\n * Helper method encapsulating common key state logic; it may be preferable\n * to call keyDown or other methods directly.\n *\n * @private\n * @method _isKeyInState\n * @param {Number|String} key Key code or character\n * @param {Number} state Key state to check against\n * @return {Boolean} True if the key is in the given state\n */\np5.prototype._isKeyInState = function(key, state) {\n  var keyCode;\n  var keyStates = this._p5play.keyStates;\n\n  if(typeof key === 'string')\n  {\n    keyCode = this._keyCodeFromAlias(key);\n  }\n  else\n  {\n    keyCode = key;\n  }\n\n  //if undefined start checking it\n  if(keyStates[keyCode]===undefined)\n  {\n    if(this.keyIsDown(keyCode))\n      keyStates[keyCode] = KEY_IS_DOWN;\n    else\n      keyStates[keyCode] = KEY_IS_UP;\n  }\n\n  return (keyStates[keyCode] === state);\n};\n\n/**\n* Detects if a mouse button is currently down\n* Combines mouseIsPressed and mouseButton of p5\n*\n* @method mouseDown\n* @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n* @return {Boolean} True if the button is down\n*/\np5.prototype.mouseDown = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_IS_DOWN);\n};\n\n/**\n* Detects if a mouse button is currently up\n* Combines mouseIsPressed and mouseButton of p5\n*\n* @method mouseUp\n* @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n* @return {Boolean} True if the button is up\n*/\np5.prototype.mouseUp = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_IS_UP);\n};\n\n/**\n * Detects if a mouse button was released during the last cycle.\n * It can be used to trigger events once, to be checked in the draw cycle\n *\n * @method mouseWentUp\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @return {Boolean} True if the button was just released\n */\np5.prototype.mouseWentUp = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_WENT_UP);\n};\n\n\n/**\n * Detects if a mouse button was pressed during the last cycle.\n * It can be used to trigger events once, to be checked in the draw cycle\n *\n * @method mouseWentDown\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @return {Boolean} True if the button was just pressed\n */\np5.prototype.mouseWentDown = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_WENT_DOWN);\n};\n\n/**\n * Detects if a mouse button is in the given state during the last cycle.\n * Helper method encapsulating common mouse button state logic; it may be\n * preferable to call mouseWentUp, etc, directly.\n *\n * @private\n * @method _isMouseButtonInState\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @param {Number} state\n * @return {boolean} True if the button was in the given state\n */\np5.prototype._isMouseButtonInState = function(buttonCode, state) {\n  var mouseStates = this._p5play.mouseStates;\n\n  if(buttonCode === undefined)\n    buttonCode = this.LEFT;\n\n  //undefined = not tracked yet, start tracking\n  if(mouseStates[buttonCode]===undefined)\n  {\n  if(this.mouseIsPressed && this.mouseButton === buttonCode)\n    mouseStates[buttonCode] = KEY_IS_DOWN;\n  else\n    mouseStates[buttonCode] = KEY_IS_UP;\n  }\n\n  return (mouseStates[buttonCode] === state);\n};\n\n\n/**\n * An object storing all useful keys for easy access\n * Key.tab = 9\n *\n * @private\n * @property KEY\n * @type {Object}\n */\np5.prototype.KEY = {\n    'BACKSPACE': 8,\n    'TAB': 9,\n    'ENTER': 13,\n    'SHIFT': 16,\n    'CTRL': 17,\n    'ALT': 18,\n    'PAUSE': 19,\n    'CAPS_LOCK': 20,\n    'ESC': 27,\n    'SPACE': 32,\n    ' ': 32,\n    'PAGE_UP': 33,\n    'PAGE_DOWN': 34,\n    'END': 35,\n    'HOME': 36,\n    'LEFT_ARROW': 37,\n    'LEFT': 37,\n    'UP_ARROW': 38,\n    'UP': 38,\n    'RIGHT_ARROW': 39,\n    'RIGHT': 39,\n    'DOWN_ARROW': 40,\n    'DOWN': 40,\n    'INSERT': 45,\n    'DELETE': 46,\n    '0': 48,\n    '1': 49,\n    '2': 50,\n    '3': 51,\n    '4': 52,\n    '5': 53,\n    '6': 54,\n    '7': 55,\n    '8': 56,\n    '9': 57,\n    'A': 65,\n    'B': 66,\n    'C': 67,\n    'D': 68,\n    'E': 69,\n    'F': 70,\n    'G': 71,\n    'H': 72,\n    'I': 73,\n    'J': 74,\n    'K': 75,\n    'L': 76,\n    'M': 77,\n    'N': 78,\n    'O': 79,\n    'P': 80,\n    'Q': 81,\n    'R': 82,\n    'S': 83,\n    'T': 84,\n    'U': 85,\n    'V': 86,\n    'W': 87,\n    'X': 88,\n    'Y': 89,\n    'Z': 90,\n    '0NUMPAD': 96,\n    '1NUMPAD': 97,\n    '2NUMPAD': 98,\n    '3NUMPAD': 99,\n    '4NUMPAD': 100,\n    '5NUMPAD': 101,\n    '6NUMPAD': 102,\n    '7NUMPAD': 103,\n    '8NUMPAD': 104,\n    '9NUMPAD': 105,\n    'MULTIPLY': 106,\n    'PLUS': 107,\n    'MINUS': 109,\n    'DOT': 110,\n    'SLASH1': 111,\n    'F1': 112,\n    'F2': 113,\n    'F3': 114,\n    'F4': 115,\n    'F5': 116,\n    'F6': 117,\n    'F7': 118,\n    'F8': 119,\n    'F9': 120,\n    'F10': 121,\n    'F11': 122,\n    'F12': 123,\n    'EQUAL': 187,\n    'COMMA': 188,\n    'SLASH': 191,\n    'BACKSLASH': 220\n};\n\n/**\n * An object storing deprecated key aliases, which we still support but\n * should be mapped to valid aliases and generate warnings.\n *\n * @private\n * @property KEY_DEPRECATIONS\n * @type {Object}\n */\np5.prototype.KEY_DEPRECATIONS = {\n  'MINUT': 'MINUS',\n  'COMA': 'COMMA'\n};\n\n/**\n * Given a string key alias (as defined in the KEY property above), look up\n * and return the numeric JavaScript key code for that key.  If a deprecated\n * alias is passed (as defined in the KEY_DEPRECATIONS property) it will be\n * mapped to a valid key code, but will also generate a warning about use\n * of the deprecated alias.\n *\n * @private\n * @method _keyCodeFromAlias\n * @param {!string} alias - a case-insensitive key alias\n * @return {number|undefined} a numeric JavaScript key code, or undefined\n *          if no key code matching the given alias is found.\n */\np5.prototype._keyCodeFromAlias = function(alias) {\n  alias = alias.toUpperCase();\n  if (this.KEY_DEPRECATIONS[alias]) {\n    this._warn('Key literal \"' + alias + '\" is deprecated and may be removed ' +\n      'in a future version of p5.play. ' +\n      'Please use \"' + this.KEY_DEPRECATIONS[alias] + '\" instead.');\n    alias = this.KEY_DEPRECATIONS[alias];\n  }\n  return this.KEY[alias];\n};\n\n//pre draw: detect keyStates\np5.prototype.readPresses = function() {\n  var keyStates = this._p5play.keyStates;\n  var mouseStates = this._p5play.mouseStates;\n\n  for (var key in keyStates) {\n    if(this.keyIsDown(key)) //if is down\n    {\n      if(keyStates[key] === KEY_IS_UP)//and was up\n        keyStates[key] = KEY_WENT_DOWN;\n      else\n        keyStates[key] = KEY_IS_DOWN; //now is simply down\n    }\n    else //if it's up\n    {\n      if(keyStates[key] === KEY_IS_DOWN)//and was up\n        keyStates[key] = KEY_WENT_UP;\n      else\n        keyStates[key] = KEY_IS_UP; //now is simply down\n    }\n  }\n\n  //mouse\n  for (var btn in mouseStates) {\n\n    if(this.mouseIsPressed && this.mouseButton === btn) //if is down\n    {\n      if(mouseStates[btn] === KEY_IS_UP)//and was up\n        mouseStates[btn] = KEY_WENT_DOWN;\n      else\n        mouseStates[btn] = KEY_IS_DOWN; //now is simply down\n    }\n    else //if it's up\n    {\n      if(mouseStates[btn] === KEY_IS_DOWN)//and was up\n        mouseStates[btn] = KEY_WENT_UP;\n      else\n        mouseStates[btn] = KEY_IS_UP; //now is simply down\n    }\n  }\n\n};\n\n/**\n* Turns the quadTree on or off.\n* A quadtree is a data structure used to optimize collision detection.\n* It can improve performance when there is a large number of Sprites to be\n* checked continuously for overlapping.\n*\n* p5.play will create and update a quadtree automatically.\n*\n* @method useQuadTree\n* @param {Boolean} use Pass true to enable, false to disable\n*/\np5.prototype.useQuadTree = function(use) {\n\n  if(this.quadTree !== undefined)\n  {\n    if(use === undefined)\n      return this.quadTree.active;\n    else if(use)\n      this.quadTree.active = true;\n    else\n      this.quadTree.active = false;\n  }\n  else\n    return false;\n};\n\n//the actual quadTree\ndefineLazyP5Property('quadTree', function() {\n  return new Quadtree({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  }, 4);\n});\n\n/*\n//framerate independent delta, doesn't really work\np5.prototype.deltaTime = 1;\n\nvar now = Date.now();\nvar then = Date.now();\nvar INTERVAL_60 = 0.0166666; //60 fps\n\nfunction updateDelta() {\nthen = now;\nnow = Date.now();\ndeltaTime = ((now - then) / 1000)/INTERVAL_60; // seconds since last frame\n}\n*/\n\n/**\n   * A Sprite is the main building block of p5.play:\n   * an element able to store images or animations with a set of\n   * properties such as position and visibility.\n   * A Sprite can have a collider that defines the active area to detect\n   * collisions or overlappings with other sprites and mouse interactions.\n   *\n   * To create a Sprite, use\n   * {{#crossLink \"p5.play/createSprite:method\"}}{{/crossLink}}.\n   *\n   * @class Sprite\n   */\n\n// For details on why these docs aren't in a YUIDoc comment block, see:\n//\n// https://github.com/molleindustria/p5.play/pull/67\n//\n// @param {Number} x Initial x coordinate\n// @param {Number} y Initial y coordinate\n// @param {Number} width Width of the placeholder rectangle and of the\n//                       collider until an image or new collider are set\n// @param {Number} height Height of the placeholder rectangle and of the\n//                        collider until an image or new collider are set\nfunction Sprite(pInst, _x, _y, _w, _h) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n  var color = pInstBind('color');\n  var random = pInstBind('random');\n  var print = pInstBind('print');\n  var push = pInstBind('push');\n  var pop = pInstBind('pop');\n  var colorMode = pInstBind('colorMode');\n  var noStroke = pInstBind('noStroke');\n  var rectMode = pInstBind('rectMode');\n  var ellipseMode = pInstBind('ellipseMode');\n  var imageMode = pInstBind('imageMode');\n  var translate = pInstBind('translate');\n  var scale = pInstBind('scale');\n  var rotate = pInstBind('rotate');\n  var stroke = pInstBind('stroke');\n  var strokeWeight = pInstBind('strokeWeight');\n  var line = pInstBind('line');\n  var noFill = pInstBind('noFill');\n  var fill = pInstBind('fill');\n  var textAlign = pInstBind('textAlign');\n  var textSize = pInstBind('textSize');\n  var text = pInstBind('text');\n  var rect = pInstBind('rect');\n  var cos = pInstBind('cos');\n  var sin = pInstBind('sin');\n  var atan2 = pInstBind('atan2');\n\n  var quadTree = pInst.quadTree;\n  var camera = pInst.camera;\n\n\n  // These are p5 constants that we'd like easy access to.\n  var RGB = p5.prototype.RGB;\n  var CENTER = p5.prototype.CENTER;\n  var LEFT = p5.prototype.LEFT;\n  var BOTTOM = p5.prototype.BOTTOM;\n\n  /**\n  * The sprite's position of the sprite as a vector (x,y).\n  * @property position\n  * @type {p5.Vector}\n  */\n  this.position = createVector(_x, _y);\n\n  /**\n  * The sprite's position at the beginning of the last update as a vector (x,y).\n  * @property previousPosition\n  * @type {p5.Vector}\n  */\n  this.previousPosition = createVector(_x, _y);\n\n  /*\n  The sprite's position at the end of the last update as a vector (x,y).\n  Note: this will differ from position whenever the position is changed\n  directly by assignment.\n  */\n  this.newPosition = createVector(_x, _y);\n\n  //Position displacement on the x coordinate since the last update\n  this.deltaX = 0;\n  this.deltaY = 0;\n\n  /**\n  * The sprite's velocity as a vector (x,y)\n  * Velocity is speed broken down to its vertical and horizontal components.\n  *\n  * @property velocity\n  * @type {p5.Vector}\n  */\n  this.velocity = createVector(0, 0);\n\n  /**\n  * Set a limit to the sprite's scalar speed regardless of the direction.\n  * The value can only be positive. If set to -1, there's no limit.\n  *\n  * @property maxSpeed\n  * @type {Number}\n  * @default -1\n  */\n  this.maxSpeed = -1;\n\n  /**\n  * Friction factor, reduces the sprite's velocity.\n  * The friction should be close to 0 (eg. 0.01)\n  * 0: no friction\n  * 1: full friction\n  *\n  * @property friction\n  * @type {Number}\n  * @default 0\n  */\n  this.friction = 0;\n\n  /**\n  * The sprite's current collider.\n  * It can either be an Axis Aligned Bounding Box (a non-rotated rectangle)\n  * or a circular collider.\n  * If the sprite is checked for collision, bounce, overlapping or mouse events the\n  * collider is automatically created from the width and height\n  * of the sprite or from the image dimension in case of animate sprites\n  *\n  * You can set a custom collider with Sprite.setCollider\n  *\n  * @property collider\n  * @type {Object}\n  */\n  this.collider = undefined;\n\n  //internal use\n  //\"default\" - no image or custom collider is specified, use the shape width / height\n  //\"custom\" - specified with setCollider\n  //\"image\" - no collider is set with setCollider and an image is added\n  this.colliderType = 'none';\n\n  /**\n  * Object containing information about the most recent collision/overlapping\n  * To be typically used in combination with Sprite.overlap or Sprite.collide\n  * functions.\n  * The properties are touching.left, touching.right, touching.top,\n  * touching.bottom and are either true or false depending on the side of the\n  * collider.\n  *\n  * @property touching\n  * @type {Object}\n  */\n  this.touching = {};\n  this.touching.left = false;\n  this.touching.right = false;\n  this.touching.top = false;\n  this.touching.bottom = false;\n\n  /**\n  * The mass determines the velocity transfer when sprites bounce\n  * against each other. See Sprite.bounce\n  * The higher the mass the least the sprite will be affected by collisions.\n  *\n  * @property mass\n  * @type {Number}\n  * @default 1\n  */\n  this.mass = 1;\n\n  /**\n  * If set to true the sprite won't bounce or be displaced by collisions\n  * Simulates an infinite mass or an anchored object.\n  *\n  * @property immovable\n  * @type {Boolean}\n  * @default false\n  */\n  this.immovable = false;\n\n  //Coefficient of restitution - velocity lost in the bouncing\n  //0 perfectly inelastic , 1 elastic, > 1 hyper elastic\n\n  /**\n  * Coefficient of restitution. The velocity lost after bouncing.\n  * 1: perfectly elastic, no energy is lost\n  * 0: perfectly inelastic, no bouncing\n  * less than 1: inelastic, this is the most common in nature\n  * greater than 1: hyper elastic, energy is increased like in a pinball bumper\n  *\n  * @property restitution\n  * @type {Number}\n  * @default 1\n  */\n  this.restitution = 1;\n\n  /**\n  * Rotation in degrees of the visual element (image or animation)\n  * Note: this is not the movement's direction, see getDirection.\n  *\n  * @property rotation\n  * @type {Number}\n  * @default 0\n  */\n  Object.defineProperty(this, 'rotation', {\n    enumerable: true,\n    get: function() {\n      return this._rotation;\n    },\n    set: function(value) {\n      this._rotation = value;\n      if (this.rotateToDirection) {\n        this.setSpeed(this.getSpeed(), value);\n      }\n    }\n  });\n\n  /**\n  * Internal rotation variable (expressed in degrees).\n  * Note: external callers access this through the rotation property above.\n  *\n  * @private\n  * @property _rotation\n  * @type {Number}\n  * @default 0\n  */\n  this._rotation = 0;\n\n  /**\n  * Rotation change in degrees per frame of thevisual element (image or animation)\n  * Note: this is not the movement's direction, see getDirection.\n  *\n  * @property rotationSpeed\n  * @type {Number}\n  * @default 0\n  */\n  this.rotationSpeed = 0;\n\n\n  /**\n  * Automatically lock the rotation property of the visual element\n  * (image or animation) to the sprite's movement direction and vice versa.\n  *\n  * @property rotateToDirection\n  * @type {Boolean}\n  * @default false\n  */\n  this.rotateToDirection = false;\n\n\n  /**\n  * Determines the rendering order within a group: a sprite with\n  * lower depth will appear below the ones with higher depth.\n  *\n  * Note: drawing a group before another with drawSprites will make\n  * its members appear below the second one, like in normal p5 canvas\n  * drawing.\n  *\n  * @property depth\n  * @type {Number}\n  * @default One more than the greatest existing sprite depth, when calling\n  *          createSprite().  When calling new Sprite() directly, depth will\n  *          initialize to 0 (not recommended).\n  */\n  this.depth = 0;\n\n  /**\n  * Determines the sprite's scale.\n  * Example: 2 will be twice the native size of the visuals,\n  * 0.5 will be half. Scaling up may make images blurry.\n  *\n  * @property scale\n  * @type {Number}\n  * @default 1\n  */\n  this.scale = 1;\n\n  var dirX = 1;\n  var dirY = 1;\n\n  /**\n  * The sprite's visibility.\n  *\n  * @property visible\n  * @type {Boolean}\n  * @default true\n  */\n  this.visible = true;\n\n  /**\n  * If set to true sprite will track its mouse state.\n  * the properties mouseIsPressed and mouseIsOver will be updated.\n  * Note: automatically set to true if the functions\n  * onMouseReleased or onMousePressed are set.\n  *\n  * @property mouseActive\n  * @type {Boolean}\n  * @default false\n  */\n  this.mouseActive = false;\n\n  /**\n  * True if mouse is on the sprite's collider.\n  * Read only.\n  *\n  * @property mouseIsOver\n  * @type {Boolean}\n  */\n  this.mouseIsOver = false;\n\n  /**\n  * True if mouse is pressed on the sprite's collider.\n  * Read only.\n  *\n  * @property mouseIsPressed\n  * @type {Boolean}\n  */\n  this.mouseIsPressed = false;\n\n  /*\n  * Width of the sprite's current image.\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  * Used internally to make calculations and draw the sprite.\n  *\n  * @private\n  * @property _internalWidth\n  * @type {Number}\n  * @default 100\n  */\n  this._internalWidth = _w;\n\n  /*\n  * Height of the sprite's current image.\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  * Used internally to make calculations and draw the sprite.\n  *\n  * @private\n  * @property _internalHeight\n  * @type {Number}\n  * @default 100\n  */\n  this._internalHeight = _h;\n\n  /*\n   * _internalWidth and _internalHeight are used for all p5.play\n   * calculations, but width and height can be extended. For example,\n   * you may want users to always get and set a scaled width:\n      Object.defineProperty(this, 'width', {\n        enumerable: true,\n        configurable: true,\n        get: function() {\n          return this._internalWidth * this.scale;\n        },\n        set: function(value) {\n          this._internalWidth = value / this.scale;\n        }\n      });\n   */\n\n  /**\n  * Width of the sprite's current image.\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  *\n  * @property width\n  * @type {Number}\n  * @default 100\n  */\n  Object.defineProperty(this, 'width', {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return this._internalWidth;\n    },\n    set: function(value) {\n      this._internalWidth = value;\n    }\n  });\n\n  if(_w === undefined)\n    this.width = 100;\n  else\n    this.width = _w;\n\n  /**\n  * Height of the sprite's current image.\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  *\n  * @property height\n  * @type {Number}\n  * @default 100\n  */\n  Object.defineProperty(this, 'height', {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return this._internalHeight;\n    },\n    set: function(value) {\n      this._internalHeight = value;\n    }\n  });\n\n  if(_h === undefined)\n    this.height = 100;\n  else\n    this.height = _h;\n\n  /**\n  * Unscaled width of the sprite\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  *\n  * @property originalWidth\n  * @type {Number}\n  * @default 100\n  */\n  this.originalWidth = this._internalWidth;\n\n  /**\n  * Unscaled height of the sprite\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  *\n  * @property originalHeight\n  * @type {Number}\n  * @default 100\n  */\n  this.originalHeight = this._internalHeight;\n\n  /**\n  * True if the sprite has been removed.\n  *\n  * @property removed\n  * @type {Boolean}\n  */\n  this.removed = false;\n\n  /**\n  * Cycles before self removal.\n  * Set it to initiate a countdown, every draw cycle the property is\n  * reduced by 1 unit. At 0 it will call a sprite.remove()\n  * Disabled if set to -1.\n  *\n  * @property life\n  * @type {Number}\n  * @default -1\n  */\n  this.life = -1;\n\n  /**\n  * If set to true, draws an outline of the collider, the depth, and center.\n  *\n  * @property debug\n  * @type {Boolean}\n  * @default false\n  */\n  this.debug = false;\n\n  /**\n  * If no image or animations are set this is color of the\n  * placeholder rectangle\n  *\n  * @property shapeColor\n  * @type {color}\n  */\n  this.shapeColor = color(random(255), random(255), random(255));\n\n  /**\n  * Groups the sprite belongs to, including allSprites\n  *\n  * @property groups\n  * @type {Array}\n  */\n  this.groups = [];\n\n  var animations = {};\n\n  //The current animation's label.\n  var currentAnimation = '';\n\n  /**\n  * Reference to the current animation.\n  *\n  * @property animation\n  * @type {Animation}\n  */\n  this.animation = undefined;\n\n  /**\n  * Internal variable to keep track of whether this sprite is drawn while\n  * the camera is active.\n  * Used in Sprite.update() to know whether to use camera mouse coordinates.\n  * @see https://github.com/molleindustria/p5.play/issues/107\n  *\n  * @private\n  * @property _drawnWithCamera\n  * @type {Boolean}\n  * @default false\n  */\n  this._drawnWithCamera = false;\n\n  /*\n   * @private\n   * Keep animation properties in sync with how the animation changes.\n   */\n  this._syncAnimationSizes = function() {\n    //has an animation but the collider is still default\n    //the animation wasn't loaded. if the animation is not a 1x1 image\n    //it means it just finished loading\n    if(this.colliderType === 'default' &&\n      animations[currentAnimation].getWidth() !== 1 && animations[currentAnimation].getHeight() !== 1)\n    {\n      this.collider = this.getBoundingBox();\n      this.colliderType = 'image';\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n      //quadTree.insert(this);\n    }\n\n    //update size and collider\n    if(animations[currentAnimation].frameChanged || this.width === undefined || this.height === undefined)\n    {\n      //this.collider = this.getBoundingBox();\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n    }\n  };\n\n  /**\n  * Updates the sprite.\n  * Called automatically at the beginning of the draw cycle.\n  *\n  * @method update\n  */\n  this.update = function() {\n\n    if(!this.removed)\n    {\n      //if there has been a change somewhere after the last update\n      //the old position is the last position registered in the update\n      if(this.newPosition !== this.position)\n        this.previousPosition = createVector(this.newPosition.x, this.newPosition.y);\n      else\n        this.previousPosition = createVector(this.position.x, this.position.y);\n\n      this.velocity.x *= 1 - this.friction;\n      this.velocity.y *= 1 - this.friction;\n\n      if(this.maxSpeed !== -1)\n        this.limitSpeed(this.maxSpeed);\n\n      if(this.rotateToDirection && this.velocity.mag() > 0)\n        this._rotation = this.getDirection();\n\n      this.rotation += this.rotationSpeed;\n\n      this.position.x += this.velocity.x;\n      this.position.y += this.velocity.y;\n\n      this.newPosition = createVector(this.position.x, this.position.y);\n\n      this.deltaX = this.position.x - this.previousPosition.x;\n      this.deltaY = this.position.y - this.previousPosition.y;\n\n      //if there is an animation\n      if(animations[currentAnimation])\n      {\n        //update it\n        animations[currentAnimation].update();\n\n        this._syncAnimationSizes();\n      }\n\n      //a collider is created either manually with setCollider or\n      //when I check this sprite for collisions or overlaps\n      if(this.collider)\n      {\n        if(this.collider instanceof AABB)\n        {\n        //scale / rotate collider\n        var t;\n        if (pInst._angleMode === pInst.RADIANS) {\n          t = radians(this.rotation);\n        } else {\n          t = this.rotation;\n        }\n\n        if(this.colliderType === 'custom')\n          {\n          this.collider.extents.x = this.collider.originalExtents.x * abs(this._getScaleX()) * abs(cos(t)) +\n          this.collider.originalExtents.y * abs(this._getScaleY()) * abs(sin(t));\n\n          this.collider.extents.y = this.collider.originalExtents.x * abs(this._getScaleX()) * abs(sin(t)) +\n          this.collider.originalExtents.y * abs(this._getScaleY()) * abs(cos(t));\n          }\n        else if(this.colliderType === 'default')\n          {\n          this.collider.extents.x = this._internalWidth * abs(this._getScaleX()) * abs(cos(t)) +\n          this._internalHeight * abs(this._getScaleY()) * abs(sin(t));\n          this.collider.extents.y = this._internalWidth * abs(this._getScaleX()) * abs(sin(t)) +\n          this._internalHeight * abs(this._getScaleY()) * abs(cos(t));\n          }\n        else if(this.colliderType === 'image')\n          {\n          this.collider.extents.x = this._internalWidth * abs(cos(t)) +\n          this._internalHeight * abs(sin(t));\n\n          this.collider.extents.y = this._internalWidth * abs(sin(t)) +\n          this._internalHeight * abs(cos(t));\n          }\n        }\n\n        if(this.collider instanceof CircleCollider)\n        {\n        //print(this.scale);\n        this.collider.radius = this.collider.originalRadius * abs(this.scale);\n        }\n\n      }//end collider != null\n\n      //mouse actions\n      if (this.mouseActive)\n      {\n        //if no collider set it\n          if(!this.collider)\n            this.setDefaultCollider();\n\n        this.mouseUpdate();\n      }\n      else\n      {\n        if (typeof(this.onMouseOver) === 'function' ||\n            typeof(this.onMouseOut) === 'function' ||\n            typeof(this.onMousePressed) === 'function' ||\n            typeof(this.onMouseReleased) === 'function')\n        {\n          //if a mouse function is set\n          //it's implied we want to have it mouse active so\n          //we do this automatically\n          this.mouseActive = true;\n\n          //if no collider set it\n          if(!this.collider)\n            this.setDefaultCollider();\n\n          this.mouseUpdate();\n        }\n      }\n\n      //self destruction countdown\n      if (this.life>0)\n        this.life--;\n      if (this.life === 0)\n        this.remove();\n    }\n  };//end update\n\n  /**\n   * Creates a default collider matching the size of the\n   * placeholder rectangle or the bounding box of the image.\n   *\n   * @method setDefaultCollider\n   */\n  this.setDefaultCollider = function() {\n\n    //if has animation get the animation bounding box\n    //working only for preloaded images\n    if(animations[currentAnimation] && (animations[currentAnimation].getWidth() !== 1 && animations[currentAnimation].getHeight() !== 1))\n    {\n      this.collider = this.getBoundingBox();\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n      //quadTree.insert(this);\n      this.colliderType = 'image';\n      //print(\"IMAGE COLLIDER ADDED\");\n    }\n    else if(animations[currentAnimation] && animations[currentAnimation].getWidth() === 1 && animations[currentAnimation].getHeight() === 1)\n    {\n    //animation is still loading\n    //print(\"wait\");\n    }\n    else //get the with and height defined at the creation\n    {\n      this.collider = new AABB(pInst, this.position, createVector(this._internalWidth, this._internalHeight));\n      //quadTree.insert(this);\n      this.colliderType = 'default';\n    }\n\n    pInst.quadTree.insert(this);\n  };\n\n  /**\n   * Updates the sprite mouse states and triggers the mouse events:\n   * onMouseOver, onMouseOut, onMousePressed, onMouseReleased\n   *\n   * @method mouseUpdate\n   */\n  this.mouseUpdate = function() {\n\n    var mouseWasOver = this.mouseIsOver;\n    var mouseWasPressed = this.mouseIsPressed;\n\n    this.mouseIsOver = false;\n    this.mouseIsPressed = false;\n\n    var mousePosition;\n\n    if(this._drawnWithCamera)\n      mousePosition = createVector(camera.mouseX, camera.mouseY);\n    else\n      mousePosition = createVector(pInst.mouseX, pInst.mouseY);\n\n      //rollover\n      if(this.collider)\n      {\n\n        if (this.collider instanceof CircleCollider)\n        {\n          if (dist(mousePosition.x, mousePosition.y, this.collider.center.x, this.collider.center.y) < this.collider.radius)\n            this.mouseIsOver = true;\n        } else if (this.collider instanceof AABB)\n        {\n          if (mousePosition.x > this.collider.left() &&\n              mousePosition.y > this.collider.top() &&\n              mousePosition.x < this.collider.right() &&\n              mousePosition.y < this.collider.bottom())\n          {\n            this.mouseIsOver = true;\n          }\n        }\n\n        //global p5 var\n        if(this.mouseIsOver && pInst.mouseIsPressed)\n          this.mouseIsPressed = true;\n\n        //event change - call functions\n        if(!mouseWasOver && this.mouseIsOver && this.onMouseOver !== undefined)\n          if(typeof(this.onMouseOver) === 'function')\n            this.onMouseOver.call(this, this);\n          else\n            print('Warning: onMouseOver should be a function');\n\n        if(mouseWasOver && !this.mouseIsOver && this.onMouseOut !== undefined)\n          if(typeof(this.onMouseOut) === 'function')\n            this.onMouseOut.call(this, this);\n          else\n            print('Warning: onMouseOut should be a function');\n\n        if(!mouseWasPressed && this.mouseIsPressed && this.onMousePressed !== undefined)\n          if(typeof(this.onMousePressed) === 'function')\n            this.onMousePressed.call(this, this);\n          else\n            print('Warning: onMousePressed should be a function');\n\n        if(mouseWasPressed && !pInst.mouseIsPressed && !this.mouseIsPressed && this.onMouseReleased !== undefined)\n          if(typeof(this.onMouseReleased) === 'function')\n            this.onMouseReleased.call(this, this);\n          else\n            print('Warning: onMouseReleased should be a function');\n\n      }\n\n  };\n\n  /**\n  * Sets a collider for the sprite.\n  *\n  * In p5.play a Collider is an invisible circle or rectangle\n  * that can have any size or position relative to the sprite and which\n  * will be used to detect collisions and overlapping with other sprites,\n  * or the mouse cursor.\n  *\n  * If the sprite is checked for collision, bounce, overlapping or mouse events\n  * a collider is automatically created from the width and height parameter\n  * passed at the creation of the sprite or the from the image dimension in case\n  * of animated sprites.\n  *\n  * Often the image bounding box is not appropriate as the active area for\n  * collision detection so you can set a circular or rectangular sprite with\n  * different dimensions and offset from the sprite's center.\n  *\n  * There are four ways to call this method:\n  *\n  * 1. setCollider(\"rectangle\")\n  * 2. setCollider(\"rectangle\", offsetX, offsetY, width, height)\n  * 3. setCollider(\"circle\")\n  * 4. setCollider(\"circle\", offsetX, offsetY, radius)\n  *\n  * @method setCollider\n  * @param {String} type Either \"rectangle\" or \"circle\"\n  * @param {Number} offsetX Collider x position from the center of the sprite\n  * @param {Number} offsetY Collider y position from the center of the sprite\n  * @param {Number} width Collider width or radius\n  * @param {Number} height Collider height\n  * @throws {TypeError} if given invalid parameters.\n  */\n  this.setCollider = function(type, offsetX, offsetY, width, height) {\n    if (!(type === 'rectangle' || type === 'circle')) {\n      throw new TypeError('setCollider expects the first argument to be either \"circle\" or \"rectangle\"');\n    } else if (type === 'circle' && arguments.length > 1 && arguments.length < 4) {\n      throw new TypeError('Usage: setCollider(\"circle\") or setCollider(\"circle\", offsetX, offsetY, radius)');\n    } else if (type === 'circle' && arguments.length > 4) {\n      pInst._warn('Extra parameters to setCollider were ignored. Usage: setCollider(\"circle\") or setCollider(\"circle\", offsetX, offsetY, radius)');\n    } else if (type === 'rectangle' && arguments.length > 1 && arguments.length < 5) {\n      throw new TypeError('Usage: setCollider(\"rectangle\") or setCollider(\"rectangle\", offsetX, offsetY, width, height)');\n    } else if (type === 'rectangle' && arguments.length > 5) {\n      pInst._warn('Extra parameters to setCollider were ignored. Usage: setCollider(\"rectangle\") or setCollider(\"rectangle\", offsetX, offsetY, width, height)');\n    }\n\n    this.colliderType = 'custom';\n\n    var v = createVector(offsetX, offsetY);\n    if (type === 'rectangle' && arguments.length === 1) {\n      this.collider = new AABB(pInst, this.position, createVector(this.width, this.height));\n    } else if (type === 'rectangle' && arguments.length >= 5) {\n      this.collider = new AABB(pInst, this.position, createVector(width, height), v);\n    } else if (type === 'circle' && arguments.length === 1) {\n      this.collider = new CircleCollider(pInst, this.position, Math.floor(Math.max(this.width, this.height) / 2));\n    } else if (type === 'circle' && arguments.length >= 4) {\n      this.collider = new CircleCollider(pInst, this.position, width, v);\n    }\n\n    quadTree.insert(this);\n  };\n\n  /**\n   * Returns a the bounding box of the current image\n   * @method getBoundingBox\n   */\n  this.getBoundingBox = function() {\n\n    var w = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n    var h = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n\n    //if the bounding box is 1x1 the image is not loaded\n    //potential issue with actual 1x1 images\n    if(w === 1 && h === 1) {\n      //not loaded yet\n      return new AABB(pInst, this.position, createVector(w, h));\n    }\n    else {\n      return new AABB(pInst, this.position, createVector(w, h));\n    }\n  };\n\n  /**\n  * Sets the sprite's horizontal mirroring.\n  * If 1 the images displayed normally\n  * If -1 the images are flipped horizontally\n  * If no argument returns the current x mirroring\n  *\n  * @method mirrorX\n  * @param {Number} dir Either 1 or -1\n  * @return {Number} Current mirroring if no parameter is specified\n  */\n  this.mirrorX = function(dir) {\n    if(dir === 1 || dir === -1)\n      dirX = dir;\n    else\n      return dirX;\n  };\n\n  /**\n  * Sets the sprite's vertical mirroring.\n  * If 1 the images displayed normally\n  * If -1 the images are flipped vertically\n  * If no argument returns the current y mirroring\n  *\n  * @method mirrorY\n  * @param {Number} dir Either 1 or -1\n  * @return {Number} Current mirroring if no parameter is specified\n  */\n  this.mirrorY = function(dir) {\n    if(dir === 1 || dir === -1)\n      dirY = dir;\n    else\n      return dirY;\n  };\n\n  /*\n   * Returns the value the sprite should be scaled in the X direction.\n   * Used to calculate rendering and collisions.\n   * @private\n   */\n  this._getScaleX = function()\n  {\n    return this.scale;\n  };\n\n  /*\n   * Returns the value the sprite should be scaled in the Y direction.\n   * Used to calculate rendering and collisions.\n   * @private\n   */\n  this._getScaleY = function()\n  {\n    return this.scale;\n  };\n\n  /**\n   * Manages the positioning, scale and rotation of the sprite\n   * Called automatically, it should not be overridden\n   * @private\n   * @final\n   * @method display\n   */\n  this.display = function()\n  {\n    if (this.visible && !this.removed)\n    {\n      push();\n      colorMode(RGB);\n\n      noStroke();\n      rectMode(CENTER);\n      ellipseMode(CENTER);\n      imageMode(CENTER);\n\n      translate(this.position.x, this.position.y);\n      scale(this._getScaleX()*dirX, this._getScaleY()*dirY);\n      if (pInst._angleMode === pInst.RADIANS) {\n        rotate(radians(this.rotation));\n      } else {\n        rotate(this.rotation);\n      }\n      this.draw();\n      //draw debug info\n      pop();\n\n      this._drawnWithCamera = camera.active;\n\n      if(this.debug)\n      {\n        push();\n        //draw the anchor point\n        stroke(0, 255, 0);\n        strokeWeight(1);\n        line(this.position.x-10, this.position.y, this.position.x+10, this.position.y);\n        line(this.position.x, this.position.y-10, this.position.x, this.position.y+10);\n        noFill();\n\n        //depth number\n        noStroke();\n        fill(0, 255, 0);\n        textAlign(LEFT, BOTTOM);\n        textSize(16);\n        text(this.depth+'', this.position.x+4, this.position.y-2);\n\n        noFill();\n        stroke(0, 255, 0);\n\n        //bounding box\n        if(this.collider !== undefined)\n        {\n          this.collider.draw();\n        }\n        pop();\n      }\n\n    }\n  };\n\n\n  /**\n  * Manages the visuals of the sprite.\n  * It can be overridden with a custom drawing function.\n  * The 0,0 point will be the center of the sprite.\n  * Example:\n  * sprite.draw = function() { ellipse(0,0,10,10) }\n  * Will display the sprite as circle.\n  *\n  * @method draw\n  */\n  this.draw = function()\n  {\n    if(currentAnimation !== '' && animations)\n    {\n      if(animations[currentAnimation])\n        animations[currentAnimation].draw(0, 0, 0);\n    }\n    else\n    {\n      noStroke();\n      fill(this.shapeColor);\n      rect(0, 0, this._internalWidth, this._internalHeight);\n    }\n  };\n\n  /**\n   * Removes the Sprite from the sketch.\n   * The removed Sprite won't be drawn or updated anymore.\n   *\n   * @method remove\n   */\n  this.remove = function() {\n    this.removed = true;\n\n    quadTree.removeObject(this);\n\n    //when removed from the \"scene\" also remove all the references in all the groups\n    while (this.groups.length > 0) {\n      this.groups[0].remove(this);\n    }\n  };\n\n  /**\n  * Sets the velocity vector.\n  *\n  * @method setVelocity\n  * @param {Number} x X component\n  * @param {Number} y Y component\n  */\n  this.setVelocity = function(x, y) {\n    this.velocity.x = x;\n    this.velocity.y = y;\n  };\n\n  /**\n  * Calculates the scalar speed.\n  *\n  * @method getSpeed\n  * @return {Number} Scalar speed\n  */\n  this.getSpeed = function() {\n    return this.velocity.mag();\n  };\n\n  /**\n  * Calculates the movement's direction in degrees.\n  *\n  * @method getDirection\n  * @return {Number} Angle in degrees\n  */\n  this.getDirection = function() {\n\n    var direction = atan2(this.velocity.y, this.velocity.x);\n\n    if(isNaN(direction))\n      direction = 0;\n\n    // Unlike Math.atan2, the atan2 method above will return degrees if\n    // the current p5 angleMode is DEGREES, and radians if the p5 angleMode is\n    // RADIANS.  This method should always return degrees (for now).\n    // See https://github.com/molleindustria/p5.play/issues/94\n    if (pInst._angleMode === pInst.RADIANS) {\n      direction = degrees(direction);\n    }\n\n    return direction;\n  };\n\n  /**\n  * Adds the sprite to an existing group\n  *\n  * @method addToGroup\n  * @param {Object} group\n  */\n  this.addToGroup = function(group) {\n    if(group instanceof Array)\n      group.add(this);\n    else\n      print('addToGroup error: '+group+' is not a group');\n  };\n\n  /**\n  * Limits the scalar speed.\n  *\n  * @method limitSpeed\n  * @param {Number} max Max speed: positive number\n  */\n  this.limitSpeed = function(max) {\n\n    //update linear speed\n    var speed = this.getSpeed();\n\n    if(abs(speed)>max)\n    {\n      //find reduction factor\n      var k = max/abs(speed);\n      this.velocity.x *= k;\n      this.velocity.y *= k;\n    }\n  };\n\n  /**\n  * Set the speed and direction of the sprite.\n  * The action overwrites the current velocity.\n  * If direction is not supplied, the current direction is maintained.\n  * If direction is not supplied and there is no current velocity, the current\n  * rotation angle used for the direction.\n  *\n  * @method setSpeed\n  * @param {Number}  speed Scalar speed\n  * @param {Number}  [angle] Direction in degrees\n  */\n  this.setSpeed = function(speed, angle) {\n    var a;\n    if (typeof angle === 'undefined') {\n      if (this.velocity.x !== 0 || this.velocity.y !== 0) {\n        a = pInst.atan2(this.velocity.y, this.velocity.x);\n      } else {\n        if (pInst._angleMode === pInst.RADIANS) {\n          a = radians(this._rotation);\n        } else {\n          a = this._rotation;\n        }\n      }\n    } else {\n      if (pInst._angleMode === pInst.RADIANS) {\n        a = radians(angle);\n      } else {\n        a = angle;\n      }\n    }\n    this.velocity.x = cos(a)*speed;\n    this.velocity.y = sin(a)*speed;\n  };\n\n  /**\n  * Pushes the sprite in a direction defined by an angle.\n  * The force is added to the current velocity.\n  *\n  * @method addSpeed\n  * @param {Number}  speed Scalar speed to add\n  * @param {Number}  angle Direction in degrees\n  */\n  this.addSpeed = function(speed, angle) {\n    var a;\n    if (pInst._angleMode === pInst.RADIANS) {\n      a = radians(angle);\n    } else {\n      a = angle;\n    }\n    this.velocity.x += cos(a) * speed;\n    this.velocity.y += sin(a) * speed;\n  };\n\n  /**\n  * Pushes the sprite toward a point.\n  * The force is added to the current velocity.\n  *\n  * @method attractionPoint\n  * @param {Number}  magnitude Scalar speed to add\n  * @param {Number}  pointX Direction x coordinate\n  * @param {Number}  pointY Direction y coordinate\n  */\n  this.attractionPoint = function(magnitude, pointX, pointY) {\n    var angle = atan2(pointY-this.position.y, pointX-this.position.x);\n    this.velocity.x += cos(angle) * magnitude;\n    this.velocity.y += sin(angle) * magnitude;\n  };\n\n\n  /**\n  * Adds an image to the sprite.\n  * An image will be considered a one-frame animation.\n  * The image should be preloaded in the preload() function using p5 loadImage.\n  * Animations require a identifying label (string) to change them.\n  * The image is stored in the sprite but not necessarily displayed\n  * until Sprite.changeAnimation(label) is called\n  *\n  * Usages:\n  * - sprite.addImage(label, image);\n  * - sprite.addImage(image);\n  *\n  * If only an image is passed no label is specified\n  *\n  * @method addImage\n  * @param {String|p5.Image} label Label or image\n  * @param {p5.Image} [img] Image\n  */\n  this.addImage = function()\n  {\n    if(typeof arguments[0] === 'string' && arguments[1] instanceof p5.Image)\n      this.addAnimation(arguments[0], arguments[1]);\n    else if(arguments[0] instanceof p5.Image)\n      this.addAnimation('normal', arguments[0]);\n    else\n      throw('addImage error: allowed usages are <image> or <label>, <image>');\n  };\n\n  /**\n  * Adds an animation to the sprite.\n  * The animation should be preloaded in the preload() function\n  * using loadAnimation.\n  * Animations require a identifying label (string) to change them.\n  * Animations are stored in the sprite but not necessarily displayed\n  * until Sprite.changeAnimation(label) is called.\n  *\n  * Usage:\n  * - sprite.addAnimation(label, animation);\n  *\n  * Alternative usages. See Animation for more information on file sequences:\n  * - sprite.addAnimation(label, firstFrame, lastFrame);\n  * - sprite.addAnimation(label, frame1, frame2, frame3...);\n  *\n  * @method addAnimation\n  * @param {String} label Animation identifier\n  * @param {Animation} animation The preloaded animation\n  */\n  this.addAnimation = function(label)\n  {\n    var anim;\n\n    if(typeof label !== 'string')\n    {\n      print('Sprite.addAnimation error: the first argument must be a label (String)');\n      return -1;\n    }\n    else if(arguments.length < 2)\n    {\n      print('addAnimation error: you must specify a label and n frame images');\n      return -1;\n    }\n    else if(arguments[1] instanceof Animation)\n    {\n\n      var sourceAnimation = arguments[1];\n\n      var newAnimation = sourceAnimation.clone();\n\n      animations[label] = newAnimation;\n\n      if(currentAnimation === '')\n      {\n        currentAnimation = label;\n        this.animation = newAnimation;\n      }\n\n      newAnimation.isSpriteAnimation = true;\n\n      this._internalWidth = newAnimation.getWidth()*abs(this._getScaleX());\n      this._internalHeight = newAnimation.getHeight()*abs(this._getScaleY());\n\n      return newAnimation;\n    }\n    else\n    {\n      var animFrames = [];\n      for(var i=1; i<arguments.length; i++)\n        animFrames.push(arguments[i]);\n\n      anim = construct(pInst.Animation, animFrames);\n      animations[label] = anim;\n\n      if(currentAnimation === '')\n      {\n        currentAnimation = label;\n        this.animation = anim;\n      }\n      anim.isSpriteAnimation = true;\n\n      this._internalWidth = anim.getWidth()*abs(this._getScaleX());\n      this._internalHeight = anim.getHeight()*abs(this._getScaleY());\n\n      return anim;\n    }\n\n  };\n\n  /**\n  * Changes the displayed image/animation.\n  * Equivalent to changeAnimation\n  *\n  * @method changeImage\n  * @param {String} label Image/Animation identifier\n  */\n  this.changeImage = function(label) {\n    this.changeAnimation(label);\n  };\n\n   /**\n  * Returns the label of the current animation\n  *\n  * @method getAnimationLabel\n  * @return {String} label Image/Animation identifier\n  */\n  this.getAnimationLabel = function() {\n    return currentAnimation;\n  };\n\n  /**\n  * Changes the displayed animation.\n  * See Animation for more control over the sequence.\n  *\n  * @method changeAnimation\n  * @param {String} label Animation identifier\n  */\n  this.changeAnimation = function(label) {\n    if(!animations[label])\n      print('changeAnimation error: no animation labeled '+label);\n    else\n    {\n      currentAnimation = label;\n      this.animation = animations[label];\n    }\n  };\n\n  /**\n  * Checks if the given point corresponds to a transparent pixel\n  * in the sprite's current image. It can be used to check a point collision\n  * against only the visible part of the sprite.\n  *\n  * @method overlapPixel\n  * @param {Number} pointX x coordinate of the point to check\n  * @param {Number} pointY y coordinate of the point to check\n  * @return {Boolean} result True if non-transparent\n  */\n  this.overlapPixel = function(pointX, pointY) {\n    var point = createVector(pointX, pointY);\n\n    var img = this.animation.getFrameImage();\n\n    //convert point to img relative position\n    point.x -= this.position.x-img.width/2;\n    point.y -= this.position.y-img.height/2;\n\n    //out of the image entirely\n    if(point.x<0 || point.x>img.width || point.y<0 || point.y>img.height)\n      return false;\n    else if(this.rotation === 0 && this.scale === 1)\n    {\n      //true if full opacity\n      var values = img.get(point.x, point.y);\n      return values[3] === 255;\n    }\n    else\n    {\n      print('Error: overlapPixel doesn\\'t work with scaled or rotated sprites yet');\n      //offscreen printing to be implemented bleurch\n      return false;\n    }\n  };\n\n  /**\n  * Checks if the given point is inside the sprite's collider.\n  *\n  * @method overlapPoint\n  * @param {Number} pointX x coordinate of the point to check\n  * @param {Number} pointY y coordinate of the point to check\n  * @return {Boolean} result True if inside\n  */\n  this.overlapPoint = function(pointX, pointY) {\n    var point = createVector(pointX, pointY);\n\n    if(!this.collider)\n      this.setDefaultCollider();\n\n    if(this.collider !== undefined)\n    {\n      if(this.collider instanceof AABB)\n        return (point.x > this.collider.left() && point.x < this.collider.right() && point.y > this.collider.top() && point.y < this.collider.bottom());\n      if(this.collider instanceof CircleCollider)\n      {\n        var sqRadius = this.collider.radius * this.collider.radius;\n        var sqDist = pow(this.collider.center.x - point.x, 2) + pow(this.collider.center.y - point.y, 2);\n        return sqDist<sqRadius;\n      }\n      else\n        return false;\n    }\n    else\n      return false;\n\n  };\n\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * If the target is a group the function will be called for each single\n  * sprite overlapping. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.overlap(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method overlap\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.overlap = function(target, callback) {\n    //if(this.collider instanceof AABB && target.collider instanceof AABB)\n    return this.AABBops('overlap', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the current sprite will be displace by\n  * the colliding one in the closest non-overlapping position.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.collide(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method collide\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.collide = function(target, callback) {\n    //if(this.collider instanceof AABB && target.collider instanceof AABB)\n    return this.AABBops('collide', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the current sprite will displace\n  * the colliding one to the closest non-overlapping position.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.displace(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method displace\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.displace = function(target, callback) {\n    return this.AABBops('displace', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the sprites will bounce affecting each\n  * other's trajectories depending on their .velocity, .mass and .restitution\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.bounce(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method bounce\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.bounce = function(target, callback) {\n    return this.AABBops('bounce', target, callback);\n  };\n\n  // Internal collision detection function. Do not use directly.\n  this.AABBops = function(type, target, callback) {\n\n    this.touching.left = false;\n    this.touching.right = false;\n    this.touching.top = false;\n    this.touching.bottom = false;\n\n    var result = false;\n\n    //if single sprite turn into array anyway\n    var others = [];\n\n    if(target instanceof Sprite)\n      others.push(target);\n    else if(target instanceof Array)\n    {\n      if(quadTree !== undefined && quadTree.active)\n        others = quadTree.retrieveFromGroup( this, target);\n\n      if(others.length === 0)\n        others = target;\n\n    }\n    else\n      throw('Error: overlap can only be checked between sprites or groups');\n\n    for(var i=0; i<others.length; i++)\n      if(this !== others[i] && !this.removed) //you can check collisions within the same group but not on itself\n      {\n        var displacement;\n        var other = others[i];\n\n        if(this.collider === undefined)\n          this.setDefaultCollider();\n\n        if(other.collider === undefined)\n          other.setDefaultCollider();\n\n        /*\n        if(this.colliderType==\"default\" && animations[currentAnimation]!=null)\n        {\n          print(\"busted\");\n          return false;\n        }*/\n        if(this.collider !== undefined && other.collider !== undefined)\n        {\n        if(type === 'overlap') {\n            var over;\n\n            //if the other is a circle I calculate the displacement from here\n            if(this.collider instanceof CircleCollider)\n                over = other.collider.overlap(this.collider);\n            else\n                over = this.collider.overlap(other.collider);\n\n            if(over)\n            {\n\n              result = true;\n\n              if(callback !== undefined && typeof callback === 'function')\n                callback.call(this, this, other);\n            }\n          }\n        else if(type === 'collide' || type === 'displace' || type === 'bounce')\n          {\n            displacement = createVector(0, 0);\n\n            //if the sum of the speed is more than the collider i may\n            //have a tunnelling problem\n            var tunnelX = abs(this.velocity.x-other.velocity.x) >= other.collider.extents.x/2 && round(this.deltaX - this.velocity.x) === 0;\n\n            var tunnelY = abs(this.velocity.y-other.velocity.y) >= other.collider.size().y/2 && round(this.deltaY - this.velocity.y) === 0;\n\n\n            if(tunnelX || tunnelY)\n            {\n              //instead of using the colliders I use the bounding box\n              //around the previous position and current position\n              //this is regardless of the collider type\n\n              //the center is the average of the coll centers\n              var c = createVector(\n                (this.position.x+this.previousPosition.x)/2,\n                (this.position.y+this.previousPosition.y)/2);\n\n              //the extents are the distance between the coll centers\n              //plus the extents of both\n              var e = createVector(\n                abs(this.position.x -this.previousPosition.x) + this.collider.extents.x,\n                abs(this.position.y -this.previousPosition.y) + this.collider.extents.y);\n\n              var bbox = new AABB(pInst, c, e, this.collider.offset);\n\n              //bbox.draw();\n\n              if(bbox.overlap(other.collider))\n              {\n                if(tunnelX) {\n\n                  //entering from the right\n                  if(this.velocity.x < 0)\n                    displacement.x = other.collider.right() - this.collider.left() + 1;\n                  else if(this.velocity.x > 0 )\n                    displacement.x = other.collider.left() - this.collider.right() -1;\n                  }\n\n                if(tunnelY) {\n                  //from top\n                  if(this.velocity.y > 0)\n                    displacement.y = other.collider.top() - this.collider.bottom() - 1;\n                  else if(this.velocity.y < 0 )\n                    displacement.y = other.collider.bottom() - this.collider.top() + 1;\n\n                  }\n\n              }//end overlap\n\n            }\n            else //non tunnel overlap\n            {\n\n              //if the other is a circle I calculate the displacement from here\n              //and reverse it\n              if(this.collider instanceof CircleCollider)\n                {\n                displacement = other.collider.collide(this.collider).mult(-1);\n                }\n              else\n                displacement = this.collider.collide(other.collider);\n\n            }\n\n            if(displacement.x !== 0 || displacement.y !== 0)\n            {\n              var newVelX1, newVelY1, newVelX2, newVelY2;\n\n              if (type === 'displace' && !other.immovable) {\n                other.position.sub(displacement);\n              } else if ((type === 'collide' || type === 'bounce') && !this.immovable) {\n                this.position.add(displacement);\n                this.previousPosition = createVector(this.position.x, this.position.y);\n                this.newPosition = createVector(this.position.x, this.position.y);\n              }\n\n              if(displacement.x > 0)\n                this.touching.left = true;\n              if(displacement.x < 0)\n                this.touching.right = true;\n              if(displacement.y < 0)\n                this.touching.bottom = true;\n              if(displacement.y > 0)\n                this.touching.top = true;\n\n              if(type === 'bounce')\n              {\n                if (this.collider instanceof CircleCollider && other.collider instanceof CircleCollider) {\n                  var dx1 = p5.Vector.sub(this.position, other.position);\n                  var dx2 = p5.Vector.sub(other.position, this.position);\n                  var magnitude = dx1.magSq();\n                  var totalMass = this.mass + other.mass;\n                  var m1 = 0, m2 = 0;\n                  if (this.immovable) {\n                    m2 = 2;\n                  } else if (other.immovable) {\n                    m1 = 2;\n                  } else {\n                    m1 = 2 * other.mass / totalMass;\n                    m2 = 2 * this.mass / totalMass;\n                  }\n                  var newVel1 = dx1.mult(m1 * p5.Vector.sub(this.velocity, other.velocity).dot(dx1) / magnitude);\n                  var newVel2 = dx2.mult(m2 * p5.Vector.sub(other.velocity, this.velocity).dot(dx2) / magnitude);\n\n                  this.velocity.sub(newVel1.mult(this.restitution));\n                  other.velocity.sub(newVel2.mult(other.restitution));\n                }\n                else {\n                if(other.immovable)\n                {\n                  newVelX1 = -this.velocity.x+other.velocity.x;\n                  newVelY1 = -this.velocity.y+other.velocity.y;\n                }\n                else\n                {\n                  newVelX1 = (this.velocity.x * (this.mass - other.mass) + (2 * other.mass * other.velocity.x)) / (this.mass + other.mass);\n                  newVelY1 = (this.velocity.y * (this.mass - other.mass) + (2 * other.mass * other.velocity.y)) / (this.mass + other.mass);\n                  newVelX2 = (other.velocity.x * (other.mass - this.mass) + (2 * this.mass * this.velocity.x)) / (this.mass + other.mass);\n                  newVelY2 = (other.velocity.y * (other.mass - this.mass) + (2 * this.mass * this.velocity.y)) / (this.mass + other.mass);\n                }\n\n                //var bothCircles = (this.collider instanceof CircleCollider &&\n                //                   other.collider  instanceof CircleCollider);\n\n                //if(this.touching.left || this.touching.right || this.collider instanceof CircleCollider)\n\n                //print(displacement);\n\n                if(abs(displacement.x)>abs(displacement.y))\n                {\n\n\n                  if(!this.immovable)\n                  {\n                    this.velocity.x = newVelX1*this.restitution;\n\n                  }\n\n                  if(!other.immovable)\n                    other.velocity.x = newVelX2*other.restitution;\n\n                }\n                //if(this.touching.top || this.touching.bottom || this.collider instanceof CircleCollider)\n                if(abs(displacement.x)<abs(displacement.y))\n                {\n\n                  if(!this.immovable)\n                    this.velocity.y = newVelY1*this.restitution;\n\n                  if(!other.immovable)\n                    other.velocity.y = newVelY2*other.restitution;\n                }\n                }\n              }\n              //else if(type == \"collide\")\n                //this.velocity = createVector(0,0);\n\n              if(callback !== undefined && typeof callback === 'function')\n                callback.call(this, this, other);\n\n              result = true;\n            }\n          }\n        }//end collider exists\n      }\n\n    return result;\n  };\n} //end Sprite class\n\ndefineLazyP5Property('Sprite', boundConstructorFactory(Sprite));\n\n/**\n   * A camera facilitates scrolling and zooming for scenes extending beyond\n   * the canvas. A camera has a position, a zoom factor, and the mouse\n   * coordinates relative to the view.\n   * The camera is automatically created on the first draw cycle.\n   *\n   * In p5.js terms the camera wraps the whole drawing cycle in a\n   * transformation matrix but it can be disable anytime during the draw\n   * cycle for example to draw interface elements in an absolute position.\n   *\n   * @class Camera\n   * @constructor\n   * @param {Number} x Initial x coordinate\n   * @param {Number} y Initial y coordinate\n   * @param {Number} zoom magnification\n   **/\nfunction Camera(pInst, x, y, zoom) {\n  /**\n  * Camera position. Defines the global offset of the sketch.\n  *\n  * @property position\n  * @type {p5.Vector}\n  */\n  this.position = pInst.createVector(x, y);\n\n  /**\n  * Camera zoom. Defines the global scale of the sketch.\n  * A scale of 1 will be the normal size. Setting it to 2 will make everything\n  * twice the size. .5 will make everything half size.\n  *\n  * @property zoom\n  * @type {Number}\n  */\n  this.zoom = zoom;\n\n  /**\n  * MouseX translated to the camera view.\n  * Offsetting and scaling the canvas will not change the sprites' position\n  * nor the mouseX and mouseY variables. Use this property to read the mouse\n  * position if the camera moved or zoomed.\n  *\n  * @property mouseX\n  * @type {Number}\n  */\n  this.mouseX = pInst.mouseX;\n\n  /**\n  * MouseY translated to the camera view.\n  * Offsetting and scaling the canvas will not change the sprites' position\n  * nor the mouseX and mouseY variables. Use this property to read the mouse\n  * position if the camera moved or zoomed.\n  *\n  * @property mouseY\n  * @type {Number}\n  */\n  this.mouseY = pInst.mouseY;\n\n  /**\n  * True if the camera is active.\n  * Read only property. Use the methods Camera.on() and Camera.off()\n  * to enable or disable the camera.\n  *\n  * @property active\n  * @type {Boolean}\n  */\n  this.active = false;\n\n  /**\n  * Activates the camera.\n  * The canvas will be drawn according to the camera position and scale until\n  * Camera.off() is called\n  *\n  * @method on\n  */\n  this.on = function() {\n    if(!this.active)\n    {\n      cameraPush.call(pInst);\n      this.active = true;\n    }\n  };\n\n  /**\n  * Deactivates the camera.\n  * The canvas will be drawn normally, ignoring the camera's position\n  * and scale until Camera.on() is called\n  *\n  * @method off\n  */\n  this.off = function() {\n    if(this.active)\n    {\n      cameraPop.call(pInst);\n      this.active = false;\n    }\n  };\n} //end camera class\n\ndefineLazyP5Property('Camera', boundConstructorFactory(Camera));\n\n//called pre draw by default\nfunction cameraPush() {\n  var pInst = this;\n  var camera = pInst.camera;\n\n  //awkward but necessary in order to have the camera at the center\n  //of the canvas by default\n  if(!camera.init && camera.position.x === 0 && camera.position.y === 0)\n    {\n    camera.position.x=pInst.width/2;\n    camera.position.y=pInst.height/2;\n    camera.init = true;\n    }\n\n  camera.mouseX = pInst.mouseX+camera.position.x-pInst.width/2;\n  camera.mouseY = pInst.mouseY+camera.position.y-pInst.height/2;\n\n  if(!camera.active)\n  {\n    camera.active = true;\n    pInst.push();\n    pInst.scale(camera.zoom);\n    pInst.translate(-camera.position.x+pInst.width/2/camera.zoom, -camera.position.y+pInst.height/2/camera.zoom);\n  }\n}\n\n//called postdraw by default\nfunction cameraPop() {\n  var pInst = this;\n\n  if(pInst.camera.active)\n  {\n    pInst.pop();\n    pInst.camera.active = false;\n  }\n}\n\n\n\n\n/**\n   * In p5.play groups are collections of sprites with similar behavior.\n   * For example a group may contain all the sprites in the background\n   * or all the sprites that \"kill\" the player.\n   *\n   * Groups are \"extended\" arrays and inherit all their properties\n   * e.g. group.length\n   *\n   * Since groups contain only references, a sprite can be in multiple\n   * groups and deleting a group doesn't affect the sprites themselves.\n   *\n   * Sprite.remove() will also remove the sprite from all the groups\n   * it belongs to.\n   *\n   * @class Group\n   * @constructor\n   */\nfunction Group() {\n\n  //basically extending the array\n  var array = [];\n\n  /**\n  * Gets the member at index i.\n  *\n  * @method get\n  * @param {Number} i The index of the object to retrieve\n  */\n  array.get = function(i) {\n    return array[i];\n  };\n\n  /**\n  * Checks if the group contains a sprite.\n  *\n  * @method contains\n  * @param {Sprite} sprite The sprite to search\n  * @return {Number} Index or -1 if not found\n  */\n  array.contains = function(sprite) {\n    return this.indexOf(sprite)>-1;\n  };\n\n  /**\n   * Same as Group.contains\n   * @method indexOf\n   */\n  array.indexOf = function(item) {\n    for (var i = 0, len = array.length; i < len; ++i) {\n      if (virtEquals(item, array[i])) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  /**\n  * Adds a sprite to the group.\n  *\n  * @method add\n  * @param {Sprite} s The sprite to be added\n  */\n  array.add = function(s) {\n    if(!(s instanceof Sprite)) {\n      throw('Error: you can only add sprites to a group');\n    }\n\n    if (-1 === this.indexOf(s)) {\n      array.push(s);\n      s.groups.push(this);\n    }\n  };\n\n  /**\n   * Same as group.length\n   * @method size\n   */\n  array.size = function() {\n    return array.length;\n  };\n\n  /**\n  * Removes all the sprites in the group\n  * from the scene.\n  *\n  * @method removeSprites\n  */\n  array.removeSprites = function() {\n    while (array.length > 0) {\n      array[0].remove();\n    }\n  };\n\n  /**\n  * Removes all references to the group.\n  * Does not remove the actual sprites.\n  *\n  * @method clear\n  */\n  array.clear = function() {\n    array.length = 0;\n  };\n\n  /**\n  * Removes a sprite from the group.\n  * Does not remove the actual sprite, only the affiliation (reference).\n  *\n  * @method remove\n  * @param {Sprite} item The sprite to be removed\n  * @return {Boolean} True if sprite was found and removed\n  */\n  array.remove = function(item) {\n    if(!(item instanceof Sprite)) {\n      throw('Error: you can only remove sprites from a group');\n    }\n\n    var i, removed = false;\n    for (i = array.length - 1; i >= 0; i--) {\n      if (array[i] === item) {\n        array.splice(i, 1);\n        removed = true;\n      }\n    }\n\n    if (removed) {\n      for (i = item.groups.length - 1; i >= 0; i--) {\n        if (item.groups[i] === this) {\n          item.groups.splice(i, 1);\n        }\n      }\n    }\n\n    return removed;\n  };\n\n  /**\n   * Returns a copy of the group as standard array.\n   * @method toArray\n   */\n  array.toArray = function() {\n    return array.slice(0);\n  };\n\n  /**\n  * Returns the highest depth in a group\n  *\n  * @method maxDepth\n  * @return {Number} The depth of the sprite drawn on the top\n  */\n  array.maxDepth = function() {\n    if (array.length === 0) {\n      return 0;\n    }\n\n    return array.reduce(function(maxDepth, sprite) {\n      return Math.max(maxDepth, sprite.depth);\n    }, -Infinity);\n  };\n\n  /**\n  * Returns the lowest depth in a group\n  *\n  * @method minDepth\n  * @return {Number} The depth of the sprite drawn on the bottom\n  */\n  array.minDepth = function() {\n    if (array.length === 0) {\n      return 99999;\n    }\n\n    return array.reduce(function(minDepth, sprite) {\n      return Math.min(minDepth, sprite.depth);\n    }, Infinity);\n  };\n\n  /**\n  * Draws all the sprites in the group.\n  *\n  * @method draw\n  */\n  array.draw = function() {\n\n    //sort by depth\n    this.sort(function(a, b) {\n      return a.depth - b.depth;\n    });\n\n    for(var i = 0; i<this.size(); i++)\n    {\n      this.get(i).display();\n    }\n  };\n\n  //internal use\n  function virtEquals(obj, other) {\n    if (obj === null || other === null) {\n      return (obj === null) && (other === null);\n    }\n    if (typeof (obj) === 'string') {\n      return obj === other;\n    }\n    if (typeof(obj) !== 'object') {\n      return obj === other;\n    }\n    if (obj.equals instanceof Function) {\n      return obj.equals(other);\n    }\n    return obj === other;\n  }\n\n  /**\n   * Collide each member of group against the target using the given collision\n   * type.  Return true if any collision occurred.\n   * Internal use\n   *\n   * @private\n   * @method _groupCollide\n   * @param {!string} type one of 'overlap', 'collide', 'displace', 'bounce'\n   * @param {Object} target Group or Sprite\n   * @param {Function} [callback] on collision.\n   * @return {boolean} True if any collision/overlap occurred\n   */\n  function _groupCollide(type, target, callback) {\n    var didCollide = false;\n    for(var i = 0; i<this.size(); i++)\n      didCollide = this.get(i).AABBops(type, target, callback) || didCollide;\n    return didCollide;\n  }\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occurs.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.overlap(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method overlap\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.overlap = _groupCollide.bind(array, 'overlap');\n\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites in the group will be displaced\n  * by the colliding one to the closest non-overlapping positions.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.collide(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method collide\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.collide = _groupCollide.bind(array, 'collide');\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites in the group will displace\n  * the colliding ones to the closest non-overlapping positions.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occurs.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.displace(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method displace\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.displace = _groupCollide.bind(array, 'displace');\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites will bounce affecting each\n  * other's trajectories depending on their .velocity, .mass and .restitution.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.bounce(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method bounce\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.bounce = _groupCollide.bind(array, 'bounce');\n\n  return array;\n}\n\np5.prototype.Group = Group;\n\n//circle collider - used internally\nfunction CircleCollider(pInst, _center, _radius, _offset) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n\n  var CENTER = p5.prototype.CENTER;\n\n  this.center = _center;\n  this.radius = _radius;\n  this.originalRadius = _radius;\n\n  if(_offset === undefined)\n    this.offset = createVector(0, 0);\n  else\n    this.offset = _offset;\n  this.extents = createVector(_radius*2, _radius*2);\n\n  this.draw = function()\n  {\n    pInst.noFill();\n    pInst.stroke(0, 255, 0);\n    pInst.rectMode(CENTER);\n    pInst.ellipse(this.center.x+this.offset.x, this.center.y+this.offset.y, this.radius*2, this.radius*2);\n  };\n\n  //should be called only for circle vs circle\n  this.overlap = function(other)\n  {\n    //square dist\n    var r = this.radius + other.radius;\n    r *= r;\n    var thisCenterX = this.center.x + this.offset.x;\n    var thisCenterY = this.center.y + this.offset.y;\n    var otherCenterX = other.center.x + other.offset.x;\n    var otherCenterY = other.center.y + other.offset.y;\n    var sqDist = pow(thisCenterX - otherCenterX, 2) + pow(thisCenterY - otherCenterY, 2);\n    return r > sqDist;\n  };\n\n  //should be called only for circle vs circle\n  this.collide = function(other)\n  {\n    if(this.overlap(other)) {\n      var thisCenterX = this.center.x + this.offset.x;\n      var thisCenterY = this.center.y + this.offset.y;\n      var otherCenterX = other.center.x + other.offset.x;\n      var otherCenterY = other.center.y + other.offset.y;\n      var a = pInst.atan2(thisCenterY-otherCenterY, thisCenterX-otherCenterX);\n      var radii = this.radius+other.radius;\n      var intersection = abs(radii - dist(thisCenterX, thisCenterY, otherCenterX, otherCenterY));\n\n      var displacement = createVector(pInst.cos(a)*intersection, pInst.sin(a)*intersection);\n\n      return displacement;\n    } else {\n      return createVector(0, 0);\n    }\n  };\n\n  this.size = function()\n  {\n    return createVector(this.radius*2, this.radius*2);\n  };\n\n  this.left = function()\n  {\n    return this.center.x+this.offset.x - this.radius;\n  };\n\n  this.right = function()\n  {\n    return this.center.x+this.offset.x + this.radius;\n  };\n\n  this.top = function()\n  {\n    return this.center.y+this.offset.y - this.radius;\n  };\n\n  this.bottom = function()\n  {\n    return this.center.y+this.offset.y + this.radius;\n  };\n\n\n\n}\ndefineLazyP5Property('CircleCollider', boundConstructorFactory(CircleCollider));\n\n//axis aligned bounding box - extents are the half sizes - used internally\nfunction AABB(pInst, _center, _extents, _offset) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n\n  var CENTER = p5.prototype.CENTER;\n  var PI = p5.prototype.PI;\n\n  this.center = _center;\n  this.extents = _extents;\n  this.originalExtents = _extents.copy();\n\n  if(_offset === undefined)\n    this.offset = createVector(0, 0);\n  else\n    this.offset = _offset;\n\n  this.min = function()\n  {\n    return createVector(this.center.x+this.offset.x - this.extents.x, this.center.y+this.offset.y - this.extents.y);\n  };\n\n  this.max = function()\n  {\n    return createVector(this.center.x+this.offset.x + this.extents.x, this.center.y+this.offset.y + this.extents.y);\n  };\n\n  this.right = function()\n  {\n    return this.center.x+this.offset.x + this.extents.x/2;\n  };\n\n  this.left = function()\n  {\n    return this.center.x+this.offset.x - this.extents.x/2;\n  };\n\n  this.top = function()\n  {\n    return this.center.y+this.offset.y - this.extents.y/2;\n  };\n\n  this.bottom = function()\n  {\n    return this.center.y+this.offset.y + this.extents.y/2;\n  };\n\n  this.size = function()\n  {\n    return createVector(this.extents.x * 2, this.extents.y * 2);\n  };\n\n  this.rotate = function(r)\n  {\n    //rotate the bbox\n    var t;\n    if (pInst._angleMode === pInst.RADIANS) {\n      t = radians(r);\n    } else {\n      t = r;\n    }\n\n    var w2 = this.extents.x * abs(pInst.cos(t)) + this.extents.y * abs(pInst.sin(t));\n    var h2 = this.extents.x * abs(pInst.sin(t)) + this.extents.y * abs(pInst.cos(t));\n\n    this.extents.x = w2;\n    this.extents.y = h2;\n\n  };\n\n  this.draw = function()\n  {\n    //fill(col);\n    pInst.noFill();\n    pInst.stroke(0, 255, 0);\n    pInst.rectMode(CENTER);\n    pInst.rect(this.center.x+this.offset.x, this.center.y+this.offset.y, this.size().x/2, this.size().y/2);\n  };\n\n  this.overlap = function(other)\n  {\n    //box vs box\n    if(other instanceof AABB)\n    {\n      var md = other.minkowskiDifference(this);\n\n      if (md.min().x <= 0 &&\n          md.max().x >= 0 &&\n          md.min().y <= 0 &&\n          md.max().y >= 0)\n      {\n        return true;\n      }\n      else\n        return false;\n    }\n    //box vs circle\n    else if(other instanceof CircleCollider)\n    {\n\n      //find closest point to the circle on the box\n      var pt = createVector(other.center.x, other.center.y);\n\n      //I don't know what's going o try to trace a line from centers to see\n      if( other.center.x < this.left() )\n        pt.x = this.left();\n      else if( other.center.x > this.right())\n        pt.x = this.right();\n\n      if( other.center.y < this.top() )\n        pt.y = this.top();\n      else if( other.center.y > this.bottom())\n        pt.y = this.bottom();\n\n      var distance = pt.dist(other.center);\n\n      return distance<other.radius;\n    }\n  };\n\n  this.collide = function(other)\n  {\n\n    if(other instanceof AABB)\n    {\n      var md = other.minkowskiDifference(this);\n\n      if (md.min().x <= 0 &&\n          md.max().x >= 0 &&\n          md.min().y <= 0 &&\n          md.max().y >= 0)\n      {\n        var boundsPoint = md.closestPointOnBoundsToPoint(createVector(0, 0));\n\n        return boundsPoint;\n      }\n      else\n        return createVector(0, 0);\n    }\n    //box vs circle\n    else if(other instanceof CircleCollider)\n    {\n\n      //find closest point to the circle on the box\n      var pt = createVector(other.center.x, other.center.y);\n\n      //I don't know what's going o try to trace a line from centers to see\n      if( other.center.x < this.left() )\n        pt.x = this.left();\n      else if( other.center.x > this.right())\n        pt.x = this.right();\n\n      if( other.center.y < this.top() )\n        pt.y = this.top();\n      else if( other.center.y > this.bottom())\n        pt.y = this.bottom();\n\n\n      var distance = pt.dist(other.center);\n      var a;\n\n      if(distance<other.radius)\n      {\n        //reclamp point\n        if(pt.x === other.center.x && pt.y === other.center.y)\n        {\n          var xOverlap = pt.x - this.center.x;\n          var yOverlap = pt.y - this.center.y;\n\n\n          if(abs(xOverlap) < abs(yOverlap))\n          {\n            if(xOverlap > 0 )\n              pt.x = this.right();\n            else\n              pt.x = this.left();\n          }\n          else\n          {\n            if(yOverlap < 0 )\n              pt.y = this.top();\n            else\n              pt.y = this.bottom();\n          }\n\n          a = pInst.atan2(other.center.y-pt.y, other.center.x-pt.x);\n\n          //fix exceptions\n          if(a === 0)\n          {\n            if(pt.x === this.right()) a = PI;\n            if(pt.y === this.top()) a = PI/2;\n            if(pt.y === this.bottom()) a = -PI/2;\n          }\n        }\n        else\n        {\n          //angle bw point and center\n          a = pInst.atan2(pt.y-other.center.y, pt.x-other.center.x);\n          //project the normal (line between pt and center) onto the circle\n        }\n\n        var d = createVector(pt.x-other.center.x, pt.y-other.center.y);\n        var displacement = createVector(pInst.cos(a)*other.radius-d.x, pInst.sin(a)*other.radius-d.y);\n\n        //if(pt.x === other.center.x && pt.y === other.center.y)\n        //displacement = displacement.mult(-1);\n\n        return displacement;\n        //return createVector(0,0);\n      }\n      else\n        return createVector(0, 0);\n    }\n  };\n\n  this.minkowskiDifference = function(other)\n  {\n    var topLeft = this.min().sub(other.max());\n    var fullSize = this.size().add(other.size());\n    return new AABB(pInst, topLeft.add(fullSize.div(2)), fullSize.div(2));\n  };\n\n\n  this.closestPointOnBoundsToPoint = function(point)\n  {\n    // test x first\n    var minDist = abs(point.x - this.min().x);\n    var boundsPoint = createVector(this.min().x, point.y);\n\n    if (abs(this.max().x - point.x) < minDist)\n    {\n      minDist = abs(this.max().x - point.x);\n      boundsPoint = createVector(this.max().x, point.y);\n    }\n\n    if (abs(this.max().y - point.y) < minDist)\n    {\n      minDist = abs(this.max().y - point.y);\n      boundsPoint = createVector(point.x, this.max().y);\n    }\n\n    if (abs(this.min().y - point.y) < minDist)\n    {\n      minDist = abs(this.min.y - point.y);\n      boundsPoint = createVector(point.x, this.min().y);\n    }\n\n    return boundsPoint;\n  };\n\n\n}//end AABB\ndefineLazyP5Property('AABB', boundConstructorFactory(AABB));\n\n\n\n/**\n * An Animation object contains a series of images (p5.Image) that\n * can be displayed sequentially.\n *\n * All files must be png images. You must include the directory from the sketch root,\n * and the extension .png\n *\n * A sprite can have multiple labeled animations, see Sprite.addAnimation\n * and Sprite.changeAnimation, however an animation can be used independently.\n *\n * An animation can be created either by passing a series of file names,\n * no matter how many or by passing the first and the last file name\n * of a numbered sequence.\n * p5.play will try to detect the sequence pattern.\n *\n * For example if the given filenames are\n * \"data/file0001.png\" and \"data/file0005.png\" the images\n * \"data/file0003.png\" and \"data/file0004.png\" will be loaded as well.\n *\n * @example\n *     var sequenceAnimation;\n *     var glitch;\n *\n *     function preload() {\n *       sequenceAnimation = loadAnimation(\"data/walking0001.png\", \"data/walking0005.png\");\n *       glitch = loadAnimation(\"data/dog.png\", \"data/horse.png\", \"data/cat.png\", \"data/snake.png\");\n *     }\n *\n *     function setup() {\n *       createCanvas(800, 600);\n *     }\n *\n *     function draw() {\n *       background(0);\n *       animation(sequenceAnimation, 100, 100);\n *       animation(glitch, 200, 100);\n *     }\n *\n * @class Animation\n * @constructor\n * @param {String} fileName1 First file in a sequence OR first image file\n * @param {String} fileName2 Last file in a sequence OR second image file\n * @param {String} [...fileNameN] Any number of image files after the first two\n */\nfunction Animation(pInst) {\n  var frameArguments = Array.prototype.slice.call(arguments, 1);\n  var i;\n\n  var CENTER = p5.prototype.CENTER;\n\n  /**\n  * Array of frames (p5.Image)\n  *\n  * @property images\n  * @type {Array}\n  */\n  this.images = [];\n\n  var frame = 0;\n  var cycles = 0;\n  var targetFrame = -1;\n\n  this.offX = 0;\n  this.offY = 0;\n\n  /**\n  * Delay between frames in number of draw cycles.\n  * If set to 4 the framerate of the animation would be the\n  * sketch framerate divided by 4 (60fps = 15fps)\n  *\n  * @property frameDelay\n  * @type {Number}\n  * @default 4\n  */\n  this.frameDelay = 4;\n\n  /**\n  * True if the animation is currently playing.\n  *\n  * @property playing\n  * @type {Boolean}\n  * @default true\n  */\n  this.playing = true;\n\n  /**\n  * Animation visibility.\n  *\n  * @property visible\n  * @type {Boolean}\n  * @default true\n  */\n  this.visible = true;\n\n  /**\n  * If set to false the animation will stop after reaching the last frame\n  *\n  * @property looping\n  * @type {Boolean}\n  * @default true\n  */\n  this.looping = true;\n\n  /**\n  * True if frame changed during the last draw cycle\n  *\n  * @property frameChanged\n  * @type {Boolean}\n  */\n  this.frameChanged = false;\n\n  //is the collider defined manually or defined\n  //by the current frame size\n  this.imageCollider = false;\n\n\n  //sequence mode\n  if(frameArguments.length === 2 && typeof frameArguments[0] === 'string' && typeof frameArguments[1] === 'string')\n  {\n    var from = frameArguments[0];\n    var to = frameArguments[1];\n\n    //print(\"sequence mode \"+from+\" -> \"+to);\n\n    //make sure the extensions are fine\n    var ext1 = from.substring(from.length-4, from.length);\n    if(ext1 !== '.png')\n    {\n      pInst.print('Animation error: you need to use .png files (filename '+from+')');\n      from = -1;\n    }\n\n    var ext2 = to.substring(to.length-4, to.length);\n    if(ext2 !== '.png')\n    {\n      pInst.print('Animation error: you need to use .png files (filename '+to+')');\n      to = -1;\n    }\n\n    //extensions are fine\n    if(from !== -1 && to !== -1)\n    {\n      var digits1 = 0;\n      var digits2 = 0;\n\n      //skip extension work backwards to find the numbers\n      for (i = from.length-5; i >= 0; i--) {\n        if(from.charAt(i) >= '0' && from.charAt(i) <= '9')\n          digits1++;\n      }\n\n      for (i = to.length-5; i >= 0; i--) {\n        if(to.charAt(i) >= '0' && to.charAt(i) <= '9')\n          digits2++;\n      }\n\n      var prefix1 = from.substring(0, from.length-(4+digits1));\n      var prefix2 = to.substring(0, to.length-(4+digits2) );\n\n      // Our numbers likely have leading zeroes, which means that some\n      // browsers (e.g., PhantomJS) will interpret them as base 8 (octal)\n      // instead of decimal. To fix this, we'll explicity tell parseInt to\n      // use a base of 10 (decimal). For more details on this issue, see\n      // http://stackoverflow.com/a/8763427/2422398.\n      var number1 = parseInt(from.substring(from.length-(4+digits1), from.length-4), 10);\n      var number2 = parseInt(to.substring(to.length-(4+digits2), to.length-4), 10);\n\n      //swap if inverted\n      if(number2<number1)\n      {\n        var t = number2;\n        number2 = number1;\n        number1 = t;\n      }\n\n      //two different frames\n      if(prefix1 !== prefix2 )\n      {\n        //print(\"2 separate images\");\n        this.images.push(pInst.loadImage(from));\n        this.images.push(pInst.loadImage(to));\n      }\n      //same digits: case img0001, img0002\n      else\n      {\n        var fileName;\n        if(digits1 === digits2)\n        {\n\n          //load all images\n          for (i = number1; i <= number2; i++) {\n            // Use nf() to number format 'i' into four digits\n            fileName = prefix1 + pInst.nf(i, digits1) + '.png';\n            this.images.push(pInst.loadImage(fileName));\n\n          }\n\n        }\n        else //case: case img1, img2\n        {\n          //print(\"from \"+prefix1+\" \"+number1 +\" to \"+number2);\n          for (i = number1; i <= number2; i++) {\n            // Use nf() to number format 'i' into four digits\n            fileName = prefix1 + i + '.png';\n            this.images.push(pInst.loadImage(fileName));\n\n          }\n\n        }\n      }\n\n    }//end no ext error\n\n  }//end sequence mode\n  // Sprite sheet mode\n  else if (frameArguments.length === 1 && (frameArguments[0] instanceof SpriteSheet))\n  {\n    this.spriteSheet = frameArguments[0];\n    this.images = this.spriteSheet.frames;\n  }\n  else if(frameArguments.length !== 0)//arbitrary list of images\n  {\n    //print(\"Animation arbitrary mode\");\n    for (i = 0; i < frameArguments.length; i++) {\n      //print(\"loading \"+fileNames[i]);\n      if(frameArguments[i] instanceof p5.Image)\n        this.images.push(frameArguments[i]);\n      else\n        this.images.push(pInst.loadImage(frameArguments[i]));\n    }\n  }\n\n  /**\n  * Objects are passed by reference so to have different sprites\n  * using the same animation you need to clone it.\n  *\n  * @method clone\n  * @return {Animation} A clone of the current animation\n  */\n  this.clone = function() {\n    var myClone = new Animation(pInst); //empty\n    myClone.images = [];\n\n    if (this.spriteSheet) {\n      myClone.spriteSheet = this.spriteSheet.clone();\n    }\n    myClone.images = this.images.slice();\n\n    myClone.offX = this.offX;\n    myClone.offY = this.offY;\n    myClone.frameDelay = this.frameDelay;\n    myClone.playing = this.playing;\n    myClone.looping = this.looping;\n\n    return myClone;\n  };\n\n  /**\n   * Draws the animation at coordinate x and y.\n   * Updates the frames automatically.\n   *\n   * @method draw\n   * @param {Number} x x coordinate\n   * @param {Number} y y coordinate\n   * @param {Number} [r=0] rotation\n   */\n  this.draw = function(x, y, r) {\n    this.xpos = x;\n    this.ypos = y;\n    this.rotation = r || 0;\n\n    if (this.visible)\n    {\n\n      //only connection with the sprite class\n      //if animation is used independently draw and update are the sam\n      if(!this.isSpriteAnimation)\n        this.update();\n\n      //this.currentImageMode = g.imageMode;\n      pInst.push();\n      pInst.imageMode(CENTER);\n\n      pInst.translate(this.xpos, this.ypos);\n      if (pInst._angleMode === pInst.RADIANS) {\n        pInst.rotate(radians(this.rotation));\n      } else {\n        pInst.rotate(this.rotation);\n      }\n\n      if(this.images[frame] !== undefined)\n      {\n        if (this.spriteSheet) {\n          var frame_info = this.images[frame].frame;\n          pInst.image(this.spriteSheet.image, this.offX, this.offY, frame_info.width, frame_info.height,\n            frame_info.x, frame_info.y, frame_info.width, frame_info.height);\n        } else {\n          pInst.image(this.images[frame], this.offX, this.offY);\n        }\n      }\n      else\n      {\n        pInst.print('Warning undefined frame '+frame);\n        //this.isActive = false;\n      }\n\n      pInst.pop();\n    }\n  };\n\n  //called by draw\n  this.update = function() {\n    cycles++;\n    var previousFrame = frame;\n    this.frameChanged = false;\n\n\n    //go to frame\n    if(this.images.length === 1)\n    {\n      this.playing = false;\n      frame = 0;\n    }\n\n    if ( this.playing && cycles%this.frameDelay === 0)\n    {\n      //going to target frame up\n      if(targetFrame>frame && targetFrame !== -1)\n      {\n        frame++;\n      }\n      //going to taget frame down\n      else if(targetFrame<frame && targetFrame !== -1)\n      {\n        frame--;\n      }\n      else if(targetFrame === frame && targetFrame !== -1)\n      {\n        this.playing=false;\n      }\n      else if (this.looping) //advance frame\n      {\n        //if next frame is too high\n        if (frame>=this.images.length-1)\n          frame = 0;\n        else\n          frame++;\n      } else\n      {\n        //if next frame is too high\n        if (frame<this.images.length-1)\n          frame++;\n      }\n    }\n    if (frame == this.images.length - 1 && this.onComplete != undefined)\n      this.onComplete(); //fire when on last frame\n\n    if(previousFrame !== frame)\n      this.frameChanged = true;\n\n    \n\n  };//end update\n\n  /**\n  * Plays the animation.\n  *\n  * @method play\n  */\n  this.play = function() {\n    this.playing = true;\n    targetFrame = -1;\n  };\n\n  /**\n  * Stops the animation.\n  *\n  * @method stop\n  */\n  this.stop = function(){\n    this.playing = false;\n  };\n\n  /**\n  * Rewinds the animation to the first frame.\n  *\n  * @method rewind\n  */\n  this.rewind = function() {\n    frame = 0;\n  };\n\n  /**\n  * fire when animation ends\n  *\n  * @method onComplete\n  * @return {Animation} \n  */\n  this.onComplete = function () {\n    return undefined;\n  };\n\n  /**\n  * Changes the current frame.\n  *\n  * @method changeFrame\n  * @param {Number} frame Frame number (starts from 0).\n  */\n  this.changeFrame = function(f) {\n    if (f<this.images.length)\n      frame = f;\n    else\n      frame = this.images.length - 1;\n\n    targetFrame = -1;\n    //this.playing = false;\n  };\n\n   /**\n  * Goes to the next frame and stops.\n  *\n  * @method nextFrame\n  */\n  this.nextFrame = function() {\n\n    if (frame<this.images.length-1)\n      frame = frame+1;\n    else if(this.looping)\n      frame = 0;\n\n    targetFrame = -1;\n    this.playing = false;\n  };\n\n   /**\n  * Goes to the previous frame and stops.\n  *\n  * @method previousFrame\n  */\n  this.previousFrame = function() {\n\n    if (frame>0)\n      frame = frame-1;\n    else if(this.looping)\n      frame = this.images.length-1;\n\n    targetFrame = -1;\n    this.playing = false;\n  };\n\n  /**\n  * Plays the animation forward or backward toward a target frame.\n  *\n  * @method goToFrame\n  * @param {Number} toFrame Frame number destination (starts from 0)\n  */\n  this.goToFrame = function(toFrame) {\n    if(toFrame < 0 || toFrame >= this.images.length) {\n      return;\n    }\n\n    // targetFrame gets used by the update() method to decide what frame to\n    // select next.  When it's not being used it gets set to -1.\n    targetFrame = toFrame;\n\n    if(targetFrame !== frame) {\n      this.playing = true;\n    }\n  };\n\n  /**\n  * Returns the current frame number.\n  *\n  * @method getFrame\n  * @return {Number} Current frame (starts from 0)\n  */\n  this.getFrame = function() {\n    return frame;\n  };\n\n  /**\n  * Returns the last frame number.\n  *\n  * @method getLastFrame\n  * @return {Number} Last frame number (starts from 0)\n  */\n  this.getLastFrame = function() {\n    return this.images.length-1;\n  };\n\n  /**\n  * Returns the current frame image as p5.Image.\n  *\n  * @method getFrameImage\n  * @return {p5.Image} Current frame image\n  */\n  this.getFrameImage = function() {\n    return this.images[frame];\n  };\n\n  /**\n  * Returns the frame image at the specified frame number.\n  *\n  * @method getImageAt\n  * @param {Number} frame Frame number\n  * @return {p5.Image} Frame image\n  */\n  this.getImageAt = function(f) {\n    return this.images[f];\n  };\n\n  /**\n  * Returns the current frame width in pixels.\n  * If there is no image loaded, returns 1.\n  *\n  * @method getWidth\n  * @return {Number} Frame width\n  */\n  this.getWidth = function() {\n    if (this.images[frame] instanceof p5.Image) {\n      return this.images[frame].width;\n    } else if (this.images[frame]) {\n      // Special case: Animation-from-spritesheet treats its images array differently.\n      return this.images[frame].frame.width;\n    } else {\n      return 1;\n    }\n  };\n\n  /**\n  * Returns the current frame height in pixels.\n  * If there is no image loaded, returns 1.\n  *\n  * @method getHeight\n  * @return {Number} Frame height\n  */\n  this.getHeight = function() {\n    if (this.images[frame] instanceof p5.Image) {\n      return this.images[frame].height;\n    } else if (this.images[frame]) {\n      // Special case: Animation-from-spritesheet treats its images array differently.\n      return this.images[frame].frame.height;\n    } else {\n      return 1;\n    }\n  };\n\n}\n\ndefineLazyP5Property('Animation', boundConstructorFactory(Animation));\n\n/**\n * Represents a sprite sheet and all it's frames.  To be used with Animation,\n * or static drawing single frames.\n *\n *  There are two different ways to load a SpriteSheet\n *\n * 1. Given width, height that will be used for every frame and the\n *    number of frames to cycle through. The sprite sheet must have a\n *    uniform grid with consistent rows and columns.\n *\n * 2. Given an array of frame objects that define the position and\n *    dimensions of each frame.  This is Flexible because you can use\n *    sprite sheets that don't have uniform rows and columns.\n *\n * @example\n *     // Method 1 - Using width, height for each frame and number of frames\n *     explode_sprite_sheet = loadSpriteSheet('assets/explode_sprite_sheet.png', 171, 158, 11);\n *\n *     // Method 2 - Using an array of objects that define each frame\n *     var player_frames = loadJSON('assets/tiles.json');\n *     player_sprite_sheet = loadSpriteSheet('assets/player_spritesheet.png', player_frames);\n *\n * @class SpriteSheet\n * @constructor\n * @param image String image path or p5.Image object\n */\nfunction SpriteSheet(pInst) {\n  var spriteSheetArgs = Array.prototype.slice.call(arguments, 1);\n\n  this.image = null;\n  this.frames = [];\n  this.frame_width = 0;\n  this.frame_height = 0;\n  this.num_frames = 0;\n\n  /**\n   * Generate the frames data for this sprite sheet baesd on user params\n   * @private\n   * @method _generateSheetFrames\n   */\n  this._generateSheetFrames = function() {\n    var sX = 0, sY = 0;\n    for (var i = 0; i < this.num_frames; i++) {\n      this.frames.push(\n        {\n          'name': i,\n          'frame': {\n            'x': sX,\n            'y': sY,\n            'width': this.frame_width,\n            'height': this.frame_height\n          }\n        });\n      sX += this.frame_width;\n      if (sX >= this.image.width) {\n        sX = 0;\n        sY += this.frame_height;\n        if (sY >= this.image.height) {\n          sY = 0;\n        }\n      }\n    }\n  };\n\n  if (spriteSheetArgs.length === 2 && Array.isArray(spriteSheetArgs[1])) {\n    this.frames = spriteSheetArgs[1];\n    this.num_frames = this.frames.length;\n  } else if (spriteSheetArgs.length === 4 &&\n    (typeof spriteSheetArgs[1] === 'number') &&\n    (typeof spriteSheetArgs[2] === 'number') &&\n    (typeof spriteSheetArgs[3] === 'number')) {\n    this.frame_width = spriteSheetArgs[1];\n    this.frame_height = spriteSheetArgs[2];\n    this.num_frames = spriteSheetArgs[3];\n  }\n\n  if(spriteSheetArgs[0] instanceof p5.Image) {\n    this.image = spriteSheetArgs[0];\n    if (spriteSheetArgs.length === 4) {\n      this._generateSheetFrames();\n    }\n  } else {\n    if (spriteSheetArgs.length === 2) {\n      this.image = pInst.loadImage(spriteSheetArgs[0]);\n    } else if (spriteSheetArgs.length === 4) {\n      this.image = pInst.loadImage(spriteSheetArgs[0], this._generateSheetFrames.bind(this));\n    }\n  }\n\n  /**\n   * Draws a specific frame to the canvas.\n   * @param frame_name  Can either be a string name, or a numeric index.\n   * @param x   x position to draw the frame at\n   * @param y   y position to draw the frame at\n   * @param [width]   optional width to draw the frame\n   * @param [height]  optional height to draw the frame\n   * @method drawFrame\n   */\n  this.drawFrame = function(frame_name, x, y, width, height) {\n    var frameToDraw;\n    if (typeof frame_name === 'number') {\n      frameToDraw = this.frames[frame_name].frame;\n    } else {\n      for (var i = 0; i < this.frames.length; i++) {\n        if (this.frames[i].name === frame_name) {\n          frameToDraw = this.frames[i].frame;\n          break;\n        }\n      }\n    }\n    var dWidth = width || frameToDraw.width;\n    var dHeight = height || frameToDraw.height;\n    pInst.image(this.image, frameToDraw.x, frameToDraw.y,\n      frameToDraw.width, frameToDraw.height, x, y, dWidth, dHeight);\n  };\n\n  /**\n   * Objects are passed by reference so to have different sprites\n   * using the same animation you need to clone it.\n   *\n   * @method clone\n   * @return {SpriteSheet} A clone of the current SpriteSheet\n   */\n  this.clone = function() {\n    var myClone = new SpriteSheet(pInst); //empty\n\n    // Deep clone the frames by value not reference\n    for(var i = 0; i < this.frames.length; i++) {\n      var frame = this.frames[i].frame;\n      var cloneFrame = {\n        'name':frame.name,\n        'frame': {\n          'x':frame.x,\n          'y':frame.y,\n          'width':frame.width,\n          'height':frame.height\n        }\n      };\n      myClone.frames.push(cloneFrame);\n    }\n\n    // clone other fields\n    myClone.image = this.image;\n    myClone.frame_width = this.frame_width;\n    myClone.frame_height = this.frame_height;\n    myClone.num_frames = this.num_frames;\n\n    return myClone;\n  };\n}\n\ndefineLazyP5Property('SpriteSheet', boundConstructorFactory(SpriteSheet));\n\n//general constructor to be able to feed arguments as array\nfunction construct(constructor, args) {\n  function F() {\n    return constructor.apply(this, args);\n  }\n  F.prototype = constructor.prototype;\n  return new F();\n}\n\n\n\n\n\n/*\n * Javascript Quadtree\n * based on\n * https://github.com/timohausmann/quadtree-js/\n * Copyright © 2012 Timo Hausmann\n*/\n\nfunction Quadtree( bounds, max_objects, max_levels, level ) {\n\n  this.active = true;\n  this.max_objects\t= max_objects || 10;\n  this.max_levels\t\t= max_levels || 4;\n\n  this.level \t\t\t= level || 0;\n  this.bounds \t\t= bounds;\n\n  this.objects \t\t= [];\n  this.object_refs\t= [];\n  this.nodes \t\t\t= [];\n}\n\nQuadtree.prototype.updateBounds = function() {\n\n  //find maximum area\n  var objects = this.getAll();\n  var x = 10000;\n  var y = 10000;\n  var w = -10000;\n  var h = -10000;\n\n  for( var i=0; i < objects.length; i++ )\n    {\n      if(objects[i].position.x < x)\n        x = objects[i].position.x;\n      if(objects[i].position.y < y)\n        y = objects[i].position.y;\n      if(objects[i].position.x > w)\n        w = objects[i].position.x;\n      if(objects[i].position.y > h)\n        h = objects[i].position.y;\n    }\n\n\n  this.bounds = {\n    x:x,\n    y:y,\n    width:w,\n    height:h\n  };\n  //print(this.bounds);\n};\n\n/*\n\t * Split the node into 4 subnodes\n\t */\nQuadtree.prototype.split = function() {\n\n  var nextLevel\t= this.level + 1,\n      subWidth\t= Math.round( this.bounds.width / 2 ),\n      subHeight \t= Math.round( this.bounds.height / 2 ),\n      x \t\t\t= Math.round( this.bounds.x ),\n      y \t\t\t= Math.round( this.bounds.y );\n\n  //top right node\n  this.nodes[0] = new Quadtree({\n    x\t: x + subWidth,\n    y\t: y,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //top left node\n  this.nodes[1] = new Quadtree({\n    x\t: x,\n    y\t: y,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //bottom left node\n  this.nodes[2] = new Quadtree({\n    x\t: x,\n    y\t: y + subHeight,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //bottom right node\n  this.nodes[3] = new Quadtree({\n    x\t: x + subWidth,\n    y\t: y + subHeight,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n};\n\n\n/*\n\t * Determine the quadtrant for an area in this node\n\t */\nQuadtree.prototype.getIndex = function( pRect ) {\n  if(!pRect.collider)\n    return -1;\n  else\n  {\n    var index \t\t\t\t= -1,\n        verticalMidpoint \t= this.bounds.x + (this.bounds.width / 2),\n        horizontalMidpoint \t= this.bounds.y + (this.bounds.height / 2),\n\n        //pRect can completely fit within the top quadrants\n        topQuadrant = (pRect.collider.top() < horizontalMidpoint && pRect.collider.top() + pRect.collider.size().y < horizontalMidpoint),\n\n        //pRect can completely fit within the bottom quadrants\n        bottomQuadrant = (pRect.collider.top() > horizontalMidpoint);\n\n    //pRect can completely fit within the left quadrants\n    if( pRect.collider.left() < verticalMidpoint && pRect.collider.left() + pRect.collider.size().x < verticalMidpoint ) {\n      if( topQuadrant ) {\n        index = 1;\n      } else if( bottomQuadrant ) {\n        index = 2;\n      }\n\n      //pRect can completely fit within the right quadrants\n    } else if( pRect.collider.left() > verticalMidpoint ) {\n      if( topQuadrant ) {\n        index = 0;\n      } else if( bottomQuadrant ) {\n        index = 3;\n      }\n    }\n\n    return index;\n  }\n};\n\n\n/*\n\t * Insert an object into the node. If the node\n\t * exceeds the capacity, it will split and add all\n\t * objects to their corresponding subnodes.\n\t */\nQuadtree.prototype.insert = function( obj ) {\n  //avoid double insertion\n  if(this.objects.indexOf(obj) === -1)\n  {\n\n    var i = 0,\n        index;\n\n    //if we have subnodes ...\n    if( typeof this.nodes[0] !== 'undefined' ) {\n      index = this.getIndex( obj );\n\n      if( index !== -1 ) {\n        this.nodes[index].insert( obj );\n        return;\n      }\n    }\n\n    this.objects.push( obj );\n\n    if( this.objects.length > this.max_objects && this.level < this.max_levels ) {\n\n      //split if we don't already have subnodes\n      if( typeof this.nodes[0] === 'undefined' ) {\n        this.split();\n      }\n\n      //add all objects to there corresponding subnodes\n      while( i < this.objects.length ) {\n\n        index = this.getIndex( this.objects[i] );\n\n        if( index !== -1 ) {\n          this.nodes[index].insert( this.objects.splice(i, 1)[0] );\n        } else {\n          i = i + 1;\n        }\n      }\n    }\n  }\n};\n\n\n/*\n\t * Return all objects that could collide with a given area\n\t */\nQuadtree.prototype.retrieve = function( pRect ) {\n\n\n  var index = this.getIndex( pRect ),\n      returnObjects = this.objects;\n\n  //if we have subnodes ...\n  if( typeof this.nodes[0] !== 'undefined' ) {\n\n    //if pRect fits into a subnode ..\n    if( index !== -1 ) {\n      returnObjects = returnObjects.concat( this.nodes[index].retrieve( pRect ) );\n\n      //if pRect does not fit into a subnode, check it against all subnodes\n    } else {\n      for( var i=0; i < this.nodes.length; i=i+1 ) {\n        returnObjects = returnObjects.concat( this.nodes[i].retrieve( pRect ) );\n      }\n    }\n  }\n\n  return returnObjects;\n};\n\nQuadtree.prototype.retrieveFromGroup = function( pRect, group ) {\n\n  var results = [];\n  var candidates = this.retrieve(pRect);\n\n  for(var i=0; i<candidates.length; i++)\n    if(group.contains(candidates[i]))\n    results.push(candidates[i]);\n\n  return results;\n};\n\n/*\n\t * Get all objects stored in the quadtree\n\t */\nQuadtree.prototype.getAll = function() {\n\n  var objects = this.objects;\n\n  for( var i=0; i < this.nodes.length; i=i+1 ) {\n    objects = objects.concat( this.nodes[i].getAll() );\n  }\n\n  return objects;\n};\n\n\n/*\n\t * Get the node in which a certain object is stored\n\t */\nQuadtree.prototype.getObjectNode = function( obj ) {\n\n  var index;\n\n  //if there are no subnodes, object must be here\n  if( !this.nodes.length ) {\n\n    return this;\n\n  } else {\n\n    index = this.getIndex( obj );\n\n    //if the object does not fit into a subnode, it must be here\n    if( index === -1 ) {\n\n      return this;\n\n      //if it fits into a subnode, continue deeper search there\n    } else {\n      var node = this.nodes[index].getObjectNode( obj );\n      if( node ) return node;\n    }\n  }\n\n  return false;\n};\n\n\n/*\n\t * Removes a specific object from the quadtree\n\t * Does not delete empty subnodes. See cleanup-function\n\t */\nQuadtree.prototype.removeObject = function( obj ) {\n\n  var node = this.getObjectNode( obj ),\n      index = node.objects.indexOf( obj );\n\n  if( index === -1 ) return false;\n\n  node.objects.splice( index, 1);\n};\n\n\n/*\n\t * Clear the quadtree and delete all objects\n\t */\nQuadtree.prototype.clear = function() {\n\n  this.objects = [];\n\n  if( !this.nodes.length ) return;\n\n  for( var i=0; i < this.nodes.length; i=i+1 ) {\n\n    this.nodes[i].clear();\n  }\n\n  this.nodes = [];\n};\n\n\n/*\n\t * Clean up the quadtree\n\t * Like clear, but objects won't be deleted but re-inserted\n\t */\nQuadtree.prototype.cleanup = function() {\n\n  var objects = this.getAll();\n\n  this.clear();\n\n  for( var i=0; i < objects.length; i++ ) {\n    this.insert( objects[i] );\n  }\n};\n\n\n\nfunction updateTree() {\n  if(this.quadTree.active)\n  {\n    this.quadTree.updateBounds();\n    this.quadTree.cleanup();\n  }\n}\n\n//keyboard input\np5.prototype.registerMethod('pre', p5.prototype.readPresses);\n\n//automatic sprite update\np5.prototype.registerMethod('pre', p5.prototype.updateSprites);\n\n//quadtree update\np5.prototype.registerMethod('post', updateTree);\n\n//camera push and pop\np5.prototype.registerMethod('pre', cameraPush);\np5.prototype.registerMethod('post', cameraPop);\n\n//deltaTime\n//p5.prototype.registerMethod('pre', updateDelta);\n\n/**\n * Log a warning message to the host console, using native `console.warn`\n * if it is available but falling back on `console.log` if not.  If no\n * console is available, this method will fail silently.\n * @method _warn\n * @param {!string} message\n * @private\n */\np5.prototype._warn = function(message) {\n  var console = window.console;\n\n  if(console)\n  {\n    if('function' === typeof console.warn)\n    {\n      console.warn(message);\n    }\n    else if('function' === typeof console.log)\n    {\n      console.log('Warning: ' + message);\n    }\n  }\n};\n\n}));\n",
        "children": [],
        "fileType": "file",
        "_id": "5faaa839f852ab88d44c97a4",
        "isSelectedFile": false,
        "updatedAt": "2020-11-10T14:36:05.787Z",
        "createdAt": "2020-11-10T14:36:05.787Z",
        "id": "5faaa839f852ab88d44c97a4"
      },
      {
        "name": "assets",
        "content": "class MainGuy {\n  constructor(x, y, size) {\n    this.sprite = createSprite(x, y, size, size);\n    //this.sprite.debug = true;\n\n  }\n}",
        "children": [
          "5faaa839f852ab88d44c979b",
          "5faaa839f852ab88d44c979c",
          "5faaa839f852ab88d44c979d",
          "5faaa839f852ab88d44c979e",
          "5faaa839f852ab88d44c979f",
          "5faaa839f852ab88d44c97a0",
          "5faaa839f852ab88d44c97a1"
        ],
        "fileType": "folder",
        "_id": "5faaa839f852ab88d44c979a",
        "updatedAt": "2020-11-10T14:36:05.787Z",
        "createdAt": "2020-11-10T14:36:05.787Z",
        "isSelectedFile": false,
        "id": "5faaa839f852ab88d44c979a"
      },
      {
        "name": "background.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5faaa839f852ab88d44c979c",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/aad04394-252a-4b5d-b47d-9b3dd04cbc8e.png",
        "isSelectedFile": false,
        "updatedAt": "2020-11-10T14:36:05.787Z",
        "createdAt": "2020-11-10T14:36:05.787Z",
        "id": "5faaa839f852ab88d44c979c"
      },
      {
        "name": "mainGuy.js",
        "content": "class MainGuy {\n  constructor(x, y, size) {\n    this.sprite = createSprite(x, y, size, size);\n    //this.sprite.debug = true;\n\n  }\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "5faaa839f852ab88d44c97a5",
        "isSelectedFile": false,
        "updatedAt": "2020-11-10T14:36:05.787Z",
        "createdAt": "2020-11-10T14:36:05.787Z",
        "id": "5faaa839f852ab88d44c97a5"
      },
      {
        "name": "Foreground_1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5faaa839f852ab88d44c979b",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/de5d6cc8-856d-4853-bdea-2f53ce0f696c.png",
        "isSelectedFile": false,
        "updatedAt": "2020-11-10T14:36:05.787Z",
        "createdAt": "2020-11-10T14:36:05.787Z",
        "id": "5faaa839f852ab88d44c979b"
      },
      {
        "name": "foreground.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5faaa839f852ab88d44c97a1",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/d6d02969-f2e1-409d-975e-b75f951531f8.png",
        "isSelectedFile": false,
        "updatedAt": "2020-11-10T14:36:05.787Z",
        "createdAt": "2020-11-10T14:36:05.787Z",
        "id": "5faaa839f852ab88d44c97a1"
      },
      {
        "name": "bug.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5faaa839f852ab88d44c979d",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/18a74ee3-281b-4dd3-a2fe-d648b2242761.png",
        "isSelectedFile": false,
        "updatedAt": "2020-11-10T14:36:05.787Z",
        "createdAt": "2020-11-10T14:36:05.787Z",
        "id": "5faaa839f852ab88d44c979d"
      },
      {
        "name": "bug_right.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5faaa839f852ab88d44c97a0",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/9710944e-40ee-472f-906d-c1a0744fb903.png",
        "isSelectedFile": false,
        "updatedAt": "2020-11-10T14:36:05.787Z",
        "createdAt": "2020-11-10T14:36:05.787Z",
        "id": "5faaa839f852ab88d44c97a0"
      },
      {
        "name": "bug_left.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5faaa839f852ab88d44c979f",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/d3b167df-0701-4741-9d4f-f6a33660a2a1.png",
        "isSelectedFile": false,
        "updatedAt": "2020-11-10T14:36:05.787Z",
        "createdAt": "2020-11-10T14:36:05.787Z",
        "id": "5faaa839f852ab88d44c979f"
      },
      {
        "name": "bug_down.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5faaa839f852ab88d44c979e",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/da6e5a20-210f-4fd2-a67a-b80b67df40ee.png",
        "isSelectedFile": false,
        "updatedAt": "2020-11-10T14:36:05.787Z",
        "createdAt": "2020-11-10T14:36:05.787Z",
        "id": "5faaa839f852ab88d44c979e"
      }
    ],
    "createdAt": "2020-11-10T14:48:27.394Z",
    "updatedAt": "2020-11-10T14:48:27.394Z",
    "id": "OSMb9RUyA"
  },
  {
    "name": "Purple Primes",
    "_id": "TmJDHUJT2",
    "updatedAt": "2021-03-09T17:06:49.029Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "604662013de33f98d8378bc7",
          "604662013de33f98d8378bc6",
          "604662013de33f98d8378bc8"
        ],
        "fileType": "folder",
        "_id": "604662013de33f98d8378bc9",
        "createdAt": "2021-03-09T17:06:49.029Z",
        "updatedAt": "2021-03-09T17:06:49.029Z",
        "id": "604662013de33f98d8378bc9"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  pixelDensity(14);\n  createCanvas(971, 600);\n  background(0)\n  // colorMode(HSB);\n  \n  primes = calculatePrimes(10000);\n  \n  print(primes);\n  \n  noFill();\n  strokeWeight(1)\n  // smooth();\n  \n  for (let i = 0; i < primes.length; i++) {\n    let size = primes[i];\n    size = int(size / PI);\n    chooseColour(size);\n    circle(width/2, height - size/2, size);\n    // if(size > height) {\n    //   break;\n    // }\n  }\n}\n\nfunction chooseColour(n) {\n\n  switch(n % 10) {\n    case 1:\n      stroke(\"#EBA5F3\");\n      break;\n    case 3:\n      stroke(\"#E892F2\");\n      break;\n    case 5:\n      stroke(\"#DB7CF3\");\n      break;\n    case 7:\n      stroke(\"#BD72E9\");\n      break;\n    case 9:\n      stroke(\"#B054F2\");\n    break;\n  }\n\n}\n\nfunction draw() {\n\n\n}\n\nfunction calculatePrimes(n) {\n    // Eratosthenes algorithm to find all primes under n\n    var array = [], upperLimit = Math.sqrt(n), output = [];\n\n    // Make an array from 2 to (n - 1)\n    for (var i = 0; i < n; i++) {\n        array.push(true);\n    }\n\n    // Remove multiples of primes starting from 2, 3, 5,...\n    for (var i = 2; i <= upperLimit; i++) {\n        if (array[i]) {\n            for (var j = i * i; j < n; j += i) {\n                array[j] = false;\n            }\n        }\n    }\n\n    // All array[i] set to true are primes\n    for (var i = 2; i < n; i++) {\n        if(array[i]) {\n            output.push(i);\n        }\n    }\n\n    return output;\n};",
        "children": [],
        "fileType": "file",
        "_id": "604662013de33f98d8378bc6",
        "isSelectedFile": true,
        "createdAt": "2021-03-09T17:06:49.029Z",
        "updatedAt": "2021-03-09T17:06:49.029Z",
        "id": "604662013de33f98d8378bc6"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.2.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.2.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "604662013de33f98d8378bc7",
        "createdAt": "2021-03-09T17:06:49.029Z",
        "updatedAt": "2021-03-09T17:06:49.029Z",
        "id": "604662013de33f98d8378bc7"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "604662013de33f98d8378bc8",
        "createdAt": "2021-03-09T17:06:49.029Z",
        "updatedAt": "2021-03-09T17:06:49.029Z",
        "id": "604662013de33f98d8378bc8"
      }
    ],
    "createdAt": "2021-03-09T17:06:49.029Z",
    "id": "TmJDHUJT2"
  },
  {
    "name": "Random Rects v1",
    "_id": "LuG1QYtpk",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "619266524f5cdf32b88e8ea8",
          "619266524f5cdf32b88e8ea9",
          "619266524f5cdf32b88e8eaa",
          "619266524f5cdf32b88e8eab"
        ],
        "fileType": "folder",
        "_id": "619266524f5cdf32b88e8ea7",
        "isSelectedFile": false,
        "createdAt": "2021-12-06T09:47:57.483Z",
        "updatedAt": "2021-12-06T09:47:57.483Z",
        "id": "619266524f5cdf32b88e8ea7"
      },
      {
        "name": "sketch.js",
        "content": "/* Random Rects by @ktorn */\n\nlet squares = [];\n\nlet gridSize = 1;\n\nlet hue;\nlet hueRange = 60;\n\nlet instructionsOn = true;\n\nfunction setup() {\n  \n  colorMode(HSB);\n  hue = random(0, 360);\n  \n  // size canvas to smallest window dimension\n  let canvasDim = windowWidth;\n  if (windowHeight < canvasDim) {\n    canvasDim = windowHeight;\n  }\n  \n  createCanvas(canvasDim, canvasDim);\n  \n  initSquares();\n}\n\nfunction draw() {\n  \n  for(let i = 0; i < squares.length; i++) {\n    let sq = squares[i];\n    sq.render();\n  }\n  \n  if (instructionsOn) {\n    textAlign(CENTER, CENTER);\n    textSize(20);\n    text(\"1. Click/touch canvas multiple times to create grid\\n\\n2. Press any key to save image\", width/2, height/2);\n  }\n    \n}\n\nfunction initSquares() {\n  \n  squares = [];\n  \n  let gridWidth = width / gridSize;\n  let gridHeight = height / gridSize;\n  \n  for (let i=0; i < width; i += gridWidth) {\n    for (let j=0; j < height; j += gridHeight) {\n      let sq = new Square(i, j, gridWidth, gridHeight);\n      squares.push(sq);\n    }\n  }\n}\n\nfunction mousePressed() {\n  gridSize++;\n  initSquares();\n  \n  if(instructionsOn) {\n    instructionsOn = false;\n  }\n}\n\nfunction keyPressed() {\n  \n  saveCanvas('myCanvas', 'png');\n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "619266524f5cdf32b88e8ea9",
        "isSelectedFile": true,
        "createdAt": "2021-12-06T09:47:57.483Z",
        "updatedAt": "2021-12-06T09:47:57.483Z",
        "id": "619266524f5cdf32b88e8ea9"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"square.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "619266524f5cdf32b88e8ea8",
        "isSelectedFile": false,
        "createdAt": "2021-12-06T09:47:57.483Z",
        "updatedAt": "2021-12-06T09:47:57.483Z",
        "id": "619266524f5cdf32b88e8ea8"
      },
      {
        "name": "style.css",
        "content": "html,\nbody {\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n\ncanvas {\n  display: block;\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "619266524f5cdf32b88e8eab",
        "isSelectedFile": false,
        "createdAt": "2021-12-06T09:47:57.483Z",
        "updatedAt": "2021-12-06T09:47:57.483Z",
        "id": "619266524f5cdf32b88e8eab"
      },
      {
        "name": "square.js",
        "content": "class Square {\n  constructor(x, y, canvasWidth, canvasHeight) {\n    this.x = x;\n    this.y = y;\n    this.canvasWidth = canvasWidth;\n    this.canvasHeight = canvasHeight;\n    let min = canvasWidth / 4;\n    let max = 3 * (canvasWidth / 4);\n    this.width = random(min,max);\n    min = canvasHeight / 4;\n    max = 3 * (canvasHeight / 4);\n    this.height = random(min,max);\n    this.color = color(random(hue - hueRange, hue + hueRange), random(0,100), 100);\n    this.bgColor = color(random(hue - hueRange, hue + hueRange), random(0,100), 100);\n  }\n  \n  render() {\n    noStroke();\n    push();\n    translate(this.x, this.y);\n    fill(this.bgColor);\n    rectMode(CORNER);\n    rect(0, 0, this.canvasWidth, this.canvasHeight);\n    translate(this.canvasWidth / 2, this.canvasHeight / 2);\n    rectMode(CENTER);\n    fill(this.color);\n    rect(0, 0, this.width, this.height);\n    pop();\n  }\n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "619266524f5cdf32b88e8eaa",
        "isSelectedFile": false,
        "createdAt": "2021-12-06T09:47:57.483Z",
        "updatedAt": "2021-12-06T09:47:57.483Z",
        "id": "619266524f5cdf32b88e8eaa"
      }
    ],
    "createdAt": "2021-11-15T13:53:22.541Z",
    "updatedAt": "2021-12-06T09:47:57.483Z",
    "id": "LuG1QYtpk"
  },
  {
    "name": "Recursive squares",
    "_id": "UY5O3ePZd",
    "updatedAt": "2021-04-28T16:04:12.287Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6088c86e8942b4a9c91ade65",
          "6088c86e8942b4a9c91ade64",
          "6088c8948942b4a9c91ade68",
          "6088c86e8942b4a9c91ade66"
        ],
        "fileType": "folder",
        "_id": "6088c86e8942b4a9c91ade67",
        "isSelectedFile": false,
        "createdAt": "2021-04-28T16:04:12.287Z",
        "updatedAt": "2021-04-28T16:04:12.287Z",
        "id": "6088c86e8942b4a9c91ade67"
      },
      {
        "name": "sketch.js",
        "content": "var squares = [];\nvar sizeLimit = 10;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  rectMode(CENTER);\n}\n\nfunction draw() {\n  background(255);\n  \n  // sizeLimit = map(mouseY, 0, 400, 1, 110);\n  squares = [];\n  createSquare(width/2, height/2, width/4, height/4);\n  \n\n  for(var i=0; i < squares.length; i++) {\n    var square = squares[i];\n    if (square) {\n      square.render();\n    }\n  }\n  \n}\n\nfunction createSquare(squareX, squareY, squareWidth, squareHeight) {\n\n  var square = new Square(squareX, squareY, squareWidth, squareHeight);\n  squares.push(square);\n  \n  if(squareWidth > sizeLimit && squareHeight > sizeLimit) {\n    var verticalOffset = squareHeight;\n    var horizontalOffset = squareWidth;\n    createSquare(squareX, squareY - verticalOffset, squareWidth/2, squareHeight/2);\n    createSquare(squareX, squareY + verticalOffset, squareWidth/2, squareHeight/2);\n    createSquare(squareX - horizontalOffset, squareY, squareWidth/2, squareHeight/2);\n    createSquare(squareX + horizontalOffset, squareY, squareWidth/2, squareHeight/2);\n  }\n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "6088c86e8942b4a9c91ade64",
        "isSelectedFile": true,
        "createdAt": "2021-04-28T16:04:12.287Z",
        "updatedAt": "2021-04-28T16:04:12.287Z",
        "id": "6088c86e8942b4a9c91ade64"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.2.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.2.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"square.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6088c86e8942b4a9c91ade65",
        "isSelectedFile": false,
        "createdAt": "2021-04-28T16:04:12.287Z",
        "updatedAt": "2021-04-28T16:04:12.287Z",
        "id": "6088c86e8942b4a9c91ade65"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6088c86e8942b4a9c91ade66",
        "isSelectedFile": false,
        "createdAt": "2021-04-28T16:04:12.287Z",
        "updatedAt": "2021-04-28T16:04:12.287Z",
        "id": "6088c86e8942b4a9c91ade66"
      },
      {
        "name": "square.js",
        "content": "class Square {\n  constructor(newX, newY, newSize) {\n    this.x = newX;\n    this.y = newY;\n    this.size = newSize;\n  }\n  \n  render() {\n    rect(this.x, this.y, this.size, this.size);\n  }\n  \n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "6088c8948942b4a9c91ade68",
        "isSelectedFile": false,
        "createdAt": "2021-04-28T16:04:12.287Z",
        "updatedAt": "2021-04-28T16:04:12.287Z",
        "id": "6088c8948942b4a9c91ade68"
      }
    ],
    "createdAt": "2021-04-28T03:24:29.375Z",
    "id": "UY5O3ePZd"
  },
  {
    "name": "reflective type",
    "_id": "zKyp8H3KM",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "62b42a87c786b7d1606a0198",
          "62b42a87c786b7d1606a0199",
          "62b42a87c786b7d1606a019a"
        ],
        "fileType": "folder",
        "_id": "62b42a87c786b7d1606a0197",
        "createdAt": "2022-06-23T19:06:17.074Z",
        "updatedAt": "2022-06-23T19:06:17.074Z",
        "isSelectedFile": false,
        "id": "62b42a87c786b7d1606a0197"
      },
      {
        "name": "sketch.js",
        "content": "function rec() {\n  \n  const Http = new XMLHttpRequest();\n  const url='https://jsonplaceholder.typicode.com/posts';\n  Http.open(\"GET\", url);\n  Http.send();\n\n  Http.onreadystatechange = (e) => {\n    // console.log(Http.responseText)\n  }\n  \n  \n  fs = \"\" + rec + \"rec()\";\n  lines = fs.split(\"\\n\");\n  output = \"\";\n  for (line of lines) {\n    output += line + \"\\n\"\n  }\n  console.log(output);\n}\nrec()\n",
        "children": [],
        "fileType": "file",
        "_id": "62b42a87c786b7d1606a0199",
        "isSelectedFile": true,
        "createdAt": "2022-06-23T19:06:17.074Z",
        "updatedAt": "2022-06-23T19:06:17.074Z",
        "id": "62b42a87c786b7d1606a0199"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "62b42a87c786b7d1606a0198",
        "createdAt": "2022-06-23T19:06:17.074Z",
        "updatedAt": "2022-06-23T19:06:17.074Z",
        "isSelectedFile": false,
        "id": "62b42a87c786b7d1606a0198"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "62b42a87c786b7d1606a019a",
        "createdAt": "2022-06-23T19:06:17.074Z",
        "updatedAt": "2022-06-23T19:06:17.074Z",
        "isSelectedFile": false,
        "id": "62b42a87c786b7d1606a019a"
      }
    ],
    "createdAt": "2022-06-23T08:55:35.405Z",
    "updatedAt": "2022-06-23T19:06:17.074Z",
    "id": "zKyp8H3KM"
  },
  {
    "name": "rotate and flip",
    "_id": "MjIEpZ5F6",
    "updatedAt": "2022-09-22T10:53:38.011Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "62dfa529cfbce82f447bd597",
          "62dfa43ccfbce82f447bd594",
          "62dfa43ccfbce82f447bd593",
          "62dfa43ccfbce82f447bd595"
        ],
        "fileType": "folder",
        "_id": "62dfa43ccfbce82f447bd596",
        "createdAt": "2022-09-22T10:53:38.011Z",
        "updatedAt": "2022-09-22T10:53:38.011Z",
        "isSelectedFile": false,
        "id": "62dfa43ccfbce82f447bd596"
      },
      {
        "name": "sketch.js",
        "content": "function preload() {\n  img = loadImage(\"assets/kheiron.jpg\");\n}\n\nfunction setup() {\n  createCanvas(800, 800);\n  \n  background(0);\n  imageMode(CENTER);\n  \n  push();\n  translate(100, 100);\n  image(img, 0, 0, 200, 200);\n  pop();\n  \n  push();\n  translate(300, 100);\n  scale(-1, 1);\n  image(img, 0, 0, 200, 200);\n  pop();\n  \n  push();\n  translate(100, 300);\n  scale(1, -1);\n  image(img, 0, 0, 200, 200);\n  pop();\n  \n  push();\n  translate(300, 300);\n  scale(-1, -1);\n  image(img, 0, 0, 200, 200);\n  pop();\n  \n  push();\n  translate(500, 100);\n  rotate(PI/2);\n  scale(-1, 1);\n  image(img, 0, 0, 200, 200);\n  pop();\n  \n  push();\n  translate(700, 100);\n  rotate(PI/2);\n  scale(1, -1);\n  image(img, 0, 0, 200, 200);\n  pop();\n  \n  \n  push();\n  translate(700, 300);\n  rotate(PI/2);\n  image(img, 0, 0, 200, 200);\n  pop();\n  \n  push();\n  translate(500, 300);\n  rotate(PI/2);\n  scale(-1, -1);\n  image(img, 0, 0, 200, 200);\n  pop();\n  \n\n  \n}\n",
        "children": [],
        "fileType": "file",
        "_id": "62dfa43ccfbce82f447bd593",
        "isSelectedFile": true,
        "createdAt": "2022-09-22T10:53:38.011Z",
        "updatedAt": "2022-09-22T10:53:38.011Z",
        "id": "62dfa43ccfbce82f447bd593"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "62dfa43ccfbce82f447bd594",
        "createdAt": "2022-09-22T10:53:38.011Z",
        "updatedAt": "2022-09-22T10:53:38.011Z",
        "isSelectedFile": false,
        "id": "62dfa43ccfbce82f447bd594"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "62dfa43ccfbce82f447bd595",
        "createdAt": "2022-09-22T10:53:38.011Z",
        "updatedAt": "2022-09-22T10:53:38.011Z",
        "isSelectedFile": false,
        "id": "62dfa43ccfbce82f447bd595"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "62dfa53dcfbce82f447bd598"
        ],
        "fileType": "folder",
        "_id": "62dfa529cfbce82f447bd597",
        "createdAt": "2022-09-22T10:53:38.011Z",
        "updatedAt": "2022-09-22T10:53:38.011Z",
        "isSelectedFile": false,
        "id": "62dfa529cfbce82f447bd597"
      },
      {
        "name": "kheiron.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "62dfa53dcfbce82f447bd598",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/7143fd88-ae33-4f89-9ec0-72260cfe45c9.jpg",
        "createdAt": "2022-09-22T10:53:38.011Z",
        "updatedAt": "2022-09-22T10:53:38.011Z",
        "isSelectedFile": false,
        "id": "62dfa53dcfbce82f447bd598"
      }
    ],
    "createdAt": "2022-07-26T08:32:10.540Z",
    "id": "MjIEpZ5F6"
  },
  {
    "name": "self-outputting code",
    "_id": "fUEAnu6n6",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "62b37556c786b7d1606a0188",
          "62b37556c786b7d1606a0189",
          "62b37556c786b7d1606a018a"
        ],
        "fileType": "folder",
        "_id": "62b37556c786b7d1606a0187",
        "createdAt": "2022-06-22T20:02:49.510Z",
        "updatedAt": "2022-06-22T20:02:49.510Z",
        "isSelectedFile": false,
        "id": "62b37556c786b7d1606a0187"
      },
      {
        "name": "sketch.js",
        "content": "function rec() {\n  fs = \"\" + rec + \"rec()\";\n  lines = fs.split(\"\\n\");\n  output = \"\";\n  for (line of lines) {\n    output += line + \"\\n\"\n  }\n  console.log(output);\n}\nrec()\n",
        "children": [],
        "fileType": "file",
        "_id": "62b37556c786b7d1606a0189",
        "isSelectedFile": true,
        "createdAt": "2022-06-22T20:02:49.510Z",
        "updatedAt": "2022-06-22T20:02:49.510Z",
        "id": "62b37556c786b7d1606a0189"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "62b37556c786b7d1606a0188",
        "createdAt": "2022-06-22T20:02:49.510Z",
        "updatedAt": "2022-06-22T20:02:49.510Z",
        "isSelectedFile": false,
        "id": "62b37556c786b7d1606a0188"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "62b37556c786b7d1606a018a",
        "createdAt": "2022-06-22T20:02:49.510Z",
        "updatedAt": "2022-06-22T20:02:49.510Z",
        "isSelectedFile": false,
        "id": "62b37556c786b7d1606a018a"
      }
    ],
    "createdAt": "2022-06-22T20:02:30.662Z",
    "updatedAt": "2022-06-22T20:02:49.510Z",
    "id": "fUEAnu6n6"
  },
  {
    "name": "self-outputting code wave",
    "_id": "U12w_-2p2",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "62b3756dc786b7d1606a018c",
          "62b3756dc786b7d1606a018d",
          "62b3756dc786b7d1606a018e"
        ],
        "fileType": "folder",
        "_id": "62b3756dc786b7d1606a018b",
        "createdAt": "2022-06-22T20:15:09.781Z",
        "updatedAt": "2022-06-22T20:15:09.781Z",
        "isSelectedFile": false,
        "id": "62b3756dc786b7d1606a018b"
      },
      {
        "name": "sketch.js",
        "content": "function rec() {\n/* adapted from @fraguada's https://typed.art/3406 */ \nfs = \"\" + rec + \"rec()\";\nlines = fs.split(\"\\n\");\nlinesT = lines.length\nfreq = 4\nmax = 30\nperiod = freq * Math.PI\nunit = period / linesT\noutput = \"\";\na = 0;\nfor ( let i = 0; i < period || a < linesT; i += unit ) {\nlet ii = ( Math.sin( i ) + 1 ) * max\nif ( ii < 1 ) ii = 1\nlet s = ''\nfor ( let j = 0; j < ii; j ++ ) {\ns += '█'\n}\noutput += ( \"/*\" + s + \"*/\" )\nif (i < linesT) {\noutput += lines[a++] + \"\\n\";\n}\n}\nconsole.log(output);\n}\nrec()\n",
        "children": [],
        "fileType": "file",
        "_id": "62b3756dc786b7d1606a018d",
        "isSelectedFile": true,
        "createdAt": "2022-06-22T20:15:09.781Z",
        "updatedAt": "2022-06-22T20:15:09.781Z",
        "id": "62b3756dc786b7d1606a018d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "62b3756dc786b7d1606a018c",
        "createdAt": "2022-06-22T20:15:09.781Z",
        "updatedAt": "2022-06-22T20:15:09.781Z",
        "isSelectedFile": false,
        "id": "62b3756dc786b7d1606a018c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "62b3756dc786b7d1606a018e",
        "createdAt": "2022-06-22T20:15:09.781Z",
        "updatedAt": "2022-06-22T20:15:09.781Z",
        "isSelectedFile": false,
        "id": "62b3756dc786b7d1606a018e"
      }
    ],
    "createdAt": "2022-06-22T20:02:53.637Z",
    "updatedAt": "2022-06-22T20:15:09.781Z",
    "id": "U12w_-2p2"
  },
  {
    "name": "self-outputting code wave (iter 1)",
    "_id": "c0170GWmH",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "62b3785dc786b7d1606a0190",
          "62b3785dc786b7d1606a0191",
          "62b3785dc786b7d1606a0192"
        ],
        "fileType": "folder",
        "_id": "62b3785dc786b7d1606a018f",
        "createdAt": "2022-06-22T20:15:35.613Z",
        "updatedAt": "2022-06-22T20:15:35.613Z",
        "isSelectedFile": false,
        "id": "62b3785dc786b7d1606a018f"
      },
      {
        "name": "sketch.js",
        "content": "/*██████████████████████████████*/function rec() {\n/*█████████████████████████████████████████████*//* adapted from @fraguada's https://typed.art/3406 */ \n/*████████████████████████████████████████████████████████*/fs = \"\" + rec + \"rec()\";\n/*████████████████████████████████████████████████████████████*/lines = fs.split(\"\\n\");\n/*██████████████████████████████████████████████████████████*/linesT = lines.length\n/*████████████████████████████████████████████████*/freq = 4\n/*██████████████████████████████████*/max = 30\n/*███████████████████*/period = freq * Math.PI\n/*███████*/unit = period / linesT\n/*█*/output = \"\";\n/*██*/a = 0;\n/*██████████*/for ( let i = 0; i < period || a < linesT; i += unit ) {\n/*███████████████████████*/let ii = ( Math.sin( i ) + 1 ) * max\n/*██████████████████████████████████████*/if ( ii < 1 ) ii = 1\n/*███████████████████████████████████████████████████*/let s = ''\n/*███████████████████████████████████████████████████████████*/for ( let j = 0; j < ii; j ++ ) {\n/*████████████████████████████████████████████████████████████*/s += '█'\n/*██████████████████████████████████████████████████████*/}\n/*██████████████████████████████████████████*/output += ( \"/*\" + s + \"*/\" )\n/*███████████████████████████*/if (i < linesT) {\n/*█████████████*/output += lines[a++] + \"\\n\";\n/*███*/}\n/*█*/}\n/*█████*/console.log(output);\n/*████████████████*/}rec()",
        "children": [],
        "fileType": "file",
        "_id": "62b3785dc786b7d1606a0191",
        "isSelectedFile": true,
        "createdAt": "2022-06-22T20:15:35.613Z",
        "updatedAt": "2022-06-22T20:15:35.613Z",
        "id": "62b3785dc786b7d1606a0191"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "62b3785dc786b7d1606a0190",
        "createdAt": "2022-06-22T20:15:35.613Z",
        "updatedAt": "2022-06-22T20:15:35.613Z",
        "isSelectedFile": false,
        "id": "62b3785dc786b7d1606a0190"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "62b3785dc786b7d1606a0192",
        "createdAt": "2022-06-22T20:15:35.613Z",
        "updatedAt": "2022-06-22T20:15:35.613Z",
        "isSelectedFile": false,
        "id": "62b3785dc786b7d1606a0192"
      }
    ],
    "createdAt": "2022-06-22T20:15:25.628Z",
    "updatedAt": "2022-06-22T20:15:35.613Z",
    "id": "c0170GWmH"
  },
  {
    "name": "self-outputting code wave (iter 2)",
    "_id": "sdISjD4lV",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "62b37874c786b7d1606a0194",
          "62b37874c786b7d1606a0195",
          "62b37874c786b7d1606a0196"
        ],
        "fileType": "folder",
        "_id": "62b37874c786b7d1606a0193",
        "createdAt": "2022-06-22T20:16:16.620Z",
        "updatedAt": "2022-06-22T20:16:16.620Z",
        "isSelectedFile": false,
        "id": "62b37874c786b7d1606a0193"
      },
      {
        "name": "sketch.js",
        "content": "/*██████████████████████████████*/function rec() {\n/*█████████████████████████████████████████████*//*█████████████████████████████████████████████*//* adapted from @fraguada's https://typed.art/3406 */ \n/*████████████████████████████████████████████████████████*//*████████████████████████████████████████████████████████*/fs = \"\" + rec + \"rec()\";\n/*████████████████████████████████████████████████████████████*//*████████████████████████████████████████████████████████████*/lines = fs.split(\"\\n\");\n/*██████████████████████████████████████████████████████████*//*██████████████████████████████████████████████████████████*/linesT = lines.length\n/*████████████████████████████████████████████████*//*████████████████████████████████████████████████*/freq = 4\n/*██████████████████████████████████*//*██████████████████████████████████*/max = 30\n/*███████████████████*//*███████████████████*/period = freq * Math.PI\n/*███████*//*███████*/unit = period / linesT\n/*█*//*█*/output = \"\";\n/*██*//*██*/a = 0;\n/*██████████*//*██████████*/for ( let i = 0; i < period || a < linesT; i += unit ) {\n/*███████████████████████*//*███████████████████████*/let ii = ( Math.sin( i ) + 1 ) * max\n/*██████████████████████████████████████*//*██████████████████████████████████████*/if ( ii < 1 ) ii = 1\n/*███████████████████████████████████████████████████*//*███████████████████████████████████████████████████*/let s = ''\n/*███████████████████████████████████████████████████████████*//*███████████████████████████████████████████████████████████*/for ( let j = 0; j < ii; j ++ ) {\n/*████████████████████████████████████████████████████████████*//*████████████████████████████████████████████████████████████*/s += '█'\n/*██████████████████████████████████████████████████████*//*██████████████████████████████████████████████████████*/}\n/*██████████████████████████████████████████*//*██████████████████████████████████████████*/output += ( \"/*\" + s + \"*/\" )\n/*███████████████████████████*//*███████████████████████████*/if (i < linesT) {\n/*█████████████*//*█████████████*/output += lines[a++] + \"\\n\";\n/*███*//*███*/}\n/*█*//*█*/}\n/*█████*//*█████*/console.log(output);\n/*████████████████*//*████████████████*/}rec()",
        "children": [],
        "fileType": "file",
        "_id": "62b37874c786b7d1606a0195",
        "isSelectedFile": true,
        "createdAt": "2022-06-22T20:16:16.620Z",
        "updatedAt": "2022-06-22T20:16:16.620Z",
        "id": "62b37874c786b7d1606a0195"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "62b37874c786b7d1606a0194",
        "createdAt": "2022-06-22T20:16:16.620Z",
        "updatedAt": "2022-06-22T20:16:16.620Z",
        "isSelectedFile": false,
        "id": "62b37874c786b7d1606a0194"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "62b37874c786b7d1606a0196",
        "createdAt": "2022-06-22T20:16:16.620Z",
        "updatedAt": "2022-06-22T20:16:16.620Z",
        "isSelectedFile": false,
        "id": "62b37874c786b7d1606a0196"
      }
    ],
    "createdAt": "2022-06-22T20:15:48.734Z",
    "updatedAt": "2022-06-22T20:16:16.620Z",
    "id": "sdISjD4lV"
  },
  {
    "name": "Shy seahorse Matrix2 copy",
    "_id": "lEE7GL-ZR",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6145ed3305b73f56c03bce11",
          "6145ed3305b73f56c03bce12",
          "6145ed3305b73f56c03bce13",
          "6145ed3305b73f56c03bce14",
          "6145ed3305b73f56c03bce15",
          "6145ed3305b73f56c03bce16",
          "6145ed3305b73f56c03bce17",
          "6145ed3305b73f56c03bce18",
          "6145ed3305b73f56c03bce19"
        ],
        "fileType": "folder",
        "_id": "6145ed3305b73f56c03bce10",
        "createdAt": "2021-09-18T13:44:57.167Z",
        "updatedAt": "2021-09-18T13:44:57.167Z",
        "isSelectedFile": false,
        "id": "6145ed3305b73f56c03bce10"
      },
      {
        "name": "sketch.js",
        "content": "// Original: https://editor.p5js.org/Shynif/sketches/pLj4a9KrL\n\nlet marg, TV, GS, pg, capture,SL,CR,NO,ps;\nlet animation = 1;\nlet jump = 0; // Animation 1\nlet t=0;\nlet CRpos=[]; // Cracks'  position\nlet Spos =[]; // Screens' position\nlet tt=60;\n\nfunction preload() {\n  TV = loadImage('OldTv.png');\n  GS = loadImage('InsideGreenScreen.png'); // Green Screen but rgb(221,123,129)\n  SL = loadImage('scanlines3.png'); // Scan Lines\n  CR = loadImage('crack.png');      // Crack png\n  NO = loadImage('https://c.tenor.com/g6SE3mueJt0AAAAC/static-noise.gif');      // Noise GIF\n}\n\nfunction setup() {\n  createCanvas(800, 800);\n  marg = height/5; // Margin\n  jump = (height-marg*2)/5;\n  pg = createGraphics(height,height,P2D);\n  pg.noStroke();\n  capture = createCapture(VIDEO);\n  capture.size(height,height);\n  for (let i=0; i<12;i++){\n    CRpos.push([random(marg,height-marg),random(marg,height-marg)]);\n  }\n}\n\nfunction draw() {\n  \n  switch(animation) {\n    case 1:\n      if (!t) { // Initialisation\n        background(255);\n        for (let x=marg;x<height-marg;x+=jump) {\n          for (let y=marg;y<height-marg;y+=jump) {\n            const rX = random(30);\n            image(TV,x-20+rX,y,jump+20,jump+20);\n            image(GS,x-30+rX,y-0.5,jump+20,jump+20);\n            if (rX<20) Spos.push([x+rX,y]);\n          }\n        }\n        // get all the pixels that aren't \"green\" screen\n        loadPixels();\n        pg.loadPixels();\n        for (let x=0;x<height;x++) {\n          for (let y=0;y<height;y++) {\n            const i=(x+y*width)*4;\n            if (pixels[i]!=221) {\n              pg.set(x,y,[pixels[i],pixels[i+1],pixels[i+2],255]);\n            }\n          }\n        }\n        pg.updatePixels();\n        updatePixels();\n      }\n      \n      image(capture,marg,marg,height-marg*2,height-marg*2);\n      filter(POSTERIZE,5);\n      \n      for (let pos of CRpos) {\n        image(CR,pos[0],pos[1],jump/1.5,jump/1.5);\n      }\n      image(SL,0,0);\n      \n      if(t%tt==0) {\n        ps=random(Spos);\n        tt=round(random(30,200));\n        if (random()<0.3) ps=[0,0]; // Out of the TVs\n      }\n      image(NO,ps[0]-10,ps[1],jump-10,jump);\n      \n      image(pg,0,0); // Front screens\n    break;\n  }\n  \n  \n  //noLoop();\n  t++;\n}",
        "children": [],
        "fileType": "file",
        "_id": "6145ed3305b73f56c03bce18",
        "isSelectedFile": true,
        "createdAt": "2021-09-18T13:44:57.167Z",
        "updatedAt": "2021-09-18T13:44:57.167Z",
        "id": "6145ed3305b73f56c03bce18"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6145ed3305b73f56c03bce14",
        "createdAt": "2021-09-18T13:44:57.167Z",
        "updatedAt": "2021-09-18T13:44:57.167Z",
        "isSelectedFile": false,
        "id": "6145ed3305b73f56c03bce14"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6145ed3305b73f56c03bce19",
        "createdAt": "2021-09-18T13:44:57.167Z",
        "updatedAt": "2021-09-18T13:44:57.167Z",
        "isSelectedFile": false,
        "id": "6145ed3305b73f56c03bce19"
      },
      {
        "name": "OldTv.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6145ed3305b73f56c03bce12",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/fc0f8e0e-792f-4022-b5bd-a89aa1154fb1.png",
        "updatedAt": "2021-09-18T13:44:57.167Z",
        "createdAt": "2021-09-18T13:44:57.167Z",
        "isSelectedFile": false,
        "id": "6145ed3305b73f56c03bce12"
      },
      {
        "name": "InsideGreenScreen.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6145ed3305b73f56c03bce11",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/a8678f87-f821-41b4-b193-aea2a6bb9987.png",
        "updatedAt": "2021-09-18T13:44:57.167Z",
        "createdAt": "2021-09-18T13:44:57.167Z",
        "isSelectedFile": false,
        "id": "6145ed3305b73f56c03bce11"
      },
      {
        "name": "scanlines.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6145ed3305b73f56c03bce15",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/0e75bc4b-65f9-4637-8921-3b3be1335427.png",
        "isSelectedFile": false,
        "updatedAt": "2021-09-18T13:44:57.167Z",
        "createdAt": "2021-09-18T13:44:57.167Z",
        "id": "6145ed3305b73f56c03bce15"
      },
      {
        "name": "scanlines2.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6145ed3305b73f56c03bce16",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/4abcbfef-90cf-4f80-8b3c-330eb97302d4.png",
        "updatedAt": "2021-09-18T13:44:57.167Z",
        "createdAt": "2021-09-18T13:44:57.167Z",
        "isSelectedFile": false,
        "id": "6145ed3305b73f56c03bce16"
      },
      {
        "name": "scanlines3.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6145ed3305b73f56c03bce17",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/07e4cfe8-bf71-420c-be1f-18ba0bc52dcf.png",
        "updatedAt": "2021-09-18T13:44:57.167Z",
        "createdAt": "2021-09-18T13:44:57.167Z",
        "isSelectedFile": false,
        "id": "6145ed3305b73f56c03bce17"
      },
      {
        "name": "crack.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6145ed3305b73f56c03bce13",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/54fc1f2b-58de-4c04-94e7-246a8ba195a6.png",
        "updatedAt": "2021-09-18T13:44:57.167Z",
        "createdAt": "2021-09-18T13:44:57.167Z",
        "isSelectedFile": false,
        "id": "6145ed3305b73f56c03bce13"
      }
    ],
    "createdAt": "2021-09-18T13:44:20.345Z",
    "updatedAt": "2021-09-18T13:44:57.167Z",
    "id": "lEE7GL-ZR"
  },
  {
    "name": "slide puzzle",
    "_id": "mVe8Y171N",
    "updatedAt": "2021-10-15T17:15:35.559Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6169b07289d35075edef60cc",
          "6169aeb389d35075edef60c7",
          "6169aeb389d35075edef60c6",
          "6169aeb389d35075edef60c8",
          "6169b22a93e8190024ddec30"
        ],
        "fileType": "folder",
        "_id": "6169aeb389d35075edef60c9",
        "isSelectedFile": false,
        "createdAt": "2021-10-15T17:15:35.559Z",
        "updatedAt": "2021-10-15T17:15:35.559Z",
        "id": "6169aeb389d35075edef60c9"
      },
      {
        "name": "sketch.js",
        "content": "let img;\nlet tiles;\nlet cols = 5;\nlet rows = 5;\n\nfunction preload() {\n  img = loadImage('choochoobot.png');\n}\n\nfunction setup() {\n  createCanvas(400,400);\n  \n  tiles = [];\n  \n  \n  for (let i=0; i < cols; i++) {\n    for (let j=0; j < rows; j++) {\n      \n      let tile = new Tile(i , j,\n                          img.get(i * width/cols + 1, j * height/rows + 1, width/cols -2 , height/rows - 2));\n      \n      tiles.push(tile);\n    }\n  }\n  \n  tiles.splice(tiles.length - 1, 1);\n  \n}\n\nfunction draw() {\n  background(0);\n  for (let i=0; i < tiles.length; i++) {\n    tiles[i].render();\n  }\n}\n\nfunction mousePressed()  {\n  \n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "6169aeb389d35075edef60c6",
        "isSelectedFile": true,
        "createdAt": "2021-10-15T17:15:35.559Z",
        "updatedAt": "2021-10-15T17:15:35.559Z",
        "id": "6169aeb389d35075edef60c6"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"tile.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6169aeb389d35075edef60c7",
        "isSelectedFile": false,
        "createdAt": "2021-10-15T17:15:35.559Z",
        "updatedAt": "2021-10-15T17:15:35.559Z",
        "id": "6169aeb389d35075edef60c7"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6169aeb389d35075edef60c8",
        "isSelectedFile": false,
        "createdAt": "2021-10-15T17:15:35.559Z",
        "updatedAt": "2021-10-15T17:15:35.559Z",
        "id": "6169aeb389d35075edef60c8"
      },
      {
        "name": "choochoobot.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6169b07289d35075edef60cc",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/262c90e8-213b-46b5-906d-e0fde9aa88f1.png",
        "createdAt": "2021-10-15T17:15:35.559Z",
        "updatedAt": "2021-10-15T17:15:35.559Z",
        "isSelectedFile": false,
        "id": "6169b07289d35075edef60cc"
      },
      {
        "name": "tile.js",
        "content": "class Tile {\n  \n  constructor(x, y, img) {\n    this.x = x;\n    this.y = y;\n    this.img = img;\n  }\n  \n  render() {\n    image(this.img, this.x * width/cols + 1, this.y * height/rows + 1);\n  }\n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "6169b22a93e8190024ddec30",
        "isSelectedFile": false,
        "updatedAt": "2021-10-15T17:15:35.559Z",
        "createdAt": "2021-10-15T17:15:35.559Z",
        "id": "6169b22a93e8190024ddec30"
      }
    ],
    "createdAt": "2021-10-15T16:46:50.496Z",
    "id": "mVe8Y171N"
  },
  {
    "name": "slit dream",
    "_id": "BqwdL-Cph",
    "updatedAt": "2023-04-16T19:11:14.291Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "643c39744da3eb7762386528",
          "643c39744da3eb7762386527",
          "643c39744da3eb7762386529"
        ],
        "fileType": "folder",
        "_id": "643c39744da3eb776238652a",
        "createdAt": "2023-04-16T19:11:14.291Z",
        "updatedAt": "2023-04-16T19:11:14.291Z",
        "isSelectedFile": false,
        "id": "643c39744da3eb776238652a"
      },
      {
        "name": "sketch.js",
        "content": "/*\n* a happy accident during slit scanning, distilled to its core feature.\n*\n* by ktorn\n*/\nlet b1;\nlet b2;\n\nlet step = 8;\nlet distortion = 10;\n\nfunction setup() {\n  createCanvas(800, 800);\n  b1 = createGraphics(width / 2, height);\n  b2 = createGraphics(width, height);\n\n  b1.fill(0);\n  b1.noStroke();\n}\n\nfunction draw() {\n  background(255);\n\n  let y = cos(frameCount / 50) * 100;\n  b1.clear();\n  b1.circle(0, height / 2 + y, 10);\n  b2.image(b2, -step, -distortion / 2, b2.width + distortion, b2.height + distortion);\n  b2.image(b1, width / 2 + 100, 0);\n  b2.background(255, 10);\n  image(b2, 0, 0);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "643c39744da3eb7762386527",
        "isSelectedFile": true,
        "createdAt": "2023-04-16T19:11:14.291Z",
        "updatedAt": "2023-04-16T19:11:14.291Z",
        "id": "643c39744da3eb7762386527"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "643c39744da3eb7762386528",
        "createdAt": "2023-04-16T19:11:14.291Z",
        "updatedAt": "2023-04-16T19:11:14.291Z",
        "isSelectedFile": false,
        "id": "643c39744da3eb7762386528"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "643c39744da3eb7762386529",
        "createdAt": "2023-04-16T19:11:14.291Z",
        "updatedAt": "2023-04-16T19:11:14.291Z",
        "isSelectedFile": false,
        "id": "643c39744da3eb7762386529"
      }
    ],
    "createdAt": "2023-04-16T18:09:51.230Z",
    "id": "BqwdL-Cph"
  },
  {
    "name": "slit dream copy",
    "_id": "kNRCDxh7K",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6560bbb4018c39cd7161e8bd",
          "6560bbb4018c39cd7161e8be",
          "6560bbb4018c39cd7161e8bf"
        ],
        "fileType": "folder",
        "_id": "6560bbb4018c39cd7161e8bc",
        "createdAt": "2023-11-24T15:27:55.141Z",
        "updatedAt": "2023-11-24T15:27:55.141Z",
        "isSelectedFile": false,
        "id": "6560bbb4018c39cd7161e8bc"
      },
      {
        "name": "sketch.js",
        "content": "/*\n* a happy accident during slit scanning, distilled to its core feature.\n*\n* by ktorn\n*/\nlet b1;\nlet b2;\n\nlet step = 16;\nlet distortion = 5;\nlet color1;\nlet color2;\nlet yMin;\nlet yMax;\n\nfunction setup() {\n  createCanvas(800, 800);\n  b1 = createGraphics(width / 2, height);\n  b2 = createGraphics(width, height);\n  \n  color1 = color(255);\n  color2 = color(0);\n  yMin = -100;\n  yMax = 100;\n\n  b1.fill(0);\n  b1.noStroke();\n}\n\nfunction draw() {\n  background(255);\n\n  let y = cos(frameCount / 50) * 100;\n  \n  let le = map(y, -100, 100, 0, 1);\n  let c = lerpColor(color1, color2, le);\n  b1.fill(c);\n  \n  b1.clear();\n  b1.image(b2, 0, 0);\n  b1.circle(0, height / 2 + y, 10);\n  b2.image(b2, -step, -distortion / 2, b2.width + distortion, b2.height + distortion);\n  b2.image(b1, width / 2 + 100, 0);\n  b2.background(255,1);\n  image(b2, 0, 0);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6560bbb4018c39cd7161e8be",
        "isSelectedFile": true,
        "createdAt": "2023-11-24T15:27:55.141Z",
        "updatedAt": "2023-11-24T15:27:55.141Z",
        "id": "6560bbb4018c39cd7161e8be"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6560bbb4018c39cd7161e8bd",
        "createdAt": "2023-11-24T15:27:55.141Z",
        "updatedAt": "2023-11-24T15:27:55.141Z",
        "isSelectedFile": false,
        "id": "6560bbb4018c39cd7161e8bd"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6560bbb4018c39cd7161e8bf",
        "createdAt": "2023-11-24T15:27:55.141Z",
        "updatedAt": "2023-11-24T15:27:55.141Z",
        "isSelectedFile": false,
        "id": "6560bbb4018c39cd7161e8bf"
      }
    ],
    "createdAt": "2023-11-24T15:05:24.989Z",
    "updatedAt": "2023-11-24T15:27:55.141Z",
    "id": "kNRCDxh7K"
  },
  {
    "name": "slit dream experiment 2",
    "_id": "nxUf9Ojpd",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6560c166018c39cd7161e8c1",
          "6560c166018c39cd7161e8c2",
          "6560c166018c39cd7161e8c3"
        ],
        "fileType": "folder",
        "_id": "6560c166018c39cd7161e8c0",
        "createdAt": "2023-11-24T15:31:29.771Z",
        "updatedAt": "2023-11-24T15:31:29.771Z",
        "isSelectedFile": false,
        "id": "6560c166018c39cd7161e8c0"
      },
      {
        "name": "sketch.js",
        "content": "/*\n* a happy accident during slit scanning, distilled to its core feature.\n*\n* by ktorn\n*/\nlet b1;\nlet b2;\n\nlet step = 8;\nlet distortion = 8;\nlet color1;\nlet color2;\nlet yMin;\nlet yMax;\n\nfunction setup() {\n  createCanvas(800, 800);\n  b1 = createGraphics(width / 2, height);\n  b2 = createGraphics(width, height);\n  \n  color1 = color(255);\n  color2 = color(0);\n  yMin = -100;\n  yMax = 100;\n\n  b1.fill(0);\n  b1.noStroke();\n}\n\nfunction draw() {\n  background(255);\n\n  let y = cos(frameCount / 50) * 100;\n  \n  let le = map(y, -100, 100, 0, 1);\n  let c = lerpColor(color1, color2, le);\n  b1.fill(c);\n  \n  b1.clear();\n  b1.image(b2, 0, 0);\n  b1.circle(0, height / 2 + y, 10);\n  b2.image(b2, -step, -distortion / 2, b2.width + distortion, b2.height + distortion);\n  b2.image(b1, width / 2 + 100, 0);\n  b2.background(255,1);\n  image(b2, 0, 0);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6560c166018c39cd7161e8c2",
        "isSelectedFile": true,
        "createdAt": "2023-11-24T15:31:29.771Z",
        "updatedAt": "2023-11-24T15:31:29.771Z",
        "id": "6560c166018c39cd7161e8c2"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6560c166018c39cd7161e8c1",
        "createdAt": "2023-11-24T15:31:29.771Z",
        "updatedAt": "2023-11-24T15:31:29.771Z",
        "isSelectedFile": false,
        "id": "6560c166018c39cd7161e8c1"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6560c166018c39cd7161e8c3",
        "createdAt": "2023-11-24T15:31:29.771Z",
        "updatedAt": "2023-11-24T15:31:29.771Z",
        "isSelectedFile": false,
        "id": "6560c166018c39cd7161e8c3"
      }
    ],
    "createdAt": "2023-11-24T15:29:42.615Z",
    "updatedAt": "2023-11-24T15:31:29.771Z",
    "id": "nxUf9Ojpd"
  },
  {
    "name": "slit dream experiment 3 (to study - solar flares)",
    "_id": "DJ1YLXv7Q",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6560c1d5018c39cd7161e8c5",
          "6560c1d5018c39cd7161e8c6",
          "6560c1d5018c39cd7161e8c7"
        ],
        "fileType": "folder",
        "_id": "6560c1d5018c39cd7161e8c4",
        "createdAt": "2023-11-24T15:42:41.072Z",
        "updatedAt": "2023-11-24T15:42:41.072Z",
        "isSelectedFile": false,
        "id": "6560c1d5018c39cd7161e8c4"
      },
      {
        "name": "sketch.js",
        "content": "/*\n* a happy accident during slit scanning, distilled to its core feature.\n*\n* by ktorn\n*/\nlet b1;\nlet b2;\n\nlet step = 5;\nlet distortion = 8.5;\nlet color1;\nlet color2;\nlet yMin;\nlet yMax;\n\nfunction setup() {\n  createCanvas(800, 800);\n  b1 = createGraphics(width / 2, height);\n  b2 = createGraphics(width, height);\n  \n  color1 = color(\"red\");\n  color2 = color(\"blue\");\n  yMin = -100;\n  yMax = 100;\n\n  b1.fill(0);\n  b1.noStroke();\n}\n\nfunction draw() {\n  background(255);\n\n  let y = cos(frameCount / 50) * 100;\n  \n  let le = map(y, -100, 100, 0, 1);\n  let c = lerpColor(color1, color2, le);\n  b1.fill(c);\n  \n  b1.clear();\n  b1.image(b2, 0, 0);\n  b1.circle(0, height / 2 + y, 10);\n  b2.image(b2, -step, -distortion / 2, b2.width + distortion, b2.height + distortion);\n  b2.image(b1, width / 2 + 100, 0);\n  b2.background(255,0.49);\n  image(b2, 0, 0);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6560c1d5018c39cd7161e8c6",
        "isSelectedFile": true,
        "createdAt": "2023-11-24T15:42:41.072Z",
        "updatedAt": "2023-11-24T15:42:41.072Z",
        "id": "6560c1d5018c39cd7161e8c6"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6560c1d5018c39cd7161e8c5",
        "createdAt": "2023-11-24T15:42:41.072Z",
        "updatedAt": "2023-11-24T15:42:41.072Z",
        "isSelectedFile": false,
        "id": "6560c1d5018c39cd7161e8c5"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6560c1d5018c39cd7161e8c7",
        "createdAt": "2023-11-24T15:42:41.072Z",
        "updatedAt": "2023-11-24T15:42:41.072Z",
        "isSelectedFile": false,
        "id": "6560c1d5018c39cd7161e8c7"
      }
    ],
    "createdAt": "2023-11-24T15:31:33.248Z",
    "updatedAt": "2023-11-24T15:42:41.072Z",
    "id": "DJ1YLXv7Q"
  },
  {
    "name": "slit dream experiment 4",
    "_id": "0P5Q-5L0U",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6560c47f018c39cd7161e8c9",
          "6560c47f018c39cd7161e8ca",
          "6560c47f018c39cd7161e8cb"
        ],
        "fileType": "folder",
        "_id": "6560c47f018c39cd7161e8c8",
        "createdAt": "2023-11-24T15:43:53.175Z",
        "updatedAt": "2023-11-24T15:43:53.175Z",
        "isSelectedFile": false,
        "id": "6560c47f018c39cd7161e8c8"
      },
      {
        "name": "sketch.js",
        "content": "/*\n* a happy accident during slit scanning, distilled to its core feature.\n*\n* by ktorn\n*/\nlet b1;\nlet b2;\n\nlet step = 5;\nlet distortion = 5;\nlet color1;\nlet color2;\nlet yMin;\nlet yMax;\n\nfunction setup() {\n  createCanvas(800, 800);\n  b1 = createGraphics(width / 2, height);\n  b2 = createGraphics(width, height);\n  \n  color1 = color(\"red\");\n  color2 = color(\"blue\");\n  yMin = -100;\n  yMax = 100;\n\n  b1.fill(0);\n  b1.noStroke();\n}\n\nfunction draw() {\n  background(255);\n\n  let y = cos(frameCount / 50) * 100;\n  \n  let le = map(y, -100, 100, 0, 1);\n  let c = lerpColor(color1, color2, le);\n  b1.fill(c);\n  \n  b1.clear();\n  b1.image(b2, 0, 0);\n  b1.circle(0, height / 2 + y, 10);\n  b2.image(b2, -step, -distortion / 2, b2.width + distortion, b2.height + distortion);\n  b2.image(b1, width / 2 + 100, 0);\n  b2.background(255,0.49);\n  image(b2, 0, 0);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6560c47f018c39cd7161e8ca",
        "isSelectedFile": true,
        "createdAt": "2023-11-24T15:43:53.175Z",
        "updatedAt": "2023-11-24T15:43:53.175Z",
        "id": "6560c47f018c39cd7161e8ca"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6560c47f018c39cd7161e8c9",
        "createdAt": "2023-11-24T15:43:53.175Z",
        "updatedAt": "2023-11-24T15:43:53.175Z",
        "isSelectedFile": false,
        "id": "6560c47f018c39cd7161e8c9"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6560c47f018c39cd7161e8cb",
        "createdAt": "2023-11-24T15:43:53.175Z",
        "updatedAt": "2023-11-24T15:43:53.175Z",
        "isSelectedFile": false,
        "id": "6560c47f018c39cd7161e8cb"
      }
    ],
    "createdAt": "2023-11-24T15:42:55.347Z",
    "updatedAt": "2023-11-24T15:43:53.175Z",
    "id": "0P5Q-5L0U"
  },
  {
    "name": "Sound - jump sfx",
    "_id": "fTe8eoAPe",
    "updatedAt": "2020-10-22T04:22:11.791Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5f910879fd0dad65236355e2",
          "5f9107e0fd0dad65236355df",
          "5f9107e0fd0dad65236355de",
          "5f9107e0fd0dad65236355e0"
        ],
        "fileType": "folder",
        "_id": "5f9107e0fd0dad65236355e1",
        "isSelectedFile": false,
        "createdAt": "2020-10-22T04:22:11.791Z",
        "updatedAt": "2020-10-22T04:22:11.791Z",
        "id": "5f9107e0fd0dad65236355e1"
      },
      {
        "name": "sketch.js",
        "content": "let jump;\n\nfunction preload() {\n  jump = loadSound(\"assets/jump.wav\");\n  jump.setVolume(0.2);\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n}\n\nfunction mousePressed() {\n  jump.play();\n}",
        "children": [],
        "fileType": "file",
        "_id": "5f9107e0fd0dad65236355de",
        "isSelectedFile": true,
        "createdAt": "2020-10-22T04:22:11.791Z",
        "updatedAt": "2020-10-22T04:22:11.791Z",
        "id": "5f9107e0fd0dad65236355de"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "5f9107e0fd0dad65236355df",
        "isSelectedFile": false,
        "createdAt": "2020-10-22T04:22:11.791Z",
        "updatedAt": "2020-10-22T04:22:11.791Z",
        "id": "5f9107e0fd0dad65236355df"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5f9107e0fd0dad65236355e0",
        "isSelectedFile": false,
        "createdAt": "2020-10-22T04:22:11.791Z",
        "updatedAt": "2020-10-22T04:22:11.791Z",
        "id": "5f9107e0fd0dad65236355e0"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "5f91088efd0dad65236355e3"
        ],
        "fileType": "folder",
        "_id": "5f910879fd0dad65236355e2",
        "isSelectedFile": false,
        "createdAt": "2020-10-22T04:22:11.791Z",
        "updatedAt": "2020-10-22T04:22:11.791Z",
        "id": "5f910879fd0dad65236355e2"
      },
      {
        "name": "jump.wav",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f91088efd0dad65236355e3",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/4c072a4b-a43a-46c1-b525-e959f43ee48f.wav",
        "isSelectedFile": false,
        "createdAt": "2020-10-22T04:22:11.791Z",
        "updatedAt": "2020-10-22T04:22:11.791Z",
        "id": "5f91088efd0dad65236355e3"
      }
    ],
    "createdAt": "2020-10-22T04:22:11.791Z",
    "id": "fTe8eoAPe"
  },
  {
    "name": "Spiffy brow",
    "_id": "lT9YnMCSS",
    "updatedAt": "2021-05-06T19:08:55.295Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6093f90807d44a1548eac163",
          "6093f90807d44a1548eac162",
          "6093f90807d44a1548eac164"
        ],
        "fileType": "folder",
        "_id": "6093f90807d44a1548eac165",
        "createdAt": "2021-05-06T19:08:55.295Z",
        "updatedAt": "2021-05-06T19:08:55.295Z",
        "id": "6093f90807d44a1548eac165"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  \n  \n   var output = \"privacy_important  <- c(\";\n  \n  for (var i=0; i < 50; i++) {\n    \n    output +=  \"\\\"\" + random([\"strongly agree\", \"agree\", \"neither agree or disagree\", \"disagree\", \"strongly disagree\"])  + \"\\\"\";\n    output += \",\"\n    \n  }\n  \n  output += \")\";\n  \n  print(output);\n}\n\nfunction draw() {\n  background(220);\n}",
        "children": [],
        "fileType": "file",
        "_id": "6093f90807d44a1548eac162",
        "isSelectedFile": true,
        "createdAt": "2021-05-06T19:08:55.295Z",
        "updatedAt": "2021-05-06T19:08:55.295Z",
        "id": "6093f90807d44a1548eac162"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.2.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.2.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6093f90807d44a1548eac163",
        "createdAt": "2021-05-06T19:08:55.295Z",
        "updatedAt": "2021-05-06T19:08:55.295Z",
        "id": "6093f90807d44a1548eac163"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6093f90807d44a1548eac164",
        "createdAt": "2021-05-06T19:08:55.295Z",
        "updatedAt": "2021-05-06T19:08:55.295Z",
        "id": "6093f90807d44a1548eac164"
      }
    ],
    "createdAt": "2021-05-06T14:16:45.793Z",
    "id": "lT9YnMCSS"
  },
  {
    "name": "Sprite generator",
    "_id": "3exjMMtG1",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5f97a7d5b70dc1682ed21130",
          "5f97a7d5b70dc1682ed21139",
          "5f97a7d5b70dc1682ed2113a",
          "5f97a7d5b70dc1682ed2113c",
          "5f97a7d5b70dc1682ed2113d"
        ],
        "fileType": "folder",
        "_id": "5f97a7d5b70dc1682ed2112f",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T05:11:52.129Z",
        "updatedAt": "2020-10-27T05:11:52.129Z",
        "id": "5f97a7d5b70dc1682ed2112f"
      },
      {
        "name": "sketch.js",
        "content": "let sprites;\nlet platform;\n\nfunction setup() {\n  createCanvas(800, 400);\n  \n  platform = createSprite(width / 2, height /2, 50, 50);\n  platform.immovable = true;\n  \n  sprites = Group();\n}\n\nfunction draw() {\n  background(255);\n  \n  sprites.bounce(sprites);\n  sprites.bounce(platform);\n  \n  for(sprite of sprites.toArray()) {\n    sprite.attractionPoint(0.5, mouseX, mouseY);\n  }\n  \n  drawSprites();\n}\n\nfunction mousePressed() {\n  let s = createSprite(mouseX, mouseY, 10, 10);\n  s.maxSpeed = 5;\n  s.velocity.x = random(-5, 5);\n  s.velocity.y = random(-5, 5);\n  \n  sprites.add(s);\n  \n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "5f97a7d5b70dc1682ed2113c",
        "isSelectedFile": true,
        "createdAt": "2020-10-27T05:11:52.129Z",
        "updatedAt": "2020-10-27T05:11:52.129Z",
        "id": "5f97a7d5b70dc1682ed2113c"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n    <script src=\"lib/p5.play.js\" type=\"text/javascript\"></script>\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "5f97a7d5b70dc1682ed21139",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T05:11:52.129Z",
        "updatedAt": "2020-10-27T05:11:52.129Z",
        "id": "5f97a7d5b70dc1682ed21139"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5f97a7d5b70dc1682ed2113d",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T05:11:52.129Z",
        "updatedAt": "2020-10-27T05:11:52.129Z",
        "id": "5f97a7d5b70dc1682ed2113d"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "5f97a7d5b70dc1682ed21131",
          "5f97a7d5b70dc1682ed21132",
          "5f97a7d5b70dc1682ed21133",
          "5f97a7d5b70dc1682ed21134",
          "5f97a7d5b70dc1682ed21135",
          "5f97a7d5b70dc1682ed21136",
          "5f97a7d5b70dc1682ed21137",
          "5f97a7d5b70dc1682ed21138"
        ],
        "fileType": "folder",
        "_id": "5f97a7d5b70dc1682ed21130",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T05:11:52.129Z",
        "updatedAt": "2020-10-27T05:11:52.129Z",
        "id": "5f97a7d5b70dc1682ed21130"
      },
      {
        "name": "lib",
        "content": "",
        "children": [
          "5f97a7d5b70dc1682ed2113b"
        ],
        "fileType": "folder",
        "_id": "5f97a7d5b70dc1682ed2113a",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T05:11:52.129Z",
        "updatedAt": "2020-10-27T05:11:52.129Z",
        "id": "5f97a7d5b70dc1682ed2113a"
      },
      {
        "name": "p5.play.js",
        "content": "/*\np5.play\nby Paolo Pedercini/molleindustria, 2015\nhttp://molleindustria.org/\n*/\n\n(function(root, factory) {\nif (typeof define === 'function' && define.amd)\ndefine('p5.play', ['p5'], function(p5) { (factory(p5)); });\nelse if (typeof exports === 'object')\nfactory(require('../p5'));\nelse\nfactory(root.p5);\n}(this, function(p5) {\n/**\n * p5.play is a library for p5.js to facilitate the creation of games and gamelike\n * projects.\n *\n * It provides a flexible Sprite class to manage visual objects in 2D space\n * and features such as animation support, basic collision detection\n * and resolution, mouse and keyboard interactions, and a virtual camera.\n *\n * p5.play is not a box2D-derived physics engine, it doesn't use events, and it's\n * designed to be understood and possibly modified by intermediate programmers.\n *\n * See the examples folder for more info on how to use this library.\n *\n * @module p5.play\n * @submodule p5.play\n * @for p5.play\n * @main\n */\n\n// =============================================================================\n//                         initialization\n// =============================================================================\n\n// This is the new way to initialize custom p5 properties for any p5 instance.\n// The goal is to migrate lazy P5 properties over to this method.\n// @see https://github.com/molleindustria/p5.play/issues/46\np5.prototype.registerMethod('init', function p5PlayInit() {\n  /**\n   * The sketch camera automatically created at the beginning of a sketch.\n   * A camera facilitates scrolling and zooming for scenes extending beyond\n   * the canvas. A camera has a position, a zoom factor, and the mouse\n   * coordinates relative to the view.\n   *\n   * In p5.js terms the camera wraps the whole drawing cycle in a\n   * transformation matrix but it can be disabled anytime during the draw\n   * cycle, for example to draw interface elements in an absolute position.\n   *\n   * @property camera\n   * @type {camera}\n   */\n  this.camera = new Camera(this, 0, 0, 1);\n  this.camera.init = false;\n});\n\n// This provides a way for us to lazily define properties that\n// are global to p5 instances.\n//\n// Note that this isn't just an optimization: p5 currently provides no\n// way for add-ons to be notified when new p5 instances are created, so\n// lazily creating these properties is the *only* mechanism available\n// to us. For more information, see:\n//\n// https://github.com/processing/p5.js/issues/1263\nfunction defineLazyP5Property(name, getter) {\n  Object.defineProperty(p5.prototype, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var context = (this instanceof p5 && !this._isGlobal) ? this : window;\n\n      if (typeof(context._p5PlayProperties) === 'undefined') {\n        context._p5PlayProperties = {};\n      }\n      if (!(name in context._p5PlayProperties)) {\n        context._p5PlayProperties[name] = getter.call(context);\n      }\n      return context._p5PlayProperties[name];\n    }\n  });\n}\n\n// This returns a factory function, suitable for passing to\n// defineLazyP5Property, that returns a subclass of the given\n// constructor that is always bound to a particular p5 instance.\nfunction boundConstructorFactory(constructor) {\n  if (typeof(constructor) !== 'function')\n    throw new Error('constructor must be a function');\n\n  return function createBoundConstructor() {\n    var pInst = this;\n\n    function F() {\n      var args = Array.prototype.slice.call(arguments);\n\n      return constructor.apply(this, [pInst].concat(args));\n    }\n    F.prototype = constructor.prototype;\n\n    return F;\n  };\n}\n\n// This is a utility that makes it easy to define convenient aliases to\n// pre-bound p5 instance methods.\n//\n// For example:\n//\n//   var pInstBind = createPInstBinder(pInst);\n//\n//   var createVector = pInstBind('createVector');\n//   var loadImage = pInstBind('loadImage');\n//\n// The above will create functions createVector and loadImage, which can be\n// used similar to p5 global mode--however, they're bound to specific p5\n// instances, and can thus be used outside of global mode.\nfunction createPInstBinder(pInst) {\n  return function pInstBind(methodName) {\n    var method = pInst[methodName];\n\n    if (typeof(method) !== 'function')\n      throw new Error('\"' + methodName + '\" is not a p5 method');\n    return method.bind(pInst);\n  };\n}\n\n// These are utility p5 functions that don't depend on p5 instance state in\n// order to work properly, so we'll go ahead and make them easy to\n// access without needing to bind them to a p5 instance.\nvar abs = p5.prototype.abs;\nvar radians = p5.prototype.radians;\nvar dist = p5.prototype.dist;\nvar degrees = p5.prototype.degrees;\nvar pow = p5.prototype.pow;\nvar round = p5.prototype.round;\n\n\n// =============================================================================\n//                         p5 additions\n// =============================================================================\n\n/**\n* A Group containing all the sprites in the sketch.\n*\n* @property allSprites\n* @type {Group}\n*/\n\ndefineLazyP5Property('allSprites', function() {\n  return new p5.prototype.Group();\n});\n\np5.prototype.spriteUpdate = true;\n\n/**\n   * A Sprite is the main building block of p5.play:\n   * an element able to store images or animations with a set of\n   * properties such as position and visibility.\n   * A Sprite can have a collider that defines the active area to detect\n   * collisions or overlappings with other sprites and mouse interactions.\n   *\n   * Sprites created using createSprite (the preferred way) are added to the\n   * allSprites group and given a depth value that puts it in front of all\n   * other sprites.\n   *\n   * @method createSprite\n   * @param {Number} x Initial x coordinate\n   * @param {Number} y Initial y coordinate\n   * @param {Number} width Width of the placeholder rectangle and of the\n   *                       collider until an image or new collider are set\n   * @param {Number} height Height of the placeholder rectangle and of the\n   *                       collider until an image or new collider are set\n   * @return {Object} The new sprite instance\n   */\n\np5.prototype.createSprite = function(x, y, width, height) {\n  var s = new Sprite(this, x, y, width, height);\n  s.depth = this.allSprites.maxDepth()+1;\n  this.allSprites.add(s);\n  return s;\n};\n\n\n/**\n   * Removes a Sprite from the sketch.\n   * The removed Sprite won't be drawn or updated anymore.\n   * Equivalent to Sprite.remove()\n   *\n   * @method removeSprite\n   * @param {Object} sprite Sprite to be removed\n*/\np5.prototype.removeSprite = function(sprite) {\n  sprite.remove();\n};\n\n/**\n* Updates all the sprites in the sketch (position, animation...)\n* it's called automatically at every draw().\n* It can be paused by passing a parameter true or false;\n* Note: it does not render the sprites.\n*\n* @method updateSprites\n* @param {Boolean} updating false to pause the update, true to resume\n*/\np5.prototype.updateSprites = function(upd) {\n\n  if(upd === false)\n    this.spriteUpdate = false;\n  if(upd === true)\n    this.spriteUpdate = true;\n\n  if(this.spriteUpdate)\n  for(var i = 0; i<this.allSprites.size(); i++)\n  {\n    this.allSprites.get(i).update();\n  }\n};\n\n/**\n* Returns all the sprites in the sketch as an array\n*\n* @method getSprites\n* @return {Array} Array of Sprites\n*/\np5.prototype.getSprites = function() {\n\n  //draw everything\n  if(arguments.length===0)\n  {\n    return this.allSprites.toArray();\n  }\n  else\n  {\n    var arr = [];\n    //for every tag\n    for(var j=0; j<arguments.length; j++)\n    {\n      for(var i = 0; i<this.allSprites.size(); i++)\n      {\n        if(this.allSprites.get(i).isTagged(arguments[j]))\n          arr.push(this.allSprites.get(i));\n      }\n    }\n\n    return arr;\n  }\n\n};\n\n/**\n* Displays a Group of sprites.\n* If no parameter is specified, draws all sprites in the\n* sketch.\n* The drawing order is determined by the Sprite property \"depth\"\n*\n* @method drawSprites\n* @param {Group} [group] Group of Sprites to be displayed\n*/\np5.prototype.drawSprites = function(group) {\n  // If no group is provided, draw the allSprites group.\n  group = group || this.allSprites;\n\n  if (typeof group.draw !== 'function')\n  {\n    throw('Error: with drawSprites you can only draw all sprites or a group');\n  }\n\n  group.draw();\n};\n\n/**\n* Displays a Sprite.\n* To be typically used in the main draw function.\n*\n* @method drawSprite\n* @param {Sprite} sprite Sprite to be displayed\n*/\np5.prototype.drawSprite = function(sprite) {\n  if(sprite)\n  sprite.display();\n};\n\n/**\n* Loads an animation.\n* To be typically used in the preload() function of the sketch.\n*\n* @method loadAnimation\n* @param {Sprite} sprite Sprite to be displayed\n*/\np5.prototype.loadAnimation = function() {\n  return construct(this.Animation, arguments);\n};\n\n/**\n * Loads a Sprite Sheet.\n * To be typically used in the preload() function of the sketch.\n *\n * @method loadSpriteSheet\n */\np5.prototype.loadSpriteSheet = function() {\n  return construct(this.SpriteSheet, arguments);\n};\n\n/**\n* Displays an animation.\n*\n* @method animation\n* @param {Animation} anim Animation to be displayed\n* @param {Number} x X coordinate\n* @param {Number} y Y coordinate\n*\n*/\np5.prototype.animation = function(anim, x, y) {\n  anim.draw(x, y);\n};\n\n//variable to detect instant presses\ndefineLazyP5Property('_p5play', function() {\n  return {\n    keyStates: {},\n    mouseStates: {}\n  };\n});\n\nvar KEY_IS_UP = 0;\nvar KEY_WENT_DOWN = 1;\nvar KEY_IS_DOWN = 2;\nvar KEY_WENT_UP = 3;\n\n/**\n* Detects if a key was pressed during the last cycle.\n* It can be used to trigger events once, when a key is pressed or released.\n* Example: Super Mario jumping.\n*\n* @method keyWentDown\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key was pressed\n*/\np5.prototype.keyWentDown = function(key) {\n  return this._isKeyInState(key, KEY_WENT_DOWN);\n};\n\n\n/**\n* Detects if a key was released during the last cycle.\n* It can be used to trigger events once, when a key is pressed or released.\n* Example: Spaceship shooting.\n*\n* @method keyWentUp\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key was released\n*/\np5.prototype.keyWentUp = function(key) {\n  return this._isKeyInState(key, KEY_WENT_UP);\n};\n\n/**\n* Detects if a key is currently pressed\n* Like p5 keyIsDown but accepts strings and codes\n*\n* @method keyDown\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key is down\n*/\np5.prototype.keyDown = function(key) {\n  return this._isKeyInState(key, KEY_IS_DOWN);\n};\n\n/**\n * Detects if a key is in the given state during the last cycle.\n * Helper method encapsulating common key state logic; it may be preferable\n * to call keyDown or other methods directly.\n *\n * @private\n * @method _isKeyInState\n * @param {Number|String} key Key code or character\n * @param {Number} state Key state to check against\n * @return {Boolean} True if the key is in the given state\n */\np5.prototype._isKeyInState = function(key, state) {\n  var keyCode;\n  var keyStates = this._p5play.keyStates;\n\n  if(typeof key === 'string')\n  {\n    keyCode = this._keyCodeFromAlias(key);\n  }\n  else\n  {\n    keyCode = key;\n  }\n\n  //if undefined start checking it\n  if(keyStates[keyCode]===undefined)\n  {\n    if(this.keyIsDown(keyCode))\n      keyStates[keyCode] = KEY_IS_DOWN;\n    else\n      keyStates[keyCode] = KEY_IS_UP;\n  }\n\n  return (keyStates[keyCode] === state);\n};\n\n/**\n* Detects if a mouse button is currently down\n* Combines mouseIsPressed and mouseButton of p5\n*\n* @method mouseDown\n* @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n* @return {Boolean} True if the button is down\n*/\np5.prototype.mouseDown = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_IS_DOWN);\n};\n\n/**\n* Detects if a mouse button is currently up\n* Combines mouseIsPressed and mouseButton of p5\n*\n* @method mouseUp\n* @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n* @return {Boolean} True if the button is up\n*/\np5.prototype.mouseUp = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_IS_UP);\n};\n\n/**\n * Detects if a mouse button was released during the last cycle.\n * It can be used to trigger events once, to be checked in the draw cycle\n *\n * @method mouseWentUp\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @return {Boolean} True if the button was just released\n */\np5.prototype.mouseWentUp = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_WENT_UP);\n};\n\n\n/**\n * Detects if a mouse button was pressed during the last cycle.\n * It can be used to trigger events once, to be checked in the draw cycle\n *\n * @method mouseWentDown\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @return {Boolean} True if the button was just pressed\n */\np5.prototype.mouseWentDown = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_WENT_DOWN);\n};\n\n/**\n * Detects if a mouse button is in the given state during the last cycle.\n * Helper method encapsulating common mouse button state logic; it may be\n * preferable to call mouseWentUp, etc, directly.\n *\n * @private\n * @method _isMouseButtonInState\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @param {Number} state\n * @return {boolean} True if the button was in the given state\n */\np5.prototype._isMouseButtonInState = function(buttonCode, state) {\n  var mouseStates = this._p5play.mouseStates;\n\n  if(buttonCode === undefined)\n    buttonCode = this.LEFT;\n\n  //undefined = not tracked yet, start tracking\n  if(mouseStates[buttonCode]===undefined)\n  {\n  if(this.mouseIsPressed && this.mouseButton === buttonCode)\n    mouseStates[buttonCode] = KEY_IS_DOWN;\n  else\n    mouseStates[buttonCode] = KEY_IS_UP;\n  }\n\n  return (mouseStates[buttonCode] === state);\n};\n\n\n/**\n * An object storing all useful keys for easy access\n * Key.tab = 9\n *\n * @private\n * @property KEY\n * @type {Object}\n */\np5.prototype.KEY = {\n    'BACKSPACE': 8,\n    'TAB': 9,\n    'ENTER': 13,\n    'SHIFT': 16,\n    'CTRL': 17,\n    'ALT': 18,\n    'PAUSE': 19,\n    'CAPS_LOCK': 20,\n    'ESC': 27,\n    'SPACE': 32,\n    ' ': 32,\n    'PAGE_UP': 33,\n    'PAGE_DOWN': 34,\n    'END': 35,\n    'HOME': 36,\n    'LEFT_ARROW': 37,\n    'LEFT': 37,\n    'UP_ARROW': 38,\n    'UP': 38,\n    'RIGHT_ARROW': 39,\n    'RIGHT': 39,\n    'DOWN_ARROW': 40,\n    'DOWN': 40,\n    'INSERT': 45,\n    'DELETE': 46,\n    '0': 48,\n    '1': 49,\n    '2': 50,\n    '3': 51,\n    '4': 52,\n    '5': 53,\n    '6': 54,\n    '7': 55,\n    '8': 56,\n    '9': 57,\n    'A': 65,\n    'B': 66,\n    'C': 67,\n    'D': 68,\n    'E': 69,\n    'F': 70,\n    'G': 71,\n    'H': 72,\n    'I': 73,\n    'J': 74,\n    'K': 75,\n    'L': 76,\n    'M': 77,\n    'N': 78,\n    'O': 79,\n    'P': 80,\n    'Q': 81,\n    'R': 82,\n    'S': 83,\n    'T': 84,\n    'U': 85,\n    'V': 86,\n    'W': 87,\n    'X': 88,\n    'Y': 89,\n    'Z': 90,\n    '0NUMPAD': 96,\n    '1NUMPAD': 97,\n    '2NUMPAD': 98,\n    '3NUMPAD': 99,\n    '4NUMPAD': 100,\n    '5NUMPAD': 101,\n    '6NUMPAD': 102,\n    '7NUMPAD': 103,\n    '8NUMPAD': 104,\n    '9NUMPAD': 105,\n    'MULTIPLY': 106,\n    'PLUS': 107,\n    'MINUS': 109,\n    'DOT': 110,\n    'SLASH1': 111,\n    'F1': 112,\n    'F2': 113,\n    'F3': 114,\n    'F4': 115,\n    'F5': 116,\n    'F6': 117,\n    'F7': 118,\n    'F8': 119,\n    'F9': 120,\n    'F10': 121,\n    'F11': 122,\n    'F12': 123,\n    'EQUAL': 187,\n    'COMMA': 188,\n    'SLASH': 191,\n    'BACKSLASH': 220\n};\n\n/**\n * An object storing deprecated key aliases, which we still support but\n * should be mapped to valid aliases and generate warnings.\n *\n * @private\n * @property KEY_DEPRECATIONS\n * @type {Object}\n */\np5.prototype.KEY_DEPRECATIONS = {\n  'MINUT': 'MINUS',\n  'COMA': 'COMMA'\n};\n\n/**\n * Given a string key alias (as defined in the KEY property above), look up\n * and return the numeric JavaScript key code for that key.  If a deprecated\n * alias is passed (as defined in the KEY_DEPRECATIONS property) it will be\n * mapped to a valid key code, but will also generate a warning about use\n * of the deprecated alias.\n *\n * @private\n * @method _keyCodeFromAlias\n * @param {!string} alias - a case-insensitive key alias\n * @return {number|undefined} a numeric JavaScript key code, or undefined\n *          if no key code matching the given alias is found.\n */\np5.prototype._keyCodeFromAlias = function(alias) {\n  alias = alias.toUpperCase();\n  if (this.KEY_DEPRECATIONS[alias]) {\n    this._warn('Key literal \"' + alias + '\" is deprecated and may be removed ' +\n      'in a future version of p5.play. ' +\n      'Please use \"' + this.KEY_DEPRECATIONS[alias] + '\" instead.');\n    alias = this.KEY_DEPRECATIONS[alias];\n  }\n  return this.KEY[alias];\n};\n\n//pre draw: detect keyStates\np5.prototype.readPresses = function() {\n  var keyStates = this._p5play.keyStates;\n  var mouseStates = this._p5play.mouseStates;\n\n  for (var key in keyStates) {\n    if(this.keyIsDown(key)) //if is down\n    {\n      if(keyStates[key] === KEY_IS_UP)//and was up\n        keyStates[key] = KEY_WENT_DOWN;\n      else\n        keyStates[key] = KEY_IS_DOWN; //now is simply down\n    }\n    else //if it's up\n    {\n      if(keyStates[key] === KEY_IS_DOWN)//and was up\n        keyStates[key] = KEY_WENT_UP;\n      else\n        keyStates[key] = KEY_IS_UP; //now is simply down\n    }\n  }\n\n  //mouse\n  for (var btn in mouseStates) {\n\n    if(this.mouseIsPressed && this.mouseButton === btn) //if is down\n    {\n      if(mouseStates[btn] === KEY_IS_UP)//and was up\n        mouseStates[btn] = KEY_WENT_DOWN;\n      else\n        mouseStates[btn] = KEY_IS_DOWN; //now is simply down\n    }\n    else //if it's up\n    {\n      if(mouseStates[btn] === KEY_IS_DOWN)//and was up\n        mouseStates[btn] = KEY_WENT_UP;\n      else\n        mouseStates[btn] = KEY_IS_UP; //now is simply down\n    }\n  }\n\n};\n\n/**\n* Turns the quadTree on or off.\n* A quadtree is a data structure used to optimize collision detection.\n* It can improve performance when there is a large number of Sprites to be\n* checked continuously for overlapping.\n*\n* p5.play will create and update a quadtree automatically.\n*\n* @method useQuadTree\n* @param {Boolean} use Pass true to enable, false to disable\n*/\np5.prototype.useQuadTree = function(use) {\n\n  if(this.quadTree !== undefined)\n  {\n    if(use === undefined)\n      return this.quadTree.active;\n    else if(use)\n      this.quadTree.active = true;\n    else\n      this.quadTree.active = false;\n  }\n  else\n    return false;\n};\n\n//the actual quadTree\ndefineLazyP5Property('quadTree', function() {\n  return new Quadtree({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  }, 4);\n});\n\n/*\n//framerate independent delta, doesn't really work\np5.prototype.deltaTime = 1;\n\nvar now = Date.now();\nvar then = Date.now();\nvar INTERVAL_60 = 0.0166666; //60 fps\n\nfunction updateDelta() {\nthen = now;\nnow = Date.now();\ndeltaTime = ((now - then) / 1000)/INTERVAL_60; // seconds since last frame\n}\n*/\n\n/**\n   * A Sprite is the main building block of p5.play:\n   * an element able to store images or animations with a set of\n   * properties such as position and visibility.\n   * A Sprite can have a collider that defines the active area to detect\n   * collisions or overlappings with other sprites and mouse interactions.\n   *\n   * To create a Sprite, use\n   * {{#crossLink \"p5.play/createSprite:method\"}}{{/crossLink}}.\n   *\n   * @class Sprite\n   */\n\n// For details on why these docs aren't in a YUIDoc comment block, see:\n//\n// https://github.com/molleindustria/p5.play/pull/67\n//\n// @param {Number} x Initial x coordinate\n// @param {Number} y Initial y coordinate\n// @param {Number} width Width of the placeholder rectangle and of the\n//                       collider until an image or new collider are set\n// @param {Number} height Height of the placeholder rectangle and of the\n//                        collider until an image or new collider are set\nfunction Sprite(pInst, _x, _y, _w, _h) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n  var color = pInstBind('color');\n  var random = pInstBind('random');\n  var print = pInstBind('print');\n  var push = pInstBind('push');\n  var pop = pInstBind('pop');\n  var colorMode = pInstBind('colorMode');\n  var noStroke = pInstBind('noStroke');\n  var rectMode = pInstBind('rectMode');\n  var ellipseMode = pInstBind('ellipseMode');\n  var imageMode = pInstBind('imageMode');\n  var translate = pInstBind('translate');\n  var scale = pInstBind('scale');\n  var rotate = pInstBind('rotate');\n  var stroke = pInstBind('stroke');\n  var strokeWeight = pInstBind('strokeWeight');\n  var line = pInstBind('line');\n  var noFill = pInstBind('noFill');\n  var fill = pInstBind('fill');\n  var textAlign = pInstBind('textAlign');\n  var textSize = pInstBind('textSize');\n  var text = pInstBind('text');\n  var rect = pInstBind('rect');\n  var cos = pInstBind('cos');\n  var sin = pInstBind('sin');\n  var atan2 = pInstBind('atan2');\n\n  var quadTree = pInst.quadTree;\n  var camera = pInst.camera;\n\n\n  // These are p5 constants that we'd like easy access to.\n  var RGB = p5.prototype.RGB;\n  var CENTER = p5.prototype.CENTER;\n  var LEFT = p5.prototype.LEFT;\n  var BOTTOM = p5.prototype.BOTTOM;\n\n  /**\n  * The sprite's position of the sprite as a vector (x,y).\n  * @property position\n  * @type {p5.Vector}\n  */\n  this.position = createVector(_x, _y);\n\n  /**\n  * The sprite's position at the beginning of the last update as a vector (x,y).\n  * @property previousPosition\n  * @type {p5.Vector}\n  */\n  this.previousPosition = createVector(_x, _y);\n\n  /*\n  The sprite's position at the end of the last update as a vector (x,y).\n  Note: this will differ from position whenever the position is changed\n  directly by assignment.\n  */\n  this.newPosition = createVector(_x, _y);\n\n  //Position displacement on the x coordinate since the last update\n  this.deltaX = 0;\n  this.deltaY = 0;\n\n  /**\n  * The sprite's velocity as a vector (x,y)\n  * Velocity is speed broken down to its vertical and horizontal components.\n  *\n  * @property velocity\n  * @type {p5.Vector}\n  */\n  this.velocity = createVector(0, 0);\n\n  /**\n  * Set a limit to the sprite's scalar speed regardless of the direction.\n  * The value can only be positive. If set to -1, there's no limit.\n  *\n  * @property maxSpeed\n  * @type {Number}\n  * @default -1\n  */\n  this.maxSpeed = -1;\n\n  /**\n  * Friction factor, reduces the sprite's velocity.\n  * The friction should be close to 0 (eg. 0.01)\n  * 0: no friction\n  * 1: full friction\n  *\n  * @property friction\n  * @type {Number}\n  * @default 0\n  */\n  this.friction = 0;\n\n  /**\n  * The sprite's current collider.\n  * It can either be an Axis Aligned Bounding Box (a non-rotated rectangle)\n  * or a circular collider.\n  * If the sprite is checked for collision, bounce, overlapping or mouse events the\n  * collider is automatically created from the width and height\n  * of the sprite or from the image dimension in case of animate sprites\n  *\n  * You can set a custom collider with Sprite.setCollider\n  *\n  * @property collider\n  * @type {Object}\n  */\n  this.collider = undefined;\n\n  //internal use\n  //\"default\" - no image or custom collider is specified, use the shape width / height\n  //\"custom\" - specified with setCollider\n  //\"image\" - no collider is set with setCollider and an image is added\n  this.colliderType = 'none';\n\n  /**\n  * Object containing information about the most recent collision/overlapping\n  * To be typically used in combination with Sprite.overlap or Sprite.collide\n  * functions.\n  * The properties are touching.left, touching.right, touching.top,\n  * touching.bottom and are either true or false depending on the side of the\n  * collider.\n  *\n  * @property touching\n  * @type {Object}\n  */\n  this.touching = {};\n  this.touching.left = false;\n  this.touching.right = false;\n  this.touching.top = false;\n  this.touching.bottom = false;\n\n  /**\n  * The mass determines the velocity transfer when sprites bounce\n  * against each other. See Sprite.bounce\n  * The higher the mass the least the sprite will be affected by collisions.\n  *\n  * @property mass\n  * @type {Number}\n  * @default 1\n  */\n  this.mass = 1;\n\n  /**\n  * If set to true the sprite won't bounce or be displaced by collisions\n  * Simulates an infinite mass or an anchored object.\n  *\n  * @property immovable\n  * @type {Boolean}\n  * @default false\n  */\n  this.immovable = false;\n\n  //Coefficient of restitution - velocity lost in the bouncing\n  //0 perfectly inelastic , 1 elastic, > 1 hyper elastic\n\n  /**\n  * Coefficient of restitution. The velocity lost after bouncing.\n  * 1: perfectly elastic, no energy is lost\n  * 0: perfectly inelastic, no bouncing\n  * less than 1: inelastic, this is the most common in nature\n  * greater than 1: hyper elastic, energy is increased like in a pinball bumper\n  *\n  * @property restitution\n  * @type {Number}\n  * @default 1\n  */\n  this.restitution = 1;\n\n  /**\n  * Rotation in degrees of the visual element (image or animation)\n  * Note: this is not the movement's direction, see getDirection.\n  *\n  * @property rotation\n  * @type {Number}\n  * @default 0\n  */\n  Object.defineProperty(this, 'rotation', {\n    enumerable: true,\n    get: function() {\n      return this._rotation;\n    },\n    set: function(value) {\n      this._rotation = value;\n      if (this.rotateToDirection) {\n        this.setSpeed(this.getSpeed(), value);\n      }\n    }\n  });\n\n  /**\n  * Internal rotation variable (expressed in degrees).\n  * Note: external callers access this through the rotation property above.\n  *\n  * @private\n  * @property _rotation\n  * @type {Number}\n  * @default 0\n  */\n  this._rotation = 0;\n\n  /**\n  * Rotation change in degrees per frame of thevisual element (image or animation)\n  * Note: this is not the movement's direction, see getDirection.\n  *\n  * @property rotationSpeed\n  * @type {Number}\n  * @default 0\n  */\n  this.rotationSpeed = 0;\n\n\n  /**\n  * Automatically lock the rotation property of the visual element\n  * (image or animation) to the sprite's movement direction and vice versa.\n  *\n  * @property rotateToDirection\n  * @type {Boolean}\n  * @default false\n  */\n  this.rotateToDirection = false;\n\n\n  /**\n  * Determines the rendering order within a group: a sprite with\n  * lower depth will appear below the ones with higher depth.\n  *\n  * Note: drawing a group before another with drawSprites will make\n  * its members appear below the second one, like in normal p5 canvas\n  * drawing.\n  *\n  * @property depth\n  * @type {Number}\n  * @default One more than the greatest existing sprite depth, when calling\n  *          createSprite().  When calling new Sprite() directly, depth will\n  *          initialize to 0 (not recommended).\n  */\n  this.depth = 0;\n\n  /**\n  * Determines the sprite's scale.\n  * Example: 2 will be twice the native size of the visuals,\n  * 0.5 will be half. Scaling up may make images blurry.\n  *\n  * @property scale\n  * @type {Number}\n  * @default 1\n  */\n  this.scale = 1;\n\n  var dirX = 1;\n  var dirY = 1;\n\n  /**\n  * The sprite's visibility.\n  *\n  * @property visible\n  * @type {Boolean}\n  * @default true\n  */\n  this.visible = true;\n\n  /**\n  * If set to true sprite will track its mouse state.\n  * the properties mouseIsPressed and mouseIsOver will be updated.\n  * Note: automatically set to true if the functions\n  * onMouseReleased or onMousePressed are set.\n  *\n  * @property mouseActive\n  * @type {Boolean}\n  * @default false\n  */\n  this.mouseActive = false;\n\n  /**\n  * True if mouse is on the sprite's collider.\n  * Read only.\n  *\n  * @property mouseIsOver\n  * @type {Boolean}\n  */\n  this.mouseIsOver = false;\n\n  /**\n  * True if mouse is pressed on the sprite's collider.\n  * Read only.\n  *\n  * @property mouseIsPressed\n  * @type {Boolean}\n  */\n  this.mouseIsPressed = false;\n\n  /*\n  * Width of the sprite's current image.\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  * Used internally to make calculations and draw the sprite.\n  *\n  * @private\n  * @property _internalWidth\n  * @type {Number}\n  * @default 100\n  */\n  this._internalWidth = _w;\n\n  /*\n  * Height of the sprite's current image.\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  * Used internally to make calculations and draw the sprite.\n  *\n  * @private\n  * @property _internalHeight\n  * @type {Number}\n  * @default 100\n  */\n  this._internalHeight = _h;\n\n  /*\n   * _internalWidth and _internalHeight are used for all p5.play\n   * calculations, but width and height can be extended. For example,\n   * you may want users to always get and set a scaled width:\n      Object.defineProperty(this, 'width', {\n        enumerable: true,\n        configurable: true,\n        get: function() {\n          return this._internalWidth * this.scale;\n        },\n        set: function(value) {\n          this._internalWidth = value / this.scale;\n        }\n      });\n   */\n\n  /**\n  * Width of the sprite's current image.\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  *\n  * @property width\n  * @type {Number}\n  * @default 100\n  */\n  Object.defineProperty(this, 'width', {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return this._internalWidth;\n    },\n    set: function(value) {\n      this._internalWidth = value;\n    }\n  });\n\n  if(_w === undefined)\n    this.width = 100;\n  else\n    this.width = _w;\n\n  /**\n  * Height of the sprite's current image.\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  *\n  * @property height\n  * @type {Number}\n  * @default 100\n  */\n  Object.defineProperty(this, 'height', {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return this._internalHeight;\n    },\n    set: function(value) {\n      this._internalHeight = value;\n    }\n  });\n\n  if(_h === undefined)\n    this.height = 100;\n  else\n    this.height = _h;\n\n  /**\n  * Unscaled width of the sprite\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  *\n  * @property originalWidth\n  * @type {Number}\n  * @default 100\n  */\n  this.originalWidth = this._internalWidth;\n\n  /**\n  * Unscaled height of the sprite\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  *\n  * @property originalHeight\n  * @type {Number}\n  * @default 100\n  */\n  this.originalHeight = this._internalHeight;\n\n  /**\n  * True if the sprite has been removed.\n  *\n  * @property removed\n  * @type {Boolean}\n  */\n  this.removed = false;\n\n  /**\n  * Cycles before self removal.\n  * Set it to initiate a countdown, every draw cycle the property is\n  * reduced by 1 unit. At 0 it will call a sprite.remove()\n  * Disabled if set to -1.\n  *\n  * @property life\n  * @type {Number}\n  * @default -1\n  */\n  this.life = -1;\n\n  /**\n  * If set to true, draws an outline of the collider, the depth, and center.\n  *\n  * @property debug\n  * @type {Boolean}\n  * @default false\n  */\n  this.debug = false;\n\n  /**\n  * If no image or animations are set this is color of the\n  * placeholder rectangle\n  *\n  * @property shapeColor\n  * @type {color}\n  */\n  this.shapeColor = color(random(255), random(255), random(255));\n\n  /**\n  * Groups the sprite belongs to, including allSprites\n  *\n  * @property groups\n  * @type {Array}\n  */\n  this.groups = [];\n\n  var animations = {};\n\n  //The current animation's label.\n  var currentAnimation = '';\n\n  /**\n  * Reference to the current animation.\n  *\n  * @property animation\n  * @type {Animation}\n  */\n  this.animation = undefined;\n\n  /**\n  * Internal variable to keep track of whether this sprite is drawn while\n  * the camera is active.\n  * Used in Sprite.update() to know whether to use camera mouse coordinates.\n  * @see https://github.com/molleindustria/p5.play/issues/107\n  *\n  * @private\n  * @property _drawnWithCamera\n  * @type {Boolean}\n  * @default false\n  */\n  this._drawnWithCamera = false;\n\n  /*\n   * @private\n   * Keep animation properties in sync with how the animation changes.\n   */\n  this._syncAnimationSizes = function() {\n    //has an animation but the collider is still default\n    //the animation wasn't loaded. if the animation is not a 1x1 image\n    //it means it just finished loading\n    if(this.colliderType === 'default' &&\n      animations[currentAnimation].getWidth() !== 1 && animations[currentAnimation].getHeight() !== 1)\n    {\n      this.collider = this.getBoundingBox();\n      this.colliderType = 'image';\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n      //quadTree.insert(this);\n    }\n\n    //update size and collider\n    if(animations[currentAnimation].frameChanged || this.width === undefined || this.height === undefined)\n    {\n      //this.collider = this.getBoundingBox();\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n    }\n  };\n\n  /**\n  * Updates the sprite.\n  * Called automatically at the beginning of the draw cycle.\n  *\n  * @method update\n  */\n  this.update = function() {\n\n    if(!this.removed)\n    {\n      //if there has been a change somewhere after the last update\n      //the old position is the last position registered in the update\n      if(this.newPosition !== this.position)\n        this.previousPosition = createVector(this.newPosition.x, this.newPosition.y);\n      else\n        this.previousPosition = createVector(this.position.x, this.position.y);\n\n      this.velocity.x *= 1 - this.friction;\n      this.velocity.y *= 1 - this.friction;\n\n      if(this.maxSpeed !== -1)\n        this.limitSpeed(this.maxSpeed);\n\n      if(this.rotateToDirection && this.velocity.mag() > 0)\n        this._rotation = this.getDirection();\n\n      this.rotation += this.rotationSpeed;\n\n      this.position.x += this.velocity.x;\n      this.position.y += this.velocity.y;\n\n      this.newPosition = createVector(this.position.x, this.position.y);\n\n      this.deltaX = this.position.x - this.previousPosition.x;\n      this.deltaY = this.position.y - this.previousPosition.y;\n\n      //if there is an animation\n      if(animations[currentAnimation])\n      {\n        //update it\n        animations[currentAnimation].update();\n\n        this._syncAnimationSizes();\n      }\n\n      //a collider is created either manually with setCollider or\n      //when I check this sprite for collisions or overlaps\n      if(this.collider)\n      {\n        if(this.collider instanceof AABB)\n        {\n        //scale / rotate collider\n        var t;\n        if (pInst._angleMode === pInst.RADIANS) {\n          t = radians(this.rotation);\n        } else {\n          t = this.rotation;\n        }\n\n        if(this.colliderType === 'custom')\n          {\n          this.collider.extents.x = this.collider.originalExtents.x * abs(this._getScaleX()) * abs(cos(t)) +\n          this.collider.originalExtents.y * abs(this._getScaleY()) * abs(sin(t));\n\n          this.collider.extents.y = this.collider.originalExtents.x * abs(this._getScaleX()) * abs(sin(t)) +\n          this.collider.originalExtents.y * abs(this._getScaleY()) * abs(cos(t));\n          }\n        else if(this.colliderType === 'default')\n          {\n          this.collider.extents.x = this._internalWidth * abs(this._getScaleX()) * abs(cos(t)) +\n          this._internalHeight * abs(this._getScaleY()) * abs(sin(t));\n          this.collider.extents.y = this._internalWidth * abs(this._getScaleX()) * abs(sin(t)) +\n          this._internalHeight * abs(this._getScaleY()) * abs(cos(t));\n          }\n        else if(this.colliderType === 'image')\n          {\n          this.collider.extents.x = this._internalWidth * abs(cos(t)) +\n          this._internalHeight * abs(sin(t));\n\n          this.collider.extents.y = this._internalWidth * abs(sin(t)) +\n          this._internalHeight * abs(cos(t));\n          }\n        }\n\n        if(this.collider instanceof CircleCollider)\n        {\n        //print(this.scale);\n        this.collider.radius = this.collider.originalRadius * abs(this.scale);\n        }\n\n      }//end collider != null\n\n      //mouse actions\n      if (this.mouseActive)\n      {\n        //if no collider set it\n          if(!this.collider)\n            this.setDefaultCollider();\n\n        this.mouseUpdate();\n      }\n      else\n      {\n        if (typeof(this.onMouseOver) === 'function' ||\n            typeof(this.onMouseOut) === 'function' ||\n            typeof(this.onMousePressed) === 'function' ||\n            typeof(this.onMouseReleased) === 'function')\n        {\n          //if a mouse function is set\n          //it's implied we want to have it mouse active so\n          //we do this automatically\n          this.mouseActive = true;\n\n          //if no collider set it\n          if(!this.collider)\n            this.setDefaultCollider();\n\n          this.mouseUpdate();\n        }\n      }\n\n      //self destruction countdown\n      if (this.life>0)\n        this.life--;\n      if (this.life === 0)\n        this.remove();\n    }\n  };//end update\n\n  /**\n   * Creates a default collider matching the size of the\n   * placeholder rectangle or the bounding box of the image.\n   *\n   * @method setDefaultCollider\n   */\n  this.setDefaultCollider = function() {\n\n    //if has animation get the animation bounding box\n    //working only for preloaded images\n    if(animations[currentAnimation] && (animations[currentAnimation].getWidth() !== 1 && animations[currentAnimation].getHeight() !== 1))\n    {\n      this.collider = this.getBoundingBox();\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n      //quadTree.insert(this);\n      this.colliderType = 'image';\n      //print(\"IMAGE COLLIDER ADDED\");\n    }\n    else if(animations[currentAnimation] && animations[currentAnimation].getWidth() === 1 && animations[currentAnimation].getHeight() === 1)\n    {\n    //animation is still loading\n    //print(\"wait\");\n    }\n    else //get the with and height defined at the creation\n    {\n      this.collider = new AABB(pInst, this.position, createVector(this._internalWidth, this._internalHeight));\n      //quadTree.insert(this);\n      this.colliderType = 'default';\n    }\n\n    pInst.quadTree.insert(this);\n  };\n\n  /**\n   * Updates the sprite mouse states and triggers the mouse events:\n   * onMouseOver, onMouseOut, onMousePressed, onMouseReleased\n   *\n   * @method mouseUpdate\n   */\n  this.mouseUpdate = function() {\n\n    var mouseWasOver = this.mouseIsOver;\n    var mouseWasPressed = this.mouseIsPressed;\n\n    this.mouseIsOver = false;\n    this.mouseIsPressed = false;\n\n    var mousePosition;\n\n    if(this._drawnWithCamera)\n      mousePosition = createVector(camera.mouseX, camera.mouseY);\n    else\n      mousePosition = createVector(pInst.mouseX, pInst.mouseY);\n\n      //rollover\n      if(this.collider)\n      {\n\n        if (this.collider instanceof CircleCollider)\n        {\n          if (dist(mousePosition.x, mousePosition.y, this.collider.center.x, this.collider.center.y) < this.collider.radius)\n            this.mouseIsOver = true;\n        } else if (this.collider instanceof AABB)\n        {\n          if (mousePosition.x > this.collider.left() &&\n              mousePosition.y > this.collider.top() &&\n              mousePosition.x < this.collider.right() &&\n              mousePosition.y < this.collider.bottom())\n          {\n            this.mouseIsOver = true;\n          }\n        }\n\n        //global p5 var\n        if(this.mouseIsOver && pInst.mouseIsPressed)\n          this.mouseIsPressed = true;\n\n        //event change - call functions\n        if(!mouseWasOver && this.mouseIsOver && this.onMouseOver !== undefined)\n          if(typeof(this.onMouseOver) === 'function')\n            this.onMouseOver.call(this, this);\n          else\n            print('Warning: onMouseOver should be a function');\n\n        if(mouseWasOver && !this.mouseIsOver && this.onMouseOut !== undefined)\n          if(typeof(this.onMouseOut) === 'function')\n            this.onMouseOut.call(this, this);\n          else\n            print('Warning: onMouseOut should be a function');\n\n        if(!mouseWasPressed && this.mouseIsPressed && this.onMousePressed !== undefined)\n          if(typeof(this.onMousePressed) === 'function')\n            this.onMousePressed.call(this, this);\n          else\n            print('Warning: onMousePressed should be a function');\n\n        if(mouseWasPressed && !pInst.mouseIsPressed && !this.mouseIsPressed && this.onMouseReleased !== undefined)\n          if(typeof(this.onMouseReleased) === 'function')\n            this.onMouseReleased.call(this, this);\n          else\n            print('Warning: onMouseReleased should be a function');\n\n      }\n\n  };\n\n  /**\n  * Sets a collider for the sprite.\n  *\n  * In p5.play a Collider is an invisible circle or rectangle\n  * that can have any size or position relative to the sprite and which\n  * will be used to detect collisions and overlapping with other sprites,\n  * or the mouse cursor.\n  *\n  * If the sprite is checked for collision, bounce, overlapping or mouse events\n  * a collider is automatically created from the width and height parameter\n  * passed at the creation of the sprite or the from the image dimension in case\n  * of animated sprites.\n  *\n  * Often the image bounding box is not appropriate as the active area for\n  * collision detection so you can set a circular or rectangular sprite with\n  * different dimensions and offset from the sprite's center.\n  *\n  * There are four ways to call this method:\n  *\n  * 1. setCollider(\"rectangle\")\n  * 2. setCollider(\"rectangle\", offsetX, offsetY, width, height)\n  * 3. setCollider(\"circle\")\n  * 4. setCollider(\"circle\", offsetX, offsetY, radius)\n  *\n  * @method setCollider\n  * @param {String} type Either \"rectangle\" or \"circle\"\n  * @param {Number} offsetX Collider x position from the center of the sprite\n  * @param {Number} offsetY Collider y position from the center of the sprite\n  * @param {Number} width Collider width or radius\n  * @param {Number} height Collider height\n  * @throws {TypeError} if given invalid parameters.\n  */\n  this.setCollider = function(type, offsetX, offsetY, width, height) {\n    if (!(type === 'rectangle' || type === 'circle')) {\n      throw new TypeError('setCollider expects the first argument to be either \"circle\" or \"rectangle\"');\n    } else if (type === 'circle' && arguments.length > 1 && arguments.length < 4) {\n      throw new TypeError('Usage: setCollider(\"circle\") or setCollider(\"circle\", offsetX, offsetY, radius)');\n    } else if (type === 'circle' && arguments.length > 4) {\n      pInst._warn('Extra parameters to setCollider were ignored. Usage: setCollider(\"circle\") or setCollider(\"circle\", offsetX, offsetY, radius)');\n    } else if (type === 'rectangle' && arguments.length > 1 && arguments.length < 5) {\n      throw new TypeError('Usage: setCollider(\"rectangle\") or setCollider(\"rectangle\", offsetX, offsetY, width, height)');\n    } else if (type === 'rectangle' && arguments.length > 5) {\n      pInst._warn('Extra parameters to setCollider were ignored. Usage: setCollider(\"rectangle\") or setCollider(\"rectangle\", offsetX, offsetY, width, height)');\n    }\n\n    this.colliderType = 'custom';\n\n    var v = createVector(offsetX, offsetY);\n    if (type === 'rectangle' && arguments.length === 1) {\n      this.collider = new AABB(pInst, this.position, createVector(this.width, this.height));\n    } else if (type === 'rectangle' && arguments.length >= 5) {\n      this.collider = new AABB(pInst, this.position, createVector(width, height), v);\n    } else if (type === 'circle' && arguments.length === 1) {\n      this.collider = new CircleCollider(pInst, this.position, Math.floor(Math.max(this.width, this.height) / 2));\n    } else if (type === 'circle' && arguments.length >= 4) {\n      this.collider = new CircleCollider(pInst, this.position, width, v);\n    }\n\n    quadTree.insert(this);\n  };\n\n  /**\n   * Returns a the bounding box of the current image\n   * @method getBoundingBox\n   */\n  this.getBoundingBox = function() {\n\n    var w = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n    var h = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n\n    //if the bounding box is 1x1 the image is not loaded\n    //potential issue with actual 1x1 images\n    if(w === 1 && h === 1) {\n      //not loaded yet\n      return new AABB(pInst, this.position, createVector(w, h));\n    }\n    else {\n      return new AABB(pInst, this.position, createVector(w, h));\n    }\n  };\n\n  /**\n  * Sets the sprite's horizontal mirroring.\n  * If 1 the images displayed normally\n  * If -1 the images are flipped horizontally\n  * If no argument returns the current x mirroring\n  *\n  * @method mirrorX\n  * @param {Number} dir Either 1 or -1\n  * @return {Number} Current mirroring if no parameter is specified\n  */\n  this.mirrorX = function(dir) {\n    if(dir === 1 || dir === -1)\n      dirX = dir;\n    else\n      return dirX;\n  };\n\n  /**\n  * Sets the sprite's vertical mirroring.\n  * If 1 the images displayed normally\n  * If -1 the images are flipped vertically\n  * If no argument returns the current y mirroring\n  *\n  * @method mirrorY\n  * @param {Number} dir Either 1 or -1\n  * @return {Number} Current mirroring if no parameter is specified\n  */\n  this.mirrorY = function(dir) {\n    if(dir === 1 || dir === -1)\n      dirY = dir;\n    else\n      return dirY;\n  };\n\n  /*\n   * Returns the value the sprite should be scaled in the X direction.\n   * Used to calculate rendering and collisions.\n   * @private\n   */\n  this._getScaleX = function()\n  {\n    return this.scale;\n  };\n\n  /*\n   * Returns the value the sprite should be scaled in the Y direction.\n   * Used to calculate rendering and collisions.\n   * @private\n   */\n  this._getScaleY = function()\n  {\n    return this.scale;\n  };\n\n  /**\n   * Manages the positioning, scale and rotation of the sprite\n   * Called automatically, it should not be overridden\n   * @private\n   * @final\n   * @method display\n   */\n  this.display = function()\n  {\n    if (this.visible && !this.removed)\n    {\n      push();\n      colorMode(RGB);\n\n      noStroke();\n      rectMode(CENTER);\n      ellipseMode(CENTER);\n      imageMode(CENTER);\n\n      translate(this.position.x, this.position.y);\n      scale(this._getScaleX()*dirX, this._getScaleY()*dirY);\n      if (pInst._angleMode === pInst.RADIANS) {\n        rotate(radians(this.rotation));\n      } else {\n        rotate(this.rotation);\n      }\n      this.draw();\n      //draw debug info\n      pop();\n\n      this._drawnWithCamera = camera.active;\n\n      if(this.debug)\n      {\n        push();\n        //draw the anchor point\n        stroke(0, 255, 0);\n        strokeWeight(1);\n        line(this.position.x-10, this.position.y, this.position.x+10, this.position.y);\n        line(this.position.x, this.position.y-10, this.position.x, this.position.y+10);\n        noFill();\n\n        //depth number\n        noStroke();\n        fill(0, 255, 0);\n        textAlign(LEFT, BOTTOM);\n        textSize(16);\n        text(this.depth+'', this.position.x+4, this.position.y-2);\n\n        noFill();\n        stroke(0, 255, 0);\n\n        //bounding box\n        if(this.collider !== undefined)\n        {\n          this.collider.draw();\n        }\n        pop();\n      }\n\n    }\n  };\n\n\n  /**\n  * Manages the visuals of the sprite.\n  * It can be overridden with a custom drawing function.\n  * The 0,0 point will be the center of the sprite.\n  * Example:\n  * sprite.draw = function() { ellipse(0,0,10,10) }\n  * Will display the sprite as circle.\n  *\n  * @method draw\n  */\n  this.draw = function()\n  {\n    if(currentAnimation !== '' && animations)\n    {\n      if(animations[currentAnimation])\n        animations[currentAnimation].draw(0, 0, 0);\n    }\n    else\n    {\n      noStroke();\n      fill(this.shapeColor);\n      rect(0, 0, this._internalWidth, this._internalHeight);\n    }\n  };\n\n  /**\n   * Removes the Sprite from the sketch.\n   * The removed Sprite won't be drawn or updated anymore.\n   *\n   * @method remove\n   */\n  this.remove = function() {\n    this.removed = true;\n\n    quadTree.removeObject(this);\n\n    //when removed from the \"scene\" also remove all the references in all the groups\n    while (this.groups.length > 0) {\n      this.groups[0].remove(this);\n    }\n  };\n\n  /**\n  * Sets the velocity vector.\n  *\n  * @method setVelocity\n  * @param {Number} x X component\n  * @param {Number} y Y component\n  */\n  this.setVelocity = function(x, y) {\n    this.velocity.x = x;\n    this.velocity.y = y;\n  };\n\n  /**\n  * Calculates the scalar speed.\n  *\n  * @method getSpeed\n  * @return {Number} Scalar speed\n  */\n  this.getSpeed = function() {\n    return this.velocity.mag();\n  };\n\n  /**\n  * Calculates the movement's direction in degrees.\n  *\n  * @method getDirection\n  * @return {Number} Angle in degrees\n  */\n  this.getDirection = function() {\n\n    var direction = atan2(this.velocity.y, this.velocity.x);\n\n    if(isNaN(direction))\n      direction = 0;\n\n    // Unlike Math.atan2, the atan2 method above will return degrees if\n    // the current p5 angleMode is DEGREES, and radians if the p5 angleMode is\n    // RADIANS.  This method should always return degrees (for now).\n    // See https://github.com/molleindustria/p5.play/issues/94\n    if (pInst._angleMode === pInst.RADIANS) {\n      direction = degrees(direction);\n    }\n\n    return direction;\n  };\n\n  /**\n  * Adds the sprite to an existing group\n  *\n  * @method addToGroup\n  * @param {Object} group\n  */\n  this.addToGroup = function(group) {\n    if(group instanceof Array)\n      group.add(this);\n    else\n      print('addToGroup error: '+group+' is not a group');\n  };\n\n  /**\n  * Limits the scalar speed.\n  *\n  * @method limitSpeed\n  * @param {Number} max Max speed: positive number\n  */\n  this.limitSpeed = function(max) {\n\n    //update linear speed\n    var speed = this.getSpeed();\n\n    if(abs(speed)>max)\n    {\n      //find reduction factor\n      var k = max/abs(speed);\n      this.velocity.x *= k;\n      this.velocity.y *= k;\n    }\n  };\n\n  /**\n  * Set the speed and direction of the sprite.\n  * The action overwrites the current velocity.\n  * If direction is not supplied, the current direction is maintained.\n  * If direction is not supplied and there is no current velocity, the current\n  * rotation angle used for the direction.\n  *\n  * @method setSpeed\n  * @param {Number}  speed Scalar speed\n  * @param {Number}  [angle] Direction in degrees\n  */\n  this.setSpeed = function(speed, angle) {\n    var a;\n    if (typeof angle === 'undefined') {\n      if (this.velocity.x !== 0 || this.velocity.y !== 0) {\n        a = pInst.atan2(this.velocity.y, this.velocity.x);\n      } else {\n        if (pInst._angleMode === pInst.RADIANS) {\n          a = radians(this._rotation);\n        } else {\n          a = this._rotation;\n        }\n      }\n    } else {\n      if (pInst._angleMode === pInst.RADIANS) {\n        a = radians(angle);\n      } else {\n        a = angle;\n      }\n    }\n    this.velocity.x = cos(a)*speed;\n    this.velocity.y = sin(a)*speed;\n  };\n\n  /**\n  * Pushes the sprite in a direction defined by an angle.\n  * The force is added to the current velocity.\n  *\n  * @method addSpeed\n  * @param {Number}  speed Scalar speed to add\n  * @param {Number}  angle Direction in degrees\n  */\n  this.addSpeed = function(speed, angle) {\n    var a;\n    if (pInst._angleMode === pInst.RADIANS) {\n      a = radians(angle);\n    } else {\n      a = angle;\n    }\n    this.velocity.x += cos(a) * speed;\n    this.velocity.y += sin(a) * speed;\n  };\n\n  /**\n  * Pushes the sprite toward a point.\n  * The force is added to the current velocity.\n  *\n  * @method attractionPoint\n  * @param {Number}  magnitude Scalar speed to add\n  * @param {Number}  pointX Direction x coordinate\n  * @param {Number}  pointY Direction y coordinate\n  */\n  this.attractionPoint = function(magnitude, pointX, pointY) {\n    var angle = atan2(pointY-this.position.y, pointX-this.position.x);\n    this.velocity.x += cos(angle) * magnitude;\n    this.velocity.y += sin(angle) * magnitude;\n  };\n\n\n  /**\n  * Adds an image to the sprite.\n  * An image will be considered a one-frame animation.\n  * The image should be preloaded in the preload() function using p5 loadImage.\n  * Animations require a identifying label (string) to change them.\n  * The image is stored in the sprite but not necessarily displayed\n  * until Sprite.changeAnimation(label) is called\n  *\n  * Usages:\n  * - sprite.addImage(label, image);\n  * - sprite.addImage(image);\n  *\n  * If only an image is passed no label is specified\n  *\n  * @method addImage\n  * @param {String|p5.Image} label Label or image\n  * @param {p5.Image} [img] Image\n  */\n  this.addImage = function()\n  {\n    if(typeof arguments[0] === 'string' && arguments[1] instanceof p5.Image)\n      this.addAnimation(arguments[0], arguments[1]);\n    else if(arguments[0] instanceof p5.Image)\n      this.addAnimation('normal', arguments[0]);\n    else\n      throw('addImage error: allowed usages are <image> or <label>, <image>');\n  };\n\n  /**\n  * Adds an animation to the sprite.\n  * The animation should be preloaded in the preload() function\n  * using loadAnimation.\n  * Animations require a identifying label (string) to change them.\n  * Animations are stored in the sprite but not necessarily displayed\n  * until Sprite.changeAnimation(label) is called.\n  *\n  * Usage:\n  * - sprite.addAnimation(label, animation);\n  *\n  * Alternative usages. See Animation for more information on file sequences:\n  * - sprite.addAnimation(label, firstFrame, lastFrame);\n  * - sprite.addAnimation(label, frame1, frame2, frame3...);\n  *\n  * @method addAnimation\n  * @param {String} label Animation identifier\n  * @param {Animation} animation The preloaded animation\n  */\n  this.addAnimation = function(label)\n  {\n    var anim;\n\n    if(typeof label !== 'string')\n    {\n      print('Sprite.addAnimation error: the first argument must be a label (String)');\n      return -1;\n    }\n    else if(arguments.length < 2)\n    {\n      print('addAnimation error: you must specify a label and n frame images');\n      return -1;\n    }\n    else if(arguments[1] instanceof Animation)\n    {\n\n      var sourceAnimation = arguments[1];\n\n      var newAnimation = sourceAnimation.clone();\n\n      animations[label] = newAnimation;\n\n      if(currentAnimation === '')\n      {\n        currentAnimation = label;\n        this.animation = newAnimation;\n      }\n\n      newAnimation.isSpriteAnimation = true;\n\n      this._internalWidth = newAnimation.getWidth()*abs(this._getScaleX());\n      this._internalHeight = newAnimation.getHeight()*abs(this._getScaleY());\n\n      return newAnimation;\n    }\n    else\n    {\n      var animFrames = [];\n      for(var i=1; i<arguments.length; i++)\n        animFrames.push(arguments[i]);\n\n      anim = construct(pInst.Animation, animFrames);\n      animations[label] = anim;\n\n      if(currentAnimation === '')\n      {\n        currentAnimation = label;\n        this.animation = anim;\n      }\n      anim.isSpriteAnimation = true;\n\n      this._internalWidth = anim.getWidth()*abs(this._getScaleX());\n      this._internalHeight = anim.getHeight()*abs(this._getScaleY());\n\n      return anim;\n    }\n\n  };\n\n  /**\n  * Changes the displayed image/animation.\n  * Equivalent to changeAnimation\n  *\n  * @method changeImage\n  * @param {String} label Image/Animation identifier\n  */\n  this.changeImage = function(label) {\n    this.changeAnimation(label);\n  };\n\n   /**\n  * Returns the label of the current animation\n  *\n  * @method getAnimationLabel\n  * @return {String} label Image/Animation identifier\n  */\n  this.getAnimationLabel = function() {\n    return currentAnimation;\n  };\n\n  /**\n  * Changes the displayed animation.\n  * See Animation for more control over the sequence.\n  *\n  * @method changeAnimation\n  * @param {String} label Animation identifier\n  */\n  this.changeAnimation = function(label) {\n    if(!animations[label])\n      print('changeAnimation error: no animation labeled '+label);\n    else\n    {\n      currentAnimation = label;\n      this.animation = animations[label];\n    }\n  };\n\n  /**\n  * Checks if the given point corresponds to a transparent pixel\n  * in the sprite's current image. It can be used to check a point collision\n  * against only the visible part of the sprite.\n  *\n  * @method overlapPixel\n  * @param {Number} pointX x coordinate of the point to check\n  * @param {Number} pointY y coordinate of the point to check\n  * @return {Boolean} result True if non-transparent\n  */\n  this.overlapPixel = function(pointX, pointY) {\n    var point = createVector(pointX, pointY);\n\n    var img = this.animation.getFrameImage();\n\n    //convert point to img relative position\n    point.x -= this.position.x-img.width/2;\n    point.y -= this.position.y-img.height/2;\n\n    //out of the image entirely\n    if(point.x<0 || point.x>img.width || point.y<0 || point.y>img.height)\n      return false;\n    else if(this.rotation === 0 && this.scale === 1)\n    {\n      //true if full opacity\n      var values = img.get(point.x, point.y);\n      return values[3] === 255;\n    }\n    else\n    {\n      print('Error: overlapPixel doesn\\'t work with scaled or rotated sprites yet');\n      //offscreen printing to be implemented bleurch\n      return false;\n    }\n  };\n\n  /**\n  * Checks if the given point is inside the sprite's collider.\n  *\n  * @method overlapPoint\n  * @param {Number} pointX x coordinate of the point to check\n  * @param {Number} pointY y coordinate of the point to check\n  * @return {Boolean} result True if inside\n  */\n  this.overlapPoint = function(pointX, pointY) {\n    var point = createVector(pointX, pointY);\n\n    if(!this.collider)\n      this.setDefaultCollider();\n\n    if(this.collider !== undefined)\n    {\n      if(this.collider instanceof AABB)\n        return (point.x > this.collider.left() && point.x < this.collider.right() && point.y > this.collider.top() && point.y < this.collider.bottom());\n      if(this.collider instanceof CircleCollider)\n      {\n        var sqRadius = this.collider.radius * this.collider.radius;\n        var sqDist = pow(this.collider.center.x - point.x, 2) + pow(this.collider.center.y - point.y, 2);\n        return sqDist<sqRadius;\n      }\n      else\n        return false;\n    }\n    else\n      return false;\n\n  };\n\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * If the target is a group the function will be called for each single\n  * sprite overlapping. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.overlap(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method overlap\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.overlap = function(target, callback) {\n    //if(this.collider instanceof AABB && target.collider instanceof AABB)\n    return this.AABBops('overlap', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the current sprite will be displace by\n  * the colliding one in the closest non-overlapping position.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.collide(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method collide\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.collide = function(target, callback) {\n    //if(this.collider instanceof AABB && target.collider instanceof AABB)\n    return this.AABBops('collide', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the current sprite will displace\n  * the colliding one to the closest non-overlapping position.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.displace(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method displace\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.displace = function(target, callback) {\n    return this.AABBops('displace', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the sprites will bounce affecting each\n  * other's trajectories depending on their .velocity, .mass and .restitution\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.bounce(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method bounce\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.bounce = function(target, callback) {\n    return this.AABBops('bounce', target, callback);\n  };\n\n  // Internal collision detection function. Do not use directly.\n  this.AABBops = function(type, target, callback) {\n\n    this.touching.left = false;\n    this.touching.right = false;\n    this.touching.top = false;\n    this.touching.bottom = false;\n\n    var result = false;\n\n    //if single sprite turn into array anyway\n    var others = [];\n\n    if(target instanceof Sprite)\n      others.push(target);\n    else if(target instanceof Array)\n    {\n      if(quadTree !== undefined && quadTree.active)\n        others = quadTree.retrieveFromGroup( this, target);\n\n      if(others.length === 0)\n        others = target;\n\n    }\n    else\n      throw('Error: overlap can only be checked between sprites or groups');\n\n    for(var i=0; i<others.length; i++)\n      if(this !== others[i] && !this.removed) //you can check collisions within the same group but not on itself\n      {\n        var displacement;\n        var other = others[i];\n\n        if(this.collider === undefined)\n          this.setDefaultCollider();\n\n        if(other.collider === undefined)\n          other.setDefaultCollider();\n\n        /*\n        if(this.colliderType==\"default\" && animations[currentAnimation]!=null)\n        {\n          print(\"busted\");\n          return false;\n        }*/\n        if(this.collider !== undefined && other.collider !== undefined)\n        {\n        if(type === 'overlap') {\n            var over;\n\n            //if the other is a circle I calculate the displacement from here\n            if(this.collider instanceof CircleCollider)\n                over = other.collider.overlap(this.collider);\n            else\n                over = this.collider.overlap(other.collider);\n\n            if(over)\n            {\n\n              result = true;\n\n              if(callback !== undefined && typeof callback === 'function')\n                callback.call(this, this, other);\n            }\n          }\n        else if(type === 'collide' || type === 'displace' || type === 'bounce')\n          {\n            displacement = createVector(0, 0);\n\n            //if the sum of the speed is more than the collider i may\n            //have a tunnelling problem\n            var tunnelX = abs(this.velocity.x-other.velocity.x) >= other.collider.extents.x/2 && round(this.deltaX - this.velocity.x) === 0;\n\n            var tunnelY = abs(this.velocity.y-other.velocity.y) >= other.collider.size().y/2 && round(this.deltaY - this.velocity.y) === 0;\n\n\n            if(tunnelX || tunnelY)\n            {\n              //instead of using the colliders I use the bounding box\n              //around the previous position and current position\n              //this is regardless of the collider type\n\n              //the center is the average of the coll centers\n              var c = createVector(\n                (this.position.x+this.previousPosition.x)/2,\n                (this.position.y+this.previousPosition.y)/2);\n\n              //the extents are the distance between the coll centers\n              //plus the extents of both\n              var e = createVector(\n                abs(this.position.x -this.previousPosition.x) + this.collider.extents.x,\n                abs(this.position.y -this.previousPosition.y) + this.collider.extents.y);\n\n              var bbox = new AABB(pInst, c, e, this.collider.offset);\n\n              //bbox.draw();\n\n              if(bbox.overlap(other.collider))\n              {\n                if(tunnelX) {\n\n                  //entering from the right\n                  if(this.velocity.x < 0)\n                    displacement.x = other.collider.right() - this.collider.left() + 1;\n                  else if(this.velocity.x > 0 )\n                    displacement.x = other.collider.left() - this.collider.right() -1;\n                  }\n\n                if(tunnelY) {\n                  //from top\n                  if(this.velocity.y > 0)\n                    displacement.y = other.collider.top() - this.collider.bottom() - 1;\n                  else if(this.velocity.y < 0 )\n                    displacement.y = other.collider.bottom() - this.collider.top() + 1;\n\n                  }\n\n              }//end overlap\n\n            }\n            else //non tunnel overlap\n            {\n\n              //if the other is a circle I calculate the displacement from here\n              //and reverse it\n              if(this.collider instanceof CircleCollider)\n                {\n                displacement = other.collider.collide(this.collider).mult(-1);\n                }\n              else\n                displacement = this.collider.collide(other.collider);\n\n            }\n\n            if(displacement.x !== 0 || displacement.y !== 0)\n            {\n              var newVelX1, newVelY1, newVelX2, newVelY2;\n\n              if (type === 'displace' && !other.immovable) {\n                other.position.sub(displacement);\n              } else if ((type === 'collide' || type === 'bounce') && !this.immovable) {\n                this.position.add(displacement);\n                this.previousPosition = createVector(this.position.x, this.position.y);\n                this.newPosition = createVector(this.position.x, this.position.y);\n              }\n\n              if(displacement.x > 0)\n                this.touching.left = true;\n              if(displacement.x < 0)\n                this.touching.right = true;\n              if(displacement.y < 0)\n                this.touching.bottom = true;\n              if(displacement.y > 0)\n                this.touching.top = true;\n\n              if(type === 'bounce')\n              {\n                if (this.collider instanceof CircleCollider && other.collider instanceof CircleCollider) {\n                  var dx1 = p5.Vector.sub(this.position, other.position);\n                  var dx2 = p5.Vector.sub(other.position, this.position);\n                  var magnitude = dx1.magSq();\n                  var totalMass = this.mass + other.mass;\n                  var m1 = 0, m2 = 0;\n                  if (this.immovable) {\n                    m2 = 2;\n                  } else if (other.immovable) {\n                    m1 = 2;\n                  } else {\n                    m1 = 2 * other.mass / totalMass;\n                    m2 = 2 * this.mass / totalMass;\n                  }\n                  var newVel1 = dx1.mult(m1 * p5.Vector.sub(this.velocity, other.velocity).dot(dx1) / magnitude);\n                  var newVel2 = dx2.mult(m2 * p5.Vector.sub(other.velocity, this.velocity).dot(dx2) / magnitude);\n\n                  this.velocity.sub(newVel1.mult(this.restitution));\n                  other.velocity.sub(newVel2.mult(other.restitution));\n                }\n                else {\n                if(other.immovable)\n                {\n                  newVelX1 = -this.velocity.x+other.velocity.x;\n                  newVelY1 = -this.velocity.y+other.velocity.y;\n                }\n                else\n                {\n                  newVelX1 = (this.velocity.x * (this.mass - other.mass) + (2 * other.mass * other.velocity.x)) / (this.mass + other.mass);\n                  newVelY1 = (this.velocity.y * (this.mass - other.mass) + (2 * other.mass * other.velocity.y)) / (this.mass + other.mass);\n                  newVelX2 = (other.velocity.x * (other.mass - this.mass) + (2 * this.mass * this.velocity.x)) / (this.mass + other.mass);\n                  newVelY2 = (other.velocity.y * (other.mass - this.mass) + (2 * this.mass * this.velocity.y)) / (this.mass + other.mass);\n                }\n\n                //var bothCircles = (this.collider instanceof CircleCollider &&\n                //                   other.collider  instanceof CircleCollider);\n\n                //if(this.touching.left || this.touching.right || this.collider instanceof CircleCollider)\n\n                //print(displacement);\n\n                if(abs(displacement.x)>abs(displacement.y))\n                {\n\n\n                  if(!this.immovable)\n                  {\n                    this.velocity.x = newVelX1*this.restitution;\n\n                  }\n\n                  if(!other.immovable)\n                    other.velocity.x = newVelX2*other.restitution;\n\n                }\n                //if(this.touching.top || this.touching.bottom || this.collider instanceof CircleCollider)\n                if(abs(displacement.x)<abs(displacement.y))\n                {\n\n                  if(!this.immovable)\n                    this.velocity.y = newVelY1*this.restitution;\n\n                  if(!other.immovable)\n                    other.velocity.y = newVelY2*other.restitution;\n                }\n                }\n              }\n              //else if(type == \"collide\")\n                //this.velocity = createVector(0,0);\n\n              if(callback !== undefined && typeof callback === 'function')\n                callback.call(this, this, other);\n\n              result = true;\n            }\n          }\n        }//end collider exists\n      }\n\n    return result;\n  };\n} //end Sprite class\n\ndefineLazyP5Property('Sprite', boundConstructorFactory(Sprite));\n\n/**\n   * A camera facilitates scrolling and zooming for scenes extending beyond\n   * the canvas. A camera has a position, a zoom factor, and the mouse\n   * coordinates relative to the view.\n   * The camera is automatically created on the first draw cycle.\n   *\n   * In p5.js terms the camera wraps the whole drawing cycle in a\n   * transformation matrix but it can be disable anytime during the draw\n   * cycle for example to draw interface elements in an absolute position.\n   *\n   * @class Camera\n   * @constructor\n   * @param {Number} x Initial x coordinate\n   * @param {Number} y Initial y coordinate\n   * @param {Number} zoom magnification\n   **/\nfunction Camera(pInst, x, y, zoom) {\n  /**\n  * Camera position. Defines the global offset of the sketch.\n  *\n  * @property position\n  * @type {p5.Vector}\n  */\n  this.position = pInst.createVector(x, y);\n\n  /**\n  * Camera zoom. Defines the global scale of the sketch.\n  * A scale of 1 will be the normal size. Setting it to 2 will make everything\n  * twice the size. .5 will make everything half size.\n  *\n  * @property zoom\n  * @type {Number}\n  */\n  this.zoom = zoom;\n\n  /**\n  * MouseX translated to the camera view.\n  * Offsetting and scaling the canvas will not change the sprites' position\n  * nor the mouseX and mouseY variables. Use this property to read the mouse\n  * position if the camera moved or zoomed.\n  *\n  * @property mouseX\n  * @type {Number}\n  */\n  this.mouseX = pInst.mouseX;\n\n  /**\n  * MouseY translated to the camera view.\n  * Offsetting and scaling the canvas will not change the sprites' position\n  * nor the mouseX and mouseY variables. Use this property to read the mouse\n  * position if the camera moved or zoomed.\n  *\n  * @property mouseY\n  * @type {Number}\n  */\n  this.mouseY = pInst.mouseY;\n\n  /**\n  * True if the camera is active.\n  * Read only property. Use the methods Camera.on() and Camera.off()\n  * to enable or disable the camera.\n  *\n  * @property active\n  * @type {Boolean}\n  */\n  this.active = false;\n\n  /**\n  * Activates the camera.\n  * The canvas will be drawn according to the camera position and scale until\n  * Camera.off() is called\n  *\n  * @method on\n  */\n  this.on = function() {\n    if(!this.active)\n    {\n      cameraPush.call(pInst);\n      this.active = true;\n    }\n  };\n\n  /**\n  * Deactivates the camera.\n  * The canvas will be drawn normally, ignoring the camera's position\n  * and scale until Camera.on() is called\n  *\n  * @method off\n  */\n  this.off = function() {\n    if(this.active)\n    {\n      cameraPop.call(pInst);\n      this.active = false;\n    }\n  };\n} //end camera class\n\ndefineLazyP5Property('Camera', boundConstructorFactory(Camera));\n\n//called pre draw by default\nfunction cameraPush() {\n  var pInst = this;\n  var camera = pInst.camera;\n\n  //awkward but necessary in order to have the camera at the center\n  //of the canvas by default\n  if(!camera.init && camera.position.x === 0 && camera.position.y === 0)\n    {\n    camera.position.x=pInst.width/2;\n    camera.position.y=pInst.height/2;\n    camera.init = true;\n    }\n\n  camera.mouseX = pInst.mouseX+camera.position.x-pInst.width/2;\n  camera.mouseY = pInst.mouseY+camera.position.y-pInst.height/2;\n\n  if(!camera.active)\n  {\n    camera.active = true;\n    pInst.push();\n    pInst.scale(camera.zoom);\n    pInst.translate(-camera.position.x+pInst.width/2/camera.zoom, -camera.position.y+pInst.height/2/camera.zoom);\n  }\n}\n\n//called postdraw by default\nfunction cameraPop() {\n  var pInst = this;\n\n  if(pInst.camera.active)\n  {\n    pInst.pop();\n    pInst.camera.active = false;\n  }\n}\n\n\n\n\n/**\n   * In p5.play groups are collections of sprites with similar behavior.\n   * For example a group may contain all the sprites in the background\n   * or all the sprites that \"kill\" the player.\n   *\n   * Groups are \"extended\" arrays and inherit all their properties\n   * e.g. group.length\n   *\n   * Since groups contain only references, a sprite can be in multiple\n   * groups and deleting a group doesn't affect the sprites themselves.\n   *\n   * Sprite.remove() will also remove the sprite from all the groups\n   * it belongs to.\n   *\n   * @class Group\n   * @constructor\n   */\nfunction Group() {\n\n  //basically extending the array\n  var array = [];\n\n  /**\n  * Gets the member at index i.\n  *\n  * @method get\n  * @param {Number} i The index of the object to retrieve\n  */\n  array.get = function(i) {\n    return array[i];\n  };\n\n  /**\n  * Checks if the group contains a sprite.\n  *\n  * @method contains\n  * @param {Sprite} sprite The sprite to search\n  * @return {Number} Index or -1 if not found\n  */\n  array.contains = function(sprite) {\n    return this.indexOf(sprite)>-1;\n  };\n\n  /**\n   * Same as Group.contains\n   * @method indexOf\n   */\n  array.indexOf = function(item) {\n    for (var i = 0, len = array.length; i < len; ++i) {\n      if (virtEquals(item, array[i])) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  /**\n  * Adds a sprite to the group.\n  *\n  * @method add\n  * @param {Sprite} s The sprite to be added\n  */\n  array.add = function(s) {\n    if(!(s instanceof Sprite)) {\n      throw('Error: you can only add sprites to a group');\n    }\n\n    if (-1 === this.indexOf(s)) {\n      array.push(s);\n      s.groups.push(this);\n    }\n  };\n\n  /**\n   * Same as group.length\n   * @method size\n   */\n  array.size = function() {\n    return array.length;\n  };\n\n  /**\n  * Removes all the sprites in the group\n  * from the scene.\n  *\n  * @method removeSprites\n  */\n  array.removeSprites = function() {\n    while (array.length > 0) {\n      array[0].remove();\n    }\n  };\n\n  /**\n  * Removes all references to the group.\n  * Does not remove the actual sprites.\n  *\n  * @method clear\n  */\n  array.clear = function() {\n    array.length = 0;\n  };\n\n  /**\n  * Removes a sprite from the group.\n  * Does not remove the actual sprite, only the affiliation (reference).\n  *\n  * @method remove\n  * @param {Sprite} item The sprite to be removed\n  * @return {Boolean} True if sprite was found and removed\n  */\n  array.remove = function(item) {\n    if(!(item instanceof Sprite)) {\n      throw('Error: you can only remove sprites from a group');\n    }\n\n    var i, removed = false;\n    for (i = array.length - 1; i >= 0; i--) {\n      if (array[i] === item) {\n        array.splice(i, 1);\n        removed = true;\n      }\n    }\n\n    if (removed) {\n      for (i = item.groups.length - 1; i >= 0; i--) {\n        if (item.groups[i] === this) {\n          item.groups.splice(i, 1);\n        }\n      }\n    }\n\n    return removed;\n  };\n\n  /**\n   * Returns a copy of the group as standard array.\n   * @method toArray\n   */\n  array.toArray = function() {\n    return array.slice(0);\n  };\n\n  /**\n  * Returns the highest depth in a group\n  *\n  * @method maxDepth\n  * @return {Number} The depth of the sprite drawn on the top\n  */\n  array.maxDepth = function() {\n    if (array.length === 0) {\n      return 0;\n    }\n\n    return array.reduce(function(maxDepth, sprite) {\n      return Math.max(maxDepth, sprite.depth);\n    }, -Infinity);\n  };\n\n  /**\n  * Returns the lowest depth in a group\n  *\n  * @method minDepth\n  * @return {Number} The depth of the sprite drawn on the bottom\n  */\n  array.minDepth = function() {\n    if (array.length === 0) {\n      return 99999;\n    }\n\n    return array.reduce(function(minDepth, sprite) {\n      return Math.min(minDepth, sprite.depth);\n    }, Infinity);\n  };\n\n  /**\n  * Draws all the sprites in the group.\n  *\n  * @method draw\n  */\n  array.draw = function() {\n\n    //sort by depth\n    this.sort(function(a, b) {\n      return a.depth - b.depth;\n    });\n\n    for(var i = 0; i<this.size(); i++)\n    {\n      this.get(i).display();\n    }\n  };\n\n  //internal use\n  function virtEquals(obj, other) {\n    if (obj === null || other === null) {\n      return (obj === null) && (other === null);\n    }\n    if (typeof (obj) === 'string') {\n      return obj === other;\n    }\n    if (typeof(obj) !== 'object') {\n      return obj === other;\n    }\n    if (obj.equals instanceof Function) {\n      return obj.equals(other);\n    }\n    return obj === other;\n  }\n\n  /**\n   * Collide each member of group against the target using the given collision\n   * type.  Return true if any collision occurred.\n   * Internal use\n   *\n   * @private\n   * @method _groupCollide\n   * @param {!string} type one of 'overlap', 'collide', 'displace', 'bounce'\n   * @param {Object} target Group or Sprite\n   * @param {Function} [callback] on collision.\n   * @return {boolean} True if any collision/overlap occurred\n   */\n  function _groupCollide(type, target, callback) {\n    var didCollide = false;\n    for(var i = 0; i<this.size(); i++)\n      didCollide = this.get(i).AABBops(type, target, callback) || didCollide;\n    return didCollide;\n  }\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occurs.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.overlap(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method overlap\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.overlap = _groupCollide.bind(array, 'overlap');\n\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites in the group will be displaced\n  * by the colliding one to the closest non-overlapping positions.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.collide(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method collide\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.collide = _groupCollide.bind(array, 'collide');\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites in the group will displace\n  * the colliding ones to the closest non-overlapping positions.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occurs.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.displace(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method displace\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.displace = _groupCollide.bind(array, 'displace');\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites will bounce affecting each\n  * other's trajectories depending on their .velocity, .mass and .restitution.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.bounce(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method bounce\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.bounce = _groupCollide.bind(array, 'bounce');\n\n  return array;\n}\n\np5.prototype.Group = Group;\n\n//circle collider - used internally\nfunction CircleCollider(pInst, _center, _radius, _offset) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n\n  var CENTER = p5.prototype.CENTER;\n\n  this.center = _center;\n  this.radius = _radius;\n  this.originalRadius = _radius;\n\n  if(_offset === undefined)\n    this.offset = createVector(0, 0);\n  else\n    this.offset = _offset;\n  this.extents = createVector(_radius*2, _radius*2);\n\n  this.draw = function()\n  {\n    pInst.noFill();\n    pInst.stroke(0, 255, 0);\n    pInst.rectMode(CENTER);\n    pInst.ellipse(this.center.x+this.offset.x, this.center.y+this.offset.y, this.radius*2, this.radius*2);\n  };\n\n  //should be called only for circle vs circle\n  this.overlap = function(other)\n  {\n    //square dist\n    var r = this.radius + other.radius;\n    r *= r;\n    var thisCenterX = this.center.x + this.offset.x;\n    var thisCenterY = this.center.y + this.offset.y;\n    var otherCenterX = other.center.x + other.offset.x;\n    var otherCenterY = other.center.y + other.offset.y;\n    var sqDist = pow(thisCenterX - otherCenterX, 2) + pow(thisCenterY - otherCenterY, 2);\n    return r > sqDist;\n  };\n\n  //should be called only for circle vs circle\n  this.collide = function(other)\n  {\n    if(this.overlap(other)) {\n      var thisCenterX = this.center.x + this.offset.x;\n      var thisCenterY = this.center.y + this.offset.y;\n      var otherCenterX = other.center.x + other.offset.x;\n      var otherCenterY = other.center.y + other.offset.y;\n      var a = pInst.atan2(thisCenterY-otherCenterY, thisCenterX-otherCenterX);\n      var radii = this.radius+other.radius;\n      var intersection = abs(radii - dist(thisCenterX, thisCenterY, otherCenterX, otherCenterY));\n\n      var displacement = createVector(pInst.cos(a)*intersection, pInst.sin(a)*intersection);\n\n      return displacement;\n    } else {\n      return createVector(0, 0);\n    }\n  };\n\n  this.size = function()\n  {\n    return createVector(this.radius*2, this.radius*2);\n  };\n\n  this.left = function()\n  {\n    return this.center.x+this.offset.x - this.radius;\n  };\n\n  this.right = function()\n  {\n    return this.center.x+this.offset.x + this.radius;\n  };\n\n  this.top = function()\n  {\n    return this.center.y+this.offset.y - this.radius;\n  };\n\n  this.bottom = function()\n  {\n    return this.center.y+this.offset.y + this.radius;\n  };\n\n\n\n}\ndefineLazyP5Property('CircleCollider', boundConstructorFactory(CircleCollider));\n\n//axis aligned bounding box - extents are the half sizes - used internally\nfunction AABB(pInst, _center, _extents, _offset) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n\n  var CENTER = p5.prototype.CENTER;\n  var PI = p5.prototype.PI;\n\n  this.center = _center;\n  this.extents = _extents;\n  this.originalExtents = _extents.copy();\n\n  if(_offset === undefined)\n    this.offset = createVector(0, 0);\n  else\n    this.offset = _offset;\n\n  this.min = function()\n  {\n    return createVector(this.center.x+this.offset.x - this.extents.x, this.center.y+this.offset.y - this.extents.y);\n  };\n\n  this.max = function()\n  {\n    return createVector(this.center.x+this.offset.x + this.extents.x, this.center.y+this.offset.y + this.extents.y);\n  };\n\n  this.right = function()\n  {\n    return this.center.x+this.offset.x + this.extents.x/2;\n  };\n\n  this.left = function()\n  {\n    return this.center.x+this.offset.x - this.extents.x/2;\n  };\n\n  this.top = function()\n  {\n    return this.center.y+this.offset.y - this.extents.y/2;\n  };\n\n  this.bottom = function()\n  {\n    return this.center.y+this.offset.y + this.extents.y/2;\n  };\n\n  this.size = function()\n  {\n    return createVector(this.extents.x * 2, this.extents.y * 2);\n  };\n\n  this.rotate = function(r)\n  {\n    //rotate the bbox\n    var t;\n    if (pInst._angleMode === pInst.RADIANS) {\n      t = radians(r);\n    } else {\n      t = r;\n    }\n\n    var w2 = this.extents.x * abs(pInst.cos(t)) + this.extents.y * abs(pInst.sin(t));\n    var h2 = this.extents.x * abs(pInst.sin(t)) + this.extents.y * abs(pInst.cos(t));\n\n    this.extents.x = w2;\n    this.extents.y = h2;\n\n  };\n\n  this.draw = function()\n  {\n    //fill(col);\n    pInst.noFill();\n    pInst.stroke(0, 255, 0);\n    pInst.rectMode(CENTER);\n    pInst.rect(this.center.x+this.offset.x, this.center.y+this.offset.y, this.size().x/2, this.size().y/2);\n  };\n\n  this.overlap = function(other)\n  {\n    //box vs box\n    if(other instanceof AABB)\n    {\n      var md = other.minkowskiDifference(this);\n\n      if (md.min().x <= 0 &&\n          md.max().x >= 0 &&\n          md.min().y <= 0 &&\n          md.max().y >= 0)\n      {\n        return true;\n      }\n      else\n        return false;\n    }\n    //box vs circle\n    else if(other instanceof CircleCollider)\n    {\n\n      //find closest point to the circle on the box\n      var pt = createVector(other.center.x, other.center.y);\n\n      //I don't know what's going o try to trace a line from centers to see\n      if( other.center.x < this.left() )\n        pt.x = this.left();\n      else if( other.center.x > this.right())\n        pt.x = this.right();\n\n      if( other.center.y < this.top() )\n        pt.y = this.top();\n      else if( other.center.y > this.bottom())\n        pt.y = this.bottom();\n\n      var distance = pt.dist(other.center);\n\n      return distance<other.radius;\n    }\n  };\n\n  this.collide = function(other)\n  {\n\n    if(other instanceof AABB)\n    {\n      var md = other.minkowskiDifference(this);\n\n      if (md.min().x <= 0 &&\n          md.max().x >= 0 &&\n          md.min().y <= 0 &&\n          md.max().y >= 0)\n      {\n        var boundsPoint = md.closestPointOnBoundsToPoint(createVector(0, 0));\n\n        return boundsPoint;\n      }\n      else\n        return createVector(0, 0);\n    }\n    //box vs circle\n    else if(other instanceof CircleCollider)\n    {\n\n      //find closest point to the circle on the box\n      var pt = createVector(other.center.x, other.center.y);\n\n      //I don't know what's going o try to trace a line from centers to see\n      if( other.center.x < this.left() )\n        pt.x = this.left();\n      else if( other.center.x > this.right())\n        pt.x = this.right();\n\n      if( other.center.y < this.top() )\n        pt.y = this.top();\n      else if( other.center.y > this.bottom())\n        pt.y = this.bottom();\n\n\n      var distance = pt.dist(other.center);\n      var a;\n\n      if(distance<other.radius)\n      {\n        //reclamp point\n        if(pt.x === other.center.x && pt.y === other.center.y)\n        {\n          var xOverlap = pt.x - this.center.x;\n          var yOverlap = pt.y - this.center.y;\n\n\n          if(abs(xOverlap) < abs(yOverlap))\n          {\n            if(xOverlap > 0 )\n              pt.x = this.right();\n            else\n              pt.x = this.left();\n          }\n          else\n          {\n            if(yOverlap < 0 )\n              pt.y = this.top();\n            else\n              pt.y = this.bottom();\n          }\n\n          a = pInst.atan2(other.center.y-pt.y, other.center.x-pt.x);\n\n          //fix exceptions\n          if(a === 0)\n          {\n            if(pt.x === this.right()) a = PI;\n            if(pt.y === this.top()) a = PI/2;\n            if(pt.y === this.bottom()) a = -PI/2;\n          }\n        }\n        else\n        {\n          //angle bw point and center\n          a = pInst.atan2(pt.y-other.center.y, pt.x-other.center.x);\n          //project the normal (line between pt and center) onto the circle\n        }\n\n        var d = createVector(pt.x-other.center.x, pt.y-other.center.y);\n        var displacement = createVector(pInst.cos(a)*other.radius-d.x, pInst.sin(a)*other.radius-d.y);\n\n        //if(pt.x === other.center.x && pt.y === other.center.y)\n        //displacement = displacement.mult(-1);\n\n        return displacement;\n        //return createVector(0,0);\n      }\n      else\n        return createVector(0, 0);\n    }\n  };\n\n  this.minkowskiDifference = function(other)\n  {\n    var topLeft = this.min().sub(other.max());\n    var fullSize = this.size().add(other.size());\n    return new AABB(pInst, topLeft.add(fullSize.div(2)), fullSize.div(2));\n  };\n\n\n  this.closestPointOnBoundsToPoint = function(point)\n  {\n    // test x first\n    var minDist = abs(point.x - this.min().x);\n    var boundsPoint = createVector(this.min().x, point.y);\n\n    if (abs(this.max().x - point.x) < minDist)\n    {\n      minDist = abs(this.max().x - point.x);\n      boundsPoint = createVector(this.max().x, point.y);\n    }\n\n    if (abs(this.max().y - point.y) < minDist)\n    {\n      minDist = abs(this.max().y - point.y);\n      boundsPoint = createVector(point.x, this.max().y);\n    }\n\n    if (abs(this.min().y - point.y) < minDist)\n    {\n      minDist = abs(this.min.y - point.y);\n      boundsPoint = createVector(point.x, this.min().y);\n    }\n\n    return boundsPoint;\n  };\n\n\n}//end AABB\ndefineLazyP5Property('AABB', boundConstructorFactory(AABB));\n\n\n\n/**\n * An Animation object contains a series of images (p5.Image) that\n * can be displayed sequentially.\n *\n * All files must be png images. You must include the directory from the sketch root,\n * and the extension .png\n *\n * A sprite can have multiple labeled animations, see Sprite.addAnimation\n * and Sprite.changeAnimation, however an animation can be used independently.\n *\n * An animation can be created either by passing a series of file names,\n * no matter how many or by passing the first and the last file name\n * of a numbered sequence.\n * p5.play will try to detect the sequence pattern.\n *\n * For example if the given filenames are\n * \"data/file0001.png\" and \"data/file0005.png\" the images\n * \"data/file0003.png\" and \"data/file0004.png\" will be loaded as well.\n *\n * @example\n *     var sequenceAnimation;\n *     var glitch;\n *\n *     function preload() {\n *       sequenceAnimation = loadAnimation(\"data/walking0001.png\", \"data/walking0005.png\");\n *       glitch = loadAnimation(\"data/dog.png\", \"data/horse.png\", \"data/cat.png\", \"data/snake.png\");\n *     }\n *\n *     function setup() {\n *       createCanvas(800, 600);\n *     }\n *\n *     function draw() {\n *       background(0);\n *       animation(sequenceAnimation, 100, 100);\n *       animation(glitch, 200, 100);\n *     }\n *\n * @class Animation\n * @constructor\n * @param {String} fileName1 First file in a sequence OR first image file\n * @param {String} fileName2 Last file in a sequence OR second image file\n * @param {String} [...fileNameN] Any number of image files after the first two\n */\nfunction Animation(pInst) {\n  var frameArguments = Array.prototype.slice.call(arguments, 1);\n  var i;\n\n  var CENTER = p5.prototype.CENTER;\n\n  /**\n  * Array of frames (p5.Image)\n  *\n  * @property images\n  * @type {Array}\n  */\n  this.images = [];\n\n  var frame = 0;\n  var cycles = 0;\n  var targetFrame = -1;\n\n  this.offX = 0;\n  this.offY = 0;\n\n  /**\n  * Delay between frames in number of draw cycles.\n  * If set to 4 the framerate of the animation would be the\n  * sketch framerate divided by 4 (60fps = 15fps)\n  *\n  * @property frameDelay\n  * @type {Number}\n  * @default 4\n  */\n  this.frameDelay = 4;\n\n  /**\n  * True if the animation is currently playing.\n  *\n  * @property playing\n  * @type {Boolean}\n  * @default true\n  */\n  this.playing = true;\n\n  /**\n  * Animation visibility.\n  *\n  * @property visible\n  * @type {Boolean}\n  * @default true\n  */\n  this.visible = true;\n\n  /**\n  * If set to false the animation will stop after reaching the last frame\n  *\n  * @property looping\n  * @type {Boolean}\n  * @default true\n  */\n  this.looping = true;\n\n  /**\n  * True if frame changed during the last draw cycle\n  *\n  * @property frameChanged\n  * @type {Boolean}\n  */\n  this.frameChanged = false;\n\n  //is the collider defined manually or defined\n  //by the current frame size\n  this.imageCollider = false;\n\n\n  //sequence mode\n  if(frameArguments.length === 2 && typeof frameArguments[0] === 'string' && typeof frameArguments[1] === 'string')\n  {\n    var from = frameArguments[0];\n    var to = frameArguments[1];\n\n    //print(\"sequence mode \"+from+\" -> \"+to);\n\n    //make sure the extensions are fine\n    var ext1 = from.substring(from.length-4, from.length);\n    if(ext1 !== '.png')\n    {\n      pInst.print('Animation error: you need to use .png files (filename '+from+')');\n      from = -1;\n    }\n\n    var ext2 = to.substring(to.length-4, to.length);\n    if(ext2 !== '.png')\n    {\n      pInst.print('Animation error: you need to use .png files (filename '+to+')');\n      to = -1;\n    }\n\n    //extensions are fine\n    if(from !== -1 && to !== -1)\n    {\n      var digits1 = 0;\n      var digits2 = 0;\n\n      //skip extension work backwards to find the numbers\n      for (i = from.length-5; i >= 0; i--) {\n        if(from.charAt(i) >= '0' && from.charAt(i) <= '9')\n          digits1++;\n      }\n\n      for (i = to.length-5; i >= 0; i--) {\n        if(to.charAt(i) >= '0' && to.charAt(i) <= '9')\n          digits2++;\n      }\n\n      var prefix1 = from.substring(0, from.length-(4+digits1));\n      var prefix2 = to.substring(0, to.length-(4+digits2) );\n\n      // Our numbers likely have leading zeroes, which means that some\n      // browsers (e.g., PhantomJS) will interpret them as base 8 (octal)\n      // instead of decimal. To fix this, we'll explicity tell parseInt to\n      // use a base of 10 (decimal). For more details on this issue, see\n      // http://stackoverflow.com/a/8763427/2422398.\n      var number1 = parseInt(from.substring(from.length-(4+digits1), from.length-4), 10);\n      var number2 = parseInt(to.substring(to.length-(4+digits2), to.length-4), 10);\n\n      //swap if inverted\n      if(number2<number1)\n      {\n        var t = number2;\n        number2 = number1;\n        number1 = t;\n      }\n\n      //two different frames\n      if(prefix1 !== prefix2 )\n      {\n        //print(\"2 separate images\");\n        this.images.push(pInst.loadImage(from));\n        this.images.push(pInst.loadImage(to));\n      }\n      //same digits: case img0001, img0002\n      else\n      {\n        var fileName;\n        if(digits1 === digits2)\n        {\n\n          //load all images\n          for (i = number1; i <= number2; i++) {\n            // Use nf() to number format 'i' into four digits\n            fileName = prefix1 + pInst.nf(i, digits1) + '.png';\n            this.images.push(pInst.loadImage(fileName));\n\n          }\n\n        }\n        else //case: case img1, img2\n        {\n          //print(\"from \"+prefix1+\" \"+number1 +\" to \"+number2);\n          for (i = number1; i <= number2; i++) {\n            // Use nf() to number format 'i' into four digits\n            fileName = prefix1 + i + '.png';\n            this.images.push(pInst.loadImage(fileName));\n\n          }\n\n        }\n      }\n\n    }//end no ext error\n\n  }//end sequence mode\n  // Sprite sheet mode\n  else if (frameArguments.length === 1 && (frameArguments[0] instanceof SpriteSheet))\n  {\n    this.spriteSheet = frameArguments[0];\n    this.images = this.spriteSheet.frames;\n  }\n  else if(frameArguments.length !== 0)//arbitrary list of images\n  {\n    //print(\"Animation arbitrary mode\");\n    for (i = 0; i < frameArguments.length; i++) {\n      //print(\"loading \"+fileNames[i]);\n      if(frameArguments[i] instanceof p5.Image)\n        this.images.push(frameArguments[i]);\n      else\n        this.images.push(pInst.loadImage(frameArguments[i]));\n    }\n  }\n\n  /**\n  * Objects are passed by reference so to have different sprites\n  * using the same animation you need to clone it.\n  *\n  * @method clone\n  * @return {Animation} A clone of the current animation\n  */\n  this.clone = function() {\n    var myClone = new Animation(pInst); //empty\n    myClone.images = [];\n\n    if (this.spriteSheet) {\n      myClone.spriteSheet = this.spriteSheet.clone();\n    }\n    myClone.images = this.images.slice();\n\n    myClone.offX = this.offX;\n    myClone.offY = this.offY;\n    myClone.frameDelay = this.frameDelay;\n    myClone.playing = this.playing;\n    myClone.looping = this.looping;\n\n    return myClone;\n  };\n\n  /**\n   * Draws the animation at coordinate x and y.\n   * Updates the frames automatically.\n   *\n   * @method draw\n   * @param {Number} x x coordinate\n   * @param {Number} y y coordinate\n   * @param {Number} [r=0] rotation\n   */\n  this.draw = function(x, y, r) {\n    this.xpos = x;\n    this.ypos = y;\n    this.rotation = r || 0;\n\n    if (this.visible)\n    {\n\n      //only connection with the sprite class\n      //if animation is used independently draw and update are the sam\n      if(!this.isSpriteAnimation)\n        this.update();\n\n      //this.currentImageMode = g.imageMode;\n      pInst.push();\n      pInst.imageMode(CENTER);\n\n      pInst.translate(this.xpos, this.ypos);\n      if (pInst._angleMode === pInst.RADIANS) {\n        pInst.rotate(radians(this.rotation));\n      } else {\n        pInst.rotate(this.rotation);\n      }\n\n      if(this.images[frame] !== undefined)\n      {\n        if (this.spriteSheet) {\n          var frame_info = this.images[frame].frame;\n          pInst.image(this.spriteSheet.image, this.offX, this.offY, frame_info.width, frame_info.height,\n            frame_info.x, frame_info.y, frame_info.width, frame_info.height);\n        } else {\n          pInst.image(this.images[frame], this.offX, this.offY);\n        }\n      }\n      else\n      {\n        pInst.print('Warning undefined frame '+frame);\n        //this.isActive = false;\n      }\n\n      pInst.pop();\n    }\n  };\n\n  //called by draw\n  this.update = function() {\n    cycles++;\n    var previousFrame = frame;\n    this.frameChanged = false;\n\n\n    //go to frame\n    if(this.images.length === 1)\n    {\n      this.playing = false;\n      frame = 0;\n    }\n\n    if ( this.playing && cycles%this.frameDelay === 0)\n    {\n      //going to target frame up\n      if(targetFrame>frame && targetFrame !== -1)\n      {\n        frame++;\n      }\n      //going to taget frame down\n      else if(targetFrame<frame && targetFrame !== -1)\n      {\n        frame--;\n      }\n      else if(targetFrame === frame && targetFrame !== -1)\n      {\n        this.playing=false;\n      }\n      else if (this.looping) //advance frame\n      {\n        //if next frame is too high\n        if (frame>=this.images.length-1)\n          frame = 0;\n        else\n          frame++;\n      } else\n      {\n        //if next frame is too high\n        if (frame<this.images.length-1)\n          frame++;\n      }\n    }\n    if (frame == this.images.length - 1 && this.onComplete != undefined)\n      this.onComplete(); //fire when on last frame\n\n    if(previousFrame !== frame)\n      this.frameChanged = true;\n\n    \n\n  };//end update\n\n  /**\n  * Plays the animation.\n  *\n  * @method play\n  */\n  this.play = function() {\n    this.playing = true;\n    targetFrame = -1;\n  };\n\n  /**\n  * Stops the animation.\n  *\n  * @method stop\n  */\n  this.stop = function(){\n    this.playing = false;\n  };\n\n  /**\n  * Rewinds the animation to the first frame.\n  *\n  * @method rewind\n  */\n  this.rewind = function() {\n    frame = 0;\n  };\n\n  /**\n  * fire when animation ends\n  *\n  * @method onComplete\n  * @return {Animation} \n  */\n  this.onComplete = function () {\n    return undefined;\n  };\n\n  /**\n  * Changes the current frame.\n  *\n  * @method changeFrame\n  * @param {Number} frame Frame number (starts from 0).\n  */\n  this.changeFrame = function(f) {\n    if (f<this.images.length)\n      frame = f;\n    else\n      frame = this.images.length - 1;\n\n    targetFrame = -1;\n    //this.playing = false;\n  };\n\n   /**\n  * Goes to the next frame and stops.\n  *\n  * @method nextFrame\n  */\n  this.nextFrame = function() {\n\n    if (frame<this.images.length-1)\n      frame = frame+1;\n    else if(this.looping)\n      frame = 0;\n\n    targetFrame = -1;\n    this.playing = false;\n  };\n\n   /**\n  * Goes to the previous frame and stops.\n  *\n  * @method previousFrame\n  */\n  this.previousFrame = function() {\n\n    if (frame>0)\n      frame = frame-1;\n    else if(this.looping)\n      frame = this.images.length-1;\n\n    targetFrame = -1;\n    this.playing = false;\n  };\n\n  /**\n  * Plays the animation forward or backward toward a target frame.\n  *\n  * @method goToFrame\n  * @param {Number} toFrame Frame number destination (starts from 0)\n  */\n  this.goToFrame = function(toFrame) {\n    if(toFrame < 0 || toFrame >= this.images.length) {\n      return;\n    }\n\n    // targetFrame gets used by the update() method to decide what frame to\n    // select next.  When it's not being used it gets set to -1.\n    targetFrame = toFrame;\n\n    if(targetFrame !== frame) {\n      this.playing = true;\n    }\n  };\n\n  /**\n  * Returns the current frame number.\n  *\n  * @method getFrame\n  * @return {Number} Current frame (starts from 0)\n  */\n  this.getFrame = function() {\n    return frame;\n  };\n\n  /**\n  * Returns the last frame number.\n  *\n  * @method getLastFrame\n  * @return {Number} Last frame number (starts from 0)\n  */\n  this.getLastFrame = function() {\n    return this.images.length-1;\n  };\n\n  /**\n  * Returns the current frame image as p5.Image.\n  *\n  * @method getFrameImage\n  * @return {p5.Image} Current frame image\n  */\n  this.getFrameImage = function() {\n    return this.images[frame];\n  };\n\n  /**\n  * Returns the frame image at the specified frame number.\n  *\n  * @method getImageAt\n  * @param {Number} frame Frame number\n  * @return {p5.Image} Frame image\n  */\n  this.getImageAt = function(f) {\n    return this.images[f];\n  };\n\n  /**\n  * Returns the current frame width in pixels.\n  * If there is no image loaded, returns 1.\n  *\n  * @method getWidth\n  * @return {Number} Frame width\n  */\n  this.getWidth = function() {\n    if (this.images[frame] instanceof p5.Image) {\n      return this.images[frame].width;\n    } else if (this.images[frame]) {\n      // Special case: Animation-from-spritesheet treats its images array differently.\n      return this.images[frame].frame.width;\n    } else {\n      return 1;\n    }\n  };\n\n  /**\n  * Returns the current frame height in pixels.\n  * If there is no image loaded, returns 1.\n  *\n  * @method getHeight\n  * @return {Number} Frame height\n  */\n  this.getHeight = function() {\n    if (this.images[frame] instanceof p5.Image) {\n      return this.images[frame].height;\n    } else if (this.images[frame]) {\n      // Special case: Animation-from-spritesheet treats its images array differently.\n      return this.images[frame].frame.height;\n    } else {\n      return 1;\n    }\n  };\n\n}\n\ndefineLazyP5Property('Animation', boundConstructorFactory(Animation));\n\n/**\n * Represents a sprite sheet and all it's frames.  To be used with Animation,\n * or static drawing single frames.\n *\n *  There are two different ways to load a SpriteSheet\n *\n * 1. Given width, height that will be used for every frame and the\n *    number of frames to cycle through. The sprite sheet must have a\n *    uniform grid with consistent rows and columns.\n *\n * 2. Given an array of frame objects that define the position and\n *    dimensions of each frame.  This is Flexible because you can use\n *    sprite sheets that don't have uniform rows and columns.\n *\n * @example\n *     // Method 1 - Using width, height for each frame and number of frames\n *     explode_sprite_sheet = loadSpriteSheet('assets/explode_sprite_sheet.png', 171, 158, 11);\n *\n *     // Method 2 - Using an array of objects that define each frame\n *     var player_frames = loadJSON('assets/tiles.json');\n *     player_sprite_sheet = loadSpriteSheet('assets/player_spritesheet.png', player_frames);\n *\n * @class SpriteSheet\n * @constructor\n * @param image String image path or p5.Image object\n */\nfunction SpriteSheet(pInst) {\n  var spriteSheetArgs = Array.prototype.slice.call(arguments, 1);\n\n  this.image = null;\n  this.frames = [];\n  this.frame_width = 0;\n  this.frame_height = 0;\n  this.num_frames = 0;\n\n  /**\n   * Generate the frames data for this sprite sheet baesd on user params\n   * @private\n   * @method _generateSheetFrames\n   */\n  this._generateSheetFrames = function() {\n    var sX = 0, sY = 0;\n    for (var i = 0; i < this.num_frames; i++) {\n      this.frames.push(\n        {\n          'name': i,\n          'frame': {\n            'x': sX,\n            'y': sY,\n            'width': this.frame_width,\n            'height': this.frame_height\n          }\n        });\n      sX += this.frame_width;\n      if (sX >= this.image.width) {\n        sX = 0;\n        sY += this.frame_height;\n        if (sY >= this.image.height) {\n          sY = 0;\n        }\n      }\n    }\n  };\n\n  if (spriteSheetArgs.length === 2 && Array.isArray(spriteSheetArgs[1])) {\n    this.frames = spriteSheetArgs[1];\n    this.num_frames = this.frames.length;\n  } else if (spriteSheetArgs.length === 4 &&\n    (typeof spriteSheetArgs[1] === 'number') &&\n    (typeof spriteSheetArgs[2] === 'number') &&\n    (typeof spriteSheetArgs[3] === 'number')) {\n    this.frame_width = spriteSheetArgs[1];\n    this.frame_height = spriteSheetArgs[2];\n    this.num_frames = spriteSheetArgs[3];\n  }\n\n  if(spriteSheetArgs[0] instanceof p5.Image) {\n    this.image = spriteSheetArgs[0];\n    if (spriteSheetArgs.length === 4) {\n      this._generateSheetFrames();\n    }\n  } else {\n    if (spriteSheetArgs.length === 2) {\n      this.image = pInst.loadImage(spriteSheetArgs[0]);\n    } else if (spriteSheetArgs.length === 4) {\n      this.image = pInst.loadImage(spriteSheetArgs[0], this._generateSheetFrames.bind(this));\n    }\n  }\n\n  /**\n   * Draws a specific frame to the canvas.\n   * @param frame_name  Can either be a string name, or a numeric index.\n   * @param x   x position to draw the frame at\n   * @param y   y position to draw the frame at\n   * @param [width]   optional width to draw the frame\n   * @param [height]  optional height to draw the frame\n   * @method drawFrame\n   */\n  this.drawFrame = function(frame_name, x, y, width, height) {\n    var frameToDraw;\n    if (typeof frame_name === 'number') {\n      frameToDraw = this.frames[frame_name].frame;\n    } else {\n      for (var i = 0; i < this.frames.length; i++) {\n        if (this.frames[i].name === frame_name) {\n          frameToDraw = this.frames[i].frame;\n          break;\n        }\n      }\n    }\n    var dWidth = width || frameToDraw.width;\n    var dHeight = height || frameToDraw.height;\n    pInst.image(this.image, frameToDraw.x, frameToDraw.y,\n      frameToDraw.width, frameToDraw.height, x, y, dWidth, dHeight);\n  };\n\n  /**\n   * Objects are passed by reference so to have different sprites\n   * using the same animation you need to clone it.\n   *\n   * @method clone\n   * @return {SpriteSheet} A clone of the current SpriteSheet\n   */\n  this.clone = function() {\n    var myClone = new SpriteSheet(pInst); //empty\n\n    // Deep clone the frames by value not reference\n    for(var i = 0; i < this.frames.length; i++) {\n      var frame = this.frames[i].frame;\n      var cloneFrame = {\n        'name':frame.name,\n        'frame': {\n          'x':frame.x,\n          'y':frame.y,\n          'width':frame.width,\n          'height':frame.height\n        }\n      };\n      myClone.frames.push(cloneFrame);\n    }\n\n    // clone other fields\n    myClone.image = this.image;\n    myClone.frame_width = this.frame_width;\n    myClone.frame_height = this.frame_height;\n    myClone.num_frames = this.num_frames;\n\n    return myClone;\n  };\n}\n\ndefineLazyP5Property('SpriteSheet', boundConstructorFactory(SpriteSheet));\n\n//general constructor to be able to feed arguments as array\nfunction construct(constructor, args) {\n  function F() {\n    return constructor.apply(this, args);\n  }\n  F.prototype = constructor.prototype;\n  return new F();\n}\n\n\n\n\n\n/*\n * Javascript Quadtree\n * based on\n * https://github.com/timohausmann/quadtree-js/\n * Copyright © 2012 Timo Hausmann\n*/\n\nfunction Quadtree( bounds, max_objects, max_levels, level ) {\n\n  this.active = true;\n  this.max_objects\t= max_objects || 10;\n  this.max_levels\t\t= max_levels || 4;\n\n  this.level \t\t\t= level || 0;\n  this.bounds \t\t= bounds;\n\n  this.objects \t\t= [];\n  this.object_refs\t= [];\n  this.nodes \t\t\t= [];\n}\n\nQuadtree.prototype.updateBounds = function() {\n\n  //find maximum area\n  var objects = this.getAll();\n  var x = 10000;\n  var y = 10000;\n  var w = -10000;\n  var h = -10000;\n\n  for( var i=0; i < objects.length; i++ )\n    {\n      if(objects[i].position.x < x)\n        x = objects[i].position.x;\n      if(objects[i].position.y < y)\n        y = objects[i].position.y;\n      if(objects[i].position.x > w)\n        w = objects[i].position.x;\n      if(objects[i].position.y > h)\n        h = objects[i].position.y;\n    }\n\n\n  this.bounds = {\n    x:x,\n    y:y,\n    width:w,\n    height:h\n  };\n  //print(this.bounds);\n};\n\n/*\n\t * Split the node into 4 subnodes\n\t */\nQuadtree.prototype.split = function() {\n\n  var nextLevel\t= this.level + 1,\n      subWidth\t= Math.round( this.bounds.width / 2 ),\n      subHeight \t= Math.round( this.bounds.height / 2 ),\n      x \t\t\t= Math.round( this.bounds.x ),\n      y \t\t\t= Math.round( this.bounds.y );\n\n  //top right node\n  this.nodes[0] = new Quadtree({\n    x\t: x + subWidth,\n    y\t: y,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //top left node\n  this.nodes[1] = new Quadtree({\n    x\t: x,\n    y\t: y,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //bottom left node\n  this.nodes[2] = new Quadtree({\n    x\t: x,\n    y\t: y + subHeight,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //bottom right node\n  this.nodes[3] = new Quadtree({\n    x\t: x + subWidth,\n    y\t: y + subHeight,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n};\n\n\n/*\n\t * Determine the quadtrant for an area in this node\n\t */\nQuadtree.prototype.getIndex = function( pRect ) {\n  if(!pRect.collider)\n    return -1;\n  else\n  {\n    var index \t\t\t\t= -1,\n        verticalMidpoint \t= this.bounds.x + (this.bounds.width / 2),\n        horizontalMidpoint \t= this.bounds.y + (this.bounds.height / 2),\n\n        //pRect can completely fit within the top quadrants\n        topQuadrant = (pRect.collider.top() < horizontalMidpoint && pRect.collider.top() + pRect.collider.size().y < horizontalMidpoint),\n\n        //pRect can completely fit within the bottom quadrants\n        bottomQuadrant = (pRect.collider.top() > horizontalMidpoint);\n\n    //pRect can completely fit within the left quadrants\n    if( pRect.collider.left() < verticalMidpoint && pRect.collider.left() + pRect.collider.size().x < verticalMidpoint ) {\n      if( topQuadrant ) {\n        index = 1;\n      } else if( bottomQuadrant ) {\n        index = 2;\n      }\n\n      //pRect can completely fit within the right quadrants\n    } else if( pRect.collider.left() > verticalMidpoint ) {\n      if( topQuadrant ) {\n        index = 0;\n      } else if( bottomQuadrant ) {\n        index = 3;\n      }\n    }\n\n    return index;\n  }\n};\n\n\n/*\n\t * Insert an object into the node. If the node\n\t * exceeds the capacity, it will split and add all\n\t * objects to their corresponding subnodes.\n\t */\nQuadtree.prototype.insert = function( obj ) {\n  //avoid double insertion\n  if(this.objects.indexOf(obj) === -1)\n  {\n\n    var i = 0,\n        index;\n\n    //if we have subnodes ...\n    if( typeof this.nodes[0] !== 'undefined' ) {\n      index = this.getIndex( obj );\n\n      if( index !== -1 ) {\n        this.nodes[index].insert( obj );\n        return;\n      }\n    }\n\n    this.objects.push( obj );\n\n    if( this.objects.length > this.max_objects && this.level < this.max_levels ) {\n\n      //split if we don't already have subnodes\n      if( typeof this.nodes[0] === 'undefined' ) {\n        this.split();\n      }\n\n      //add all objects to there corresponding subnodes\n      while( i < this.objects.length ) {\n\n        index = this.getIndex( this.objects[i] );\n\n        if( index !== -1 ) {\n          this.nodes[index].insert( this.objects.splice(i, 1)[0] );\n        } else {\n          i = i + 1;\n        }\n      }\n    }\n  }\n};\n\n\n/*\n\t * Return all objects that could collide with a given area\n\t */\nQuadtree.prototype.retrieve = function( pRect ) {\n\n\n  var index = this.getIndex( pRect ),\n      returnObjects = this.objects;\n\n  //if we have subnodes ...\n  if( typeof this.nodes[0] !== 'undefined' ) {\n\n    //if pRect fits into a subnode ..\n    if( index !== -1 ) {\n      returnObjects = returnObjects.concat( this.nodes[index].retrieve( pRect ) );\n\n      //if pRect does not fit into a subnode, check it against all subnodes\n    } else {\n      for( var i=0; i < this.nodes.length; i=i+1 ) {\n        returnObjects = returnObjects.concat( this.nodes[i].retrieve( pRect ) );\n      }\n    }\n  }\n\n  return returnObjects;\n};\n\nQuadtree.prototype.retrieveFromGroup = function( pRect, group ) {\n\n  var results = [];\n  var candidates = this.retrieve(pRect);\n\n  for(var i=0; i<candidates.length; i++)\n    if(group.contains(candidates[i]))\n    results.push(candidates[i]);\n\n  return results;\n};\n\n/*\n\t * Get all objects stored in the quadtree\n\t */\nQuadtree.prototype.getAll = function() {\n\n  var objects = this.objects;\n\n  for( var i=0; i < this.nodes.length; i=i+1 ) {\n    objects = objects.concat( this.nodes[i].getAll() );\n  }\n\n  return objects;\n};\n\n\n/*\n\t * Get the node in which a certain object is stored\n\t */\nQuadtree.prototype.getObjectNode = function( obj ) {\n\n  var index;\n\n  //if there are no subnodes, object must be here\n  if( !this.nodes.length ) {\n\n    return this;\n\n  } else {\n\n    index = this.getIndex( obj );\n\n    //if the object does not fit into a subnode, it must be here\n    if( index === -1 ) {\n\n      return this;\n\n      //if it fits into a subnode, continue deeper search there\n    } else {\n      var node = this.nodes[index].getObjectNode( obj );\n      if( node ) return node;\n    }\n  }\n\n  return false;\n};\n\n\n/*\n\t * Removes a specific object from the quadtree\n\t * Does not delete empty subnodes. See cleanup-function\n\t */\nQuadtree.prototype.removeObject = function( obj ) {\n\n  var node = this.getObjectNode( obj ),\n      index = node.objects.indexOf( obj );\n\n  if( index === -1 ) return false;\n\n  node.objects.splice( index, 1);\n};\n\n\n/*\n\t * Clear the quadtree and delete all objects\n\t */\nQuadtree.prototype.clear = function() {\n\n  this.objects = [];\n\n  if( !this.nodes.length ) return;\n\n  for( var i=0; i < this.nodes.length; i=i+1 ) {\n\n    this.nodes[i].clear();\n  }\n\n  this.nodes = [];\n};\n\n\n/*\n\t * Clean up the quadtree\n\t * Like clear, but objects won't be deleted but re-inserted\n\t */\nQuadtree.prototype.cleanup = function() {\n\n  var objects = this.getAll();\n\n  this.clear();\n\n  for( var i=0; i < objects.length; i++ ) {\n    this.insert( objects[i] );\n  }\n};\n\n\n\nfunction updateTree() {\n  if(this.quadTree.active)\n  {\n    this.quadTree.updateBounds();\n    this.quadTree.cleanup();\n  }\n}\n\n//keyboard input\np5.prototype.registerMethod('pre', p5.prototype.readPresses);\n\n//automatic sprite update\np5.prototype.registerMethod('pre', p5.prototype.updateSprites);\n\n//quadtree update\np5.prototype.registerMethod('post', updateTree);\n\n//camera push and pop\np5.prototype.registerMethod('pre', cameraPush);\np5.prototype.registerMethod('post', cameraPop);\n\n//deltaTime\n//p5.prototype.registerMethod('pre', updateDelta);\n\n/**\n * Log a warning message to the host console, using native `console.warn`\n * if it is available but falling back on `console.log` if not.  If no\n * console is available, this method will fail silently.\n * @method _warn\n * @param {!string} message\n * @private\n */\np5.prototype._warn = function(message) {\n  var console = window.console;\n\n  if(console)\n  {\n    if('function' === typeof console.warn)\n    {\n      console.warn(message);\n    }\n    else if('function' === typeof console.log)\n    {\n      console.log('Warning: ' + message);\n    }\n  }\n};\n\n}));\n",
        "children": [],
        "fileType": "file",
        "_id": "5f97a7d5b70dc1682ed2113b",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T05:11:52.129Z",
        "updatedAt": "2020-10-27T05:11:52.129Z",
        "id": "5f97a7d5b70dc1682ed2113b"
      },
      {
        "name": "bmg1_bk1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f97a7d5b70dc1682ed21131",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/204132a4-d821-4bdb-b4c3-d0506b261fa5.png",
        "updatedAt": "2020-10-27T05:11:52.129Z",
        "createdAt": "2020-10-27T05:11:52.129Z",
        "id": "5f97a7d5b70dc1682ed21131"
      },
      {
        "name": "bmg1_fr1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f97a7d5b70dc1682ed21133",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/2b34d86e-0ee5-4b05-b613-7b7d9678b5cd.png",
        "updatedAt": "2020-10-27T05:11:52.129Z",
        "createdAt": "2020-10-27T05:11:52.129Z",
        "id": "5f97a7d5b70dc1682ed21133"
      },
      {
        "name": "bmg1_bk2.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f97a7d5b70dc1682ed21132",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/5c202301-c9df-4ec7-b577-65624580b5dd.png",
        "updatedAt": "2020-10-27T05:11:52.129Z",
        "createdAt": "2020-10-27T05:11:52.129Z",
        "id": "5f97a7d5b70dc1682ed21132"
      },
      {
        "name": "bmg1_fr2.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f97a7d5b70dc1682ed21134",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/14105023-5da3-4939-b0eb-75605e21439e.png",
        "updatedAt": "2020-10-27T05:11:52.129Z",
        "createdAt": "2020-10-27T05:11:52.129Z",
        "id": "5f97a7d5b70dc1682ed21134"
      },
      {
        "name": "bmg1_lf1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f97a7d5b70dc1682ed21135",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/70a7ba22-d134-46fb-b30f-d8cf711c39e8.png",
        "updatedAt": "2020-10-27T05:11:52.129Z",
        "createdAt": "2020-10-27T05:11:52.129Z",
        "id": "5f97a7d5b70dc1682ed21135"
      },
      {
        "name": "bmg1_lf2.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f97a7d5b70dc1682ed21136",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/09744c62-b677-4360-a4e6-3f87ed9a1e75.png",
        "updatedAt": "2020-10-27T05:11:52.129Z",
        "createdAt": "2020-10-27T05:11:52.129Z",
        "id": "5f97a7d5b70dc1682ed21136"
      },
      {
        "name": "bmg1_rt1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f97a7d5b70dc1682ed21137",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/0e2c6a20-9b4a-4b2e-bf28-116d59281f45.png",
        "updatedAt": "2020-10-27T05:11:52.129Z",
        "createdAt": "2020-10-27T05:11:52.129Z",
        "id": "5f97a7d5b70dc1682ed21137"
      },
      {
        "name": "bmg1_rt2.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f97a7d5b70dc1682ed21138",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/a544a6cc-ec82-47c6-a4ae-59fed33cdfdf.png",
        "updatedAt": "2020-10-27T05:11:52.129Z",
        "createdAt": "2020-10-27T05:11:52.129Z",
        "id": "5f97a7d5b70dc1682ed21138"
      }
    ],
    "createdAt": "2020-10-27T04:53:43.636Z",
    "updatedAt": "2020-10-27T05:11:52.129Z",
    "id": "3exjMMtG1"
  },
  {
    "name": "Sprite test 1",
    "_id": "ibK2dSEnp",
    "updatedAt": "2020-10-27T03:44:39.461Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5f972664c975f3f22d7e558b",
          "5f972651c975f3f22d7e5588",
          "5f9726f2c975f3f22d7e5594",
          "5f972651c975f3f22d7e5587",
          "5f972651c975f3f22d7e5589"
        ],
        "fileType": "folder",
        "_id": "5f972651c975f3f22d7e558a",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:44:39.461Z",
        "updatedAt": "2020-10-27T03:44:39.461Z",
        "id": "5f972651c975f3f22d7e558a"
      },
      {
        "name": "sketch.js",
        "content": "let hero;\nlet platform;\n\nvar GRAVITY = 1;\nvar JUMP = 15;\n\nfunction setup() {\n  createCanvas(800, 400);\n\n\n  hero = createSprite(400, 200, 50, 50);\n\n\n\n  hero.addAnimation(\"stopped\", \"assets/bmg1_fr1.png\");\n  hero.addAnimation(\"walk-up\", \"assets/bmg1_bk1.png\", \"assets/bmg1_bk2.png\");\n  hero.addAnimation(\"walk-down\", \"assets/bmg1_fr1.png\", \"assets/bmg1_fr2.png\");\n  hero.addAnimation(\"walk-left\", \"assets/bmg1_lf1.png\", \"assets/bmg1_lf2.png\");\n  hero.addAnimation(\"walk-right\", \"assets/bmg1_rt1.png\", \"assets/bmg1_rt2.png\");\n  \n  \n  hero.debug = true;\n\n\n  platform = createSprite(width / 2, 350, width, 10);\n  platform.immovable = true;\n  platform.debug = true;\n\n}\n\nfunction draw() {\n  background(255, 255, 255);\n\n\n  text(hero.velocity.y, 10, 10)\n  \n  \n  if (hero.collide(platform)) {\n    hero.velocity.y = 0;\n  }\n  \n  heroFollowMouse();\n  updateSpriteAnimations();\n  drawSprites();\n}\n\n\n// makes the sprite follow the mouse\nfunction heroFollowMouse() {\n  hero.velocity.x = (camera.mouseX - hero.position.x) / 20;\n}\n\nfunction mouseClicked() {\n\n    hero.velocity.y = -JUMP;\n}\n\n\nfunction mouseDragged() {\n  heroFollowMouse();\n}\n\nfunction updateSpriteAnimations() {\n\n  if (mouseIsPressed) {\n    heroFollowMouse();\n  }\n\n  let heroVelX = int(hero.velocity.x);\n\n  hero.velocity.y += GRAVITY;\n\n\n  if (heroVelX == 0) {\n    hero.velocity.x = 0;\n  }\n\n  if (heroVelX > 0) {\n    hero.changeAnimation(\"walk-right\");\n  } else if (heroVelX < 0) {\n    hero.changeAnimation(\"walk-left\");\n  } else if (heroVelX == 0) {\n    hero.changeAnimation(\"stopped\");\n  }\n\n}",
        "children": [],
        "fileType": "file",
        "_id": "5f972651c975f3f22d7e5587",
        "isSelectedFile": true,
        "createdAt": "2020-10-27T03:44:39.461Z",
        "updatedAt": "2020-10-27T03:44:39.461Z",
        "id": "5f972651c975f3f22d7e5587"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n    <script src=\"lib/p5.play.js\" type=\"text/javascript\"></script>\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "5f972651c975f3f22d7e5588",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:44:39.461Z",
        "updatedAt": "2020-10-27T03:44:39.461Z",
        "id": "5f972651c975f3f22d7e5588"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5f972651c975f3f22d7e5589",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:44:39.461Z",
        "updatedAt": "2020-10-27T03:44:39.461Z",
        "id": "5f972651c975f3f22d7e5589"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "5f972ff42b9ed60024464b27",
          "5f972ff52d49600024a348ac",
          "5f972ff4485db300241d2846",
          "5f972ff5da99fb002418942b",
          "5f972ff62d49600024a348ad",
          "5f972ff6da99fb0024189431",
          "5f972ff72d49600024a348ae",
          "5f972ff7da99fb0024189432"
        ],
        "fileType": "folder",
        "_id": "5f972664c975f3f22d7e558b",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:44:39.461Z",
        "updatedAt": "2020-10-27T03:44:39.461Z",
        "id": "5f972664c975f3f22d7e558b"
      },
      {
        "name": "lib",
        "content": "",
        "children": [
          "5f9726fac975f3f22d7e5595"
        ],
        "fileType": "folder",
        "_id": "5f9726f2c975f3f22d7e5594",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:44:39.461Z",
        "updatedAt": "2020-10-27T03:44:39.461Z",
        "id": "5f9726f2c975f3f22d7e5594"
      },
      {
        "name": "p5.play.js",
        "content": "/*\np5.play\nby Paolo Pedercini/molleindustria, 2015\nhttp://molleindustria.org/\n*/\n\n(function(root, factory) {\nif (typeof define === 'function' && define.amd)\ndefine('p5.play', ['p5'], function(p5) { (factory(p5)); });\nelse if (typeof exports === 'object')\nfactory(require('../p5'));\nelse\nfactory(root.p5);\n}(this, function(p5) {\n/**\n * p5.play is a library for p5.js to facilitate the creation of games and gamelike\n * projects.\n *\n * It provides a flexible Sprite class to manage visual objects in 2D space\n * and features such as animation support, basic collision detection\n * and resolution, mouse and keyboard interactions, and a virtual camera.\n *\n * p5.play is not a box2D-derived physics engine, it doesn't use events, and it's\n * designed to be understood and possibly modified by intermediate programmers.\n *\n * See the examples folder for more info on how to use this library.\n *\n * @module p5.play\n * @submodule p5.play\n * @for p5.play\n * @main\n */\n\n// =============================================================================\n//                         initialization\n// =============================================================================\n\n// This is the new way to initialize custom p5 properties for any p5 instance.\n// The goal is to migrate lazy P5 properties over to this method.\n// @see https://github.com/molleindustria/p5.play/issues/46\np5.prototype.registerMethod('init', function p5PlayInit() {\n  /**\n   * The sketch camera automatically created at the beginning of a sketch.\n   * A camera facilitates scrolling and zooming for scenes extending beyond\n   * the canvas. A camera has a position, a zoom factor, and the mouse\n   * coordinates relative to the view.\n   *\n   * In p5.js terms the camera wraps the whole drawing cycle in a\n   * transformation matrix but it can be disabled anytime during the draw\n   * cycle, for example to draw interface elements in an absolute position.\n   *\n   * @property camera\n   * @type {camera}\n   */\n  this.camera = new Camera(this, 0, 0, 1);\n  this.camera.init = false;\n});\n\n// This provides a way for us to lazily define properties that\n// are global to p5 instances.\n//\n// Note that this isn't just an optimization: p5 currently provides no\n// way for add-ons to be notified when new p5 instances are created, so\n// lazily creating these properties is the *only* mechanism available\n// to us. For more information, see:\n//\n// https://github.com/processing/p5.js/issues/1263\nfunction defineLazyP5Property(name, getter) {\n  Object.defineProperty(p5.prototype, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var context = (this instanceof p5 && !this._isGlobal) ? this : window;\n\n      if (typeof(context._p5PlayProperties) === 'undefined') {\n        context._p5PlayProperties = {};\n      }\n      if (!(name in context._p5PlayProperties)) {\n        context._p5PlayProperties[name] = getter.call(context);\n      }\n      return context._p5PlayProperties[name];\n    }\n  });\n}\n\n// This returns a factory function, suitable for passing to\n// defineLazyP5Property, that returns a subclass of the given\n// constructor that is always bound to a particular p5 instance.\nfunction boundConstructorFactory(constructor) {\n  if (typeof(constructor) !== 'function')\n    throw new Error('constructor must be a function');\n\n  return function createBoundConstructor() {\n    var pInst = this;\n\n    function F() {\n      var args = Array.prototype.slice.call(arguments);\n\n      return constructor.apply(this, [pInst].concat(args));\n    }\n    F.prototype = constructor.prototype;\n\n    return F;\n  };\n}\n\n// This is a utility that makes it easy to define convenient aliases to\n// pre-bound p5 instance methods.\n//\n// For example:\n//\n//   var pInstBind = createPInstBinder(pInst);\n//\n//   var createVector = pInstBind('createVector');\n//   var loadImage = pInstBind('loadImage');\n//\n// The above will create functions createVector and loadImage, which can be\n// used similar to p5 global mode--however, they're bound to specific p5\n// instances, and can thus be used outside of global mode.\nfunction createPInstBinder(pInst) {\n  return function pInstBind(methodName) {\n    var method = pInst[methodName];\n\n    if (typeof(method) !== 'function')\n      throw new Error('\"' + methodName + '\" is not a p5 method');\n    return method.bind(pInst);\n  };\n}\n\n// These are utility p5 functions that don't depend on p5 instance state in\n// order to work properly, so we'll go ahead and make them easy to\n// access without needing to bind them to a p5 instance.\nvar abs = p5.prototype.abs;\nvar radians = p5.prototype.radians;\nvar dist = p5.prototype.dist;\nvar degrees = p5.prototype.degrees;\nvar pow = p5.prototype.pow;\nvar round = p5.prototype.round;\n\n\n// =============================================================================\n//                         p5 additions\n// =============================================================================\n\n/**\n* A Group containing all the sprites in the sketch.\n*\n* @property allSprites\n* @type {Group}\n*/\n\ndefineLazyP5Property('allSprites', function() {\n  return new p5.prototype.Group();\n});\n\np5.prototype.spriteUpdate = true;\n\n/**\n   * A Sprite is the main building block of p5.play:\n   * an element able to store images or animations with a set of\n   * properties such as position and visibility.\n   * A Sprite can have a collider that defines the active area to detect\n   * collisions or overlappings with other sprites and mouse interactions.\n   *\n   * Sprites created using createSprite (the preferred way) are added to the\n   * allSprites group and given a depth value that puts it in front of all\n   * other sprites.\n   *\n   * @method createSprite\n   * @param {Number} x Initial x coordinate\n   * @param {Number} y Initial y coordinate\n   * @param {Number} width Width of the placeholder rectangle and of the\n   *                       collider until an image or new collider are set\n   * @param {Number} height Height of the placeholder rectangle and of the\n   *                       collider until an image or new collider are set\n   * @return {Object} The new sprite instance\n   */\n\np5.prototype.createSprite = function(x, y, width, height) {\n  var s = new Sprite(this, x, y, width, height);\n  s.depth = this.allSprites.maxDepth()+1;\n  this.allSprites.add(s);\n  return s;\n};\n\n\n/**\n   * Removes a Sprite from the sketch.\n   * The removed Sprite won't be drawn or updated anymore.\n   * Equivalent to Sprite.remove()\n   *\n   * @method removeSprite\n   * @param {Object} sprite Sprite to be removed\n*/\np5.prototype.removeSprite = function(sprite) {\n  sprite.remove();\n};\n\n/**\n* Updates all the sprites in the sketch (position, animation...)\n* it's called automatically at every draw().\n* It can be paused by passing a parameter true or false;\n* Note: it does not render the sprites.\n*\n* @method updateSprites\n* @param {Boolean} updating false to pause the update, true to resume\n*/\np5.prototype.updateSprites = function(upd) {\n\n  if(upd === false)\n    this.spriteUpdate = false;\n  if(upd === true)\n    this.spriteUpdate = true;\n\n  if(this.spriteUpdate)\n  for(var i = 0; i<this.allSprites.size(); i++)\n  {\n    this.allSprites.get(i).update();\n  }\n};\n\n/**\n* Returns all the sprites in the sketch as an array\n*\n* @method getSprites\n* @return {Array} Array of Sprites\n*/\np5.prototype.getSprites = function() {\n\n  //draw everything\n  if(arguments.length===0)\n  {\n    return this.allSprites.toArray();\n  }\n  else\n  {\n    var arr = [];\n    //for every tag\n    for(var j=0; j<arguments.length; j++)\n    {\n      for(var i = 0; i<this.allSprites.size(); i++)\n      {\n        if(this.allSprites.get(i).isTagged(arguments[j]))\n          arr.push(this.allSprites.get(i));\n      }\n    }\n\n    return arr;\n  }\n\n};\n\n/**\n* Displays a Group of sprites.\n* If no parameter is specified, draws all sprites in the\n* sketch.\n* The drawing order is determined by the Sprite property \"depth\"\n*\n* @method drawSprites\n* @param {Group} [group] Group of Sprites to be displayed\n*/\np5.prototype.drawSprites = function(group) {\n  // If no group is provided, draw the allSprites group.\n  group = group || this.allSprites;\n\n  if (typeof group.draw !== 'function')\n  {\n    throw('Error: with drawSprites you can only draw all sprites or a group');\n  }\n\n  group.draw();\n};\n\n/**\n* Displays a Sprite.\n* To be typically used in the main draw function.\n*\n* @method drawSprite\n* @param {Sprite} sprite Sprite to be displayed\n*/\np5.prototype.drawSprite = function(sprite) {\n  if(sprite)\n  sprite.display();\n};\n\n/**\n* Loads an animation.\n* To be typically used in the preload() function of the sketch.\n*\n* @method loadAnimation\n* @param {Sprite} sprite Sprite to be displayed\n*/\np5.prototype.loadAnimation = function() {\n  return construct(this.Animation, arguments);\n};\n\n/**\n * Loads a Sprite Sheet.\n * To be typically used in the preload() function of the sketch.\n *\n * @method loadSpriteSheet\n */\np5.prototype.loadSpriteSheet = function() {\n  return construct(this.SpriteSheet, arguments);\n};\n\n/**\n* Displays an animation.\n*\n* @method animation\n* @param {Animation} anim Animation to be displayed\n* @param {Number} x X coordinate\n* @param {Number} y Y coordinate\n*\n*/\np5.prototype.animation = function(anim, x, y) {\n  anim.draw(x, y);\n};\n\n//variable to detect instant presses\ndefineLazyP5Property('_p5play', function() {\n  return {\n    keyStates: {},\n    mouseStates: {}\n  };\n});\n\nvar KEY_IS_UP = 0;\nvar KEY_WENT_DOWN = 1;\nvar KEY_IS_DOWN = 2;\nvar KEY_WENT_UP = 3;\n\n/**\n* Detects if a key was pressed during the last cycle.\n* It can be used to trigger events once, when a key is pressed or released.\n* Example: Super Mario jumping.\n*\n* @method keyWentDown\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key was pressed\n*/\np5.prototype.keyWentDown = function(key) {\n  return this._isKeyInState(key, KEY_WENT_DOWN);\n};\n\n\n/**\n* Detects if a key was released during the last cycle.\n* It can be used to trigger events once, when a key is pressed or released.\n* Example: Spaceship shooting.\n*\n* @method keyWentUp\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key was released\n*/\np5.prototype.keyWentUp = function(key) {\n  return this._isKeyInState(key, KEY_WENT_UP);\n};\n\n/**\n* Detects if a key is currently pressed\n* Like p5 keyIsDown but accepts strings and codes\n*\n* @method keyDown\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key is down\n*/\np5.prototype.keyDown = function(key) {\n  return this._isKeyInState(key, KEY_IS_DOWN);\n};\n\n/**\n * Detects if a key is in the given state during the last cycle.\n * Helper method encapsulating common key state logic; it may be preferable\n * to call keyDown or other methods directly.\n *\n * @private\n * @method _isKeyInState\n * @param {Number|String} key Key code or character\n * @param {Number} state Key state to check against\n * @return {Boolean} True if the key is in the given state\n */\np5.prototype._isKeyInState = function(key, state) {\n  var keyCode;\n  var keyStates = this._p5play.keyStates;\n\n  if(typeof key === 'string')\n  {\n    keyCode = this._keyCodeFromAlias(key);\n  }\n  else\n  {\n    keyCode = key;\n  }\n\n  //if undefined start checking it\n  if(keyStates[keyCode]===undefined)\n  {\n    if(this.keyIsDown(keyCode))\n      keyStates[keyCode] = KEY_IS_DOWN;\n    else\n      keyStates[keyCode] = KEY_IS_UP;\n  }\n\n  return (keyStates[keyCode] === state);\n};\n\n/**\n* Detects if a mouse button is currently down\n* Combines mouseIsPressed and mouseButton of p5\n*\n* @method mouseDown\n* @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n* @return {Boolean} True if the button is down\n*/\np5.prototype.mouseDown = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_IS_DOWN);\n};\n\n/**\n* Detects if a mouse button is currently up\n* Combines mouseIsPressed and mouseButton of p5\n*\n* @method mouseUp\n* @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n* @return {Boolean} True if the button is up\n*/\np5.prototype.mouseUp = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_IS_UP);\n};\n\n/**\n * Detects if a mouse button was released during the last cycle.\n * It can be used to trigger events once, to be checked in the draw cycle\n *\n * @method mouseWentUp\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @return {Boolean} True if the button was just released\n */\np5.prototype.mouseWentUp = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_WENT_UP);\n};\n\n\n/**\n * Detects if a mouse button was pressed during the last cycle.\n * It can be used to trigger events once, to be checked in the draw cycle\n *\n * @method mouseWentDown\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @return {Boolean} True if the button was just pressed\n */\np5.prototype.mouseWentDown = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_WENT_DOWN);\n};\n\n/**\n * Detects if a mouse button is in the given state during the last cycle.\n * Helper method encapsulating common mouse button state logic; it may be\n * preferable to call mouseWentUp, etc, directly.\n *\n * @private\n * @method _isMouseButtonInState\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @param {Number} state\n * @return {boolean} True if the button was in the given state\n */\np5.prototype._isMouseButtonInState = function(buttonCode, state) {\n  var mouseStates = this._p5play.mouseStates;\n\n  if(buttonCode === undefined)\n    buttonCode = this.LEFT;\n\n  //undefined = not tracked yet, start tracking\n  if(mouseStates[buttonCode]===undefined)\n  {\n  if(this.mouseIsPressed && this.mouseButton === buttonCode)\n    mouseStates[buttonCode] = KEY_IS_DOWN;\n  else\n    mouseStates[buttonCode] = KEY_IS_UP;\n  }\n\n  return (mouseStates[buttonCode] === state);\n};\n\n\n/**\n * An object storing all useful keys for easy access\n * Key.tab = 9\n *\n * @private\n * @property KEY\n * @type {Object}\n */\np5.prototype.KEY = {\n    'BACKSPACE': 8,\n    'TAB': 9,\n    'ENTER': 13,\n    'SHIFT': 16,\n    'CTRL': 17,\n    'ALT': 18,\n    'PAUSE': 19,\n    'CAPS_LOCK': 20,\n    'ESC': 27,\n    'SPACE': 32,\n    ' ': 32,\n    'PAGE_UP': 33,\n    'PAGE_DOWN': 34,\n    'END': 35,\n    'HOME': 36,\n    'LEFT_ARROW': 37,\n    'LEFT': 37,\n    'UP_ARROW': 38,\n    'UP': 38,\n    'RIGHT_ARROW': 39,\n    'RIGHT': 39,\n    'DOWN_ARROW': 40,\n    'DOWN': 40,\n    'INSERT': 45,\n    'DELETE': 46,\n    '0': 48,\n    '1': 49,\n    '2': 50,\n    '3': 51,\n    '4': 52,\n    '5': 53,\n    '6': 54,\n    '7': 55,\n    '8': 56,\n    '9': 57,\n    'A': 65,\n    'B': 66,\n    'C': 67,\n    'D': 68,\n    'E': 69,\n    'F': 70,\n    'G': 71,\n    'H': 72,\n    'I': 73,\n    'J': 74,\n    'K': 75,\n    'L': 76,\n    'M': 77,\n    'N': 78,\n    'O': 79,\n    'P': 80,\n    'Q': 81,\n    'R': 82,\n    'S': 83,\n    'T': 84,\n    'U': 85,\n    'V': 86,\n    'W': 87,\n    'X': 88,\n    'Y': 89,\n    'Z': 90,\n    '0NUMPAD': 96,\n    '1NUMPAD': 97,\n    '2NUMPAD': 98,\n    '3NUMPAD': 99,\n    '4NUMPAD': 100,\n    '5NUMPAD': 101,\n    '6NUMPAD': 102,\n    '7NUMPAD': 103,\n    '8NUMPAD': 104,\n    '9NUMPAD': 105,\n    'MULTIPLY': 106,\n    'PLUS': 107,\n    'MINUS': 109,\n    'DOT': 110,\n    'SLASH1': 111,\n    'F1': 112,\n    'F2': 113,\n    'F3': 114,\n    'F4': 115,\n    'F5': 116,\n    'F6': 117,\n    'F7': 118,\n    'F8': 119,\n    'F9': 120,\n    'F10': 121,\n    'F11': 122,\n    'F12': 123,\n    'EQUAL': 187,\n    'COMMA': 188,\n    'SLASH': 191,\n    'BACKSLASH': 220\n};\n\n/**\n * An object storing deprecated key aliases, which we still support but\n * should be mapped to valid aliases and generate warnings.\n *\n * @private\n * @property KEY_DEPRECATIONS\n * @type {Object}\n */\np5.prototype.KEY_DEPRECATIONS = {\n  'MINUT': 'MINUS',\n  'COMA': 'COMMA'\n};\n\n/**\n * Given a string key alias (as defined in the KEY property above), look up\n * and return the numeric JavaScript key code for that key.  If a deprecated\n * alias is passed (as defined in the KEY_DEPRECATIONS property) it will be\n * mapped to a valid key code, but will also generate a warning about use\n * of the deprecated alias.\n *\n * @private\n * @method _keyCodeFromAlias\n * @param {!string} alias - a case-insensitive key alias\n * @return {number|undefined} a numeric JavaScript key code, or undefined\n *          if no key code matching the given alias is found.\n */\np5.prototype._keyCodeFromAlias = function(alias) {\n  alias = alias.toUpperCase();\n  if (this.KEY_DEPRECATIONS[alias]) {\n    this._warn('Key literal \"' + alias + '\" is deprecated and may be removed ' +\n      'in a future version of p5.play. ' +\n      'Please use \"' + this.KEY_DEPRECATIONS[alias] + '\" instead.');\n    alias = this.KEY_DEPRECATIONS[alias];\n  }\n  return this.KEY[alias];\n};\n\n//pre draw: detect keyStates\np5.prototype.readPresses = function() {\n  var keyStates = this._p5play.keyStates;\n  var mouseStates = this._p5play.mouseStates;\n\n  for (var key in keyStates) {\n    if(this.keyIsDown(key)) //if is down\n    {\n      if(keyStates[key] === KEY_IS_UP)//and was up\n        keyStates[key] = KEY_WENT_DOWN;\n      else\n        keyStates[key] = KEY_IS_DOWN; //now is simply down\n    }\n    else //if it's up\n    {\n      if(keyStates[key] === KEY_IS_DOWN)//and was up\n        keyStates[key] = KEY_WENT_UP;\n      else\n        keyStates[key] = KEY_IS_UP; //now is simply down\n    }\n  }\n\n  //mouse\n  for (var btn in mouseStates) {\n\n    if(this.mouseIsPressed && this.mouseButton === btn) //if is down\n    {\n      if(mouseStates[btn] === KEY_IS_UP)//and was up\n        mouseStates[btn] = KEY_WENT_DOWN;\n      else\n        mouseStates[btn] = KEY_IS_DOWN; //now is simply down\n    }\n    else //if it's up\n    {\n      if(mouseStates[btn] === KEY_IS_DOWN)//and was up\n        mouseStates[btn] = KEY_WENT_UP;\n      else\n        mouseStates[btn] = KEY_IS_UP; //now is simply down\n    }\n  }\n\n};\n\n/**\n* Turns the quadTree on or off.\n* A quadtree is a data structure used to optimize collision detection.\n* It can improve performance when there is a large number of Sprites to be\n* checked continuously for overlapping.\n*\n* p5.play will create and update a quadtree automatically.\n*\n* @method useQuadTree\n* @param {Boolean} use Pass true to enable, false to disable\n*/\np5.prototype.useQuadTree = function(use) {\n\n  if(this.quadTree !== undefined)\n  {\n    if(use === undefined)\n      return this.quadTree.active;\n    else if(use)\n      this.quadTree.active = true;\n    else\n      this.quadTree.active = false;\n  }\n  else\n    return false;\n};\n\n//the actual quadTree\ndefineLazyP5Property('quadTree', function() {\n  return new Quadtree({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  }, 4);\n});\n\n/*\n//framerate independent delta, doesn't really work\np5.prototype.deltaTime = 1;\n\nvar now = Date.now();\nvar then = Date.now();\nvar INTERVAL_60 = 0.0166666; //60 fps\n\nfunction updateDelta() {\nthen = now;\nnow = Date.now();\ndeltaTime = ((now - then) / 1000)/INTERVAL_60; // seconds since last frame\n}\n*/\n\n/**\n   * A Sprite is the main building block of p5.play:\n   * an element able to store images or animations with a set of\n   * properties such as position and visibility.\n   * A Sprite can have a collider that defines the active area to detect\n   * collisions or overlappings with other sprites and mouse interactions.\n   *\n   * To create a Sprite, use\n   * {{#crossLink \"p5.play/createSprite:method\"}}{{/crossLink}}.\n   *\n   * @class Sprite\n   */\n\n// For details on why these docs aren't in a YUIDoc comment block, see:\n//\n// https://github.com/molleindustria/p5.play/pull/67\n//\n// @param {Number} x Initial x coordinate\n// @param {Number} y Initial y coordinate\n// @param {Number} width Width of the placeholder rectangle and of the\n//                       collider until an image or new collider are set\n// @param {Number} height Height of the placeholder rectangle and of the\n//                        collider until an image or new collider are set\nfunction Sprite(pInst, _x, _y, _w, _h) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n  var color = pInstBind('color');\n  var random = pInstBind('random');\n  var print = pInstBind('print');\n  var push = pInstBind('push');\n  var pop = pInstBind('pop');\n  var colorMode = pInstBind('colorMode');\n  var noStroke = pInstBind('noStroke');\n  var rectMode = pInstBind('rectMode');\n  var ellipseMode = pInstBind('ellipseMode');\n  var imageMode = pInstBind('imageMode');\n  var translate = pInstBind('translate');\n  var scale = pInstBind('scale');\n  var rotate = pInstBind('rotate');\n  var stroke = pInstBind('stroke');\n  var strokeWeight = pInstBind('strokeWeight');\n  var line = pInstBind('line');\n  var noFill = pInstBind('noFill');\n  var fill = pInstBind('fill');\n  var textAlign = pInstBind('textAlign');\n  var textSize = pInstBind('textSize');\n  var text = pInstBind('text');\n  var rect = pInstBind('rect');\n  var cos = pInstBind('cos');\n  var sin = pInstBind('sin');\n  var atan2 = pInstBind('atan2');\n\n  var quadTree = pInst.quadTree;\n  var camera = pInst.camera;\n\n\n  // These are p5 constants that we'd like easy access to.\n  var RGB = p5.prototype.RGB;\n  var CENTER = p5.prototype.CENTER;\n  var LEFT = p5.prototype.LEFT;\n  var BOTTOM = p5.prototype.BOTTOM;\n\n  /**\n  * The sprite's position of the sprite as a vector (x,y).\n  * @property position\n  * @type {p5.Vector}\n  */\n  this.position = createVector(_x, _y);\n\n  /**\n  * The sprite's position at the beginning of the last update as a vector (x,y).\n  * @property previousPosition\n  * @type {p5.Vector}\n  */\n  this.previousPosition = createVector(_x, _y);\n\n  /*\n  The sprite's position at the end of the last update as a vector (x,y).\n  Note: this will differ from position whenever the position is changed\n  directly by assignment.\n  */\n  this.newPosition = createVector(_x, _y);\n\n  //Position displacement on the x coordinate since the last update\n  this.deltaX = 0;\n  this.deltaY = 0;\n\n  /**\n  * The sprite's velocity as a vector (x,y)\n  * Velocity is speed broken down to its vertical and horizontal components.\n  *\n  * @property velocity\n  * @type {p5.Vector}\n  */\n  this.velocity = createVector(0, 0);\n\n  /**\n  * Set a limit to the sprite's scalar speed regardless of the direction.\n  * The value can only be positive. If set to -1, there's no limit.\n  *\n  * @property maxSpeed\n  * @type {Number}\n  * @default -1\n  */\n  this.maxSpeed = -1;\n\n  /**\n  * Friction factor, reduces the sprite's velocity.\n  * The friction should be close to 0 (eg. 0.01)\n  * 0: no friction\n  * 1: full friction\n  *\n  * @property friction\n  * @type {Number}\n  * @default 0\n  */\n  this.friction = 0;\n\n  /**\n  * The sprite's current collider.\n  * It can either be an Axis Aligned Bounding Box (a non-rotated rectangle)\n  * or a circular collider.\n  * If the sprite is checked for collision, bounce, overlapping or mouse events the\n  * collider is automatically created from the width and height\n  * of the sprite or from the image dimension in case of animate sprites\n  *\n  * You can set a custom collider with Sprite.setCollider\n  *\n  * @property collider\n  * @type {Object}\n  */\n  this.collider = undefined;\n\n  //internal use\n  //\"default\" - no image or custom collider is specified, use the shape width / height\n  //\"custom\" - specified with setCollider\n  //\"image\" - no collider is set with setCollider and an image is added\n  this.colliderType = 'none';\n\n  /**\n  * Object containing information about the most recent collision/overlapping\n  * To be typically used in combination with Sprite.overlap or Sprite.collide\n  * functions.\n  * The properties are touching.left, touching.right, touching.top,\n  * touching.bottom and are either true or false depending on the side of the\n  * collider.\n  *\n  * @property touching\n  * @type {Object}\n  */\n  this.touching = {};\n  this.touching.left = false;\n  this.touching.right = false;\n  this.touching.top = false;\n  this.touching.bottom = false;\n\n  /**\n  * The mass determines the velocity transfer when sprites bounce\n  * against each other. See Sprite.bounce\n  * The higher the mass the least the sprite will be affected by collisions.\n  *\n  * @property mass\n  * @type {Number}\n  * @default 1\n  */\n  this.mass = 1;\n\n  /**\n  * If set to true the sprite won't bounce or be displaced by collisions\n  * Simulates an infinite mass or an anchored object.\n  *\n  * @property immovable\n  * @type {Boolean}\n  * @default false\n  */\n  this.immovable = false;\n\n  //Coefficient of restitution - velocity lost in the bouncing\n  //0 perfectly inelastic , 1 elastic, > 1 hyper elastic\n\n  /**\n  * Coefficient of restitution. The velocity lost after bouncing.\n  * 1: perfectly elastic, no energy is lost\n  * 0: perfectly inelastic, no bouncing\n  * less than 1: inelastic, this is the most common in nature\n  * greater than 1: hyper elastic, energy is increased like in a pinball bumper\n  *\n  * @property restitution\n  * @type {Number}\n  * @default 1\n  */\n  this.restitution = 1;\n\n  /**\n  * Rotation in degrees of the visual element (image or animation)\n  * Note: this is not the movement's direction, see getDirection.\n  *\n  * @property rotation\n  * @type {Number}\n  * @default 0\n  */\n  Object.defineProperty(this, 'rotation', {\n    enumerable: true,\n    get: function() {\n      return this._rotation;\n    },\n    set: function(value) {\n      this._rotation = value;\n      if (this.rotateToDirection) {\n        this.setSpeed(this.getSpeed(), value);\n      }\n    }\n  });\n\n  /**\n  * Internal rotation variable (expressed in degrees).\n  * Note: external callers access this through the rotation property above.\n  *\n  * @private\n  * @property _rotation\n  * @type {Number}\n  * @default 0\n  */\n  this._rotation = 0;\n\n  /**\n  * Rotation change in degrees per frame of thevisual element (image or animation)\n  * Note: this is not the movement's direction, see getDirection.\n  *\n  * @property rotationSpeed\n  * @type {Number}\n  * @default 0\n  */\n  this.rotationSpeed = 0;\n\n\n  /**\n  * Automatically lock the rotation property of the visual element\n  * (image or animation) to the sprite's movement direction and vice versa.\n  *\n  * @property rotateToDirection\n  * @type {Boolean}\n  * @default false\n  */\n  this.rotateToDirection = false;\n\n\n  /**\n  * Determines the rendering order within a group: a sprite with\n  * lower depth will appear below the ones with higher depth.\n  *\n  * Note: drawing a group before another with drawSprites will make\n  * its members appear below the second one, like in normal p5 canvas\n  * drawing.\n  *\n  * @property depth\n  * @type {Number}\n  * @default One more than the greatest existing sprite depth, when calling\n  *          createSprite().  When calling new Sprite() directly, depth will\n  *          initialize to 0 (not recommended).\n  */\n  this.depth = 0;\n\n  /**\n  * Determines the sprite's scale.\n  * Example: 2 will be twice the native size of the visuals,\n  * 0.5 will be half. Scaling up may make images blurry.\n  *\n  * @property scale\n  * @type {Number}\n  * @default 1\n  */\n  this.scale = 1;\n\n  var dirX = 1;\n  var dirY = 1;\n\n  /**\n  * The sprite's visibility.\n  *\n  * @property visible\n  * @type {Boolean}\n  * @default true\n  */\n  this.visible = true;\n\n  /**\n  * If set to true sprite will track its mouse state.\n  * the properties mouseIsPressed and mouseIsOver will be updated.\n  * Note: automatically set to true if the functions\n  * onMouseReleased or onMousePressed are set.\n  *\n  * @property mouseActive\n  * @type {Boolean}\n  * @default false\n  */\n  this.mouseActive = false;\n\n  /**\n  * True if mouse is on the sprite's collider.\n  * Read only.\n  *\n  * @property mouseIsOver\n  * @type {Boolean}\n  */\n  this.mouseIsOver = false;\n\n  /**\n  * True if mouse is pressed on the sprite's collider.\n  * Read only.\n  *\n  * @property mouseIsPressed\n  * @type {Boolean}\n  */\n  this.mouseIsPressed = false;\n\n  /*\n  * Width of the sprite's current image.\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  * Used internally to make calculations and draw the sprite.\n  *\n  * @private\n  * @property _internalWidth\n  * @type {Number}\n  * @default 100\n  */\n  this._internalWidth = _w;\n\n  /*\n  * Height of the sprite's current image.\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  * Used internally to make calculations and draw the sprite.\n  *\n  * @private\n  * @property _internalHeight\n  * @type {Number}\n  * @default 100\n  */\n  this._internalHeight = _h;\n\n  /*\n   * _internalWidth and _internalHeight are used for all p5.play\n   * calculations, but width and height can be extended. For example,\n   * you may want users to always get and set a scaled width:\n      Object.defineProperty(this, 'width', {\n        enumerable: true,\n        configurable: true,\n        get: function() {\n          return this._internalWidth * this.scale;\n        },\n        set: function(value) {\n          this._internalWidth = value / this.scale;\n        }\n      });\n   */\n\n  /**\n  * Width of the sprite's current image.\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  *\n  * @property width\n  * @type {Number}\n  * @default 100\n  */\n  Object.defineProperty(this, 'width', {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return this._internalWidth;\n    },\n    set: function(value) {\n      this._internalWidth = value;\n    }\n  });\n\n  if(_w === undefined)\n    this.width = 100;\n  else\n    this.width = _w;\n\n  /**\n  * Height of the sprite's current image.\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  *\n  * @property height\n  * @type {Number}\n  * @default 100\n  */\n  Object.defineProperty(this, 'height', {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return this._internalHeight;\n    },\n    set: function(value) {\n      this._internalHeight = value;\n    }\n  });\n\n  if(_h === undefined)\n    this.height = 100;\n  else\n    this.height = _h;\n\n  /**\n  * Unscaled width of the sprite\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  *\n  * @property originalWidth\n  * @type {Number}\n  * @default 100\n  */\n  this.originalWidth = this._internalWidth;\n\n  /**\n  * Unscaled height of the sprite\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  *\n  * @property originalHeight\n  * @type {Number}\n  * @default 100\n  */\n  this.originalHeight = this._internalHeight;\n\n  /**\n  * True if the sprite has been removed.\n  *\n  * @property removed\n  * @type {Boolean}\n  */\n  this.removed = false;\n\n  /**\n  * Cycles before self removal.\n  * Set it to initiate a countdown, every draw cycle the property is\n  * reduced by 1 unit. At 0 it will call a sprite.remove()\n  * Disabled if set to -1.\n  *\n  * @property life\n  * @type {Number}\n  * @default -1\n  */\n  this.life = -1;\n\n  /**\n  * If set to true, draws an outline of the collider, the depth, and center.\n  *\n  * @property debug\n  * @type {Boolean}\n  * @default false\n  */\n  this.debug = false;\n\n  /**\n  * If no image or animations are set this is color of the\n  * placeholder rectangle\n  *\n  * @property shapeColor\n  * @type {color}\n  */\n  this.shapeColor = color(random(255), random(255), random(255));\n\n  /**\n  * Groups the sprite belongs to, including allSprites\n  *\n  * @property groups\n  * @type {Array}\n  */\n  this.groups = [];\n\n  var animations = {};\n\n  //The current animation's label.\n  var currentAnimation = '';\n\n  /**\n  * Reference to the current animation.\n  *\n  * @property animation\n  * @type {Animation}\n  */\n  this.animation = undefined;\n\n  /**\n  * Internal variable to keep track of whether this sprite is drawn while\n  * the camera is active.\n  * Used in Sprite.update() to know whether to use camera mouse coordinates.\n  * @see https://github.com/molleindustria/p5.play/issues/107\n  *\n  * @private\n  * @property _drawnWithCamera\n  * @type {Boolean}\n  * @default false\n  */\n  this._drawnWithCamera = false;\n\n  /*\n   * @private\n   * Keep animation properties in sync with how the animation changes.\n   */\n  this._syncAnimationSizes = function() {\n    //has an animation but the collider is still default\n    //the animation wasn't loaded. if the animation is not a 1x1 image\n    //it means it just finished loading\n    if(this.colliderType === 'default' &&\n      animations[currentAnimation].getWidth() !== 1 && animations[currentAnimation].getHeight() !== 1)\n    {\n      this.collider = this.getBoundingBox();\n      this.colliderType = 'image';\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n      //quadTree.insert(this);\n    }\n\n    //update size and collider\n    if(animations[currentAnimation].frameChanged || this.width === undefined || this.height === undefined)\n    {\n      //this.collider = this.getBoundingBox();\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n    }\n  };\n\n  /**\n  * Updates the sprite.\n  * Called automatically at the beginning of the draw cycle.\n  *\n  * @method update\n  */\n  this.update = function() {\n\n    if(!this.removed)\n    {\n      //if there has been a change somewhere after the last update\n      //the old position is the last position registered in the update\n      if(this.newPosition !== this.position)\n        this.previousPosition = createVector(this.newPosition.x, this.newPosition.y);\n      else\n        this.previousPosition = createVector(this.position.x, this.position.y);\n\n      this.velocity.x *= 1 - this.friction;\n      this.velocity.y *= 1 - this.friction;\n\n      if(this.maxSpeed !== -1)\n        this.limitSpeed(this.maxSpeed);\n\n      if(this.rotateToDirection && this.velocity.mag() > 0)\n        this._rotation = this.getDirection();\n\n      this.rotation += this.rotationSpeed;\n\n      this.position.x += this.velocity.x;\n      this.position.y += this.velocity.y;\n\n      this.newPosition = createVector(this.position.x, this.position.y);\n\n      this.deltaX = this.position.x - this.previousPosition.x;\n      this.deltaY = this.position.y - this.previousPosition.y;\n\n      //if there is an animation\n      if(animations[currentAnimation])\n      {\n        //update it\n        animations[currentAnimation].update();\n\n        this._syncAnimationSizes();\n      }\n\n      //a collider is created either manually with setCollider or\n      //when I check this sprite for collisions or overlaps\n      if(this.collider)\n      {\n        if(this.collider instanceof AABB)\n        {\n        //scale / rotate collider\n        var t;\n        if (pInst._angleMode === pInst.RADIANS) {\n          t = radians(this.rotation);\n        } else {\n          t = this.rotation;\n        }\n\n        if(this.colliderType === 'custom')\n          {\n          this.collider.extents.x = this.collider.originalExtents.x * abs(this._getScaleX()) * abs(cos(t)) +\n          this.collider.originalExtents.y * abs(this._getScaleY()) * abs(sin(t));\n\n          this.collider.extents.y = this.collider.originalExtents.x * abs(this._getScaleX()) * abs(sin(t)) +\n          this.collider.originalExtents.y * abs(this._getScaleY()) * abs(cos(t));\n          }\n        else if(this.colliderType === 'default')\n          {\n          this.collider.extents.x = this._internalWidth * abs(this._getScaleX()) * abs(cos(t)) +\n          this._internalHeight * abs(this._getScaleY()) * abs(sin(t));\n          this.collider.extents.y = this._internalWidth * abs(this._getScaleX()) * abs(sin(t)) +\n          this._internalHeight * abs(this._getScaleY()) * abs(cos(t));\n          }\n        else if(this.colliderType === 'image')\n          {\n          this.collider.extents.x = this._internalWidth * abs(cos(t)) +\n          this._internalHeight * abs(sin(t));\n\n          this.collider.extents.y = this._internalWidth * abs(sin(t)) +\n          this._internalHeight * abs(cos(t));\n          }\n        }\n\n        if(this.collider instanceof CircleCollider)\n        {\n        //print(this.scale);\n        this.collider.radius = this.collider.originalRadius * abs(this.scale);\n        }\n\n      }//end collider != null\n\n      //mouse actions\n      if (this.mouseActive)\n      {\n        //if no collider set it\n          if(!this.collider)\n            this.setDefaultCollider();\n\n        this.mouseUpdate();\n      }\n      else\n      {\n        if (typeof(this.onMouseOver) === 'function' ||\n            typeof(this.onMouseOut) === 'function' ||\n            typeof(this.onMousePressed) === 'function' ||\n            typeof(this.onMouseReleased) === 'function')\n        {\n          //if a mouse function is set\n          //it's implied we want to have it mouse active so\n          //we do this automatically\n          this.mouseActive = true;\n\n          //if no collider set it\n          if(!this.collider)\n            this.setDefaultCollider();\n\n          this.mouseUpdate();\n        }\n      }\n\n      //self destruction countdown\n      if (this.life>0)\n        this.life--;\n      if (this.life === 0)\n        this.remove();\n    }\n  };//end update\n\n  /**\n   * Creates a default collider matching the size of the\n   * placeholder rectangle or the bounding box of the image.\n   *\n   * @method setDefaultCollider\n   */\n  this.setDefaultCollider = function() {\n\n    //if has animation get the animation bounding box\n    //working only for preloaded images\n    if(animations[currentAnimation] && (animations[currentAnimation].getWidth() !== 1 && animations[currentAnimation].getHeight() !== 1))\n    {\n      this.collider = this.getBoundingBox();\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n      //quadTree.insert(this);\n      this.colliderType = 'image';\n      //print(\"IMAGE COLLIDER ADDED\");\n    }\n    else if(animations[currentAnimation] && animations[currentAnimation].getWidth() === 1 && animations[currentAnimation].getHeight() === 1)\n    {\n    //animation is still loading\n    //print(\"wait\");\n    }\n    else //get the with and height defined at the creation\n    {\n      this.collider = new AABB(pInst, this.position, createVector(this._internalWidth, this._internalHeight));\n      //quadTree.insert(this);\n      this.colliderType = 'default';\n    }\n\n    pInst.quadTree.insert(this);\n  };\n\n  /**\n   * Updates the sprite mouse states and triggers the mouse events:\n   * onMouseOver, onMouseOut, onMousePressed, onMouseReleased\n   *\n   * @method mouseUpdate\n   */\n  this.mouseUpdate = function() {\n\n    var mouseWasOver = this.mouseIsOver;\n    var mouseWasPressed = this.mouseIsPressed;\n\n    this.mouseIsOver = false;\n    this.mouseIsPressed = false;\n\n    var mousePosition;\n\n    if(this._drawnWithCamera)\n      mousePosition = createVector(camera.mouseX, camera.mouseY);\n    else\n      mousePosition = createVector(pInst.mouseX, pInst.mouseY);\n\n      //rollover\n      if(this.collider)\n      {\n\n        if (this.collider instanceof CircleCollider)\n        {\n          if (dist(mousePosition.x, mousePosition.y, this.collider.center.x, this.collider.center.y) < this.collider.radius)\n            this.mouseIsOver = true;\n        } else if (this.collider instanceof AABB)\n        {\n          if (mousePosition.x > this.collider.left() &&\n              mousePosition.y > this.collider.top() &&\n              mousePosition.x < this.collider.right() &&\n              mousePosition.y < this.collider.bottom())\n          {\n            this.mouseIsOver = true;\n          }\n        }\n\n        //global p5 var\n        if(this.mouseIsOver && pInst.mouseIsPressed)\n          this.mouseIsPressed = true;\n\n        //event change - call functions\n        if(!mouseWasOver && this.mouseIsOver && this.onMouseOver !== undefined)\n          if(typeof(this.onMouseOver) === 'function')\n            this.onMouseOver.call(this, this);\n          else\n            print('Warning: onMouseOver should be a function');\n\n        if(mouseWasOver && !this.mouseIsOver && this.onMouseOut !== undefined)\n          if(typeof(this.onMouseOut) === 'function')\n            this.onMouseOut.call(this, this);\n          else\n            print('Warning: onMouseOut should be a function');\n\n        if(!mouseWasPressed && this.mouseIsPressed && this.onMousePressed !== undefined)\n          if(typeof(this.onMousePressed) === 'function')\n            this.onMousePressed.call(this, this);\n          else\n            print('Warning: onMousePressed should be a function');\n\n        if(mouseWasPressed && !pInst.mouseIsPressed && !this.mouseIsPressed && this.onMouseReleased !== undefined)\n          if(typeof(this.onMouseReleased) === 'function')\n            this.onMouseReleased.call(this, this);\n          else\n            print('Warning: onMouseReleased should be a function');\n\n      }\n\n  };\n\n  /**\n  * Sets a collider for the sprite.\n  *\n  * In p5.play a Collider is an invisible circle or rectangle\n  * that can have any size or position relative to the sprite and which\n  * will be used to detect collisions and overlapping with other sprites,\n  * or the mouse cursor.\n  *\n  * If the sprite is checked for collision, bounce, overlapping or mouse events\n  * a collider is automatically created from the width and height parameter\n  * passed at the creation of the sprite or the from the image dimension in case\n  * of animated sprites.\n  *\n  * Often the image bounding box is not appropriate as the active area for\n  * collision detection so you can set a circular or rectangular sprite with\n  * different dimensions and offset from the sprite's center.\n  *\n  * There are four ways to call this method:\n  *\n  * 1. setCollider(\"rectangle\")\n  * 2. setCollider(\"rectangle\", offsetX, offsetY, width, height)\n  * 3. setCollider(\"circle\")\n  * 4. setCollider(\"circle\", offsetX, offsetY, radius)\n  *\n  * @method setCollider\n  * @param {String} type Either \"rectangle\" or \"circle\"\n  * @param {Number} offsetX Collider x position from the center of the sprite\n  * @param {Number} offsetY Collider y position from the center of the sprite\n  * @param {Number} width Collider width or radius\n  * @param {Number} height Collider height\n  * @throws {TypeError} if given invalid parameters.\n  */\n  this.setCollider = function(type, offsetX, offsetY, width, height) {\n    if (!(type === 'rectangle' || type === 'circle')) {\n      throw new TypeError('setCollider expects the first argument to be either \"circle\" or \"rectangle\"');\n    } else if (type === 'circle' && arguments.length > 1 && arguments.length < 4) {\n      throw new TypeError('Usage: setCollider(\"circle\") or setCollider(\"circle\", offsetX, offsetY, radius)');\n    } else if (type === 'circle' && arguments.length > 4) {\n      pInst._warn('Extra parameters to setCollider were ignored. Usage: setCollider(\"circle\") or setCollider(\"circle\", offsetX, offsetY, radius)');\n    } else if (type === 'rectangle' && arguments.length > 1 && arguments.length < 5) {\n      throw new TypeError('Usage: setCollider(\"rectangle\") or setCollider(\"rectangle\", offsetX, offsetY, width, height)');\n    } else if (type === 'rectangle' && arguments.length > 5) {\n      pInst._warn('Extra parameters to setCollider were ignored. Usage: setCollider(\"rectangle\") or setCollider(\"rectangle\", offsetX, offsetY, width, height)');\n    }\n\n    this.colliderType = 'custom';\n\n    var v = createVector(offsetX, offsetY);\n    if (type === 'rectangle' && arguments.length === 1) {\n      this.collider = new AABB(pInst, this.position, createVector(this.width, this.height));\n    } else if (type === 'rectangle' && arguments.length >= 5) {\n      this.collider = new AABB(pInst, this.position, createVector(width, height), v);\n    } else if (type === 'circle' && arguments.length === 1) {\n      this.collider = new CircleCollider(pInst, this.position, Math.floor(Math.max(this.width, this.height) / 2));\n    } else if (type === 'circle' && arguments.length >= 4) {\n      this.collider = new CircleCollider(pInst, this.position, width, v);\n    }\n\n    quadTree.insert(this);\n  };\n\n  /**\n   * Returns a the bounding box of the current image\n   * @method getBoundingBox\n   */\n  this.getBoundingBox = function() {\n\n    var w = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n    var h = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n\n    //if the bounding box is 1x1 the image is not loaded\n    //potential issue with actual 1x1 images\n    if(w === 1 && h === 1) {\n      //not loaded yet\n      return new AABB(pInst, this.position, createVector(w, h));\n    }\n    else {\n      return new AABB(pInst, this.position, createVector(w, h));\n    }\n  };\n\n  /**\n  * Sets the sprite's horizontal mirroring.\n  * If 1 the images displayed normally\n  * If -1 the images are flipped horizontally\n  * If no argument returns the current x mirroring\n  *\n  * @method mirrorX\n  * @param {Number} dir Either 1 or -1\n  * @return {Number} Current mirroring if no parameter is specified\n  */\n  this.mirrorX = function(dir) {\n    if(dir === 1 || dir === -1)\n      dirX = dir;\n    else\n      return dirX;\n  };\n\n  /**\n  * Sets the sprite's vertical mirroring.\n  * If 1 the images displayed normally\n  * If -1 the images are flipped vertically\n  * If no argument returns the current y mirroring\n  *\n  * @method mirrorY\n  * @param {Number} dir Either 1 or -1\n  * @return {Number} Current mirroring if no parameter is specified\n  */\n  this.mirrorY = function(dir) {\n    if(dir === 1 || dir === -1)\n      dirY = dir;\n    else\n      return dirY;\n  };\n\n  /*\n   * Returns the value the sprite should be scaled in the X direction.\n   * Used to calculate rendering and collisions.\n   * @private\n   */\n  this._getScaleX = function()\n  {\n    return this.scale;\n  };\n\n  /*\n   * Returns the value the sprite should be scaled in the Y direction.\n   * Used to calculate rendering and collisions.\n   * @private\n   */\n  this._getScaleY = function()\n  {\n    return this.scale;\n  };\n\n  /**\n   * Manages the positioning, scale and rotation of the sprite\n   * Called automatically, it should not be overridden\n   * @private\n   * @final\n   * @method display\n   */\n  this.display = function()\n  {\n    if (this.visible && !this.removed)\n    {\n      push();\n      colorMode(RGB);\n\n      noStroke();\n      rectMode(CENTER);\n      ellipseMode(CENTER);\n      imageMode(CENTER);\n\n      translate(this.position.x, this.position.y);\n      scale(this._getScaleX()*dirX, this._getScaleY()*dirY);\n      if (pInst._angleMode === pInst.RADIANS) {\n        rotate(radians(this.rotation));\n      } else {\n        rotate(this.rotation);\n      }\n      this.draw();\n      //draw debug info\n      pop();\n\n      this._drawnWithCamera = camera.active;\n\n      if(this.debug)\n      {\n        push();\n        //draw the anchor point\n        stroke(0, 255, 0);\n        strokeWeight(1);\n        line(this.position.x-10, this.position.y, this.position.x+10, this.position.y);\n        line(this.position.x, this.position.y-10, this.position.x, this.position.y+10);\n        noFill();\n\n        //depth number\n        noStroke();\n        fill(0, 255, 0);\n        textAlign(LEFT, BOTTOM);\n        textSize(16);\n        text(this.depth+'', this.position.x+4, this.position.y-2);\n\n        noFill();\n        stroke(0, 255, 0);\n\n        //bounding box\n        if(this.collider !== undefined)\n        {\n          this.collider.draw();\n        }\n        pop();\n      }\n\n    }\n  };\n\n\n  /**\n  * Manages the visuals of the sprite.\n  * It can be overridden with a custom drawing function.\n  * The 0,0 point will be the center of the sprite.\n  * Example:\n  * sprite.draw = function() { ellipse(0,0,10,10) }\n  * Will display the sprite as circle.\n  *\n  * @method draw\n  */\n  this.draw = function()\n  {\n    if(currentAnimation !== '' && animations)\n    {\n      if(animations[currentAnimation])\n        animations[currentAnimation].draw(0, 0, 0);\n    }\n    else\n    {\n      noStroke();\n      fill(this.shapeColor);\n      rect(0, 0, this._internalWidth, this._internalHeight);\n    }\n  };\n\n  /**\n   * Removes the Sprite from the sketch.\n   * The removed Sprite won't be drawn or updated anymore.\n   *\n   * @method remove\n   */\n  this.remove = function() {\n    this.removed = true;\n\n    quadTree.removeObject(this);\n\n    //when removed from the \"scene\" also remove all the references in all the groups\n    while (this.groups.length > 0) {\n      this.groups[0].remove(this);\n    }\n  };\n\n  /**\n  * Sets the velocity vector.\n  *\n  * @method setVelocity\n  * @param {Number} x X component\n  * @param {Number} y Y component\n  */\n  this.setVelocity = function(x, y) {\n    this.velocity.x = x;\n    this.velocity.y = y;\n  };\n\n  /**\n  * Calculates the scalar speed.\n  *\n  * @method getSpeed\n  * @return {Number} Scalar speed\n  */\n  this.getSpeed = function() {\n    return this.velocity.mag();\n  };\n\n  /**\n  * Calculates the movement's direction in degrees.\n  *\n  * @method getDirection\n  * @return {Number} Angle in degrees\n  */\n  this.getDirection = function() {\n\n    var direction = atan2(this.velocity.y, this.velocity.x);\n\n    if(isNaN(direction))\n      direction = 0;\n\n    // Unlike Math.atan2, the atan2 method above will return degrees if\n    // the current p5 angleMode is DEGREES, and radians if the p5 angleMode is\n    // RADIANS.  This method should always return degrees (for now).\n    // See https://github.com/molleindustria/p5.play/issues/94\n    if (pInst._angleMode === pInst.RADIANS) {\n      direction = degrees(direction);\n    }\n\n    return direction;\n  };\n\n  /**\n  * Adds the sprite to an existing group\n  *\n  * @method addToGroup\n  * @param {Object} group\n  */\n  this.addToGroup = function(group) {\n    if(group instanceof Array)\n      group.add(this);\n    else\n      print('addToGroup error: '+group+' is not a group');\n  };\n\n  /**\n  * Limits the scalar speed.\n  *\n  * @method limitSpeed\n  * @param {Number} max Max speed: positive number\n  */\n  this.limitSpeed = function(max) {\n\n    //update linear speed\n    var speed = this.getSpeed();\n\n    if(abs(speed)>max)\n    {\n      //find reduction factor\n      var k = max/abs(speed);\n      this.velocity.x *= k;\n      this.velocity.y *= k;\n    }\n  };\n\n  /**\n  * Set the speed and direction of the sprite.\n  * The action overwrites the current velocity.\n  * If direction is not supplied, the current direction is maintained.\n  * If direction is not supplied and there is no current velocity, the current\n  * rotation angle used for the direction.\n  *\n  * @method setSpeed\n  * @param {Number}  speed Scalar speed\n  * @param {Number}  [angle] Direction in degrees\n  */\n  this.setSpeed = function(speed, angle) {\n    var a;\n    if (typeof angle === 'undefined') {\n      if (this.velocity.x !== 0 || this.velocity.y !== 0) {\n        a = pInst.atan2(this.velocity.y, this.velocity.x);\n      } else {\n        if (pInst._angleMode === pInst.RADIANS) {\n          a = radians(this._rotation);\n        } else {\n          a = this._rotation;\n        }\n      }\n    } else {\n      if (pInst._angleMode === pInst.RADIANS) {\n        a = radians(angle);\n      } else {\n        a = angle;\n      }\n    }\n    this.velocity.x = cos(a)*speed;\n    this.velocity.y = sin(a)*speed;\n  };\n\n  /**\n  * Pushes the sprite in a direction defined by an angle.\n  * The force is added to the current velocity.\n  *\n  * @method addSpeed\n  * @param {Number}  speed Scalar speed to add\n  * @param {Number}  angle Direction in degrees\n  */\n  this.addSpeed = function(speed, angle) {\n    var a;\n    if (pInst._angleMode === pInst.RADIANS) {\n      a = radians(angle);\n    } else {\n      a = angle;\n    }\n    this.velocity.x += cos(a) * speed;\n    this.velocity.y += sin(a) * speed;\n  };\n\n  /**\n  * Pushes the sprite toward a point.\n  * The force is added to the current velocity.\n  *\n  * @method attractionPoint\n  * @param {Number}  magnitude Scalar speed to add\n  * @param {Number}  pointX Direction x coordinate\n  * @param {Number}  pointY Direction y coordinate\n  */\n  this.attractionPoint = function(magnitude, pointX, pointY) {\n    var angle = atan2(pointY-this.position.y, pointX-this.position.x);\n    this.velocity.x += cos(angle) * magnitude;\n    this.velocity.y += sin(angle) * magnitude;\n  };\n\n\n  /**\n  * Adds an image to the sprite.\n  * An image will be considered a one-frame animation.\n  * The image should be preloaded in the preload() function using p5 loadImage.\n  * Animations require a identifying label (string) to change them.\n  * The image is stored in the sprite but not necessarily displayed\n  * until Sprite.changeAnimation(label) is called\n  *\n  * Usages:\n  * - sprite.addImage(label, image);\n  * - sprite.addImage(image);\n  *\n  * If only an image is passed no label is specified\n  *\n  * @method addImage\n  * @param {String|p5.Image} label Label or image\n  * @param {p5.Image} [img] Image\n  */\n  this.addImage = function()\n  {\n    if(typeof arguments[0] === 'string' && arguments[1] instanceof p5.Image)\n      this.addAnimation(arguments[0], arguments[1]);\n    else if(arguments[0] instanceof p5.Image)\n      this.addAnimation('normal', arguments[0]);\n    else\n      throw('addImage error: allowed usages are <image> or <label>, <image>');\n  };\n\n  /**\n  * Adds an animation to the sprite.\n  * The animation should be preloaded in the preload() function\n  * using loadAnimation.\n  * Animations require a identifying label (string) to change them.\n  * Animations are stored in the sprite but not necessarily displayed\n  * until Sprite.changeAnimation(label) is called.\n  *\n  * Usage:\n  * - sprite.addAnimation(label, animation);\n  *\n  * Alternative usages. See Animation for more information on file sequences:\n  * - sprite.addAnimation(label, firstFrame, lastFrame);\n  * - sprite.addAnimation(label, frame1, frame2, frame3...);\n  *\n  * @method addAnimation\n  * @param {String} label Animation identifier\n  * @param {Animation} animation The preloaded animation\n  */\n  this.addAnimation = function(label)\n  {\n    var anim;\n\n    if(typeof label !== 'string')\n    {\n      print('Sprite.addAnimation error: the first argument must be a label (String)');\n      return -1;\n    }\n    else if(arguments.length < 2)\n    {\n      print('addAnimation error: you must specify a label and n frame images');\n      return -1;\n    }\n    else if(arguments[1] instanceof Animation)\n    {\n\n      var sourceAnimation = arguments[1];\n\n      var newAnimation = sourceAnimation.clone();\n\n      animations[label] = newAnimation;\n\n      if(currentAnimation === '')\n      {\n        currentAnimation = label;\n        this.animation = newAnimation;\n      }\n\n      newAnimation.isSpriteAnimation = true;\n\n      this._internalWidth = newAnimation.getWidth()*abs(this._getScaleX());\n      this._internalHeight = newAnimation.getHeight()*abs(this._getScaleY());\n\n      return newAnimation;\n    }\n    else\n    {\n      var animFrames = [];\n      for(var i=1; i<arguments.length; i++)\n        animFrames.push(arguments[i]);\n\n      anim = construct(pInst.Animation, animFrames);\n      animations[label] = anim;\n\n      if(currentAnimation === '')\n      {\n        currentAnimation = label;\n        this.animation = anim;\n      }\n      anim.isSpriteAnimation = true;\n\n      this._internalWidth = anim.getWidth()*abs(this._getScaleX());\n      this._internalHeight = anim.getHeight()*abs(this._getScaleY());\n\n      return anim;\n    }\n\n  };\n\n  /**\n  * Changes the displayed image/animation.\n  * Equivalent to changeAnimation\n  *\n  * @method changeImage\n  * @param {String} label Image/Animation identifier\n  */\n  this.changeImage = function(label) {\n    this.changeAnimation(label);\n  };\n\n   /**\n  * Returns the label of the current animation\n  *\n  * @method getAnimationLabel\n  * @return {String} label Image/Animation identifier\n  */\n  this.getAnimationLabel = function() {\n    return currentAnimation;\n  };\n\n  /**\n  * Changes the displayed animation.\n  * See Animation for more control over the sequence.\n  *\n  * @method changeAnimation\n  * @param {String} label Animation identifier\n  */\n  this.changeAnimation = function(label) {\n    if(!animations[label])\n      print('changeAnimation error: no animation labeled '+label);\n    else\n    {\n      currentAnimation = label;\n      this.animation = animations[label];\n    }\n  };\n\n  /**\n  * Checks if the given point corresponds to a transparent pixel\n  * in the sprite's current image. It can be used to check a point collision\n  * against only the visible part of the sprite.\n  *\n  * @method overlapPixel\n  * @param {Number} pointX x coordinate of the point to check\n  * @param {Number} pointY y coordinate of the point to check\n  * @return {Boolean} result True if non-transparent\n  */\n  this.overlapPixel = function(pointX, pointY) {\n    var point = createVector(pointX, pointY);\n\n    var img = this.animation.getFrameImage();\n\n    //convert point to img relative position\n    point.x -= this.position.x-img.width/2;\n    point.y -= this.position.y-img.height/2;\n\n    //out of the image entirely\n    if(point.x<0 || point.x>img.width || point.y<0 || point.y>img.height)\n      return false;\n    else if(this.rotation === 0 && this.scale === 1)\n    {\n      //true if full opacity\n      var values = img.get(point.x, point.y);\n      return values[3] === 255;\n    }\n    else\n    {\n      print('Error: overlapPixel doesn\\'t work with scaled or rotated sprites yet');\n      //offscreen printing to be implemented bleurch\n      return false;\n    }\n  };\n\n  /**\n  * Checks if the given point is inside the sprite's collider.\n  *\n  * @method overlapPoint\n  * @param {Number} pointX x coordinate of the point to check\n  * @param {Number} pointY y coordinate of the point to check\n  * @return {Boolean} result True if inside\n  */\n  this.overlapPoint = function(pointX, pointY) {\n    var point = createVector(pointX, pointY);\n\n    if(!this.collider)\n      this.setDefaultCollider();\n\n    if(this.collider !== undefined)\n    {\n      if(this.collider instanceof AABB)\n        return (point.x > this.collider.left() && point.x < this.collider.right() && point.y > this.collider.top() && point.y < this.collider.bottom());\n      if(this.collider instanceof CircleCollider)\n      {\n        var sqRadius = this.collider.radius * this.collider.radius;\n        var sqDist = pow(this.collider.center.x - point.x, 2) + pow(this.collider.center.y - point.y, 2);\n        return sqDist<sqRadius;\n      }\n      else\n        return false;\n    }\n    else\n      return false;\n\n  };\n\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * If the target is a group the function will be called for each single\n  * sprite overlapping. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.overlap(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method overlap\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.overlap = function(target, callback) {\n    //if(this.collider instanceof AABB && target.collider instanceof AABB)\n    return this.AABBops('overlap', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the current sprite will be displace by\n  * the colliding one in the closest non-overlapping position.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.collide(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method collide\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.collide = function(target, callback) {\n    //if(this.collider instanceof AABB && target.collider instanceof AABB)\n    return this.AABBops('collide', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the current sprite will displace\n  * the colliding one to the closest non-overlapping position.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.displace(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method displace\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.displace = function(target, callback) {\n    return this.AABBops('displace', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the sprites will bounce affecting each\n  * other's trajectories depending on their .velocity, .mass and .restitution\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.bounce(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method bounce\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.bounce = function(target, callback) {\n    return this.AABBops('bounce', target, callback);\n  };\n\n  // Internal collision detection function. Do not use directly.\n  this.AABBops = function(type, target, callback) {\n\n    this.touching.left = false;\n    this.touching.right = false;\n    this.touching.top = false;\n    this.touching.bottom = false;\n\n    var result = false;\n\n    //if single sprite turn into array anyway\n    var others = [];\n\n    if(target instanceof Sprite)\n      others.push(target);\n    else if(target instanceof Array)\n    {\n      if(quadTree !== undefined && quadTree.active)\n        others = quadTree.retrieveFromGroup( this, target);\n\n      if(others.length === 0)\n        others = target;\n\n    }\n    else\n      throw('Error: overlap can only be checked between sprites or groups');\n\n    for(var i=0; i<others.length; i++)\n      if(this !== others[i] && !this.removed) //you can check collisions within the same group but not on itself\n      {\n        var displacement;\n        var other = others[i];\n\n        if(this.collider === undefined)\n          this.setDefaultCollider();\n\n        if(other.collider === undefined)\n          other.setDefaultCollider();\n\n        /*\n        if(this.colliderType==\"default\" && animations[currentAnimation]!=null)\n        {\n          print(\"busted\");\n          return false;\n        }*/\n        if(this.collider !== undefined && other.collider !== undefined)\n        {\n        if(type === 'overlap') {\n            var over;\n\n            //if the other is a circle I calculate the displacement from here\n            if(this.collider instanceof CircleCollider)\n                over = other.collider.overlap(this.collider);\n            else\n                over = this.collider.overlap(other.collider);\n\n            if(over)\n            {\n\n              result = true;\n\n              if(callback !== undefined && typeof callback === 'function')\n                callback.call(this, this, other);\n            }\n          }\n        else if(type === 'collide' || type === 'displace' || type === 'bounce')\n          {\n            displacement = createVector(0, 0);\n\n            //if the sum of the speed is more than the collider i may\n            //have a tunnelling problem\n            var tunnelX = abs(this.velocity.x-other.velocity.x) >= other.collider.extents.x/2 && round(this.deltaX - this.velocity.x) === 0;\n\n            var tunnelY = abs(this.velocity.y-other.velocity.y) >= other.collider.size().y/2 && round(this.deltaY - this.velocity.y) === 0;\n\n\n            if(tunnelX || tunnelY)\n            {\n              //instead of using the colliders I use the bounding box\n              //around the previous position and current position\n              //this is regardless of the collider type\n\n              //the center is the average of the coll centers\n              var c = createVector(\n                (this.position.x+this.previousPosition.x)/2,\n                (this.position.y+this.previousPosition.y)/2);\n\n              //the extents are the distance between the coll centers\n              //plus the extents of both\n              var e = createVector(\n                abs(this.position.x -this.previousPosition.x) + this.collider.extents.x,\n                abs(this.position.y -this.previousPosition.y) + this.collider.extents.y);\n\n              var bbox = new AABB(pInst, c, e, this.collider.offset);\n\n              //bbox.draw();\n\n              if(bbox.overlap(other.collider))\n              {\n                if(tunnelX) {\n\n                  //entering from the right\n                  if(this.velocity.x < 0)\n                    displacement.x = other.collider.right() - this.collider.left() + 1;\n                  else if(this.velocity.x > 0 )\n                    displacement.x = other.collider.left() - this.collider.right() -1;\n                  }\n\n                if(tunnelY) {\n                  //from top\n                  if(this.velocity.y > 0)\n                    displacement.y = other.collider.top() - this.collider.bottom() - 1;\n                  else if(this.velocity.y < 0 )\n                    displacement.y = other.collider.bottom() - this.collider.top() + 1;\n\n                  }\n\n              }//end overlap\n\n            }\n            else //non tunnel overlap\n            {\n\n              //if the other is a circle I calculate the displacement from here\n              //and reverse it\n              if(this.collider instanceof CircleCollider)\n                {\n                displacement = other.collider.collide(this.collider).mult(-1);\n                }\n              else\n                displacement = this.collider.collide(other.collider);\n\n            }\n\n            if(displacement.x !== 0 || displacement.y !== 0)\n            {\n              var newVelX1, newVelY1, newVelX2, newVelY2;\n\n              if (type === 'displace' && !other.immovable) {\n                other.position.sub(displacement);\n              } else if ((type === 'collide' || type === 'bounce') && !this.immovable) {\n                this.position.add(displacement);\n                this.previousPosition = createVector(this.position.x, this.position.y);\n                this.newPosition = createVector(this.position.x, this.position.y);\n              }\n\n              if(displacement.x > 0)\n                this.touching.left = true;\n              if(displacement.x < 0)\n                this.touching.right = true;\n              if(displacement.y < 0)\n                this.touching.bottom = true;\n              if(displacement.y > 0)\n                this.touching.top = true;\n\n              if(type === 'bounce')\n              {\n                if (this.collider instanceof CircleCollider && other.collider instanceof CircleCollider) {\n                  var dx1 = p5.Vector.sub(this.position, other.position);\n                  var dx2 = p5.Vector.sub(other.position, this.position);\n                  var magnitude = dx1.magSq();\n                  var totalMass = this.mass + other.mass;\n                  var m1 = 0, m2 = 0;\n                  if (this.immovable) {\n                    m2 = 2;\n                  } else if (other.immovable) {\n                    m1 = 2;\n                  } else {\n                    m1 = 2 * other.mass / totalMass;\n                    m2 = 2 * this.mass / totalMass;\n                  }\n                  var newVel1 = dx1.mult(m1 * p5.Vector.sub(this.velocity, other.velocity).dot(dx1) / magnitude);\n                  var newVel2 = dx2.mult(m2 * p5.Vector.sub(other.velocity, this.velocity).dot(dx2) / magnitude);\n\n                  this.velocity.sub(newVel1.mult(this.restitution));\n                  other.velocity.sub(newVel2.mult(other.restitution));\n                }\n                else {\n                if(other.immovable)\n                {\n                  newVelX1 = -this.velocity.x+other.velocity.x;\n                  newVelY1 = -this.velocity.y+other.velocity.y;\n                }\n                else\n                {\n                  newVelX1 = (this.velocity.x * (this.mass - other.mass) + (2 * other.mass * other.velocity.x)) / (this.mass + other.mass);\n                  newVelY1 = (this.velocity.y * (this.mass - other.mass) + (2 * other.mass * other.velocity.y)) / (this.mass + other.mass);\n                  newVelX2 = (other.velocity.x * (other.mass - this.mass) + (2 * this.mass * this.velocity.x)) / (this.mass + other.mass);\n                  newVelY2 = (other.velocity.y * (other.mass - this.mass) + (2 * this.mass * this.velocity.y)) / (this.mass + other.mass);\n                }\n\n                //var bothCircles = (this.collider instanceof CircleCollider &&\n                //                   other.collider  instanceof CircleCollider);\n\n                //if(this.touching.left || this.touching.right || this.collider instanceof CircleCollider)\n\n                //print(displacement);\n\n                if(abs(displacement.x)>abs(displacement.y))\n                {\n\n\n                  if(!this.immovable)\n                  {\n                    this.velocity.x = newVelX1*this.restitution;\n\n                  }\n\n                  if(!other.immovable)\n                    other.velocity.x = newVelX2*other.restitution;\n\n                }\n                //if(this.touching.top || this.touching.bottom || this.collider instanceof CircleCollider)\n                if(abs(displacement.x)<abs(displacement.y))\n                {\n\n                  if(!this.immovable)\n                    this.velocity.y = newVelY1*this.restitution;\n\n                  if(!other.immovable)\n                    other.velocity.y = newVelY2*other.restitution;\n                }\n                }\n              }\n              //else if(type == \"collide\")\n                //this.velocity = createVector(0,0);\n\n              if(callback !== undefined && typeof callback === 'function')\n                callback.call(this, this, other);\n\n              result = true;\n            }\n          }\n        }//end collider exists\n      }\n\n    return result;\n  };\n} //end Sprite class\n\ndefineLazyP5Property('Sprite', boundConstructorFactory(Sprite));\n\n/**\n   * A camera facilitates scrolling and zooming for scenes extending beyond\n   * the canvas. A camera has a position, a zoom factor, and the mouse\n   * coordinates relative to the view.\n   * The camera is automatically created on the first draw cycle.\n   *\n   * In p5.js terms the camera wraps the whole drawing cycle in a\n   * transformation matrix but it can be disable anytime during the draw\n   * cycle for example to draw interface elements in an absolute position.\n   *\n   * @class Camera\n   * @constructor\n   * @param {Number} x Initial x coordinate\n   * @param {Number} y Initial y coordinate\n   * @param {Number} zoom magnification\n   **/\nfunction Camera(pInst, x, y, zoom) {\n  /**\n  * Camera position. Defines the global offset of the sketch.\n  *\n  * @property position\n  * @type {p5.Vector}\n  */\n  this.position = pInst.createVector(x, y);\n\n  /**\n  * Camera zoom. Defines the global scale of the sketch.\n  * A scale of 1 will be the normal size. Setting it to 2 will make everything\n  * twice the size. .5 will make everything half size.\n  *\n  * @property zoom\n  * @type {Number}\n  */\n  this.zoom = zoom;\n\n  /**\n  * MouseX translated to the camera view.\n  * Offsetting and scaling the canvas will not change the sprites' position\n  * nor the mouseX and mouseY variables. Use this property to read the mouse\n  * position if the camera moved or zoomed.\n  *\n  * @property mouseX\n  * @type {Number}\n  */\n  this.mouseX = pInst.mouseX;\n\n  /**\n  * MouseY translated to the camera view.\n  * Offsetting and scaling the canvas will not change the sprites' position\n  * nor the mouseX and mouseY variables. Use this property to read the mouse\n  * position if the camera moved or zoomed.\n  *\n  * @property mouseY\n  * @type {Number}\n  */\n  this.mouseY = pInst.mouseY;\n\n  /**\n  * True if the camera is active.\n  * Read only property. Use the methods Camera.on() and Camera.off()\n  * to enable or disable the camera.\n  *\n  * @property active\n  * @type {Boolean}\n  */\n  this.active = false;\n\n  /**\n  * Activates the camera.\n  * The canvas will be drawn according to the camera position and scale until\n  * Camera.off() is called\n  *\n  * @method on\n  */\n  this.on = function() {\n    if(!this.active)\n    {\n      cameraPush.call(pInst);\n      this.active = true;\n    }\n  };\n\n  /**\n  * Deactivates the camera.\n  * The canvas will be drawn normally, ignoring the camera's position\n  * and scale until Camera.on() is called\n  *\n  * @method off\n  */\n  this.off = function() {\n    if(this.active)\n    {\n      cameraPop.call(pInst);\n      this.active = false;\n    }\n  };\n} //end camera class\n\ndefineLazyP5Property('Camera', boundConstructorFactory(Camera));\n\n//called pre draw by default\nfunction cameraPush() {\n  var pInst = this;\n  var camera = pInst.camera;\n\n  //awkward but necessary in order to have the camera at the center\n  //of the canvas by default\n  if(!camera.init && camera.position.x === 0 && camera.position.y === 0)\n    {\n    camera.position.x=pInst.width/2;\n    camera.position.y=pInst.height/2;\n    camera.init = true;\n    }\n\n  camera.mouseX = pInst.mouseX+camera.position.x-pInst.width/2;\n  camera.mouseY = pInst.mouseY+camera.position.y-pInst.height/2;\n\n  if(!camera.active)\n  {\n    camera.active = true;\n    pInst.push();\n    pInst.scale(camera.zoom);\n    pInst.translate(-camera.position.x+pInst.width/2/camera.zoom, -camera.position.y+pInst.height/2/camera.zoom);\n  }\n}\n\n//called postdraw by default\nfunction cameraPop() {\n  var pInst = this;\n\n  if(pInst.camera.active)\n  {\n    pInst.pop();\n    pInst.camera.active = false;\n  }\n}\n\n\n\n\n/**\n   * In p5.play groups are collections of sprites with similar behavior.\n   * For example a group may contain all the sprites in the background\n   * or all the sprites that \"kill\" the player.\n   *\n   * Groups are \"extended\" arrays and inherit all their properties\n   * e.g. group.length\n   *\n   * Since groups contain only references, a sprite can be in multiple\n   * groups and deleting a group doesn't affect the sprites themselves.\n   *\n   * Sprite.remove() will also remove the sprite from all the groups\n   * it belongs to.\n   *\n   * @class Group\n   * @constructor\n   */\nfunction Group() {\n\n  //basically extending the array\n  var array = [];\n\n  /**\n  * Gets the member at index i.\n  *\n  * @method get\n  * @param {Number} i The index of the object to retrieve\n  */\n  array.get = function(i) {\n    return array[i];\n  };\n\n  /**\n  * Checks if the group contains a sprite.\n  *\n  * @method contains\n  * @param {Sprite} sprite The sprite to search\n  * @return {Number} Index or -1 if not found\n  */\n  array.contains = function(sprite) {\n    return this.indexOf(sprite)>-1;\n  };\n\n  /**\n   * Same as Group.contains\n   * @method indexOf\n   */\n  array.indexOf = function(item) {\n    for (var i = 0, len = array.length; i < len; ++i) {\n      if (virtEquals(item, array[i])) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  /**\n  * Adds a sprite to the group.\n  *\n  * @method add\n  * @param {Sprite} s The sprite to be added\n  */\n  array.add = function(s) {\n    if(!(s instanceof Sprite)) {\n      throw('Error: you can only add sprites to a group');\n    }\n\n    if (-1 === this.indexOf(s)) {\n      array.push(s);\n      s.groups.push(this);\n    }\n  };\n\n  /**\n   * Same as group.length\n   * @method size\n   */\n  array.size = function() {\n    return array.length;\n  };\n\n  /**\n  * Removes all the sprites in the group\n  * from the scene.\n  *\n  * @method removeSprites\n  */\n  array.removeSprites = function() {\n    while (array.length > 0) {\n      array[0].remove();\n    }\n  };\n\n  /**\n  * Removes all references to the group.\n  * Does not remove the actual sprites.\n  *\n  * @method clear\n  */\n  array.clear = function() {\n    array.length = 0;\n  };\n\n  /**\n  * Removes a sprite from the group.\n  * Does not remove the actual sprite, only the affiliation (reference).\n  *\n  * @method remove\n  * @param {Sprite} item The sprite to be removed\n  * @return {Boolean} True if sprite was found and removed\n  */\n  array.remove = function(item) {\n    if(!(item instanceof Sprite)) {\n      throw('Error: you can only remove sprites from a group');\n    }\n\n    var i, removed = false;\n    for (i = array.length - 1; i >= 0; i--) {\n      if (array[i] === item) {\n        array.splice(i, 1);\n        removed = true;\n      }\n    }\n\n    if (removed) {\n      for (i = item.groups.length - 1; i >= 0; i--) {\n        if (item.groups[i] === this) {\n          item.groups.splice(i, 1);\n        }\n      }\n    }\n\n    return removed;\n  };\n\n  /**\n   * Returns a copy of the group as standard array.\n   * @method toArray\n   */\n  array.toArray = function() {\n    return array.slice(0);\n  };\n\n  /**\n  * Returns the highest depth in a group\n  *\n  * @method maxDepth\n  * @return {Number} The depth of the sprite drawn on the top\n  */\n  array.maxDepth = function() {\n    if (array.length === 0) {\n      return 0;\n    }\n\n    return array.reduce(function(maxDepth, sprite) {\n      return Math.max(maxDepth, sprite.depth);\n    }, -Infinity);\n  };\n\n  /**\n  * Returns the lowest depth in a group\n  *\n  * @method minDepth\n  * @return {Number} The depth of the sprite drawn on the bottom\n  */\n  array.minDepth = function() {\n    if (array.length === 0) {\n      return 99999;\n    }\n\n    return array.reduce(function(minDepth, sprite) {\n      return Math.min(minDepth, sprite.depth);\n    }, Infinity);\n  };\n\n  /**\n  * Draws all the sprites in the group.\n  *\n  * @method draw\n  */\n  array.draw = function() {\n\n    //sort by depth\n    this.sort(function(a, b) {\n      return a.depth - b.depth;\n    });\n\n    for(var i = 0; i<this.size(); i++)\n    {\n      this.get(i).display();\n    }\n  };\n\n  //internal use\n  function virtEquals(obj, other) {\n    if (obj === null || other === null) {\n      return (obj === null) && (other === null);\n    }\n    if (typeof (obj) === 'string') {\n      return obj === other;\n    }\n    if (typeof(obj) !== 'object') {\n      return obj === other;\n    }\n    if (obj.equals instanceof Function) {\n      return obj.equals(other);\n    }\n    return obj === other;\n  }\n\n  /**\n   * Collide each member of group against the target using the given collision\n   * type.  Return true if any collision occurred.\n   * Internal use\n   *\n   * @private\n   * @method _groupCollide\n   * @param {!string} type one of 'overlap', 'collide', 'displace', 'bounce'\n   * @param {Object} target Group or Sprite\n   * @param {Function} [callback] on collision.\n   * @return {boolean} True if any collision/overlap occurred\n   */\n  function _groupCollide(type, target, callback) {\n    var didCollide = false;\n    for(var i = 0; i<this.size(); i++)\n      didCollide = this.get(i).AABBops(type, target, callback) || didCollide;\n    return didCollide;\n  }\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occurs.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.overlap(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method overlap\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.overlap = _groupCollide.bind(array, 'overlap');\n\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites in the group will be displaced\n  * by the colliding one to the closest non-overlapping positions.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.collide(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method collide\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.collide = _groupCollide.bind(array, 'collide');\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites in the group will displace\n  * the colliding ones to the closest non-overlapping positions.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occurs.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.displace(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method displace\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.displace = _groupCollide.bind(array, 'displace');\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites will bounce affecting each\n  * other's trajectories depending on their .velocity, .mass and .restitution.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.bounce(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method bounce\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.bounce = _groupCollide.bind(array, 'bounce');\n\n  return array;\n}\n\np5.prototype.Group = Group;\n\n//circle collider - used internally\nfunction CircleCollider(pInst, _center, _radius, _offset) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n\n  var CENTER = p5.prototype.CENTER;\n\n  this.center = _center;\n  this.radius = _radius;\n  this.originalRadius = _radius;\n\n  if(_offset === undefined)\n    this.offset = createVector(0, 0);\n  else\n    this.offset = _offset;\n  this.extents = createVector(_radius*2, _radius*2);\n\n  this.draw = function()\n  {\n    pInst.noFill();\n    pInst.stroke(0, 255, 0);\n    pInst.rectMode(CENTER);\n    pInst.ellipse(this.center.x+this.offset.x, this.center.y+this.offset.y, this.radius*2, this.radius*2);\n  };\n\n  //should be called only for circle vs circle\n  this.overlap = function(other)\n  {\n    //square dist\n    var r = this.radius + other.radius;\n    r *= r;\n    var thisCenterX = this.center.x + this.offset.x;\n    var thisCenterY = this.center.y + this.offset.y;\n    var otherCenterX = other.center.x + other.offset.x;\n    var otherCenterY = other.center.y + other.offset.y;\n    var sqDist = pow(thisCenterX - otherCenterX, 2) + pow(thisCenterY - otherCenterY, 2);\n    return r > sqDist;\n  };\n\n  //should be called only for circle vs circle\n  this.collide = function(other)\n  {\n    if(this.overlap(other)) {\n      var thisCenterX = this.center.x + this.offset.x;\n      var thisCenterY = this.center.y + this.offset.y;\n      var otherCenterX = other.center.x + other.offset.x;\n      var otherCenterY = other.center.y + other.offset.y;\n      var a = pInst.atan2(thisCenterY-otherCenterY, thisCenterX-otherCenterX);\n      var radii = this.radius+other.radius;\n      var intersection = abs(radii - dist(thisCenterX, thisCenterY, otherCenterX, otherCenterY));\n\n      var displacement = createVector(pInst.cos(a)*intersection, pInst.sin(a)*intersection);\n\n      return displacement;\n    } else {\n      return createVector(0, 0);\n    }\n  };\n\n  this.size = function()\n  {\n    return createVector(this.radius*2, this.radius*2);\n  };\n\n  this.left = function()\n  {\n    return this.center.x+this.offset.x - this.radius;\n  };\n\n  this.right = function()\n  {\n    return this.center.x+this.offset.x + this.radius;\n  };\n\n  this.top = function()\n  {\n    return this.center.y+this.offset.y - this.radius;\n  };\n\n  this.bottom = function()\n  {\n    return this.center.y+this.offset.y + this.radius;\n  };\n\n\n\n}\ndefineLazyP5Property('CircleCollider', boundConstructorFactory(CircleCollider));\n\n//axis aligned bounding box - extents are the half sizes - used internally\nfunction AABB(pInst, _center, _extents, _offset) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n\n  var CENTER = p5.prototype.CENTER;\n  var PI = p5.prototype.PI;\n\n  this.center = _center;\n  this.extents = _extents;\n  this.originalExtents = _extents.copy();\n\n  if(_offset === undefined)\n    this.offset = createVector(0, 0);\n  else\n    this.offset = _offset;\n\n  this.min = function()\n  {\n    return createVector(this.center.x+this.offset.x - this.extents.x, this.center.y+this.offset.y - this.extents.y);\n  };\n\n  this.max = function()\n  {\n    return createVector(this.center.x+this.offset.x + this.extents.x, this.center.y+this.offset.y + this.extents.y);\n  };\n\n  this.right = function()\n  {\n    return this.center.x+this.offset.x + this.extents.x/2;\n  };\n\n  this.left = function()\n  {\n    return this.center.x+this.offset.x - this.extents.x/2;\n  };\n\n  this.top = function()\n  {\n    return this.center.y+this.offset.y - this.extents.y/2;\n  };\n\n  this.bottom = function()\n  {\n    return this.center.y+this.offset.y + this.extents.y/2;\n  };\n\n  this.size = function()\n  {\n    return createVector(this.extents.x * 2, this.extents.y * 2);\n  };\n\n  this.rotate = function(r)\n  {\n    //rotate the bbox\n    var t;\n    if (pInst._angleMode === pInst.RADIANS) {\n      t = radians(r);\n    } else {\n      t = r;\n    }\n\n    var w2 = this.extents.x * abs(pInst.cos(t)) + this.extents.y * abs(pInst.sin(t));\n    var h2 = this.extents.x * abs(pInst.sin(t)) + this.extents.y * abs(pInst.cos(t));\n\n    this.extents.x = w2;\n    this.extents.y = h2;\n\n  };\n\n  this.draw = function()\n  {\n    //fill(col);\n    pInst.noFill();\n    pInst.stroke(0, 255, 0);\n    pInst.rectMode(CENTER);\n    pInst.rect(this.center.x+this.offset.x, this.center.y+this.offset.y, this.size().x/2, this.size().y/2);\n  };\n\n  this.overlap = function(other)\n  {\n    //box vs box\n    if(other instanceof AABB)\n    {\n      var md = other.minkowskiDifference(this);\n\n      if (md.min().x <= 0 &&\n          md.max().x >= 0 &&\n          md.min().y <= 0 &&\n          md.max().y >= 0)\n      {\n        return true;\n      }\n      else\n        return false;\n    }\n    //box vs circle\n    else if(other instanceof CircleCollider)\n    {\n\n      //find closest point to the circle on the box\n      var pt = createVector(other.center.x, other.center.y);\n\n      //I don't know what's going o try to trace a line from centers to see\n      if( other.center.x < this.left() )\n        pt.x = this.left();\n      else if( other.center.x > this.right())\n        pt.x = this.right();\n\n      if( other.center.y < this.top() )\n        pt.y = this.top();\n      else if( other.center.y > this.bottom())\n        pt.y = this.bottom();\n\n      var distance = pt.dist(other.center);\n\n      return distance<other.radius;\n    }\n  };\n\n  this.collide = function(other)\n  {\n\n    if(other instanceof AABB)\n    {\n      var md = other.minkowskiDifference(this);\n\n      if (md.min().x <= 0 &&\n          md.max().x >= 0 &&\n          md.min().y <= 0 &&\n          md.max().y >= 0)\n      {\n        var boundsPoint = md.closestPointOnBoundsToPoint(createVector(0, 0));\n\n        return boundsPoint;\n      }\n      else\n        return createVector(0, 0);\n    }\n    //box vs circle\n    else if(other instanceof CircleCollider)\n    {\n\n      //find closest point to the circle on the box\n      var pt = createVector(other.center.x, other.center.y);\n\n      //I don't know what's going o try to trace a line from centers to see\n      if( other.center.x < this.left() )\n        pt.x = this.left();\n      else if( other.center.x > this.right())\n        pt.x = this.right();\n\n      if( other.center.y < this.top() )\n        pt.y = this.top();\n      else if( other.center.y > this.bottom())\n        pt.y = this.bottom();\n\n\n      var distance = pt.dist(other.center);\n      var a;\n\n      if(distance<other.radius)\n      {\n        //reclamp point\n        if(pt.x === other.center.x && pt.y === other.center.y)\n        {\n          var xOverlap = pt.x - this.center.x;\n          var yOverlap = pt.y - this.center.y;\n\n\n          if(abs(xOverlap) < abs(yOverlap))\n          {\n            if(xOverlap > 0 )\n              pt.x = this.right();\n            else\n              pt.x = this.left();\n          }\n          else\n          {\n            if(yOverlap < 0 )\n              pt.y = this.top();\n            else\n              pt.y = this.bottom();\n          }\n\n          a = pInst.atan2(other.center.y-pt.y, other.center.x-pt.x);\n\n          //fix exceptions\n          if(a === 0)\n          {\n            if(pt.x === this.right()) a = PI;\n            if(pt.y === this.top()) a = PI/2;\n            if(pt.y === this.bottom()) a = -PI/2;\n          }\n        }\n        else\n        {\n          //angle bw point and center\n          a = pInst.atan2(pt.y-other.center.y, pt.x-other.center.x);\n          //project the normal (line between pt and center) onto the circle\n        }\n\n        var d = createVector(pt.x-other.center.x, pt.y-other.center.y);\n        var displacement = createVector(pInst.cos(a)*other.radius-d.x, pInst.sin(a)*other.radius-d.y);\n\n        //if(pt.x === other.center.x && pt.y === other.center.y)\n        //displacement = displacement.mult(-1);\n\n        return displacement;\n        //return createVector(0,0);\n      }\n      else\n        return createVector(0, 0);\n    }\n  };\n\n  this.minkowskiDifference = function(other)\n  {\n    var topLeft = this.min().sub(other.max());\n    var fullSize = this.size().add(other.size());\n    return new AABB(pInst, topLeft.add(fullSize.div(2)), fullSize.div(2));\n  };\n\n\n  this.closestPointOnBoundsToPoint = function(point)\n  {\n    // test x first\n    var minDist = abs(point.x - this.min().x);\n    var boundsPoint = createVector(this.min().x, point.y);\n\n    if (abs(this.max().x - point.x) < minDist)\n    {\n      minDist = abs(this.max().x - point.x);\n      boundsPoint = createVector(this.max().x, point.y);\n    }\n\n    if (abs(this.max().y - point.y) < minDist)\n    {\n      minDist = abs(this.max().y - point.y);\n      boundsPoint = createVector(point.x, this.max().y);\n    }\n\n    if (abs(this.min().y - point.y) < minDist)\n    {\n      minDist = abs(this.min.y - point.y);\n      boundsPoint = createVector(point.x, this.min().y);\n    }\n\n    return boundsPoint;\n  };\n\n\n}//end AABB\ndefineLazyP5Property('AABB', boundConstructorFactory(AABB));\n\n\n\n/**\n * An Animation object contains a series of images (p5.Image) that\n * can be displayed sequentially.\n *\n * All files must be png images. You must include the directory from the sketch root,\n * and the extension .png\n *\n * A sprite can have multiple labeled animations, see Sprite.addAnimation\n * and Sprite.changeAnimation, however an animation can be used independently.\n *\n * An animation can be created either by passing a series of file names,\n * no matter how many or by passing the first and the last file name\n * of a numbered sequence.\n * p5.play will try to detect the sequence pattern.\n *\n * For example if the given filenames are\n * \"data/file0001.png\" and \"data/file0005.png\" the images\n * \"data/file0003.png\" and \"data/file0004.png\" will be loaded as well.\n *\n * @example\n *     var sequenceAnimation;\n *     var glitch;\n *\n *     function preload() {\n *       sequenceAnimation = loadAnimation(\"data/walking0001.png\", \"data/walking0005.png\");\n *       glitch = loadAnimation(\"data/dog.png\", \"data/horse.png\", \"data/cat.png\", \"data/snake.png\");\n *     }\n *\n *     function setup() {\n *       createCanvas(800, 600);\n *     }\n *\n *     function draw() {\n *       background(0);\n *       animation(sequenceAnimation, 100, 100);\n *       animation(glitch, 200, 100);\n *     }\n *\n * @class Animation\n * @constructor\n * @param {String} fileName1 First file in a sequence OR first image file\n * @param {String} fileName2 Last file in a sequence OR second image file\n * @param {String} [...fileNameN] Any number of image files after the first two\n */\nfunction Animation(pInst) {\n  var frameArguments = Array.prototype.slice.call(arguments, 1);\n  var i;\n\n  var CENTER = p5.prototype.CENTER;\n\n  /**\n  * Array of frames (p5.Image)\n  *\n  * @property images\n  * @type {Array}\n  */\n  this.images = [];\n\n  var frame = 0;\n  var cycles = 0;\n  var targetFrame = -1;\n\n  this.offX = 0;\n  this.offY = 0;\n\n  /**\n  * Delay between frames in number of draw cycles.\n  * If set to 4 the framerate of the animation would be the\n  * sketch framerate divided by 4 (60fps = 15fps)\n  *\n  * @property frameDelay\n  * @type {Number}\n  * @default 4\n  */\n  this.frameDelay = 4;\n\n  /**\n  * True if the animation is currently playing.\n  *\n  * @property playing\n  * @type {Boolean}\n  * @default true\n  */\n  this.playing = true;\n\n  /**\n  * Animation visibility.\n  *\n  * @property visible\n  * @type {Boolean}\n  * @default true\n  */\n  this.visible = true;\n\n  /**\n  * If set to false the animation will stop after reaching the last frame\n  *\n  * @property looping\n  * @type {Boolean}\n  * @default true\n  */\n  this.looping = true;\n\n  /**\n  * True if frame changed during the last draw cycle\n  *\n  * @property frameChanged\n  * @type {Boolean}\n  */\n  this.frameChanged = false;\n\n  //is the collider defined manually or defined\n  //by the current frame size\n  this.imageCollider = false;\n\n\n  //sequence mode\n  if(frameArguments.length === 2 && typeof frameArguments[0] === 'string' && typeof frameArguments[1] === 'string')\n  {\n    var from = frameArguments[0];\n    var to = frameArguments[1];\n\n    //print(\"sequence mode \"+from+\" -> \"+to);\n\n    //make sure the extensions are fine\n    var ext1 = from.substring(from.length-4, from.length);\n    if(ext1 !== '.png')\n    {\n      pInst.print('Animation error: you need to use .png files (filename '+from+')');\n      from = -1;\n    }\n\n    var ext2 = to.substring(to.length-4, to.length);\n    if(ext2 !== '.png')\n    {\n      pInst.print('Animation error: you need to use .png files (filename '+to+')');\n      to = -1;\n    }\n\n    //extensions are fine\n    if(from !== -1 && to !== -1)\n    {\n      var digits1 = 0;\n      var digits2 = 0;\n\n      //skip extension work backwards to find the numbers\n      for (i = from.length-5; i >= 0; i--) {\n        if(from.charAt(i) >= '0' && from.charAt(i) <= '9')\n          digits1++;\n      }\n\n      for (i = to.length-5; i >= 0; i--) {\n        if(to.charAt(i) >= '0' && to.charAt(i) <= '9')\n          digits2++;\n      }\n\n      var prefix1 = from.substring(0, from.length-(4+digits1));\n      var prefix2 = to.substring(0, to.length-(4+digits2) );\n\n      // Our numbers likely have leading zeroes, which means that some\n      // browsers (e.g., PhantomJS) will interpret them as base 8 (octal)\n      // instead of decimal. To fix this, we'll explicity tell parseInt to\n      // use a base of 10 (decimal). For more details on this issue, see\n      // http://stackoverflow.com/a/8763427/2422398.\n      var number1 = parseInt(from.substring(from.length-(4+digits1), from.length-4), 10);\n      var number2 = parseInt(to.substring(to.length-(4+digits2), to.length-4), 10);\n\n      //swap if inverted\n      if(number2<number1)\n      {\n        var t = number2;\n        number2 = number1;\n        number1 = t;\n      }\n\n      //two different frames\n      if(prefix1 !== prefix2 )\n      {\n        //print(\"2 separate images\");\n        this.images.push(pInst.loadImage(from));\n        this.images.push(pInst.loadImage(to));\n      }\n      //same digits: case img0001, img0002\n      else\n      {\n        var fileName;\n        if(digits1 === digits2)\n        {\n\n          //load all images\n          for (i = number1; i <= number2; i++) {\n            // Use nf() to number format 'i' into four digits\n            fileName = prefix1 + pInst.nf(i, digits1) + '.png';\n            this.images.push(pInst.loadImage(fileName));\n\n          }\n\n        }\n        else //case: case img1, img2\n        {\n          //print(\"from \"+prefix1+\" \"+number1 +\" to \"+number2);\n          for (i = number1; i <= number2; i++) {\n            // Use nf() to number format 'i' into four digits\n            fileName = prefix1 + i + '.png';\n            this.images.push(pInst.loadImage(fileName));\n\n          }\n\n        }\n      }\n\n    }//end no ext error\n\n  }//end sequence mode\n  // Sprite sheet mode\n  else if (frameArguments.length === 1 && (frameArguments[0] instanceof SpriteSheet))\n  {\n    this.spriteSheet = frameArguments[0];\n    this.images = this.spriteSheet.frames;\n  }\n  else if(frameArguments.length !== 0)//arbitrary list of images\n  {\n    //print(\"Animation arbitrary mode\");\n    for (i = 0; i < frameArguments.length; i++) {\n      //print(\"loading \"+fileNames[i]);\n      if(frameArguments[i] instanceof p5.Image)\n        this.images.push(frameArguments[i]);\n      else\n        this.images.push(pInst.loadImage(frameArguments[i]));\n    }\n  }\n\n  /**\n  * Objects are passed by reference so to have different sprites\n  * using the same animation you need to clone it.\n  *\n  * @method clone\n  * @return {Animation} A clone of the current animation\n  */\n  this.clone = function() {\n    var myClone = new Animation(pInst); //empty\n    myClone.images = [];\n\n    if (this.spriteSheet) {\n      myClone.spriteSheet = this.spriteSheet.clone();\n    }\n    myClone.images = this.images.slice();\n\n    myClone.offX = this.offX;\n    myClone.offY = this.offY;\n    myClone.frameDelay = this.frameDelay;\n    myClone.playing = this.playing;\n    myClone.looping = this.looping;\n\n    return myClone;\n  };\n\n  /**\n   * Draws the animation at coordinate x and y.\n   * Updates the frames automatically.\n   *\n   * @method draw\n   * @param {Number} x x coordinate\n   * @param {Number} y y coordinate\n   * @param {Number} [r=0] rotation\n   */\n  this.draw = function(x, y, r) {\n    this.xpos = x;\n    this.ypos = y;\n    this.rotation = r || 0;\n\n    if (this.visible)\n    {\n\n      //only connection with the sprite class\n      //if animation is used independently draw and update are the sam\n      if(!this.isSpriteAnimation)\n        this.update();\n\n      //this.currentImageMode = g.imageMode;\n      pInst.push();\n      pInst.imageMode(CENTER);\n\n      pInst.translate(this.xpos, this.ypos);\n      if (pInst._angleMode === pInst.RADIANS) {\n        pInst.rotate(radians(this.rotation));\n      } else {\n        pInst.rotate(this.rotation);\n      }\n\n      if(this.images[frame] !== undefined)\n      {\n        if (this.spriteSheet) {\n          var frame_info = this.images[frame].frame;\n          pInst.image(this.spriteSheet.image, this.offX, this.offY, frame_info.width, frame_info.height,\n            frame_info.x, frame_info.y, frame_info.width, frame_info.height);\n        } else {\n          pInst.image(this.images[frame], this.offX, this.offY);\n        }\n      }\n      else\n      {\n        pInst.print('Warning undefined frame '+frame);\n        //this.isActive = false;\n      }\n\n      pInst.pop();\n    }\n  };\n\n  //called by draw\n  this.update = function() {\n    cycles++;\n    var previousFrame = frame;\n    this.frameChanged = false;\n\n\n    //go to frame\n    if(this.images.length === 1)\n    {\n      this.playing = false;\n      frame = 0;\n    }\n\n    if ( this.playing && cycles%this.frameDelay === 0)\n    {\n      //going to target frame up\n      if(targetFrame>frame && targetFrame !== -1)\n      {\n        frame++;\n      }\n      //going to taget frame down\n      else if(targetFrame<frame && targetFrame !== -1)\n      {\n        frame--;\n      }\n      else if(targetFrame === frame && targetFrame !== -1)\n      {\n        this.playing=false;\n      }\n      else if (this.looping) //advance frame\n      {\n        //if next frame is too high\n        if (frame>=this.images.length-1)\n          frame = 0;\n        else\n          frame++;\n      } else\n      {\n        //if next frame is too high\n        if (frame<this.images.length-1)\n          frame++;\n      }\n    }\n    if (frame == this.images.length - 1 && this.onComplete != undefined)\n      this.onComplete(); //fire when on last frame\n\n    if(previousFrame !== frame)\n      this.frameChanged = true;\n\n    \n\n  };//end update\n\n  /**\n  * Plays the animation.\n  *\n  * @method play\n  */\n  this.play = function() {\n    this.playing = true;\n    targetFrame = -1;\n  };\n\n  /**\n  * Stops the animation.\n  *\n  * @method stop\n  */\n  this.stop = function(){\n    this.playing = false;\n  };\n\n  /**\n  * Rewinds the animation to the first frame.\n  *\n  * @method rewind\n  */\n  this.rewind = function() {\n    frame = 0;\n  };\n\n  /**\n  * fire when animation ends\n  *\n  * @method onComplete\n  * @return {Animation} \n  */\n  this.onComplete = function () {\n    return undefined;\n  };\n\n  /**\n  * Changes the current frame.\n  *\n  * @method changeFrame\n  * @param {Number} frame Frame number (starts from 0).\n  */\n  this.changeFrame = function(f) {\n    if (f<this.images.length)\n      frame = f;\n    else\n      frame = this.images.length - 1;\n\n    targetFrame = -1;\n    //this.playing = false;\n  };\n\n   /**\n  * Goes to the next frame and stops.\n  *\n  * @method nextFrame\n  */\n  this.nextFrame = function() {\n\n    if (frame<this.images.length-1)\n      frame = frame+1;\n    else if(this.looping)\n      frame = 0;\n\n    targetFrame = -1;\n    this.playing = false;\n  };\n\n   /**\n  * Goes to the previous frame and stops.\n  *\n  * @method previousFrame\n  */\n  this.previousFrame = function() {\n\n    if (frame>0)\n      frame = frame-1;\n    else if(this.looping)\n      frame = this.images.length-1;\n\n    targetFrame = -1;\n    this.playing = false;\n  };\n\n  /**\n  * Plays the animation forward or backward toward a target frame.\n  *\n  * @method goToFrame\n  * @param {Number} toFrame Frame number destination (starts from 0)\n  */\n  this.goToFrame = function(toFrame) {\n    if(toFrame < 0 || toFrame >= this.images.length) {\n      return;\n    }\n\n    // targetFrame gets used by the update() method to decide what frame to\n    // select next.  When it's not being used it gets set to -1.\n    targetFrame = toFrame;\n\n    if(targetFrame !== frame) {\n      this.playing = true;\n    }\n  };\n\n  /**\n  * Returns the current frame number.\n  *\n  * @method getFrame\n  * @return {Number} Current frame (starts from 0)\n  */\n  this.getFrame = function() {\n    return frame;\n  };\n\n  /**\n  * Returns the last frame number.\n  *\n  * @method getLastFrame\n  * @return {Number} Last frame number (starts from 0)\n  */\n  this.getLastFrame = function() {\n    return this.images.length-1;\n  };\n\n  /**\n  * Returns the current frame image as p5.Image.\n  *\n  * @method getFrameImage\n  * @return {p5.Image} Current frame image\n  */\n  this.getFrameImage = function() {\n    return this.images[frame];\n  };\n\n  /**\n  * Returns the frame image at the specified frame number.\n  *\n  * @method getImageAt\n  * @param {Number} frame Frame number\n  * @return {p5.Image} Frame image\n  */\n  this.getImageAt = function(f) {\n    return this.images[f];\n  };\n\n  /**\n  * Returns the current frame width in pixels.\n  * If there is no image loaded, returns 1.\n  *\n  * @method getWidth\n  * @return {Number} Frame width\n  */\n  this.getWidth = function() {\n    if (this.images[frame] instanceof p5.Image) {\n      return this.images[frame].width;\n    } else if (this.images[frame]) {\n      // Special case: Animation-from-spritesheet treats its images array differently.\n      return this.images[frame].frame.width;\n    } else {\n      return 1;\n    }\n  };\n\n  /**\n  * Returns the current frame height in pixels.\n  * If there is no image loaded, returns 1.\n  *\n  * @method getHeight\n  * @return {Number} Frame height\n  */\n  this.getHeight = function() {\n    if (this.images[frame] instanceof p5.Image) {\n      return this.images[frame].height;\n    } else if (this.images[frame]) {\n      // Special case: Animation-from-spritesheet treats its images array differently.\n      return this.images[frame].frame.height;\n    } else {\n      return 1;\n    }\n  };\n\n}\n\ndefineLazyP5Property('Animation', boundConstructorFactory(Animation));\n\n/**\n * Represents a sprite sheet and all it's frames.  To be used with Animation,\n * or static drawing single frames.\n *\n *  There are two different ways to load a SpriteSheet\n *\n * 1. Given width, height that will be used for every frame and the\n *    number of frames to cycle through. The sprite sheet must have a\n *    uniform grid with consistent rows and columns.\n *\n * 2. Given an array of frame objects that define the position and\n *    dimensions of each frame.  This is Flexible because you can use\n *    sprite sheets that don't have uniform rows and columns.\n *\n * @example\n *     // Method 1 - Using width, height for each frame and number of frames\n *     explode_sprite_sheet = loadSpriteSheet('assets/explode_sprite_sheet.png', 171, 158, 11);\n *\n *     // Method 2 - Using an array of objects that define each frame\n *     var player_frames = loadJSON('assets/tiles.json');\n *     player_sprite_sheet = loadSpriteSheet('assets/player_spritesheet.png', player_frames);\n *\n * @class SpriteSheet\n * @constructor\n * @param image String image path or p5.Image object\n */\nfunction SpriteSheet(pInst) {\n  var spriteSheetArgs = Array.prototype.slice.call(arguments, 1);\n\n  this.image = null;\n  this.frames = [];\n  this.frame_width = 0;\n  this.frame_height = 0;\n  this.num_frames = 0;\n\n  /**\n   * Generate the frames data for this sprite sheet baesd on user params\n   * @private\n   * @method _generateSheetFrames\n   */\n  this._generateSheetFrames = function() {\n    var sX = 0, sY = 0;\n    for (var i = 0; i < this.num_frames; i++) {\n      this.frames.push(\n        {\n          'name': i,\n          'frame': {\n            'x': sX,\n            'y': sY,\n            'width': this.frame_width,\n            'height': this.frame_height\n          }\n        });\n      sX += this.frame_width;\n      if (sX >= this.image.width) {\n        sX = 0;\n        sY += this.frame_height;\n        if (sY >= this.image.height) {\n          sY = 0;\n        }\n      }\n    }\n  };\n\n  if (spriteSheetArgs.length === 2 && Array.isArray(spriteSheetArgs[1])) {\n    this.frames = spriteSheetArgs[1];\n    this.num_frames = this.frames.length;\n  } else if (spriteSheetArgs.length === 4 &&\n    (typeof spriteSheetArgs[1] === 'number') &&\n    (typeof spriteSheetArgs[2] === 'number') &&\n    (typeof spriteSheetArgs[3] === 'number')) {\n    this.frame_width = spriteSheetArgs[1];\n    this.frame_height = spriteSheetArgs[2];\n    this.num_frames = spriteSheetArgs[3];\n  }\n\n  if(spriteSheetArgs[0] instanceof p5.Image) {\n    this.image = spriteSheetArgs[0];\n    if (spriteSheetArgs.length === 4) {\n      this._generateSheetFrames();\n    }\n  } else {\n    if (spriteSheetArgs.length === 2) {\n      this.image = pInst.loadImage(spriteSheetArgs[0]);\n    } else if (spriteSheetArgs.length === 4) {\n      this.image = pInst.loadImage(spriteSheetArgs[0], this._generateSheetFrames.bind(this));\n    }\n  }\n\n  /**\n   * Draws a specific frame to the canvas.\n   * @param frame_name  Can either be a string name, or a numeric index.\n   * @param x   x position to draw the frame at\n   * @param y   y position to draw the frame at\n   * @param [width]   optional width to draw the frame\n   * @param [height]  optional height to draw the frame\n   * @method drawFrame\n   */\n  this.drawFrame = function(frame_name, x, y, width, height) {\n    var frameToDraw;\n    if (typeof frame_name === 'number') {\n      frameToDraw = this.frames[frame_name].frame;\n    } else {\n      for (var i = 0; i < this.frames.length; i++) {\n        if (this.frames[i].name === frame_name) {\n          frameToDraw = this.frames[i].frame;\n          break;\n        }\n      }\n    }\n    var dWidth = width || frameToDraw.width;\n    var dHeight = height || frameToDraw.height;\n    pInst.image(this.image, frameToDraw.x, frameToDraw.y,\n      frameToDraw.width, frameToDraw.height, x, y, dWidth, dHeight);\n  };\n\n  /**\n   * Objects are passed by reference so to have different sprites\n   * using the same animation you need to clone it.\n   *\n   * @method clone\n   * @return {SpriteSheet} A clone of the current SpriteSheet\n   */\n  this.clone = function() {\n    var myClone = new SpriteSheet(pInst); //empty\n\n    // Deep clone the frames by value not reference\n    for(var i = 0; i < this.frames.length; i++) {\n      var frame = this.frames[i].frame;\n      var cloneFrame = {\n        'name':frame.name,\n        'frame': {\n          'x':frame.x,\n          'y':frame.y,\n          'width':frame.width,\n          'height':frame.height\n        }\n      };\n      myClone.frames.push(cloneFrame);\n    }\n\n    // clone other fields\n    myClone.image = this.image;\n    myClone.frame_width = this.frame_width;\n    myClone.frame_height = this.frame_height;\n    myClone.num_frames = this.num_frames;\n\n    return myClone;\n  };\n}\n\ndefineLazyP5Property('SpriteSheet', boundConstructorFactory(SpriteSheet));\n\n//general constructor to be able to feed arguments as array\nfunction construct(constructor, args) {\n  function F() {\n    return constructor.apply(this, args);\n  }\n  F.prototype = constructor.prototype;\n  return new F();\n}\n\n\n\n\n\n/*\n * Javascript Quadtree\n * based on\n * https://github.com/timohausmann/quadtree-js/\n * Copyright © 2012 Timo Hausmann\n*/\n\nfunction Quadtree( bounds, max_objects, max_levels, level ) {\n\n  this.active = true;\n  this.max_objects\t= max_objects || 10;\n  this.max_levels\t\t= max_levels || 4;\n\n  this.level \t\t\t= level || 0;\n  this.bounds \t\t= bounds;\n\n  this.objects \t\t= [];\n  this.object_refs\t= [];\n  this.nodes \t\t\t= [];\n}\n\nQuadtree.prototype.updateBounds = function() {\n\n  //find maximum area\n  var objects = this.getAll();\n  var x = 10000;\n  var y = 10000;\n  var w = -10000;\n  var h = -10000;\n\n  for( var i=0; i < objects.length; i++ )\n    {\n      if(objects[i].position.x < x)\n        x = objects[i].position.x;\n      if(objects[i].position.y < y)\n        y = objects[i].position.y;\n      if(objects[i].position.x > w)\n        w = objects[i].position.x;\n      if(objects[i].position.y > h)\n        h = objects[i].position.y;\n    }\n\n\n  this.bounds = {\n    x:x,\n    y:y,\n    width:w,\n    height:h\n  };\n  //print(this.bounds);\n};\n\n/*\n\t * Split the node into 4 subnodes\n\t */\nQuadtree.prototype.split = function() {\n\n  var nextLevel\t= this.level + 1,\n      subWidth\t= Math.round( this.bounds.width / 2 ),\n      subHeight \t= Math.round( this.bounds.height / 2 ),\n      x \t\t\t= Math.round( this.bounds.x ),\n      y \t\t\t= Math.round( this.bounds.y );\n\n  //top right node\n  this.nodes[0] = new Quadtree({\n    x\t: x + subWidth,\n    y\t: y,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //top left node\n  this.nodes[1] = new Quadtree({\n    x\t: x,\n    y\t: y,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //bottom left node\n  this.nodes[2] = new Quadtree({\n    x\t: x,\n    y\t: y + subHeight,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //bottom right node\n  this.nodes[3] = new Quadtree({\n    x\t: x + subWidth,\n    y\t: y + subHeight,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n};\n\n\n/*\n\t * Determine the quadtrant for an area in this node\n\t */\nQuadtree.prototype.getIndex = function( pRect ) {\n  if(!pRect.collider)\n    return -1;\n  else\n  {\n    var index \t\t\t\t= -1,\n        verticalMidpoint \t= this.bounds.x + (this.bounds.width / 2),\n        horizontalMidpoint \t= this.bounds.y + (this.bounds.height / 2),\n\n        //pRect can completely fit within the top quadrants\n        topQuadrant = (pRect.collider.top() < horizontalMidpoint && pRect.collider.top() + pRect.collider.size().y < horizontalMidpoint),\n\n        //pRect can completely fit within the bottom quadrants\n        bottomQuadrant = (pRect.collider.top() > horizontalMidpoint);\n\n    //pRect can completely fit within the left quadrants\n    if( pRect.collider.left() < verticalMidpoint && pRect.collider.left() + pRect.collider.size().x < verticalMidpoint ) {\n      if( topQuadrant ) {\n        index = 1;\n      } else if( bottomQuadrant ) {\n        index = 2;\n      }\n\n      //pRect can completely fit within the right quadrants\n    } else if( pRect.collider.left() > verticalMidpoint ) {\n      if( topQuadrant ) {\n        index = 0;\n      } else if( bottomQuadrant ) {\n        index = 3;\n      }\n    }\n\n    return index;\n  }\n};\n\n\n/*\n\t * Insert an object into the node. If the node\n\t * exceeds the capacity, it will split and add all\n\t * objects to their corresponding subnodes.\n\t */\nQuadtree.prototype.insert = function( obj ) {\n  //avoid double insertion\n  if(this.objects.indexOf(obj) === -1)\n  {\n\n    var i = 0,\n        index;\n\n    //if we have subnodes ...\n    if( typeof this.nodes[0] !== 'undefined' ) {\n      index = this.getIndex( obj );\n\n      if( index !== -1 ) {\n        this.nodes[index].insert( obj );\n        return;\n      }\n    }\n\n    this.objects.push( obj );\n\n    if( this.objects.length > this.max_objects && this.level < this.max_levels ) {\n\n      //split if we don't already have subnodes\n      if( typeof this.nodes[0] === 'undefined' ) {\n        this.split();\n      }\n\n      //add all objects to there corresponding subnodes\n      while( i < this.objects.length ) {\n\n        index = this.getIndex( this.objects[i] );\n\n        if( index !== -1 ) {\n          this.nodes[index].insert( this.objects.splice(i, 1)[0] );\n        } else {\n          i = i + 1;\n        }\n      }\n    }\n  }\n};\n\n\n/*\n\t * Return all objects that could collide with a given area\n\t */\nQuadtree.prototype.retrieve = function( pRect ) {\n\n\n  var index = this.getIndex( pRect ),\n      returnObjects = this.objects;\n\n  //if we have subnodes ...\n  if( typeof this.nodes[0] !== 'undefined' ) {\n\n    //if pRect fits into a subnode ..\n    if( index !== -1 ) {\n      returnObjects = returnObjects.concat( this.nodes[index].retrieve( pRect ) );\n\n      //if pRect does not fit into a subnode, check it against all subnodes\n    } else {\n      for( var i=0; i < this.nodes.length; i=i+1 ) {\n        returnObjects = returnObjects.concat( this.nodes[i].retrieve( pRect ) );\n      }\n    }\n  }\n\n  return returnObjects;\n};\n\nQuadtree.prototype.retrieveFromGroup = function( pRect, group ) {\n\n  var results = [];\n  var candidates = this.retrieve(pRect);\n\n  for(var i=0; i<candidates.length; i++)\n    if(group.contains(candidates[i]))\n    results.push(candidates[i]);\n\n  return results;\n};\n\n/*\n\t * Get all objects stored in the quadtree\n\t */\nQuadtree.prototype.getAll = function() {\n\n  var objects = this.objects;\n\n  for( var i=0; i < this.nodes.length; i=i+1 ) {\n    objects = objects.concat( this.nodes[i].getAll() );\n  }\n\n  return objects;\n};\n\n\n/*\n\t * Get the node in which a certain object is stored\n\t */\nQuadtree.prototype.getObjectNode = function( obj ) {\n\n  var index;\n\n  //if there are no subnodes, object must be here\n  if( !this.nodes.length ) {\n\n    return this;\n\n  } else {\n\n    index = this.getIndex( obj );\n\n    //if the object does not fit into a subnode, it must be here\n    if( index === -1 ) {\n\n      return this;\n\n      //if it fits into a subnode, continue deeper search there\n    } else {\n      var node = this.nodes[index].getObjectNode( obj );\n      if( node ) return node;\n    }\n  }\n\n  return false;\n};\n\n\n/*\n\t * Removes a specific object from the quadtree\n\t * Does not delete empty subnodes. See cleanup-function\n\t */\nQuadtree.prototype.removeObject = function( obj ) {\n\n  var node = this.getObjectNode( obj ),\n      index = node.objects.indexOf( obj );\n\n  if( index === -1 ) return false;\n\n  node.objects.splice( index, 1);\n};\n\n\n/*\n\t * Clear the quadtree and delete all objects\n\t */\nQuadtree.prototype.clear = function() {\n\n  this.objects = [];\n\n  if( !this.nodes.length ) return;\n\n  for( var i=0; i < this.nodes.length; i=i+1 ) {\n\n    this.nodes[i].clear();\n  }\n\n  this.nodes = [];\n};\n\n\n/*\n\t * Clean up the quadtree\n\t * Like clear, but objects won't be deleted but re-inserted\n\t */\nQuadtree.prototype.cleanup = function() {\n\n  var objects = this.getAll();\n\n  this.clear();\n\n  for( var i=0; i < objects.length; i++ ) {\n    this.insert( objects[i] );\n  }\n};\n\n\n\nfunction updateTree() {\n  if(this.quadTree.active)\n  {\n    this.quadTree.updateBounds();\n    this.quadTree.cleanup();\n  }\n}\n\n//keyboard input\np5.prototype.registerMethod('pre', p5.prototype.readPresses);\n\n//automatic sprite update\np5.prototype.registerMethod('pre', p5.prototype.updateSprites);\n\n//quadtree update\np5.prototype.registerMethod('post', updateTree);\n\n//camera push and pop\np5.prototype.registerMethod('pre', cameraPush);\np5.prototype.registerMethod('post', cameraPop);\n\n//deltaTime\n//p5.prototype.registerMethod('pre', updateDelta);\n\n/**\n * Log a warning message to the host console, using native `console.warn`\n * if it is available but falling back on `console.log` if not.  If no\n * console is available, this method will fail silently.\n * @method _warn\n * @param {!string} message\n * @private\n */\np5.prototype._warn = function(message) {\n  var console = window.console;\n\n  if(console)\n  {\n    if('function' === typeof console.warn)\n    {\n      console.warn(message);\n    }\n    else if('function' === typeof console.log)\n    {\n      console.log('Warning: ' + message);\n    }\n  }\n};\n\n}));\n",
        "children": [],
        "fileType": "file",
        "_id": "5f9726fac975f3f22d7e5595",
        "isSelectedFile": false,
        "createdAt": "2020-10-27T03:44:39.461Z",
        "updatedAt": "2020-10-27T03:44:39.461Z",
        "id": "5f9726fac975f3f22d7e5595"
      },
      {
        "name": "bmg1_bk1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f972ff42b9ed60024464b27",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/796dd2e9-4dbf-4a74-af4d-d174d66f236b.png",
        "updatedAt": "2020-10-27T03:44:39.461Z",
        "createdAt": "2020-10-27T03:44:39.461Z",
        "id": "5f972ff42b9ed60024464b27"
      },
      {
        "name": "bmg1_fr1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f972ff4485db300241d2846",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/958c9b40-66d4-4d09-a570-b16bf4d3f128.png",
        "updatedAt": "2020-10-27T03:44:39.461Z",
        "createdAt": "2020-10-27T03:44:39.461Z",
        "id": "5f972ff4485db300241d2846"
      },
      {
        "name": "bmg1_bk2.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f972ff52d49600024a348ac",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/245489a2-2b74-4c4c-a992-6b1556400531.png",
        "updatedAt": "2020-10-27T03:44:39.461Z",
        "createdAt": "2020-10-27T03:44:39.461Z",
        "id": "5f972ff52d49600024a348ac"
      },
      {
        "name": "bmg1_fr2.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f972ff5da99fb002418942b",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/c0606636-789b-4106-b892-4e1fc38c7cad.png",
        "updatedAt": "2020-10-27T03:44:39.461Z",
        "createdAt": "2020-10-27T03:44:39.461Z",
        "id": "5f972ff5da99fb002418942b"
      },
      {
        "name": "bmg1_lf1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f972ff62d49600024a348ad",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/b1bd478f-6919-425a-b694-df2ec9d099ab.png",
        "updatedAt": "2020-10-27T03:44:39.461Z",
        "createdAt": "2020-10-27T03:44:39.461Z",
        "id": "5f972ff62d49600024a348ad"
      },
      {
        "name": "bmg1_lf2.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f972ff6da99fb0024189431",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/00956806-b12c-4730-aac1-4c7578402102.png",
        "updatedAt": "2020-10-27T03:44:39.461Z",
        "createdAt": "2020-10-27T03:44:39.461Z",
        "id": "5f972ff6da99fb0024189431"
      },
      {
        "name": "bmg1_rt1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f972ff72d49600024a348ae",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/efda2840-732f-4d81-b21b-f63f7d4dc98c.png",
        "updatedAt": "2020-10-27T03:44:39.461Z",
        "createdAt": "2020-10-27T03:44:39.461Z",
        "id": "5f972ff72d49600024a348ae"
      },
      {
        "name": "bmg1_rt2.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "5f972ff7da99fb0024189432",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/7239ca80-f01d-4512-bbbd-7e063b8e4f41.png",
        "updatedAt": "2020-10-27T03:44:39.461Z",
        "createdAt": "2020-10-27T03:44:39.461Z",
        "id": "5f972ff7da99fb0024189432"
      }
    ],
    "createdAt": "2020-10-26T19:43:58.950Z",
    "id": "ibK2dSEnp"
  },
  {
    "name": "Squares - Happy Accident",
    "_id": "zYvvzBv-a",
    "updatedAt": "2021-11-15T13:54:05.173Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "619260e74f5cdf32b88e8ea3",
          "619260e74f5cdf32b88e8ea2",
          "6192622a4f5cdf32b88e8ea6",
          "619260e74f5cdf32b88e8ea4"
        ],
        "fileType": "folder",
        "_id": "619260e74f5cdf32b88e8ea5",
        "isSelectedFile": false,
        "createdAt": "2021-11-15T13:54:05.173Z",
        "updatedAt": "2021-11-15T13:54:05.173Z",
        "id": "619260e74f5cdf32b88e8ea5"
      },
      {
        "name": "sketch.js",
        "content": "let square1;\n\nlet squares = [];\n\nlet gridSize = 2;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  let gridWidth = width / gridSize;\n  let gridHeight = height / gridSize;\n  \n  for (let i=0; i < width; i += gridWidth) {\n    for (let j=0; j < height; j += gridHeight) {\n      let sq = new Square(i, j, gridWidth, gridHeight);\n      squares.push(sq);\n    }\n  }\n}\n\nfunction draw() {\n  \n  for(let i = 0; i < squares.length; i++) {\n    let sq = squares[i];\n    sq.render();\n  }\n    \n}",
        "children": [],
        "fileType": "file",
        "_id": "619260e74f5cdf32b88e8ea2",
        "isSelectedFile": false,
        "createdAt": "2021-11-15T13:54:05.173Z",
        "updatedAt": "2021-11-15T13:54:05.173Z",
        "id": "619260e74f5cdf32b88e8ea2"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"square.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "619260e74f5cdf32b88e8ea3",
        "isSelectedFile": false,
        "createdAt": "2021-11-15T13:54:05.173Z",
        "updatedAt": "2021-11-15T13:54:05.173Z",
        "id": "619260e74f5cdf32b88e8ea3"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "619260e74f5cdf32b88e8ea4",
        "isSelectedFile": false,
        "createdAt": "2021-11-15T13:54:05.173Z",
        "updatedAt": "2021-11-15T13:54:05.173Z",
        "id": "619260e74f5cdf32b88e8ea4"
      },
      {
        "name": "square.js",
        "content": "class Square {\n  constructor(x, y, canvasWidth, canvasHeight) {\n    this.x = x;\n    this.y = y;\n    this.canvasWidth = canvasWidth;\n    this.canvasHeight = canvasHeight;\n    this.width = random(100,300);\n    this.height = random(100,300);\n    this.color = color(random(255), random(255), random(255));\n    this.bgColor = color(random(255), random(255), random(255));\n  }\n  \n  render() {\n    noStroke();\n    push();\n    translate(this.x, this.y);\n    fill(this.bgColor);\n    rectMode(CORNER);\n    rect(0, 0, this.canvasWidth, this.canvasHeight);\n    translate(this.canvasWidth / 2, this.canvasHeight / 2);\n    rectMode(CENTER);\n    fill(this.color);\n    rect(0, 0, this.width, this.height);\n    pop();\n  }\n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "6192622a4f5cdf32b88e8ea6",
        "isSelectedFile": true,
        "createdAt": "2021-11-15T13:54:05.173Z",
        "updatedAt": "2021-11-15T13:54:05.173Z",
        "id": "6192622a4f5cdf32b88e8ea6"
      }
    ],
    "createdAt": "2021-11-15T13:53:16.612Z",
    "id": "zYvvzBv-a"
  },
  {
    "name": "surveillance",
    "_id": "MRkqpXM2e",
    "updatedAt": "2023-03-22T18:03:24.523Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64084e1cb171cc35049d726f",
          "64084e1cb171cc35049d726e",
          "64084e1cb171cc35049d7270"
        ],
        "fileType": "folder",
        "_id": "64084e1cb171cc35049d7271",
        "createdAt": "2023-03-22T18:03:24.523Z",
        "updatedAt": "2023-03-22T18:03:24.523Z",
        "isSelectedFile": false,
        "id": "64084e1cb171cc35049d7271"
      },
      {
        "name": "sketch.js",
        "content": "// by ktorn\n//\n// inspired by https://twitter.com/wikileaks/status/1633384559386722304\n\n\n\nlet circles = [];\nlet speedMult = 0.3;\n\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  circles.push( {x: -50, y: 600, size: 500, xspeed: 1, yspeed: -2.5});\n  circles.push( {x: -50, y: -250, size: 500, xspeed: 2.5, yspeed: 2.2});\n  \n  \n  stroke(255)\n  strokeWeight(2)\n  noFill();\n}\n\nfunction draw() {\n  background(0);\n  \n  for (let i = 0; i < circles.length; i++) {\n    \n    let c = circles[i];\n    \n    // for (let s = 400; s < c.size; s += 20) {\n\n      circle(c.x, c.y, c.size);\n\n    // }\n    \n    c.x += c.xspeed * speedMult;\n    c.y += c.yspeed * speedMult;\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "64084e1cb171cc35049d726e",
        "isSelectedFile": true,
        "createdAt": "2023-03-22T18:03:24.523Z",
        "updatedAt": "2023-03-22T18:03:24.523Z",
        "id": "64084e1cb171cc35049d726e"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64084e1cb171cc35049d726f",
        "createdAt": "2023-03-22T18:03:24.523Z",
        "updatedAt": "2023-03-22T18:03:24.523Z",
        "isSelectedFile": false,
        "id": "64084e1cb171cc35049d726f"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64084e1cb171cc35049d7270",
        "createdAt": "2023-03-22T18:03:24.523Z",
        "updatedAt": "2023-03-22T18:03:24.523Z",
        "isSelectedFile": false,
        "id": "64084e1cb171cc35049d7270"
      }
    ],
    "createdAt": "2023-03-08T09:02:53.782Z",
    "id": "MRkqpXM2e"
  },
  {
    "name": "T05: Beat detection copy",
    "_id": "fwdpif6Vz",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61784ef0a35365371abfea11",
          "61784ef0a35365371abfea13",
          "61784ef0a35365371abfea14",
          "61784ef0a35365371abfea15"
        ],
        "fileType": "folder",
        "_id": "61784ef0a35365371abfea10",
        "isSelectedFile": false,
        "createdAt": "2020-03-30T05:13:30.101Z",
        "updatedAt": "2020-03-30T05:13:30.101Z",
        "id": "61784ef0a35365371abfea10"
      },
      {
        "name": "sketch.js",
        "content": "/**\n * Audio file: 'Rouge' by Raw Stiles\n * Creative Commons, BY NC ND\n * http://freemusicarchive.org/music/Raw_Stiles/STOP_2X2_04/A2_Raw_Stiles_-_Rouge_1291\n */\n\nlet song;\nlet pulseSize = 0;\n\nfunction preload(){\n\tsong = loadSound('assets/Raw_Stiles_-_02_-_-smRouge.mp3');\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n\n\tsong.processPeaks(peaksProcessed);\n  \n  noStroke();\n  fill(0, 255, 0);\n}\n\nfunction draw() {\n  background(0);\n  \n  pulseSize = max(pulseSize - 20, 0);\n  ellipse(width / 2, height / 2, pulseSize);\n}\n\n\nfunction peaksProcessed(peaks){\n\tfor (let i = 0; i < peaks.length; i++){\n  \tsong.addCue(peaks[i], createPulse);\n  }\n  song.play();\n}\n\nfunction createPulse(){\n\tpulseSize = 250;\n}\n\nfunction keyPressed(){\n\tsaveCanvas(\"beat-detection-screenshot\", \"png\");\n}",
        "children": [],
        "fileType": "file",
        "_id": "61784ef0a35365371abfea14",
        "isSelectedFile": true,
        "createdAt": "2020-03-30T05:13:30.101Z",
        "updatedAt": "2020-03-30T05:13:30.101Z",
        "id": "61784ef0a35365371abfea14"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61784ef0a35365371abfea13",
        "isSelectedFile": false,
        "createdAt": "2020-03-30T05:13:30.101Z",
        "updatedAt": "2020-03-30T05:13:30.101Z",
        "id": "61784ef0a35365371abfea13"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61784ef0a35365371abfea15",
        "isSelectedFile": false,
        "createdAt": "2020-03-30T05:13:30.101Z",
        "updatedAt": "2020-03-30T05:13:30.101Z",
        "id": "61784ef0a35365371abfea15"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "61784ef0a35365371abfea12",
          "61784f1bfa3aeb0024d76e7b"
        ],
        "fileType": "folder",
        "_id": "61784ef0a35365371abfea11",
        "isSelectedFile": false,
        "createdAt": "2020-03-30T05:13:30.101Z",
        "updatedAt": "2021-10-26T18:55:23.498Z",
        "id": "61784ef0a35365371abfea11"
      },
      {
        "name": "Raw_Stiles_-_02_-_-smRouge.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61784ef0a35365371abfea12",
        "createdAt": "2020-03-30T05:13:30.101Z",
        "updatedAt": "2020-03-30T05:13:30.101Z",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/214854ea-e5db-40ad-9fbf-c6c893e69cc0.mp3",
        "isSelectedFile": false,
        "id": "61784ef0a35365371abfea12"
      },
      {
        "name": "miserlou.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "61784f1bfa3aeb0024d76e7b",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/e1da10cd-9e08-4fd0-9a70-6033401d52b8.mp3",
        "updatedAt": "2021-10-26T18:55:23.456Z",
        "createdAt": "2021-10-26T18:55:23.456Z",
        "id": "61784f1bfa3aeb0024d76e7b"
      }
    ],
    "createdAt": "2021-10-26T18:54:42.577Z",
    "updatedAt": "2021-10-26T18:55:23.498Z",
    "id": "fwdpif6Vz"
  },
  {
    "name": "teia logo v1",
    "_id": "47lbSOnUN",
    "updatedAt": "2022-02-03T08:29:16.561Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61fb8af973159327a7feda87",
          "61fb8af973159327a7feda86",
          "61fb8af973159327a7feda88"
        ],
        "fileType": "folder",
        "_id": "61fb8af973159327a7feda89",
        "createdAt": "2022-02-03T08:29:16.561Z",
        "updatedAt": "2022-02-03T08:29:16.561Z",
        "isSelectedFile": false,
        "id": "61fb8af973159327a7feda89"
      },
      {
        "name": "sketch.js",
        "content": "/*  \n *  teia logo v1\n *  by @ktorn\n *\n *  Super-quick experiment. Didn't work as well as intended.\n */\n\nlet typeG;\n\nlet gridSize = 20;\nlet gridPadding = 2;\nlet gridSpacing;\nlet type = \"TEIA\";\n\nconst DEBUG = true;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  bgG = createGraphics(width, height);\n  typeG = createGraphics(width, height);\n  \n  typeG.rectMode(CENTER);\n  typeG.textAlign(CENTER, CENTER);\n  typeG.fill(255);\n  typeG.stroke(255);\n  typeG.textSize(150);\n  typeG.textStyle(BOLD);\n  \n  gridSpacing = floor(width / (gridSize + gridSize * gridPadding));\n}\n\nfunction drawBackground() {\n  background(255);\n  noStroke();\n  fill(0);\n  \n  for(let x = 0; x < width; x += gridSpacing + gridPadding) {\n    for (let y = 0; y < height; y += gridSpacing + gridPadding) {\n      rect(x, y, gridSpacing, gridSpacing);\n    }\n  }\n}\n\nfunction drawType() {\n  typeG.background(0);\n  typeG.erase();\n  typeG.text(type, width/2, height/2);\n  typeG.noErase();\n  \n  if(DEBUG) {\n    typeG.push();\n    typeG.noStroke();\n    typeG.textAlign(LEFT, CENTER);\n    typeG.textSize(10);\n    typeG.text(\"gridSize: \" + gridSize, 20, height - 30);\n    typeG.text(\"gridPadding: \" + gridPadding, 20, height - 20);\n    typeG.pop();\n  }\n  \n}\n\nfunction draw() {\n  \n  gridSize = floor(map(mouseX, 0, width, 10, 100, true));\n  gridPadding = floor(map(mouseY, 0, height, 1, 5, true));\n  gridSpacing = floor(width / (gridSize + gridSize * gridPadding));\n  \n  drawBackground();\n  drawType();\n\n  image(typeG, 0, 0);\n}",
        "children": [],
        "fileType": "file",
        "_id": "61fb8af973159327a7feda86",
        "isSelectedFile": true,
        "createdAt": "2022-02-03T08:29:16.561Z",
        "updatedAt": "2022-02-03T08:29:16.561Z",
        "id": "61fb8af973159327a7feda86"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61fb8af973159327a7feda87",
        "createdAt": "2022-02-03T08:29:16.561Z",
        "updatedAt": "2022-02-03T08:29:16.561Z",
        "isSelectedFile": false,
        "id": "61fb8af973159327a7feda87"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61fb8af973159327a7feda88",
        "createdAt": "2022-02-03T08:29:16.561Z",
        "updatedAt": "2022-02-03T08:29:16.561Z",
        "isSelectedFile": false,
        "id": "61fb8af973159327a7feda88"
      }
    ],
    "createdAt": "2022-02-03T07:58:49.079Z",
    "id": "47lbSOnUN"
  },
  {
    "name": "teia-network-OBJKT-check",
    "_id": "cIhGhFt9Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64590abf394dc714ea6ad85d",
          "64590abf394dc714ea6ad85e",
          "64590abf394dc714ea6ad85f",
          "64590abf394dc714ea6ad860",
          "64590abf394dc714ea6ad861",
          "64590abf394dc714ea6ad862",
          "64590abf394dc714ea6ad863"
        ],
        "fileType": "folder",
        "_id": "64590abf394dc714ea6ad85c",
        "isSelectedFile": false,
        "createdAt": "2023-05-08T14:59:12.284Z",
        "updatedAt": "2023-05-08T14:59:12.284Z",
        "id": "64590abf394dc714ea6ad85c"
      },
      {
        "name": "sketch.js",
        "content": "// NETWORK CHECK OBJKT\n\n// 🚨 this OBJKT contacts several network APIs to check if the\n// connection is successful or not\n\n// by ktorn - 2022.05.08\n\n// Adapted from template by Raphaël de Courville (@sableraph)\n// Find original at https://github.com/SableRaf/HicEtNunc-p5js-templates\n\n\n// 🤓 Note: replace thumbnail.png with your own thumbnail\n\n// **************************\n// *        COLORS          *\n// **************************\n\nconst paletteArray = [\n  \"https://coolors.co/ffadad-ffd6a5-fdffb6-caffbf-9bf6ff-a0c4ff-bdb2ff-ffc6ff\",\n  \"https://coolors.co/f8f9fa-e9ecef-dee2e6-ced4da-adb5bd-6c757d-495057-343a40-212529\",\n];\n\nlet colors = [];\n\nfunction getColorsFrom(palArray, index) {\n  if (index > palArray.length) {\n    console.error(\n      `You are trying to get color palette at index ${index} but the color palette array is only of length ${palArray.length}`\n    );\n    return;\n  }\n  let paletteUrl = palArray[index];\n  console.log(\"🎨 color palette: \" + paletteUrl);\n  let colorArray = paletteUrl.match(/[0-9a-f]{6}/g).map((c) => color(`#${c}`));\n  return colorArray;\n}\n\n// **************************\n// *    TEIA DATA    *\n// **************************\n\n// If you want to create OBJKT's with different seeds,\n// you can access the creator and viewer wallet ids.\n// This values will only be injected once the piece has been minted\n// they will not work locally.\nconst creator = new URLSearchParams(window.location.search).get(\"creator\");\nconst viewer = new URLSearchParams(window.location.search).get(\"viewer\");\n// NOTE: if the user is viewing the page on hicetnunc while unsynced,\n// the viewer variable will return a string of value \"false\" (NOT a boolean)\n\n// The ID of the OBJKT is also passed via the URL parameters\nconst objkt = new URLSearchParams(window.location.search).get(\"objkt\");\n// NOTE: when the object is viewed in the preview page\n// the objkt variable will return a string of value \"false\" (NOT a boolean)\n\nconsole.log(\"NFT created by\", creator); // null if local\nconsole.log(\"NFT viewed by\", viewer); // null if local\nconsole.log(\"OBJKT ID is\", objkt); // null if local\n\nconst DEFAULTSEED = 123456789;\nlet viewerSeed = DEFAULTSEED;\n\nconst DUMMY = \"tz1hfuVWgcJ89ZE75ut9Qroi3y7GFJL5Lf2K\"; // simulate a synced viewer (user a different address to try another viewer)\nconst UNSYNCED = \"false\"; // simulate an unsynced user\n\nconst PREVIEW = \"false\"; // simulate the preview page\nconst DUMMY_OBJKT = 67954; // simulate an OBJKT ID\n\n// Default is viewer. Try with DUMMY or UNSYNCED only for debugging\n// let viewerData = viewer;\n//let viewerData = UNSYNCED;\nlet viewerData = DUMMY;\n\n// Default is creator. Try with DUMMY only for debugging\n// let creatorData = creator;\nlet creatorData = DUMMY;\n\n// Default is objkt. Try with DUMMY_OBJKT or PREVIEW_OBJKT only for debugging\n// let objktID = objkt; // will cause errors when ran locally (objkt is null)\nlet objktID = DUMMY_OBJKT;\n//let objktID = PREVIEW;\n\n// Check if we have a viewer\nlet viewerWasFound = viewerData && !viewerData.includes(\"false\");\n\n// **************************\n// *       PARAMETERS       *\n// **************************\n\n// Set this to true when minting\np5.disableFriendlyErrors = true;\n\n// The title of your piece goes here (not visible on hicetnunc)\ndocument.title = \"Test OBJKT network\";\n\n// Describe what your piece looks like to screen reader users\nlet description = \"\";\n\nlet txtSize = 32;\n\nlet netURIs = [];\n\n// **************************\n// *    GLOBAL VARIABLES    *\n// **************************\n\nlet objktMetadata = {};\n\nlet owners = [];\n\nlet viewerIsOwner = false; // we will set this based on the hicdex query\n\nlet isPreview = objktID === \"false\";\n\nlet dataFinishedLoading = false;\n\n// **************************\n// *        PRELOAD         *\n// **************************\n\nfunction preload() {\n  if (!isPreview) {\n    fetchData(objktID)\n      .then((data) => checkViewerIsOwner(data))\n      .then(() => {\n        colors = getColors(viewerIsOwner);\n      })\n      .then(() => {\n        dataFinishedLoading = true;\n      });\n  } else {\n    console.warn(\n      \"This sketch doesn't have an OBJKT ID yet (preview mode?). Unable to fetch data\"\n    );\n  }\n}\n\n// **************************\n// *          SETUP         *\n// **************************\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n\n  describe(description); // Create a screen reader accessible description for the canvas\n\n  push();\n  stroke(0);\n  strokeWeight(8);\n  strokeJoin(ROUND);\n  fill(255);\n  textSize(txtSize);\n\n  if (isPreview) {\n    console.log(\"Preview mode\");\n  }\n  \n  netURIs.push({\"\", 1})\n  \n}\n\n// **************************\n// *          DRAW          *\n// **************************\n\nfunction draw() {\n  background(255);\n  fill(255);\n  stroke(0);\n\n  if (dataFinishedLoading) {\n    showNetworkStatus();\n  }\n\n  text(`OBJKT #${objktID}`, txtSize, height - txtSize);\n}\n\n\n\nfunction getColors(isColor) {\n  if (isColor) {\n    return getColorsFrom(paletteArray, 0);\n  } else {\n    return getColorsFrom(paletteArray, 1);\n  }\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}\n\n// **************************\n// *      HICDEX API        *\n// **************************\n\nfunction checkViewerIsOwner(data) {\n  if (data.token_holders.some((e) => e.holder.address === viewerData)) {\n    console.log(`🦄 viewer IS owner`);\n    viewerIsOwner = true;\n  } else {\n    console.log(`🦆 viewer is NOT owner`);\n  }\n  //console.log({ OBJKT: data });\n}\n\n// 📝 The query below is loading more data than you probably need\n//     Use https://api.hicdex.com/graphiql/ to optimize your query\n//     For more info on the hicdex API, go to http://hicdex.com/\n\nconst query = `\n  query Objkt($id: bigint!) {\n    hic_et_nunc_token_by_pk(id: $id) {\n      artifact_uri\n      creator {\n        address\n        name\n      }\n      description\n      display_uri\n      id\n      level\n      mime\n      royalties\n      supply\n      thumbnail_uri\n      metadata\n      timestamp\n      title\n      token_tags(order_by: {id: asc}) {\n        tag {\n          tag\n        }\n      }\n      swaps(order_by: {id: asc}) {\n        price\n        timestamp\n        status\n        amount\n        amount_left\n        creator {\n          address\n          name\n        }\n      }\n      trades(order_by: {timestamp: asc}) {\n        amount\n        buyer {\n          address\n          name\n        }\n        seller {\n          address\n          name\n        }\n        swap {\n          price\n        }\n        timestamp\n      }\n      token_holders(where: {quantity: {_gt: \"0\"}}, order_by: {id: asc}) {\n        quantity\n        holder {\n          address\n          name\n        }\n      }\n      hdao_balance\n      extra\n    }\n  }\n`;\n\n\nasync function fetchURI(uri) {\n    const result = await fetch(uri, {\n    method: \"GET\",\n  });\n\n  return await result.json();\n  \n}\n\n\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\n  const result = await fetch(\"https://api.hicdex.com/v1/graphql\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      query: operationsDoc,\n      variables: variables,\n      operationName: operationName,\n    }),\n  });\n\n  return await result.json();\n}\n\nasync function fetchData(objktId) {\n  const { errors, data } = await fetchGraphQL(query, \"Objkt\", { id: objktId });\n  if (errors) {\n    console.error(errors);\n  }\n  const result = data.hic_et_nunc_token_by_pk;\n  //console.log({ result });\n  return result;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64590abf394dc714ea6ad861",
        "isSelectedFile": true,
        "createdAt": "2023-05-08T14:59:12.284Z",
        "updatedAt": "2023-05-08T14:59:12.284Z",
        "id": "64590abf394dc714ea6ad861"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <title>p5.js template</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta property=\"og:image\" content=\"thumbnail.png\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"style.css\" />\n    <script src=\"p5.min.js\"></script>\n  </head>\n  <body>\n    <script type=\"text/javascript\" src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64590abf394dc714ea6ad85e",
        "isSelectedFile": false,
        "createdAt": "2023-05-08T14:59:12.284Z",
        "updatedAt": "2023-05-08T14:59:12.284Z",
        "id": "64590abf394dc714ea6ad85e"
      },
      {
        "name": "style.css",
        "content": "html,\nbody {\n  margin: 0;\n  padding: 0;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n}",
        "children": [],
        "fileType": "file",
        "_id": "64590abf394dc714ea6ad862",
        "isSelectedFile": false,
        "createdAt": "2023-05-08T14:59:12.284Z",
        "updatedAt": "2023-05-08T14:59:12.284Z",
        "id": "64590abf394dc714ea6ad862"
      },
      {
        "name": "p5_LICENSE.txt",
        "content": "                    GNU LESSER GENERAL PUBLIC LICENSE\r\n                       Version 2.1, February 1999\r\n\r\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\r\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\r\n Everyone is permitted to copy and distribute verbatim copies\r\n of this license document, but changing it is not allowed.\r\n\r\n(This is the first released version of the Lesser GPL.  It also counts\r\n as the successor of the GNU Library Public License, version 2, hence\r\n the version number 2.1.)\r\n\r\n                            Preamble\r\n\r\n  The licenses for most software are designed to take away your\r\nfreedom to share and change it.  By contrast, the GNU General Public\r\nLicenses are intended to guarantee your freedom to share and change\r\nfree software--to make sure the software is free for all its users.\r\n\r\n  This license, the Lesser General Public License, applies to some\r\nspecially designated software packages--typically libraries--of the\r\nFree Software Foundation and other authors who decide to use it.  You\r\ncan use it too, but we suggest you first think carefully about whether\r\nthis license or the ordinary General Public License is the better\r\nstrategy to use in any particular case, based on the explanations below.\r\n\r\n  When we speak of free software, we are referring to freedom of use,\r\nnot price.  Our General Public Licenses are designed to make sure that\r\nyou have the freedom to distribute copies of free software (and charge\r\nfor this service if you wish); that you receive source code or can get\r\nit if you want it; that you can change the software and use pieces of\r\nit in new free programs; and that you are informed that you can do\r\nthese things.\r\n\r\n  To protect your rights, we need to make restrictions that forbid\r\ndistributors to deny you these rights or to ask you to surrender these\r\nrights.  These restrictions translate to certain responsibilities for\r\nyou if you distribute copies of the library or if you modify it.\r\n\r\n  For example, if you distribute copies of the library, whether gratis\r\nor for a fee, you must give the recipients all the rights that we gave\r\nyou.  You must make sure that they, too, receive or can get the source\r\ncode.  If you link other code with the library, you must provide\r\ncomplete object files to the recipients, so that they can relink them\r\nwith the library after making changes to the library and recompiling\r\nit.  And you must show them these terms so they know their rights.\r\n\r\n  We protect your rights with a two-step method: (1) we copyright the\r\nlibrary, and (2) we offer you this license, which gives you legal\r\npermission to copy, distribute and/or modify the library.\r\n\r\n  To protect each distributor, we want to make it very clear that\r\nthere is no warranty for the free library.  Also, if the library is\r\nmodified by someone else and passed on, the recipients should know\r\nthat what they have is not the original version, so that the original\r\nauthor's reputation will not be affected by problems that might be\r\nintroduced by others.\r\n\r\n  Finally, software patents pose a constant threat to the existence of\r\nany free program.  We wish to make sure that a company cannot\r\neffectively restrict the users of a free program by obtaining a\r\nrestrictive license from a patent holder.  Therefore, we insist that\r\nany patent license obtained for a version of the library must be\r\nconsistent with the full freedom of use specified in this license.\r\n\r\n  Most GNU software, including some libraries, is covered by the\r\nordinary GNU General Public License.  This license, the GNU Lesser\r\nGeneral Public License, applies to certain designated libraries, and\r\nis quite different from the ordinary General Public License.  We use\r\nthis license for certain libraries in order to permit linking those\r\nlibraries into non-free programs.\r\n\r\n  When a program is linked with a library, whether statically or using\r\na shared library, the combination of the two is legally speaking a\r\ncombined work, a derivative of the original library.  The ordinary\r\nGeneral Public License therefore permits such linking only if the\r\nentire combination fits its criteria of freedom.  The Lesser General\r\nPublic License permits more lax criteria for linking other code with\r\nthe library.\r\n\r\n  We call this license the \"Lesser\" General Public License because it\r\ndoes Less to protect the user's freedom than the ordinary General\r\nPublic License.  It also provides other free software developers Less\r\nof an advantage over competing non-free programs.  These disadvantages\r\nare the reason we use the ordinary General Public License for many\r\nlibraries.  However, the Lesser license provides advantages in certain\r\nspecial circumstances.\r\n\r\n  For example, on rare occasions, there may be a special need to\r\nencourage the widest possible use of a certain library, so that it becomes\r\na de-facto standard.  To achieve this, non-free programs must be\r\nallowed to use the library.  A more frequent case is that a free\r\nlibrary does the same job as widely used non-free libraries.  In this\r\ncase, there is little to gain by limiting the free library to free\r\nsoftware only, so we use the Lesser General Public License.\r\n\r\n  In other cases, permission to use a particular library in non-free\r\nprograms enables a greater number of people to use a large body of\r\nfree software.  For example, permission to use the GNU C Library in\r\nnon-free programs enables many more people to use the whole GNU\r\noperating system, as well as its variant, the GNU/Linux operating\r\nsystem.\r\n\r\n  Although the Lesser General Public License is Less protective of the\r\nusers' freedom, it does ensure that the user of a program that is\r\nlinked with the Library has the freedom and the wherewithal to run\r\nthat program using a modified version of the Library.\r\n\r\n  The precise terms and conditions for copying, distribution and\r\nmodification follow.  Pay close attention to the difference between a\r\n\"work based on the library\" and a \"work that uses the library\".  The\r\nformer contains code derived from the library, whereas the latter must\r\nbe combined with the library in order to run.\r\n\r\n                  GNU LESSER GENERAL PUBLIC LICENSE\r\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\r\n\r\n  0. This License Agreement applies to any software library or other\r\nprogram which contains a notice placed by the copyright holder or\r\nother authorized party saying it may be distributed under the terms of\r\nthis Lesser General Public License (also called \"this License\").\r\nEach licensee is addressed as \"you\".\r\n\r\n  A \"library\" means a collection of software functions and/or data\r\nprepared so as to be conveniently linked with application programs\r\n(which use some of those functions and data) to form executables.\r\n\r\n  The \"Library\", below, refers to any such software library or work\r\nwhich has been distributed under these terms.  A \"work based on the\r\nLibrary\" means either the Library or any derivative work under\r\ncopyright law: that is to say, a work containing the Library or a\r\nportion of it, either verbatim or with modifications and/or translated\r\nstraightforwardly into another language.  (Hereinafter, translation is\r\nincluded without limitation in the term \"modification\".)\r\n\r\n  \"Source code\" for a work means the preferred form of the work for\r\nmaking modifications to it.  For a library, complete source code means\r\nall the source code for all modules it contains, plus any associated\r\ninterface definition files, plus the scripts used to control compilation\r\nand installation of the library.\r\n\r\n  Activities other than copying, distribution and modification are not\r\ncovered by this License; they are outside its scope.  The act of\r\nrunning a program using the Library is not restricted, and output from\r\nsuch a program is covered only if its contents constitute a work based\r\non the Library (independent of the use of the Library in a tool for\r\nwriting it).  Whether that is true depends on what the Library does\r\nand what the program that uses the Library does.\r\n\r\n  1. You may copy and distribute verbatim copies of the Library's\r\ncomplete source code as you receive it, in any medium, provided that\r\nyou conspicuously and appropriately publish on each copy an\r\nappropriate copyright notice and disclaimer of warranty; keep intact\r\nall the notices that refer to this License and to the absence of any\r\nwarranty; and distribute a copy of this License along with the\r\nLibrary.\r\n\r\n  You may charge a fee for the physical act of transferring a copy,\r\nand you may at your option offer warranty protection in exchange for a\r\nfee.\r\n\r\n  2. You may modify your copy or copies of the Library or any portion\r\nof it, thus forming a work based on the Library, and copy and\r\ndistribute such modifications or work under the terms of Section 1\r\nabove, provided that you also meet all of these conditions:\r\n\r\n    a) The modified work must itself be a software library.\r\n\r\n    b) You must cause the files modified to carry prominent notices\r\n    stating that you changed the files and the date of any change.\r\n\r\n    c) You must cause the whole of the work to be licensed at no\r\n    charge to all third parties under the terms of this License.\r\n\r\n    d) If a facility in the modified Library refers to a function or a\r\n    table of data to be supplied by an application program that uses\r\n    the facility, other than as an argument passed when the facility\r\n    is invoked, then you must make a good faith effort to ensure that,\r\n    in the event an application does not supply such function or\r\n    table, the facility still operates, and performs whatever part of\r\n    its purpose remains meaningful.\r\n\r\n    (For example, a function in a library to compute square roots has\r\n    a purpose that is entirely well-defined independent of the\r\n    application.  Therefore, Subsection 2d requires that any\r\n    application-supplied function or table used by this function must\r\n    be optional: if the application does not supply it, the square\r\n    root function must still compute square roots.)\r\n\r\nThese requirements apply to the modified work as a whole.  If\r\nidentifiable sections of that work are not derived from the Library,\r\nand can be reasonably considered independent and separate works in\r\nthemselves, then this License, and its terms, do not apply to those\r\nsections when you distribute them as separate works.  But when you\r\ndistribute the same sections as part of a whole which is a work based\r\non the Library, the distribution of the whole must be on the terms of\r\nthis License, whose permissions for other licensees extend to the\r\nentire whole, and thus to each and every part regardless of who wrote\r\nit.\r\n\r\nThus, it is not the intent of this section to claim rights or contest\r\nyour rights to work written entirely by you; rather, the intent is to\r\nexercise the right to control the distribution of derivative or\r\ncollective works based on the Library.\r\n\r\nIn addition, mere aggregation of another work not based on the Library\r\nwith the Library (or with a work based on the Library) on a volume of\r\na storage or distribution medium does not bring the other work under\r\nthe scope of this License.\r\n\r\n  3. You may opt to apply the terms of the ordinary GNU General Public\r\nLicense instead of this License to a given copy of the Library.  To do\r\nthis, you must alter all the notices that refer to this License, so\r\nthat they refer to the ordinary GNU General Public License, version 2,\r\ninstead of to this License.  (If a newer version than version 2 of the\r\nordinary GNU General Public License has appeared, then you can specify\r\nthat version instead if you wish.)  Do not make any other change in\r\nthese notices.\r\n\r\n  Once this change is made in a given copy, it is irreversible for\r\nthat copy, so the ordinary GNU General Public License applies to all\r\nsubsequent copies and derivative works made from that copy.\r\n\r\n  This option is useful when you wish to copy part of the code of\r\nthe Library into a program that is not a library.\r\n\r\n  4. You may copy and distribute the Library (or a portion or\r\nderivative of it, under Section 2) in object code or executable form\r\nunder the terms of Sections 1 and 2 above provided that you accompany\r\nit with the complete corresponding machine-readable source code, which\r\nmust be distributed under the terms of Sections 1 and 2 above on a\r\nmedium customarily used for software interchange.\r\n\r\n  If distribution of object code is made by offering access to copy\r\nfrom a designated place, then offering equivalent access to copy the\r\nsource code from the same place satisfies the requirement to\r\ndistribute the source code, even though third parties are not\r\ncompelled to copy the source along with the object code.\r\n\r\n  5. A program that contains no derivative of any portion of the\r\nLibrary, but is designed to work with the Library by being compiled or\r\nlinked with it, is called a \"work that uses the Library\".  Such a\r\nwork, in isolation, is not a derivative work of the Library, and\r\ntherefore falls outside the scope of this License.\r\n\r\n  However, linking a \"work that uses the Library\" with the Library\r\ncreates an executable that is a derivative of the Library (because it\r\ncontains portions of the Library), rather than a \"work that uses the\r\nlibrary\".  The executable is therefore covered by this License.\r\nSection 6 states terms for distribution of such executables.\r\n\r\n  When a \"work that uses the Library\" uses material from a header file\r\nthat is part of the Library, the object code for the work may be a\r\nderivative work of the Library even though the source code is not.\r\nWhether this is true is especially significant if the work can be\r\nlinked without the Library, or if the work is itself a library.  The\r\nthreshold for this to be true is not precisely defined by law.\r\n\r\n  If such an object file uses only numerical parameters, data\r\nstructure layouts and accessors, and small macros and small inline\r\nfunctions (ten lines or less in length), then the use of the object\r\nfile is unrestricted, regardless of whether it is legally a derivative\r\nwork.  (Executables containing this object code plus portions of the\r\nLibrary will still fall under Section 6.)\r\n\r\n  Otherwise, if the work is a derivative of the Library, you may\r\ndistribute the object code for the work under the terms of Section 6.\r\nAny executables containing that work also fall under Section 6,\r\nwhether or not they are linked directly with the Library itself.\r\n\r\n  6. As an exception to the Sections above, you may also combine or\r\nlink a \"work that uses the Library\" with the Library to produce a\r\nwork containing portions of the Library, and distribute that work\r\nunder terms of your choice, provided that the terms permit\r\nmodification of the work for the customer's own use and reverse\r\nengineering for debugging such modifications.\r\n\r\n  You must give prominent notice with each copy of the work that the\r\nLibrary is used in it and that the Library and its use are covered by\r\nthis License.  You must supply a copy of this License.  If the work\r\nduring execution displays copyright notices, you must include the\r\ncopyright notice for the Library among them, as well as a reference\r\ndirecting the user to the copy of this License.  Also, you must do one\r\nof these things:\r\n\r\n    a) Accompany the work with the complete corresponding\r\n    machine-readable source code for the Library including whatever\r\n    changes were used in the work (which must be distributed under\r\n    Sections 1 and 2 above); and, if the work is an executable linked\r\n    with the Library, with the complete machine-readable \"work that\r\n    uses the Library\", as object code and/or source code, so that the\r\n    user can modify the Library and then relink to produce a modified\r\n    executable containing the modified Library.  (It is understood\r\n    that the user who changes the contents of definitions files in the\r\n    Library will not necessarily be able to recompile the application\r\n    to use the modified definitions.)\r\n\r\n    b) Use a suitable shared library mechanism for linking with the\r\n    Library.  A suitable mechanism is one that (1) uses at run time a\r\n    copy of the library already present on the user's computer system,\r\n    rather than copying library functions into the executable, and (2)\r\n    will operate properly with a modified version of the library, if\r\n    the user installs one, as long as the modified version is\r\n    interface-compatible with the version that the work was made with.\r\n\r\n    c) Accompany the work with a written offer, valid for at\r\n    least three years, to give the same user the materials\r\n    specified in Subsection 6a, above, for a charge no more\r\n    than the cost of performing this distribution.\r\n\r\n    d) If distribution of the work is made by offering access to copy\r\n    from a designated place, offer equivalent access to copy the above\r\n    specified materials from the same place.\r\n\r\n    e) Verify that the user has already received a copy of these\r\n    materials or that you have already sent this user a copy.\r\n\r\n  For an executable, the required form of the \"work that uses the\r\nLibrary\" must include any data and utility programs needed for\r\nreproducing the executable from it.  However, as a special exception,\r\nthe materials to be distributed need not include anything that is\r\nnormally distributed (in either source or binary form) with the major\r\ncomponents (compiler, kernel, and so on) of the operating system on\r\nwhich the executable runs, unless that component itself accompanies\r\nthe executable.\r\n\r\n  It may happen that this requirement contradicts the license\r\nrestrictions of other proprietary libraries that do not normally\r\naccompany the operating system.  Such a contradiction means you cannot\r\nuse both them and the Library together in an executable that you\r\ndistribute.\r\n\r\n  7. You may place library facilities that are a work based on the\r\nLibrary side-by-side in a single library together with other library\r\nfacilities not covered by this License, and distribute such a combined\r\nlibrary, provided that the separate distribution of the work based on\r\nthe Library and of the other library facilities is otherwise\r\npermitted, and provided that you do these two things:\r\n\r\n    a) Accompany the combined library with a copy of the same work\r\n    based on the Library, uncombined with any other library\r\n    facilities.  This must be distributed under the terms of the\r\n    Sections above.\r\n\r\n    b) Give prominent notice with the combined library of the fact\r\n    that part of it is a work based on the Library, and explaining\r\n    where to find the accompanying uncombined form of the same work.\r\n\r\n  8. You may not copy, modify, sublicense, link with, or distribute\r\nthe Library except as expressly provided under this License.  Any\r\nattempt otherwise to copy, modify, sublicense, link with, or\r\ndistribute the Library is void, and will automatically terminate your\r\nrights under this License.  However, parties who have received copies,\r\nor rights, from you under this License will not have their licenses\r\nterminated so long as such parties remain in full compliance.\r\n\r\n  9. You are not required to accept this License, since you have not\r\nsigned it.  However, nothing else grants you permission to modify or\r\ndistribute the Library or its derivative works.  These actions are\r\nprohibited by law if you do not accept this License.  Therefore, by\r\nmodifying or distributing the Library (or any work based on the\r\nLibrary), you indicate your acceptance of this License to do so, and\r\nall its terms and conditions for copying, distributing or modifying\r\nthe Library or works based on it.\r\n\r\n  10. Each time you redistribute the Library (or any work based on the\r\nLibrary), the recipient automatically receives a license from the\r\noriginal licensor to copy, distribute, link with or modify the Library\r\nsubject to these terms and conditions.  You may not impose any further\r\nrestrictions on the recipients' exercise of the rights granted herein.\r\nYou are not responsible for enforcing compliance by third parties with\r\nthis License.\r\n\r\n  11. If, as a consequence of a court judgment or allegation of patent\r\ninfringement or for any other reason (not limited to patent issues),\r\nconditions are imposed on you (whether by court order, agreement or\r\notherwise) that contradict the conditions of this License, they do not\r\nexcuse you from the conditions of this License.  If you cannot\r\ndistribute so as to satisfy simultaneously your obligations under this\r\nLicense and any other pertinent obligations, then as a consequence you\r\nmay not distribute the Library at all.  For example, if a patent\r\nlicense would not permit royalty-free redistribution of the Library by\r\nall those who receive copies directly or indirectly through you, then\r\nthe only way you could satisfy both it and this License would be to\r\nrefrain entirely from distribution of the Library.\r\n\r\nIf any portion of this section is held invalid or unenforceable under any\r\nparticular circumstance, the balance of the section is intended to apply,\r\nand the section as a whole is intended to apply in other circumstances.\r\n\r\nIt is not the purpose of this section to induce you to infringe any\r\npatents or other property right claims or to contest validity of any\r\nsuch claims; this section has the sole purpose of protecting the\r\nintegrity of the free software distribution system which is\r\nimplemented by public license practices.  Many people have made\r\ngenerous contributions to the wide range of software distributed\r\nthrough that system in reliance on consistent application of that\r\nsystem; it is up to the author/donor to decide if he or she is willing\r\nto distribute software through any other system and a licensee cannot\r\nimpose that choice.\r\n\r\nThis section is intended to make thoroughly clear what is believed to\r\nbe a consequence of the rest of this License.\r\n\r\n  12. If the distribution and/or use of the Library is restricted in\r\ncertain countries either by patents or by copyrighted interfaces, the\r\noriginal copyright holder who places the Library under this License may add\r\nan explicit geographical distribution limitation excluding those countries,\r\nso that distribution is permitted only in or among countries not thus\r\nexcluded.  In such case, this License incorporates the limitation as if\r\nwritten in the body of this License.\r\n\r\n  13. The Free Software Foundation may publish revised and/or new\r\nversions of the Lesser General Public License from time to time.\r\nSuch new versions will be similar in spirit to the present version,\r\nbut may differ in detail to address new problems or concerns.\r\n\r\nEach version is given a distinguishing version number.  If the Library\r\nspecifies a version number of this License which applies to it and\r\n\"any later version\", you have the option of following the terms and\r\nconditions either of that version or of any later version published by\r\nthe Free Software Foundation.  If the Library does not specify a\r\nlicense version number, you may choose any version ever published by\r\nthe Free Software Foundation.\r\n\r\n  14. If you wish to incorporate parts of the Library into other free\r\nprograms whose distribution conditions are incompatible with these,\r\nwrite to the author to ask for permission.  For software which is\r\ncopyrighted by the Free Software Foundation, write to the Free\r\nSoftware Foundation; we sometimes make exceptions for this.  Our\r\ndecision will be guided by the two goals of preserving the free status\r\nof all derivatives of our free software and of promoting the sharing\r\nand reuse of software generally.\r\n\r\n                            NO WARRANTY\r\n\r\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\r\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\r\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\r\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\r\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\r\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\r\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\r\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\r\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\r\n\r\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\r\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\r\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\r\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\r\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\r\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\r\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\r\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\r\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\r\nDAMAGES.\r\n\r\n                     END OF TERMS AND CONDITIONS\r\n",
        "children": [],
        "fileType": "file",
        "_id": "64590abf394dc714ea6ad860",
        "isSelectedFile": false,
        "updatedAt": "2023-05-08T14:59:12.284Z",
        "createdAt": "2023-05-08T14:59:12.284Z",
        "id": "64590abf394dc714ea6ad860"
      },
      {
        "name": "p5.min.js",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64590abf394dc714ea6ad85f",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/3b222ef1-7fca-4d9f-b878-34e1cd88f86b.js",
        "isSelectedFile": false,
        "updatedAt": "2023-05-08T14:59:12.284Z",
        "createdAt": "2023-05-08T14:59:12.284Z",
        "id": "64590abf394dc714ea6ad85f"
      },
      {
        "name": "LICENSE.txt",
        "content": "Copyright 2021 Raphaël de Courville\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
        "children": [],
        "fileType": "file",
        "_id": "64590abf394dc714ea6ad85d",
        "isSelectedFile": false,
        "updatedAt": "2023-05-08T14:59:12.284Z",
        "createdAt": "2023-05-08T14:59:12.284Z",
        "id": "64590abf394dc714ea6ad85d"
      },
      {
        "name": "thumbnail.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64590abf394dc714ea6ad863",
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/209ba386-1518-4562-9b1e-b97804b186d2.png",
        "updatedAt": "2023-05-08T14:59:12.284Z",
        "createdAt": "2023-05-08T14:59:12.284Z",
        "isSelectedFile": false,
        "id": "64590abf394dc714ea6ad863"
      }
    ],
    "createdAt": "2023-05-08T14:44:16.957Z",
    "updatedAt": "2023-05-08T14:59:12.284Z",
    "id": "cIhGhFt9Z"
  },
  {
    "name": "Tessellation",
    "_id": "SyjAiOWJV",
    "createdAt": "2018-12-02T15:35:46.920Z",
    "updatedAt": "2018-12-02T15:35:46.920Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5c037dbeb468571463cda10c",
          "5c037dbeb468571463cda10d",
          "5c037dbeb468571463cda10e"
        ],
        "fileType": "folder",
        "updatedAt": "2018-12-02T15:35:46.920Z",
        "createdAt": "2018-12-02T15:35:46.920Z",
        "_id": "5c037dbeb468571463cda10f",
        "id": "5c037dbeb468571463cda10f"
      },
      {
        "name": "sketch.js",
        "content": "let tile1;\n\nclass Tile {\n  constructor(size, x = 0, y = 0) {\n    this.size = size;\n    this.x = x;\n    this.y = y;\n    this.colorR = random(0,255);\n    this.colorG = random(0,255);\n    this.colorB = random(0,255);\n  }\n\n  paintPosSize(x, y, w, h) {\n    // rect(x, y, w, h);\n    // noFill();\n    fill(this.colorR, 0, 255);\n    beginShape();\n    vertex(x,y);\n    vertex\n    vertex(x+w,y);\n    vertex(x+w,y+(h/4));\n    vertex(x+w+(w/3),y+(h/2));\n    vertex(x+w,y+(3*(h/4)));\n    vertex(x+w,y+h);\n    vertex(x,y+h);\n    vertex(x,y+(3*(h/4)));\n    vertex(x+(w/3),y+(h/2));\n    vertex(x,y+(h/4));\n\n    endShape(CLOSE);\n  }\n\n  paint() {\n    this.paintPosSize(this.x, this.y, this.size, this.size);\n  }\n\n  paintPos(x, y) {\n    this.paintPosSize(x, y, this.size, this.size);\n  }\n\n  paintCentered() {\n    this.paintPos(width / 2 - (this.size / 2), height / 2 - (this.size / 2));\n  }\n  \n  debugIt() {\n    print(\"Tile: this.x=\" + this.x + \" this.y=\" + this.y);\n  }\n}\n\nclass Tesselation {\n\n  constructor(templateTile, x, y, w, h) {\n    this.templateTile = templateTile;\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.tiles = [];\n    this.isCreated = false;\n  }\n\n  createTesselation() {\n    let direction = 1;\n    let t = 0;\n    for (let i = -this.templateTile.size; i < this.w; i += this.templateTile.size) {\n      for (let j = -this.templateTile.size; j < this.h; j += this.templateTile.size) {\n        this.tiles[t++] = new Tile(this.templateTile.size, i, j);\n      }\n      direction = -direction;\n    }\n    this.isCreated = true;\n    print(\"Created \" + t + \" tiles\");\n    \n    // for (let k=0; k < t; k++) {\n    //   this.tiles[k].debugIt();\n    // }\n  }\n\n  paint() {\n    if (!this.isCreated) {\n      this.createTesselation();\n    }\n\n    for (let i = 0; i < this.tiles.length; i++) {\n      this.tiles[i].paint();\n    }\n  }\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n  tile = new Tile(50);\n  tesselation = new Tesselation(tile, 0, 0, width, height);\n}\n\nfunction draw() {\n  background(220);\n  tesselation.paint();\n}",
        "children": [],
        "fileType": "file",
        "updatedAt": "2018-12-02T15:35:46.920Z",
        "createdAt": "2018-12-02T15:35:46.920Z",
        "_id": "5c037dbeb468571463cda10c",
        "isSelectedFile": true,
        "id": "5c037dbeb468571463cda10c"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "updatedAt": "2018-12-02T15:35:46.920Z",
        "createdAt": "2018-12-02T15:35:46.920Z",
        "_id": "5c037dbeb468571463cda10d",
        "id": "5c037dbeb468571463cda10d"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "updatedAt": "2018-12-02T15:35:46.920Z",
        "createdAt": "2018-12-02T15:35:46.920Z",
        "_id": "5c037dbeb468571463cda10e",
        "id": "5c037dbeb468571463cda10e"
      }
    ],
    "id": "SyjAiOWJV"
  },
  {
    "name": "tezos key_hash to address",
    "_id": "sCAN2CDqs",
    "updatedAt": "2024-01-31T01:29:02.472Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "65b8d4c5833dd63dcf8d0eb2",
          "65b8fdf7fdaf74001cf64156",
          "65b8d4c5833dd63dcf8d0eb1",
          "65b8d4c5833dd63dcf8d0eb3"
        ],
        "fileType": "folder",
        "_id": "65b8d4c5833dd63dcf8d0eb4",
        "createdAt": "2024-01-31T01:29:02.472Z",
        "updatedAt": "2024-01-31T01:29:02.472Z",
        "isSelectedFile": false,
        "id": "65b8d4c5833dd63dcf8d0eb4"
      },
      {
        "name": "sketch.js",
        "content": "/*\n*  Tezos key_hash to tz1 address converter\n*  by @ktorn\n*  31.01.2024\n*/\n\nfunction hexToBigInt(hex) {\n    // Ensure the '0x' prefix is present for BigInt parsing\n    if (!hex.startsWith('0x')) {\n        hex = '0x' + hex;\n    }\n    return BigInt(hex);\n}\n\nfunction bigIntToByteArray(bigint) {\n    // The byte array we will push each byte to\n    const bytes = [];\n    // A BigInt could be any size, but we want to pad it to 32 bytes\n    const size = 32;\n    for (let i = 0; i < size; i++) {\n        // Push the current least significant byte onto the array\n        bytes.unshift(Number(bigint & 0xFFn));\n        // Shift the bigint to the right by one byte\n        bigint >>= 8n;\n    }\n    // Remove leading 0 bytes\n    while (bytes[0] === 0) {\n        bytes.shift();\n    }\n    return new Uint8Array(bytes);\n}\n\n\nfunction hexToBytes(hex) {\n  return bigIntToByteArray(hexToBigInt(hex))\n}\n\n  \nfunction sha256(buffer) {\n    // Convert the Uint8Array to a WordArray for CryptoJS\n    const wordArray = CryptoJS.lib.WordArray.create(buffer);\n    // Hash the WordArray and return a Hex string\n    const hash = CryptoJS.SHA256(wordArray).toString(CryptoJS.enc.Hex);\n    // Convert the Hex string back to a Uint8Array\n    return hexToBytes(hash);\n}\n\nfunction tezosAddressFromPublicKeyHash(hexKeyHash) {\n  \n    // Convert the hex key hash to bytes\n    const keyHashBytes = hexToBytes(hexKeyHash);\n  \n    // Prefix for tz1 addresses (Ed25519 public key hash)\n    const tz1Prefix = new Uint8Array([6, 161, 159]);\n\n    // Combine the prefix with the public key hash bytes\n    const dataWithPrefix = new Uint8Array(tz1Prefix.length + keyHashBytes.length);\n    dataWithPrefix.set(tz1Prefix);\n    dataWithPrefix.set(keyHashBytes, tz1Prefix.length);\n  \n\n       \n    // Calculate the checksum\n    const checksumBytes = sha256(sha256(dataWithPrefix));\n  \n    const checksum = checksumBytes.slice(0, 4);\n\n\n    // Combine all parts\n    const dataWithChecksum = new Uint8Array(dataWithPrefix.length + checksum.length);\n    dataWithChecksum.set(dataWithPrefix);\n    dataWithChecksum.set(checksum, dataWithPrefix.length);\n\n    // Encode to Base58\n    const address = encode(dataWithChecksum);\n\n    return address;\n}\n\nfunction setup() {\n\n    // Example usage:\n  \n    const hexKeyHash = '0x0050e0462f27c0436ba6c3ce13a06e573f36cb28b0';\n    // const hexKeyHash = '0x0046a2c00eb115343242347fa1cd672a2bc1dcc609';\n    const address = tezosAddressFromPublicKeyHash(hexKeyHash);\n    console.log(`Tezos Address: ${address}`);\n  \n}\n\ndocument.getElementById('convertButton').addEventListener('click', function() {\n    const keyHash = document.getElementById('keyHashInput').value;\n    const address = tezosAddressFromPublicKeyHash(keyHash); // Assuming the function is defined\n    document.getElementById('resultOutput').value = address;\n});\n\n",
        "children": [],
        "fileType": "file",
        "_id": "65b8d4c5833dd63dcf8d0eb1",
        "isSelectedFile": true,
        "createdAt": "2024-01-31T01:29:02.472Z",
        "updatedAt": "2024-01-31T01:29:02.472Z",
        "id": "65b8d4c5833dd63dcf8d0eb1"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Tezos Address Converter</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  \n  \n   <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.0/addons/p5.sound.min.js\"></script>\n    \n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.0.0/crypto-js.min.js\"></script>\n  \n     <script src=\"libs/bs58.js\"></script>\n  \n  \n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"input-group\">\n            <input type=\"text\" id=\"keyHashInput\" class=\"input-box\" placeholder=\"Enter key hash here\">\n        </div>\n        <div class=\"button-group\">\n            <button id=\"convertButton\" class=\"convert-button\">Convert to tz1 address</button>\n        </div>\n        <div class=\"input-group\">\n            <input type=\"text\" id=\"resultOutput\" class=\"input-box\" placeholder=\"Result will be shown here\" readonly>\n        </div>\n    </div>\n    <script src=\"sketch.js\"></script>\n</body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "65b8d4c5833dd63dcf8d0eb2",
        "createdAt": "2024-01-31T01:29:02.472Z",
        "updatedAt": "2024-01-31T01:29:02.472Z",
        "isSelectedFile": false,
        "id": "65b8d4c5833dd63dcf8d0eb2"
      },
      {
        "name": "style.css",
        "content": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    margin: 0;\n}\n\n.container {\n    background-color: white;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n    width: 400px;\n}\n\n.input-box {\n    width: 100%;\n    padding: 10px;\n    margin-bottom: 20px;\n    border-radius: 5px;\n    border: 1px solid #ccc;\n    box-sizing: border-box;\n}\n\n.convert-button {\n    background-color: #007bff;\n    color: white;\n    border: none;\n    padding: 10px 20px;\n    text-align: center;\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    transition-duration: 0.4s;\n    cursor: pointer;\n    border-radius: 5px;\n    width: 100%;\n}\n\n.convert-button:hover {\n    background-color: #0056b3;\n}\n\n.input-group, .button-group {\n    margin-bottom: 15px;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65b8d4c5833dd63dcf8d0eb3",
        "createdAt": "2024-01-31T01:29:02.472Z",
        "updatedAt": "2024-01-31T01:29:02.472Z",
        "isSelectedFile": false,
        "id": "65b8d4c5833dd63dcf8d0eb3"
      },
      {
        "name": "libs",
        "content": "",
        "children": [
          "65b8fdfefdaf74001cf64238"
        ],
        "fileType": "folder",
        "_id": "65b8fdf7fdaf74001cf64156",
        "updatedAt": "2024-01-31T01:29:02.472Z",
        "createdAt": "2024-01-31T01:29:02.472Z",
        "isSelectedFile": false,
        "id": "65b8fdf7fdaf74001cf64156"
      },
      {
        "name": "bs58.js",
        "content": "// Base58 encoding/decoding\n// Originally written by Mike Hearn for BitcoinJ\n// Copyright (c) 2011 Google Inc\n// Ported to JavaScript by Stefan Thomas\n// Merged Buffer refactorings from base58-native by Stephen Pair\n// Copyright (c) 2013 BitPay Inc\n\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\nvar ALPHABET_MAP = {}\nfor(var i = 0; i < ALPHABET.length; i++) {\n  ALPHABET_MAP[ALPHABET.charAt(i)] = i\n}\nvar BASE = 58\n\nfunction encode(buffer) {\n  if (buffer.length === 0) return ''\n\n  var i, j, digits = [0]\n  for (i = 0; i < buffer.length; i++) {\n    for (j = 0; j < digits.length; j++) digits[j] <<= 8\n\n    digits[0] += buffer[i]\n\n    var carry = 0\n    for (j = 0; j < digits.length; ++j) {\n      digits[j] += carry\n\n      carry = (digits[j] / BASE) | 0\n      digits[j] %= BASE\n    }\n\n    while (carry) {\n      digits.push(carry % BASE)\n\n      carry = (carry / BASE) | 0\n    }\n  }\n\n  // deal with leading zeros\n  for (i = 0; buffer[i] === 0 && i < buffer.length - 1; i++) digits.push(0)\n\n  // convert digits to a string\n  var stringOutput = \"\"\n  for (var i = digits.length - 1; i >= 0; i--) {\n    stringOutput = stringOutput + ALPHABET[digits[i]]\n  }\n  return stringOutput\n}\n\nfunction decode(string) {\n  if (string.length === 0) return []\n\n  var i, j, bytes = [0]\n  for (i = 0; i < string.length; i++) {\n    var c = string[i]\n    if (!(c in ALPHABET_MAP)) throw new Error('Non-base58 character')\n\n    for (j = 0; j < bytes.length; j++) bytes[j] *= BASE\n    bytes[0] += ALPHABET_MAP[c]\n\n    var carry = 0\n    for (j = 0; j < bytes.length; ++j) {\n      bytes[j] += carry\n\n      carry = bytes[j] >> 8\n      bytes[j] &= 0xff\n    }\n\n    while (carry) {\n      bytes.push(carry & 0xff)\n\n      carry >>= 8\n    }\n  }\n\n  // deal with leading zeros\n  for (i = 0; string[i] === '1' && i < string.length - 1; i++) bytes.push(0)\n\n  return bytes.reverse()\n}\n\nmodule.exports = {\n  encode: encode,\n  decode: decode\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65b8fdfefdaf74001cf64238",
        "updatedAt": "2024-01-31T01:29:02.472Z",
        "createdAt": "2024-01-31T01:29:02.472Z",
        "isSelectedFile": false,
        "id": "65b8fdfefdaf74001cf64238"
      }
    ],
    "createdAt": "2024-01-30T10:52:00.557Z",
    "id": "sCAN2CDqs"
  },
  {
    "name": "this code spreads love (1 iter)",
    "_id": "Ln1FYhJBN",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "62b3477417f1624cb81e3129",
          "62b3477417f1624cb81e312a",
          "62b3477417f1624cb81e312b"
        ],
        "fileType": "folder",
        "_id": "62b3477417f1624cb81e3128",
        "createdAt": "2022-06-22T18:05:40.356Z",
        "updatedAt": "2022-06-22T18:05:40.356Z",
        "isSelectedFile": false,
        "id": "62b3477417f1624cb81e3128"
      },
      {
        "name": "sketch.js",
        "content": "/*♥*/function /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/love() /*♡*/{  \n/*♥*/function /*♥*/r() /*♥*/{  \n/*♥*/return /*♥*/Math.random();  \n/*♥*/}  \n/*♥*/fs /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/= /*♡*/\"\" /*♥*/+ /*♥*/love /*♥*/+ /*♡*/\"love()\";  \n/*♥*/lines /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/= /*♡*/fs.split( /*♥*/\"\\n\" /*♡*/); /*♡*/  \n/*♡*/for /*♡*/( /*♥*/line /*♥*/of /*♥*/lines /*♥*/) /*♥*/{ /*♡*/  \n/*🄸 🄻🄾🅅🄴 🅈🄾🅄*/adorned /*♥*/= /*♥*/\"\"; /*♥*/  \n/*♥*/bits /*♥*/= /*♥*/line.split( /*♡*/\"\\u0020\" /*♡*/); /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/  \n/*🄸 🄻🄾🅅🄴 🅈🄾🅄*/for /*♡*/( /*♡*/bit /*♡*/of /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/bits /*♡*/) /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/{ /*♥*/  \n/*♥*/care /*♡*/= /*♥*/r();  \n/*♡*/if /*♥*/( /*♥*/care /*♥*/< /*♥*/0.25 /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/) /*♡*/{ /*♥*/  \n/*♥*/adorned /*♥*/+= /*♡*/\"/*🄸 🄻🄾🅅🄴 🅈🄾🅄*/\"; /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/  \n/*♡*/} /*♥*/else /*♥*/if /*♡*/( /*♡*/care /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/> /*♡*/0.75 /*♥*/) /*♥*/{ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/  \n/*🄸 🄻🄾🅅🄴 🅈🄾🅄*/adorned /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/+= /*♥*/\"/*\\u2661*/\" /*♥*/  \n/*🄸 🄻🄾🅅🄴 🅈🄾🅄*/} /*♥*/else /*♡*/{ /*♥*/  \n/*🄸 🄻🄾🅅🄴 🅈🄾🅄*/adorned /*♡*/+= /*♥*/\"/*\\u2665*/\" /*♡*/  \n/*♥*/}  \n/*♥*/adorned /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/+= /*♡*/bit /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/+ /*♥*/\"\\u0020\"; /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/  \n/*♥*/} /*♥*/  \n/*♡*/console.log /*♥*/(adorned); /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/  \n/*♡*/} /*♡*/  \n/*♥*/}love()  ",
        "children": [],
        "fileType": "file",
        "_id": "62b3477417f1624cb81e312a",
        "isSelectedFile": true,
        "createdAt": "2022-06-22T18:05:40.356Z",
        "updatedAt": "2022-06-22T18:05:40.356Z",
        "id": "62b3477417f1624cb81e312a"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "62b3477417f1624cb81e3129",
        "createdAt": "2022-06-22T18:05:40.356Z",
        "updatedAt": "2022-06-22T18:05:40.356Z",
        "isSelectedFile": false,
        "id": "62b3477417f1624cb81e3129"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "62b3477417f1624cb81e312b",
        "createdAt": "2022-06-22T18:05:40.356Z",
        "updatedAt": "2022-06-22T18:05:40.356Z",
        "isSelectedFile": false,
        "id": "62b3477417f1624cb81e312b"
      }
    ],
    "createdAt": "2022-06-22T16:46:44.290Z",
    "updatedAt": "2022-06-22T18:05:40.356Z",
    "id": "Ln1FYhJBN"
  },
  {
    "name": "this code spreads love (2 iters)",
    "_id": "rNrVXOVAp",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "62b3478d17f1624cb81e312d",
          "62b3478d17f1624cb81e312e",
          "62b3478d17f1624cb81e312f"
        ],
        "fileType": "folder",
        "_id": "62b3478d17f1624cb81e312c",
        "createdAt": "2022-06-22T18:05:56.214Z",
        "updatedAt": "2022-06-22T18:05:56.214Z",
        "isSelectedFile": false,
        "id": "62b3478d17f1624cb81e312c"
      },
      {
        "name": "sketch.js",
        "content": "/*♥*/function /*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/love() /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*/{ /*♥*/ /*♡*/  \n/*♡*//*♥*/function /*♥*//*♥*/r() /*♡*//*♥*/{ /*♥*/ /*♡*/  \n/*♥*//*♥*/return /*♥*//*♥*/Math.random(); /*♥*/ /*♥*/  \n/*♥*//*♥*/} /*♥*/ /*♥*/  \n/*♡*//*♥*/fs /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/= /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*/\"\" /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/+ /*♡*//*♥*/love /*♥*//*♥*/+ /*♥*//*♡*/\"love()\"; /*♡*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/  \n/*♥*//*♥*/lines /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/= /*♥*//*♡*/fs.split( /*♡*//*♥*/\"\\n\" /*♡*//*♡*/); /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*/ /*♥*/ /*♥*/  \n/*♥*//*♡*/for /*♡*//*♡*/( /*♥*//*♥*/line /*♥*//*♥*/of /*♡*//*♥*/lines /*♥*//*♥*/) /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/{ /*♥*//*♡*/ /*♥*/ /*♥*/  \n/*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/adorned /*♥*//*♥*/= /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/\"\"; /*♥*//*♥*/ /*♥*/ /*♥*/  \n/*♥*//*♥*/bits /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/= /*♡*//*♥*/line.split( /*♡*//*♡*/\"\\u0020\" /*♥*//*♡*/); /*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*♥*/ /*♡*/  \n/*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/for /*♥*//*♡*/( /*♡*//*♡*/bit /*♡*//*♡*/of /*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/bits /*♥*//*♡*/) /*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/{ /*♡*//*♥*/ /*♥*/ /*♥*/  \n/*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/care /*♡*//*♡*/= /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/r(); /*♥*/ /*♡*/  \n/*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*/if /*♥*//*♥*/( /*♡*//*♥*/care /*♥*//*♥*/< /*♥*//*♥*/0.25 /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/) /*♥*//*♡*/{ /*♥*//*♥*/ /*♡*/ /*♥*/  \n/*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/adorned /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/+= /*♥*//*♡*/\"/*🄸 🄻🄾🅅🄴 🅈🄾🅄*/\"; /*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*♥*/ /*♥*/  \n/*♥*//*♡*/} /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/else /*♥*//*♥*/if /*♡*//*♡*/( /*♥*//*♡*/care /*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/> /*♡*//*♡*/0.75 /*♥*//*♥*/) /*♥*//*♥*/{ /*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*♥*/  \n/*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/adorned /*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/+= /*♥*//*♥*/\"/*\\u2661*/\" /*♡*//*♥*/ /*♥*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/  \n/*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/} /*♡*//*♥*/else /*♥*//*♡*/{ /*♥*//*♥*/ /*♥*/ /*♥*/  \n/*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/adorned /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*/+= /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/\"/*\\u2665*/\" /*♥*//*♡*/ /*♡*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/  \n/*♥*//*♥*/} /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*♡*/  \n/*♥*//*♥*/adorned /*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/+= /*♥*//*♡*/bit /*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/+ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/\"\\u0020\"; /*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*♥*/  \n/*♡*//*♥*/} /*♥*//*♥*/ /*♥*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/  \n/*♥*//*♡*/console.log /*♡*//*♥*/(adorned); /*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*♥*/  \n/*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*/} /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*/ /*♡*/ /*♥*/  \n/*♡*//*♥*/}love()  ",
        "children": [],
        "fileType": "file",
        "_id": "62b3478d17f1624cb81e312e",
        "isSelectedFile": true,
        "createdAt": "2022-06-22T18:05:56.214Z",
        "updatedAt": "2022-06-22T18:05:56.214Z",
        "id": "62b3478d17f1624cb81e312e"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "62b3478d17f1624cb81e312d",
        "createdAt": "2022-06-22T18:05:56.214Z",
        "updatedAt": "2022-06-22T18:05:56.214Z",
        "isSelectedFile": false,
        "id": "62b3478d17f1624cb81e312d"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "62b3478d17f1624cb81e312f",
        "createdAt": "2022-06-22T18:05:56.214Z",
        "updatedAt": "2022-06-22T18:05:56.214Z",
        "isSelectedFile": false,
        "id": "62b3478d17f1624cb81e312f"
      }
    ],
    "createdAt": "2022-06-22T16:47:09.804Z",
    "updatedAt": "2022-06-22T18:05:56.214Z",
    "id": "rNrVXOVAp"
  },
  {
    "name": "this code spreads love (3 iters)",
    "_id": "BsXchqhiI",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "62b347a317f1624cb81e3131",
          "62b347a317f1624cb81e3132",
          "62b347a317f1624cb81e3133"
        ],
        "fileType": "folder",
        "_id": "62b347a317f1624cb81e3130",
        "createdAt": "2022-06-22T18:07:04.441Z",
        "updatedAt": "2022-06-22T18:07:04.441Z",
        "isSelectedFile": false,
        "id": "62b347a317f1624cb81e3130"
      },
      {
        "name": "sketch.js",
        "content": "/*🄸 🄻🄾🅅🄴 🅈🄾🅄*/function /*♡*//*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/love() /*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*/{ /*♡*//*♥*/ /*♥*//*♡*/ /*♡*/ /*♥*/  \n/*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*//*♥*/function /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*//*♥*/r() /*♥*//*♡*//*♥*/{ /*♥*//*♥*/ /*♡*//*♡*/ /*♥*/ /*♥*/  \n/*♥*//*♥*//*♥*/return /*♡*//*♥*//*♥*/Math.random(); /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/ /*♡*//*♥*/ /*♡*/ /*♥*/  \n/*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*//*♥*/} /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/ /*♡*//*♥*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*♥*/  \n/*♥*//*♡*//*♥*/fs /*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/= /*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*/\"\" /*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/+ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*//*♥*/love /*♥*//*♥*//*♥*/+ /*♥*//*♥*//*♡*/\"love()\"; /*♥*//*♡*/ /*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*♥*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/  \n/*♡*//*♥*//*♥*/lines /*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/= /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*//*♡*/fs.split( /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*//*♥*/\"\\n\" /*♥*//*♡*//*♡*/); /*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/ /*♥*//*♥*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/  \n/*♥*//*♥*//*♡*/for /*♥*//*♡*//*♡*/( /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*//*♥*/line /*♡*//*♥*//*♥*/of /*♥*//*♡*//*♥*/lines /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*//*♥*/) /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/{ /*♥*//*♥*//*♡*/ /*♥*//*♥*/ /*♥*//*♥*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*♡*/  \n/*♥*//*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/adorned /*♡*//*♥*//*♥*/= /*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/\"\"; /*♡*//*♥*//*♥*/ /*♥*//*♥*/ /*♡*//*♥*/ /*♡*/ /*♡*/  \n/*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*//*♥*/bits /*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/= /*♥*//*♡*//*♥*/line.split( /*♥*//*♡*//*♡*/\"\\u0020\" /*♡*//*♥*//*♡*/); /*♥*//*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*♥*//*♥*/ /*♡*//*♡*/ /*♡*/ /*♥*/  \n/*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/for /*♥*//*♥*//*♡*/( /*♡*//*♡*//*♡*/bit /*♡*//*♡*//*♡*/of /*♥*//*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/bits /*♥*//*♥*//*♡*/) /*♡*//*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/{ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*//*♥*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/ /*♥*//*♥*/ /*♡*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/  \n/*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/care /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*//*♡*/= /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/r(); /*♥*//*♥*/ /*♡*//*♡*/ /*♥*/ /*♡*/  \n/*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*/if /*♥*//*♥*//*♥*/( /*♥*//*♡*//*♥*/care /*♡*//*♥*//*♥*/< /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*//*♥*/0.25 /*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/) /*♥*//*♥*//*♡*/{ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*//*♥*/ /*♥*//*♡*/ /*♥*//*♥*/ /*♥*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/  \n/*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/adorned /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/+= /*♡*//*♥*//*♡*/\"/*🄸 🄻🄾🅅🄴 🅈🄾🅄*/\"; /*♥*//*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*♥*//*♥*/ /*♥*//*♥*/ /*♥*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/  \n/*♡*//*♥*//*♡*/} /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/else /*♥*//*♥*//*♥*/if /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*//*♡*/( /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*//*♡*/care /*♥*//*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/> /*♥*//*♡*//*♡*/0.75 /*♥*//*♥*//*♥*/) /*♥*//*♥*//*♥*/{ /*♥*//*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/ /*♡*/ /*♥*/  \n/*♡*//*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/adorned /*♡*//*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/+= /*♥*//*♥*//*♥*/\"/*\\u2661*/\" /*♡*//*♡*//*♥*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/ /*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*♡*/  \n/*♥*//*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/} /*♥*//*♡*//*♥*/else /*♥*//*♥*//*♡*/{ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*//*♥*/ /*♡*//*♥*/ /*♥*//*♥*/ /*♥*/ /*♥*/  \n/*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/adorned /*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*/+= /*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/\"/*\\u2665*/\" /*♥*//*♥*//*♡*/ /*♡*//*♡*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*♥*/ /*♥*/  \n/*♥*//*♥*//*♥*/} /*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*♡*//*♡*/ /*♡*/ /*♥*/  \n/*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*//*♥*/adorned /*♥*//*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/+= /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*//*♡*/bit /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/+ /*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/\"\\u0020\"; /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*♡*//*♥*/ /*♥*/ /*♡*/  \n/*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*//*♥*/} /*♡*//*♥*//*♥*/ /*♥*//*♥*/ /*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*♡*/ /*♥*/  \n/*♡*//*♥*//*♡*/console.log /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*//*♥*/(adorned); /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♥*/ /*🄸 🄻🄾🅅🄴 🅈🄾🅄*/ /*♥*/  \n/*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*/} /*♡*//*🄸 🄻🄾🅅🄴 🅈🄾🅄*//*♡*/ /*♥*//*♡*/ /*♥*//*♥*/ /*♡*/ /*♡*/  \n/*♡*//*♡*//*♥*/}love()  ",
        "children": [],
        "fileType": "file",
        "_id": "62b347a317f1624cb81e3132",
        "isSelectedFile": true,
        "createdAt": "2022-06-22T18:07:04.441Z",
        "updatedAt": "2022-06-22T18:07:04.441Z",
        "id": "62b347a317f1624cb81e3132"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "62b347a317f1624cb81e3131",
        "createdAt": "2022-06-22T18:07:04.441Z",
        "updatedAt": "2022-06-22T18:07:04.441Z",
        "isSelectedFile": false,
        "id": "62b347a317f1624cb81e3131"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "62b347a317f1624cb81e3133",
        "createdAt": "2022-06-22T18:07:04.441Z",
        "updatedAt": "2022-06-22T18:07:04.441Z",
        "isSelectedFile": false,
        "id": "62b347a317f1624cb81e3133"
      }
    ],
    "createdAt": "2022-06-22T16:47:31.327Z",
    "updatedAt": "2022-06-22T18:07:04.441Z",
    "id": "BsXchqhiI"
  },
  {
    "name": "this code spreads love (original)",
    "_id": "m6Ci5vbYgK",
    "updatedAt": "2022-06-22T18:04:43.948Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "62b20ce73ba23f6c7cc4bbef",
          "62b20ce73ba23f6c7cc4bbee",
          "62b20ce73ba23f6c7cc4bbf0"
        ],
        "fileType": "folder",
        "_id": "62b20ce73ba23f6c7cc4bbf1",
        "createdAt": "2022-06-22T18:04:43.948Z",
        "updatedAt": "2022-06-22T18:04:43.948Z",
        "isSelectedFile": false,
        "id": "62b20ce73ba23f6c7cc4bbf1"
      },
      {
        "name": "sketch.js",
        "content": "function love() {\nfunction r() {\nreturn Math.random();\n}\nfs = \"\" + love + \"love()\";\nlines = fs.split( \"\\n\" ); \nfor ( line of lines ) { \nadorned = \"\"; \nbits = line.split( \"\\u0020\" ); \nfor ( bit of bits ) { \ncare = r();\nif ( care < 0.25 ) { \nadorned += \"/*🄸 🄻🄾🅅🄴 🅈🄾🅄*/\"; \n} else if ( care > 0.75 ) { \nadorned += \"/*\\u2661*/\" \n} else { \nadorned += \"/*\\u2665*/\" \n}\nadorned += bit + \"\\u0020\"; \n} \nconsole.log (adorned); \n} \n} \nlove(); \n",
        "children": [],
        "fileType": "file",
        "_id": "62b20ce73ba23f6c7cc4bbee",
        "isSelectedFile": true,
        "createdAt": "2022-06-22T18:04:43.948Z",
        "updatedAt": "2022-06-22T18:04:43.948Z",
        "id": "62b20ce73ba23f6c7cc4bbee"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "62b20ce73ba23f6c7cc4bbef",
        "createdAt": "2022-06-22T18:04:43.948Z",
        "updatedAt": "2022-06-22T18:04:43.948Z",
        "isSelectedFile": false,
        "id": "62b20ce73ba23f6c7cc4bbef"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "62b20ce73ba23f6c7cc4bbf0",
        "createdAt": "2022-06-22T18:04:43.948Z",
        "updatedAt": "2022-06-22T18:04:43.948Z",
        "isSelectedFile": false,
        "id": "62b20ce73ba23f6c7cc4bbf0"
      }
    ],
    "createdAt": "2022-06-21T18:25:52.722Z",
    "id": "m6Ci5vbYgK"
  },
  {
    "name": "Valentine",
    "_id": "FBvDIjZsm",
    "updatedAt": "2021-02-14T17:46:43.361Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "60295d9ee110e432d30c8906",
          "60295d9ee110e432d30c8905",
          "60295d9ee110e432d30c8907"
        ],
        "fileType": "folder",
        "_id": "60295d9ee110e432d30c8908",
        "createdAt": "2021-02-14T17:46:43.361Z",
        "updatedAt": "2021-02-14T17:46:43.361Z",
        "id": "60295d9ee110e432d30c8908"
      },
      {
        "name": "sketch.js",
        "content": "/*\n* Idea from https://twitter.com/MIT/status/1360971008325406721\n* p5.js code by @ktorn\n*/\n\nlet x = 0;\nlet y = 0;\nlet t = 0\nlet size = 5;\n\nfunction setup() {\n  createCanvas(400, 400);\n  background(255);\n  fill(\"red\")\n  noStroke();\n}\n\nfunction draw() {\n  t = frameCount;\n\n  // center origin and rotate canvas 180 degrees\n  translate(width / 2, height / 2)\n  rotate(PI)\n\n  x = size * (16 * pow(sin(t), 3));\n  y = size * (13 * cos(t) - 5 * cos(2 * t) - 2 * cos(3 * t) - cos(4 * t));\n\n  circle(x, y, 5);\n\n}",
        "children": [],
        "fileType": "file",
        "_id": "60295d9ee110e432d30c8905",
        "isSelectedFile": true,
        "createdAt": "2021-02-14T17:46:43.361Z",
        "updatedAt": "2021-02-14T17:46:43.361Z",
        "id": "60295d9ee110e432d30c8905"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "60295d9ee110e432d30c8906",
        "createdAt": "2021-02-14T17:46:43.361Z",
        "updatedAt": "2021-02-14T17:46:43.361Z",
        "id": "60295d9ee110e432d30c8906"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "60295d9ee110e432d30c8907",
        "createdAt": "2021-02-14T17:46:43.361Z",
        "updatedAt": "2021-02-14T17:46:43.361Z",
        "id": "60295d9ee110e432d30c8907"
      }
    ],
    "createdAt": "2021-02-14T17:42:10.860Z",
    "id": "FBvDIjZsm"
  },
  {
    "name": "Vector Dot Product (Scalar Projection)",
    "_id": "LNdf_tdK6",
    "updatedAt": "2021-10-15T15:33:31.728Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61699ee889d35075edef60c3",
          "61699ee889d35075edef60c2",
          "61699ee889d35075edef60c4"
        ],
        "fileType": "folder",
        "_id": "61699ee889d35075edef60c5",
        "createdAt": "2021-10-15T15:33:31.728Z",
        "updatedAt": "2021-10-15T15:33:31.728Z",
        "id": "61699ee889d35075edef60c5"
      },
      {
        "name": "sketch.js",
        "content": "// Scalar Projection (Scalar Projection)\n// The Nature of Code\n// The Coding Train / Daniel Shiffman\n// https://youtu.be/DHPfoqiE4yQ\n// https://thecodingtrain.com/learning/nature-of-code/5.6-dot-product.html\n\n// Angle Between: https://editor.p5js.org/codingtrain/sketches/ORP5Yx7JX\n// Scalar Projection: https://editor.p5js.org/codingtrain/sketches/c4jmHLFQI\n\nlet path;\n\nfunction setup() {\n  createCanvas(400, 400);\n  path = createVector(200, 60);\n}\n\nfunction vectorProjection(a, b) {\n  let bCopy = b.copy().normalize();\n  let sp = a.dot(bCopy);\n  bCopy.mult(sp);\n  return bCopy;\n}\n\nfunction draw() {\n  background(0);\n  strokeWeight(4);\n  stroke(255);\n  let pos = createVector(100, 200);\n\n  let mouse = createVector(mouseX, mouseY);\n  let a = p5.Vector.sub(mouse, pos);\n\n  line(pos.x, pos.y, pos.x + a.x, pos.y + a.y);\n  line(pos.x, pos.y, pos.x + path.x, pos.y + path.y);\n\n  let v = vectorProjection(a, path);\n\n  strokeWeight(8);\n  stroke(0, 0, 255);\n  line(pos.x, pos.y, pos.x + v.x, pos.y + v.y);\n\n  strokeWeight(1);\n  stroke(255);\n  line(pos.x + a.x, pos.y + a.y, v.x + pos.x, v.y + pos.y);\n\n  fill(0, 255, 0);\n  noStroke();\n  circle(pos.x + a.x, pos.y + a.y, 16);\n\n  fill(255, 0, 0);\n  noStroke();\n  circle(v.x + pos.x, v.y + pos.y, 16);\n\n  fill(0, 255, 0);\n  noStroke();\n  // circle(pos.x, pos.y, 16);\n}",
        "children": [],
        "fileType": "file",
        "_id": "61699ee889d35075edef60c2",
        "isSelectedFile": true,
        "createdAt": "2021-10-15T15:33:31.728Z",
        "updatedAt": "2021-10-15T15:33:31.728Z",
        "id": "61699ee889d35075edef60c2"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61699ee889d35075edef60c3",
        "createdAt": "2021-10-15T15:33:31.728Z",
        "updatedAt": "2021-10-15T15:33:31.728Z",
        "id": "61699ee889d35075edef60c3"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61699ee889d35075edef60c4",
        "createdAt": "2021-10-15T15:33:31.728Z",
        "updatedAt": "2021-10-15T15:33:31.728Z",
        "id": "61699ee889d35075edef60c4"
      }
    ],
    "createdAt": "2021-10-15T15:33:31.728Z",
    "id": "LNdf_tdK6"
  },
  {
    "name": "Website background",
    "_id": "SJbh2GVk4",
    "createdAt": "2018-12-04T15:26:32.736Z",
    "updatedAt": "2018-12-04T15:48:37.773Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5c069c81d9c0ae036751b488",
          "5c069c81d9c0ae036751b489",
          "5c069c81d9c0ae036751b48a",
          "5c069ca3d9c0ae036751b48c",
          "5c069e16779968001fd03bb1"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "5c069c81d9c0ae036751b48b",
        "createdAt": "2018-12-04T15:48:37.773Z",
        "updatedAt": "2018-12-04T15:48:37.773Z",
        "id": "5c069c81d9c0ae036751b48b"
      },
      {
        "name": "sketch.js",
        "content": "/*\nFrozen brush\n\nMakes use of a delaunay algorithm to create crystal-like shapes.\nI did NOT develop delaunay.js, and not sure who the author really is to give proper credit.\n\nControls:\n\t- Drag the mouse.\n    - Press any key to toggle between fill and stroke.\n\nInspired by:\n\tMakio135's sketch www.openprocessing.org/sketch/385808\n\nAuthor:\n  Jason Labbe\n\nSite:\n  jasonlabbe3d.com\n*/\n\nvar canvas;\nvar allParticles = [];\nvar maxLevel = 5;\nvar useFill = false;\n\nvar data = [];\n\n\n// Moves to a random direction and comes to a stop.\n// Spawns other particles within its lifetime.\nfunction Particle(x, y, level) {\n  this.level = level;\n  this.life = 0;\n  \n  this.pos = new p5.Vector(x, y);\n  this.vel = p5.Vector.random2D();\n  this.vel.mult(map(this.level, 0, maxLevel, 5, 2));\n  \n  this.move = function() {\n    this.life++;\n    \n    // Add friction.\n    this.vel.mult(0.9);\n    \n    this.pos.add(this.vel);\n    \n    // Spawn a new particle if conditions are met.\n    if (this.life % 10 == 0) {\n      if (this.level > 0) {\n        this.level -= 1;\n        var newParticle = new Particle(this.pos.x, this.pos.y, this.level-1);\n        allParticles.push(newParticle);\n      }\n    }\n  }\n}\n\n\nfunction setup() {\n  canvas = createCanvas(windowWidth, windowHeight);\n  canvas.position(0,0);\n  canvas.style('z-index', '-1');\n  \n  colorMode(HSB, 360);\n  \n  textAlign(CENTER);\n  \n  // background(0);\n} \n\n\nfunction draw() {\n  // Create fade effect.\n  noStroke();\n  fill(0, 30);\n  rect(0, 0, width, height);\n  \n  // Move and spawn particles.\n  // Remove any that is below the velocity threshold.\n  for (var i = allParticles.length-1; i > -1; i--) {\n    allParticles[i].move();\n    \n    if (allParticles[i].vel.mag() < 0.01) {\n      allParticles.splice(i, 1);\n    }\n  }\n  \n  if (allParticles.length > 0) {\n    // Run script to get points to create triangles with.\n    data = Delaunay.triangulate(allParticles.map(function(pt) {\n      return [pt.pos.x, pt.pos.y];\n    }));\n  \t\n    strokeWeight(0.1);\n    \n    // Display triangles individually.\n    for (var i = 0; i < data.length; i += 3) {\n      // Collect particles that make this triangle.\n      var p1 = allParticles[data[i]];\n      var p2 = allParticles[data[i+1]];\n      var p3 = allParticles[data[i+2]];\n      \n      // Don't draw triangle if its area is too big.\n      var distThresh = 75;\n      \n      if (dist(p1.pos.x, p1.pos.y, p2.pos.x, p2.pos.y) > distThresh) {\n        continue;\n      }\n      \n      if (dist(p2.pos.x, p2.pos.y, p3.pos.x, p3.pos.y) > distThresh) {\n        continue;\n      }\n      \n      if (dist(p1.pos.x, p1.pos.y, p3.pos.x, p3.pos.y) > distThresh) {\n        continue;\n      }\n      \n      // Base its hue by the particle's life.\n      if (useFill) {\n        noStroke();\n        fill(165+p1.life*1.5, 360, 360);\n      } else {\n        noFill();\n        stroke(165+p1.life*1.5, 360, 360);\n      }\n      \n      triangle(p1.pos.x, p1.pos.y, \n               p2.pos.x, p2.pos.y, \n               p3.pos.x, p3.pos.y);\n    }\n  }\n  \n  noStroke();\n  fill(255);\n  text(\"Click and drag the mouse\\nPress any key to change to fill/stroke\", width/2, height-50);\n}\n\n\nfunction mouseMoved() {\n  allParticles.push(new Particle(mouseX, mouseY, maxLevel));\n}\n\n\nfunction keyPressed() {\n  useFill = ! useFill;\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "5c069c81d9c0ae036751b488",
        "createdAt": "2018-12-04T15:48:37.773Z",
        "updatedAt": "2018-12-04T15:48:37.773Z",
        "id": "5c069c81d9c0ae036751b488"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n\n<head>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n  <script src=\"delaunay.js\"></script>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n  <meta charset=\"utf-8\" />\n\n</head>\n\n<body>\n  <center>\n    <font color=\"#FFFFFF\">\n      <h1>Welcome to my website!\n      </h1>\n      <img src=\"tree.jpg\" width=\"25%\" height=\"25%\"/>\n      <p>This is some long block of text</p>\n      <p>This is some long block of text</p>\n      <p>This is some long block of text</p>\n      <p>This is some long block of text</p>\n      <p>This is some long block of text</p>\n    </font>\n  </center>\n  <script src=\"sketch.js\"></script>\n</body>\n\n</html>",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "5c069c81d9c0ae036751b489",
        "createdAt": "2018-12-04T15:48:37.773Z",
        "updatedAt": "2018-12-04T15:48:37.773Z",
        "id": "5c069c81d9c0ae036751b489"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n\nbody{\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "5c069c81d9c0ae036751b48a",
        "createdAt": "2018-12-04T15:48:37.773Z",
        "updatedAt": "2018-12-04T15:48:37.773Z",
        "id": "5c069c81d9c0ae036751b48a"
      },
      {
        "name": "delaunay.js",
        "content": "/*\nOrginally from https://cdn.rawgit.com/ironwallaby/delaunay/master/delaunay.js\nTweaked it so instead of raising an error it would return an empty list.\n*/\n\nvar Delaunay;\n\n(function() {\n  \"use strict\";\n\n  var EPSILON = 1.0 / 1048576.0;\n\n  function supertriangle(vertices) {\n    var xmin = Number.POSITIVE_INFINITY,\n        ymin = Number.POSITIVE_INFINITY,\n        xmax = Number.NEGATIVE_INFINITY,\n        ymax = Number.NEGATIVE_INFINITY,\n        i, dx, dy, dmax, xmid, ymid;\n\n    for(i = vertices.length; i--; ) {\n      if(vertices[i][0] < xmin) xmin = vertices[i][0];\n      if(vertices[i][0] > xmax) xmax = vertices[i][0];\n      if(vertices[i][1] < ymin) ymin = vertices[i][1];\n      if(vertices[i][1] > ymax) ymax = vertices[i][1];\n    }\n\n    dx = xmax - xmin;\n    dy = ymax - ymin;\n    dmax = Math.max(dx, dy);\n    xmid = xmin + dx * 0.5;\n    ymid = ymin + dy * 0.5;\n\n    return [\n      [xmid - 20 * dmax, ymid -      dmax],\n      [xmid            , ymid + 20 * dmax],\n      [xmid + 20 * dmax, ymid -      dmax]\n    ];\n  }\n\n  function circumcircle(vertices, i, j, k) {\n    var x1 = vertices[i][0],\n        y1 = vertices[i][1],\n        x2 = vertices[j][0],\n        y2 = vertices[j][1],\n        x3 = vertices[k][0],\n        y3 = vertices[k][1],\n        fabsy1y2 = Math.abs(y1 - y2),\n        fabsy2y3 = Math.abs(y2 - y3),\n        xc, yc, m1, m2, mx1, mx2, my1, my2, dx, dy;\n\n    /* Check for coincident points */\n    if(fabsy1y2 < EPSILON && fabsy2y3 < EPSILON)\n      return;\n      //throw new Error(\"Eek! Coincident points!\");\n\n    if(fabsy1y2 < EPSILON) {\n      m2  = -((x3 - x2) / (y3 - y2));\n      mx2 = (x2 + x3) / 2.0;\n      my2 = (y2 + y3) / 2.0;\n      xc  = (x2 + x1) / 2.0;\n      yc  = m2 * (xc - mx2) + my2;\n    }\n\n    else if(fabsy2y3 < EPSILON) {\n      m1  = -((x2 - x1) / (y2 - y1));\n      mx1 = (x1 + x2) / 2.0;\n      my1 = (y1 + y2) / 2.0;\n      xc  = (x3 + x2) / 2.0;\n      yc  = m1 * (xc - mx1) + my1;\n    }\n\n    else {\n      m1  = -((x2 - x1) / (y2 - y1));\n      m2  = -((x3 - x2) / (y3 - y2));\n      mx1 = (x1 + x2) / 2.0;\n      mx2 = (x2 + x3) / 2.0;\n      my1 = (y1 + y2) / 2.0;\n      my2 = (y2 + y3) / 2.0;\n      xc  = (m1 * mx1 - m2 * mx2 + my2 - my1) / (m1 - m2);\n      yc  = (fabsy1y2 > fabsy2y3) ?\n        m1 * (xc - mx1) + my1 :\n        m2 * (xc - mx2) + my2;\n    }\n\n    dx = x2 - xc;\n    dy = y2 - yc;\n    return {i: i, j: j, k: k, x: xc, y: yc, r: dx * dx + dy * dy};\n  }\n\n  function dedup(edges) {\n    var i, j, a, b, m, n;\n\n    for(j = edges.length; j; ) {\n      b = edges[--j];\n      a = edges[--j];\n\n      for(i = j; i; ) {\n        n = edges[--i];\n        m = edges[--i];\n\n        if((a === m && b === n) || (a === n && b === m)) {\n          edges.splice(j, 2);\n          edges.splice(i, 2);\n          break;\n        }\n      }\n    }\n  }\n\n  Delaunay = {\n    triangulate: function(vertices, key) {\n      var n = vertices.length,\n          i, j, indices, st, open, closed, edges, dx, dy, a, b, c;\n\n      /* Bail if there aren't enough vertices to form any triangles. */\n      if(n < 3)\n        return [];\n\n      /* Slice out the actual vertices from the passed objects. (Duplicate the\n       * array even if we don't, though, since we need to make a supertriangle\n       * later on!) */\n      vertices = vertices.slice(0);\n\n      if(key)\n        for(i = n; i--; )\n          vertices[i] = vertices[i][key];\n\n      /* Make an array of indices into the vertex array, sorted by the\n       * vertices' x-position. */\n      indices = new Array(n);\n\n      for(i = n; i--; )\n        indices[i] = i;\n\n      indices.sort(function(i, j) {\n        return vertices[j][0] - vertices[i][0];\n      });\n\n      /* Next, find the vertices of the supertriangle (which contains all other\n       * triangles), and append them onto the end of a (copy of) the vertex\n       * array. */\n      st = supertriangle(vertices);\n      vertices.push(st[0], st[1], st[2]);\n      \n      /* Initialize the open list (containing the supertriangle and nothing\n       * else) and the closed list (which is empty since we havn't processed\n       * any triangles yet). */\n      var circCircle = circumcircle(vertices, n + 0, n + 1, n + 2);\n      if (circCircle == undefined)\n        return [];\n      \n      open   = [circumcircle(vertices, n + 0, n + 1, n + 2)];\n      closed = [];\n      edges  = [];\n      \n      /* Incrementally add each vertex to the mesh. */\n      for(i = indices.length; i--; edges.length = 0) {\n        c = indices[i];\n\n        /* For each open triangle, check to see if the current point is\n         * inside it's circumcircle. If it is, remove the triangle and add\n         * it's edges to an edge list. */\n        for(j = open.length; j--; ) {\n          /* If this point is to the right of this triangle's circumcircle,\n           * then this triangle should never get checked again. Remove it\n           * from the open list, add it to the closed list, and skip. */\n          dx = vertices[c][0] - open[j].x;\n          if(dx > 0.0 && dx * dx > open[j].r) {\n            closed.push(open[j]);\n            open.splice(j, 1);\n            continue;\n          }\n\n          /* If we're outside the circumcircle, skip this triangle. */\n          dy = vertices[c][1] - open[j].y;\n          if(dx * dx + dy * dy - open[j].r > EPSILON)\n            continue;\n\n          /* Remove the triangle and add it's edges to the edge list. */\n          edges.push(\n            open[j].i, open[j].j,\n            open[j].j, open[j].k,\n            open[j].k, open[j].i\n          );\n          open.splice(j, 1);\n        }\n\n        /* Remove any doubled edges. */\n        dedup(edges);\n\n        /* Add a new triangle for each edge. */\n        for(j = edges.length; j; ) {\n          b = edges[--j];\n          a = edges[--j];\n          open.push(circumcircle(vertices, a, b, c));\n        }\n      }\n\n      /* Copy any remaining open triangles to the closed list, and then\n       * remove any triangles that share a vertex with the supertriangle,\n       * building a list of triplets that represent triangles. */\n      for(i = open.length; i--; )\n        closed.push(open[i]);\n      open.length = 0;\n\n      for(i = closed.length; i--; )\n        if(closed[i].i < n && closed[i].j < n && closed[i].k < n)\n          open.push(closed[i].i, closed[i].j, closed[i].k);\n\n      /* Yay, we're done! */\n      return open;\n    },\n    contains: function(tri, p) {\n      /* Bounding box test first, for quick rejections. */\n      if((p[0] < tri[0][0] && p[0] < tri[1][0] && p[0] < tri[2][0]) ||\n         (p[0] > tri[0][0] && p[0] > tri[1][0] && p[0] > tri[2][0]) ||\n         (p[1] < tri[0][1] && p[1] < tri[1][1] && p[1] < tri[2][1]) ||\n         (p[1] > tri[0][1] && p[1] > tri[1][1] && p[1] > tri[2][1]))\n        return null;\n\n      var a = tri[1][0] - tri[0][0],\n          b = tri[2][0] - tri[0][0],\n          c = tri[1][1] - tri[0][1],\n          d = tri[2][1] - tri[0][1],\n          i = a * d - b * c;\n\n      /* Degenerate tri. */\n      if(i === 0.0)\n        return null;\n\n      var u = (d * (p[0] - tri[0][0]) - b * (p[1] - tri[0][1])) / i,\n          v = (a * (p[1] - tri[0][1]) - c * (p[0] - tri[0][0])) / i;\n\n      /* If we're outside the tri, fail. */\n      if(u < 0.0 || v < 0.0 || (u + v) > 1.0)\n        return null;\n\n      return [u, v];\n    }\n  };\n\n  if(typeof module !== \"undefined\")\n    module.exports = Delaunay;\n})();",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "5c069ca3d9c0ae036751b48c",
        "createdAt": "2018-12-04T15:48:37.773Z",
        "updatedAt": "2018-12-04T15:48:37.773Z",
        "id": "5c069ca3d9c0ae036751b48c"
      },
      {
        "name": "tree.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "url": "https://assets.editor.p5js.org/5bfacdc6b17206001f526f0d/9acdf2b8-d2d4-499f-bd67-e88ecc4c4e91.jpg",
        "_id": "5c069e16779968001fd03bb1",
        "updatedAt": "2018-12-04T15:48:37.773Z",
        "createdAt": "2018-12-04T15:48:37.773Z",
        "id": "5c069e16779968001fd03bb1"
      }
    ],
    "id": "SJbh2GVk4"
  },
  {
    "name": "wg3.2",
    "_id": "Fswfyr9et",
    "updatedAt": "2021-05-23T10:11:24.540Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "60a9ce46a599c429a0d89f3a",
          "60a9ce46a599c429a0d89f39",
          "60a9ce46a599c429a0d89f3b"
        ],
        "fileType": "folder",
        "_id": "60a9ce46a599c429a0d89f3c",
        "createdAt": "2021-05-23T10:11:24.540Z",
        "updatedAt": "2021-05-23T10:11:24.540Z",
        "id": "60a9ce46a599c429a0d89f3c"
      },
      {
        "name": "sketch.js",
        "content": "// Recursive tree for WG3.2\n// @ktorn\n// Adapted from: https://youtu.be/0jjeOYMjmDU\n\n// var angle = 1.37;\nvar angle = 0.87; // magic number\nvar slider;\n\nfunction setup() {\n  createCanvas(800, 800);\n  \n  //slider = createSlider(0, PI, angle, 0.01);\n  //strokeCap(SQUARE);\n  \n  textFont('Courier New');\n  strokeWeight(2);\n  textAlign(CENTER);\n  fill(0)\n}\n\nfunction draw() {\n  background(\"#72ffbe\");\n  \n  stroke(0);\n  push();\n  translate(width/2, height/2);\n  rotate(PI);\n  translate(-width/2, -height/2);\n  \n  if(slider) {\n    angle = slider.value();\n  }\n  \n  translate(width/2, height);\n  branch(width / 3);\n  pop();\n  \n  textSize(80);\n  text('WG3.2', width /2 , height - 50);\n  textSize(20);\n  strokeWeight(1);\n  text('#hicathon', width /2 , height - 20);\n  \n\n}\n\nfunction branch(len) {\n  strokeWeight(len/5)\n  line(0, 0, 0, -len);\n  translate(0, -len);\n  if (len > 1) {\n    push();\n    rotate(angle);\n    branch(len * 0.64);\n    pop();\n    push();\n    rotate(-angle);\n    branch(len * 0.64);\n    pop();\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "60a9ce46a599c429a0d89f39",
        "isSelectedFile": true,
        "createdAt": "2021-05-23T10:11:24.540Z",
        "updatedAt": "2021-05-23T10:11:24.540Z",
        "id": "60a9ce46a599c429a0d89f39"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.3.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.3.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "60a9ce46a599c429a0d89f3a",
        "createdAt": "2021-05-23T10:11:24.540Z",
        "updatedAt": "2021-05-23T10:11:24.540Z",
        "id": "60a9ce46a599c429a0d89f3a"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "60a9ce46a599c429a0d89f3b",
        "createdAt": "2021-05-23T10:11:24.540Z",
        "updatedAt": "2021-05-23T10:11:24.540Z",
        "id": "60a9ce46a599c429a0d89f3b"
      }
    ],
    "createdAt": "2021-05-23T03:39:25.143Z",
    "id": "Fswfyr9et"
  },
  {
    "name": "words",
    "_id": "LVt0UeE7P",
    "updatedAt": "2021-10-25T09:26:18.259Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "61766f6eddafe30024a36af8",
          "61766d4566cde0c456cb3b22",
          "61766d4566cde0c456cb3b21",
          "61766d4566cde0c456cb3b23",
          "61766ead66cde0c456cb3b25"
        ],
        "fileType": "folder",
        "_id": "61766d4566cde0c456cb3b24",
        "isSelectedFile": false,
        "createdAt": "2021-10-25T09:26:18.259Z",
        "updatedAt": "2021-10-25T09:26:18.259Z",
        "id": "61766d4566cde0c456cb3b24"
      },
      {
        "name": "sketch.js",
        "content": "let fadingwords = []\n\n\nfunction setup() {\n  createCanvas(800, 800);\n}\n\nfunction draw() {\n  background(0);\n  \n  if (frameCount % 300 == 0) {\n    fadingwords.push(new FadedWord(random(words), random(0, width-100), random(100, height-100)));\n  }\n  \n  for (let i = fadingwords.length-1; i >=0; i--) {\n    let word = fadingwords[i];\n    word.render();\n    if (word.isDone) {\n      fadingwords.splice(i, 1);\n    }\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "61766d4566cde0c456cb3b21",
        "isSelectedFile": true,
        "createdAt": "2021-10-25T09:26:18.259Z",
        "updatedAt": "2021-10-25T09:26:18.259Z",
        "id": "61766d4566cde0c456cb3b21"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"words.js\"></script>\n    <script src=\"fadedword.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "61766d4566cde0c456cb3b22",
        "isSelectedFile": false,
        "createdAt": "2021-10-25T09:26:18.259Z",
        "updatedAt": "2021-10-25T09:26:18.259Z",
        "id": "61766d4566cde0c456cb3b22"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "61766d4566cde0c456cb3b23",
        "isSelectedFile": false,
        "createdAt": "2021-10-25T09:26:18.259Z",
        "updatedAt": "2021-10-25T09:26:18.259Z",
        "id": "61766d4566cde0c456cb3b23"
      },
      {
        "name": "words.js",
        "content": "let words = [\"abandon\",\n\"ability\",\n\"able\",\n\"about\",\n\"above\",\n\"absent\",\n\"absorb\",\n\"abstract\",\n\"absurd\",\n\"abuse\",\n\"access\",\n\"accident\",\n\"account\",\n\"accuse\",\n\"achieve\",\n\"acid\",\n\"acoustic\",\n\"acquire\",\n\"across\",\n\"act\",\n\"action\",\n\"actor\",\n\"actress\",\n\"actual\",\n\"adapt\",\n\"add\",\n\"addict\",\n\"address\",\n\"adjust\",\n\"admit\",\n\"adult\",\n\"advance\",\n\"advice\",\n\"aerobic\",\n\"affair\",\n\"afford\",\n\"afraid\",\n\"again\",\n\"age\",\n\"agent\",\n\"agree\",\n\"ahead\",\n\"aim\",\n\"air\",\n\"airport\",\n\"aisle\",\n\"alarm\",\n\"album\",\n\"alcohol\",\n\"alert\",\n\"alien\",\n\"all\",\n\"alley\",\n\"allow\",\n\"almost\",\n\"alone\",\n\"alpha\",\n\"already\",\n\"also\",\n\"alter\",\n\"always\",\n\"amateur\",\n\"amazing\",\n\"among\",\n\"amount\",\n\"amused\",\n\"analyst\",\n\"anchor\",\n\"ancient\",\n\"anger\",\n\"angle\",\n\"angry\",\n\"animal\",\n\"ankle\",\n\"announce\",\n\"annual\",\n\"another\",\n\"answer\",\n\"antenna\",\n\"antique\",\n\"anxiety\",\n\"any\",\n\"apart\",\n\"apology\",\n\"appear\",\n\"apple\",\n\"approve\",\n\"april\",\n\"arch\",\n\"arctic\",\n\"area\",\n\"arena\",\n\"argue\",\n\"arm\",\n\"armed\",\n\"armor\",\n\"army\",\n\"around\",\n\"arrange\",\n\"arrest\",\n\"arrive\",\n\"arrow\",\n\"art\",\n\"artefact\",\n\"artist\",\n\"artwork\",\n\"ask\",\n\"aspect\",\n\"assault\",\n\"asset\",\n\"assist\",\n\"assume\",\n\"asthma\",\n\"athlete\",\n\"atom\",\n\"attack\",\n\"attend\",\n\"attitude\",\n\"attract\",\n\"auction\",\n\"audit\",\n\"august\",\n\"aunt\",\n\"author\",\n\"auto\",\n\"autumn\",\n\"average\",\n\"avocado\",\n\"avoid\",\n\"awake\",\n\"aware\",\n\"away\",\n\"awesome\",\n\"awful\",\n\"awkward\",\n\"axis\",\n\"baby\",\n\"bachelor\",\n\"bacon\",\n\"badge\",\n\"bag\",\n\"balance\",\n\"balcony\",\n\"ball\",\n\"bamboo\",\n\"banana\",\n\"banner\",\n\"bar\",\n\"barely\",\n\"bargain\",\n\"barrel\",\n\"base\",\n\"basic\",\n\"basket\",\n\"battle\",\n\"beach\",\n\"bean\",\n\"beauty\",\n\"because\",\n\"become\",\n\"beef\",\n\"before\",\n\"begin\",\n\"behave\",\n\"behind\",\n\"believe\",\n\"below\",\n\"belt\",\n\"bench\",\n\"benefit\",\n\"best\",\n\"betray\",\n\"better\",\n\"between\",\n\"beyond\",\n\"bicycle\",\n\"bid\",\n\"bike\",\n\"bind\",\n\"biology\",\n\"bird\",\n\"birth\",\n\"bitter\",\n\"black\",\n\"blade\",\n\"blame\",\n\"blanket\",\n\"blast\",\n\"bleak\",\n\"bless\",\n\"blind\",\n\"blood\",\n\"blossom\",\n\"blouse\",\n\"blue\",\n\"blur\",\n\"blush\",\n\"board\",\n\"boat\",\n\"body\",\n\"boil\",\n\"bomb\",\n\"bone\",\n\"bonus\",\n\"book\",\n\"boost\",\n\"border\",\n\"boring\",\n\"borrow\",\n\"boss\",\n\"bottom\",\n\"bounce\",\n\"box\",\n\"boy\",\n\"bracket\",\n\"brain\",\n\"brand\",\n\"brass\",\n\"brave\",\n\"bread\",\n\"breeze\",\n\"brick\",\n\"bridge\",\n\"brief\",\n\"bright\",\n\"bring\",\n\"brisk\",\n\"broccoli\",\n\"broken\",\n\"bronze\",\n\"broom\",\n\"brother\",\n\"brown\",\n\"brush\",\n\"bubble\",\n\"buddy\",\n\"budget\",\n\"buffalo\",\n\"build\",\n\"bulb\",\n\"bulk\",\n\"bullet\",\n\"bundle\",\n\"bunker\",\n\"burden\",\n\"burger\",\n\"burst\",\n\"bus\",\n\"business\",\n\"busy\",\n\"butter\",\n\"buyer\",\n\"buzz\",\n\"cabbage\",\n\"cabin\",\n\"cable\",\n\"cactus\",\n\"cage\",\n\"cake\",\n\"call\",\n\"calm\",\n\"camera\",\n\"camp\",\n\"can\",\n\"canal\",\n\"cancel\",\n\"candy\",\n\"cannon\",\n\"canoe\",\n\"canvas\",\n\"canyon\",\n\"capable\",\n\"capital\",\n\"captain\",\n\"car\",\n\"carbon\",\n\"card\",\n\"cargo\",\n\"carpet\",\n\"carry\",\n\"cart\",\n\"case\",\n\"cash\",\n\"casino\",\n\"castle\",\n\"casual\",\n\"cat\",\n\"catalog\",\n\"catch\",\n\"category\",\n\"cattle\",\n\"caught\",\n\"cause\",\n\"caution\",\n\"cave\",\n\"ceiling\",\n\"celery\",\n\"cement\",\n\"census\",\n\"century\",\n\"cereal\",\n\"certain\",\n\"chair\",\n\"chalk\",\n\"champion\",\n\"change\",\n\"chaos\",\n\"chapter\",\n\"charge\",\n\"chase\",\n\"chat\",\n\"cheap\",\n\"check\",\n\"cheese\",\n\"chef\",\n\"cherry\",\n\"chest\",\n\"chicken\",\n\"chief\",\n\"child\",\n\"chimney\",\n\"choice\",\n\"choose\",\n\"chronic\",\n\"chuckle\",\n\"chunk\",\n\"churn\",\n\"cigar\",\n\"cinnamon\",\n\"circle\",\n\"citizen\",\n\"city\",\n\"civil\",\n\"claim\",\n\"clap\",\n\"clarify\",\n\"claw\",\n\"clay\",\n\"clean\",\n\"clerk\",\n\"clever\",\n\"click\",\n\"client\",\n\"cliff\",\n\"climb\",\n\"clinic\",\n\"clip\",\n\"clock\",\n\"clog\",\n\"close\",\n\"cloth\",\n\"cloud\",\n\"clown\",\n\"club\",\n\"clump\",\n\"cluster\",\n\"clutch\",\n\"coach\",\n\"coast\",\n\"coconut\",\n\"code\",\n\"coffee\",\n\"coil\",\n\"coin\",\n\"collect\",\n\"color\",\n\"column\",\n\"combine\",\n\"come\",\n\"comfort\",\n\"comic\",\n\"common\",\n\"company\",\n\"concert\",\n\"conduct\",\n\"confirm\",\n\"congress\",\n\"connect\",\n\"consider\",\n\"control\",\n\"convince\",\n\"cook\",\n\"cool\",\n\"copper\",\n\"copy\",\n\"coral\",\n\"core\",\n\"corn\",\n\"correct\",\n\"cost\",\n\"cotton\",\n\"couch\",\n\"country\",\n\"couple\",\n\"course\",\n\"cousin\",\n\"cover\",\n\"coyote\",\n\"crack\",\n\"cradle\",\n\"craft\",\n\"cram\",\n\"crane\",\n\"crash\",\n\"crater\",\n\"crawl\",\n\"crazy\",\n\"cream\",\n\"credit\",\n\"creek\",\n\"crew\",\n\"cricket\",\n\"crime\",\n\"crisp\",\n\"critic\",\n\"crop\",\n\"cross\",\n\"crouch\",\n\"crowd\",\n\"crucial\",\n\"cruel\",\n\"cruise\",\n\"crumble\",\n\"crunch\",\n\"crush\",\n\"cry\",\n\"crystal\",\n\"cube\",\n\"culture\",\n\"cup\",\n\"cupboard\",\n\"curious\",\n\"current\",\n\"curtain\",\n\"curve\",\n\"cushion\",\n\"custom\",\n\"cute\",\n\"cycle\",\n\"dad\",\n\"damage\",\n\"damp\",\n\"dance\",\n\"danger\",\n\"daring\",\n\"dash\",\n\"daughter\",\n\"dawn\",\n\"day\",\n\"deal\",\n\"debate\",\n\"debris\",\n\"decade\",\n\"december\",\n\"decide\",\n\"decline\",\n\"decorate\",\n\"decrease\",\n\"deer\",\n\"defense\",\n\"define\",\n\"defy\",\n\"degree\",\n\"delay\",\n\"deliver\",\n\"demand\",\n\"demise\",\n\"denial\",\n\"dentist\",\n\"deny\",\n\"depart\",\n\"depend\",\n\"deposit\",\n\"depth\",\n\"deputy\",\n\"derive\",\n\"describe\",\n\"desert\",\n\"design\",\n\"desk\",\n\"despair\",\n\"destroy\",\n\"detail\",\n\"detect\",\n\"develop\",\n\"device\",\n\"devote\",\n\"diagram\",\n\"dial\",\n\"diamond\",\n\"diary\",\n\"dice\",\n\"diesel\",\n\"diet\",\n\"differ\",\n\"digital\",\n\"dignity\",\n\"dilemma\",\n\"dinner\",\n\"dinosaur\",\n\"direct\",\n\"dirt\",\n\"disagree\",\n\"discover\",\n\"disease\",\n\"dish\",\n\"dismiss\",\n\"disorder\",\n\"display\",\n\"distance\",\n\"divert\",\n\"divide\",\n\"divorce\",\n\"dizzy\",\n\"doctor\",\n\"document\",\n\"dog\",\n\"doll\",\n\"dolphin\",\n\"domain\",\n\"donate\",\n\"donkey\",\n\"donor\",\n\"door\",\n\"dose\",\n\"double\",\n\"dove\",\n\"draft\",\n\"dragon\",\n\"drama\",\n\"drastic\",\n\"draw\",\n\"dream\",\n\"dress\",\n\"drift\",\n\"drill\",\n\"drink\",\n\"drip\",\n\"drive\",\n\"drop\",\n\"drum\",\n\"dry\",\n\"duck\",\n\"dumb\",\n\"dune\",\n\"during\",\n\"dust\",\n\"dutch\",\n\"duty\",\n\"dwarf\",\n\"dynamic\",\n\"eager\",\n\"eagle\",\n\"early\",\n\"earn\",\n\"earth\",\n\"easily\",\n\"east\",\n\"easy\",\n\"echo\",\n\"ecology\",\n\"economy\",\n\"edge\",\n\"edit\",\n\"educate\",\n\"effort\",\n\"egg\",\n\"eight\",\n\"either\",\n\"elbow\",\n\"elder\",\n\"electric\",\n\"elegant\",\n\"element\",\n\"elephant\",\n\"elevator\",\n\"elite\",\n\"else\",\n\"embark\",\n\"embody\",\n\"embrace\",\n\"emerge\",\n\"emotion\",\n\"employ\",\n\"empower\",\n\"empty\",\n\"enable\",\n\"enact\",\n\"end\",\n\"endless\",\n\"endorse\",\n\"enemy\",\n\"energy\",\n\"enforce\",\n\"engage\",\n\"engine\",\n\"enhance\",\n\"enjoy\",\n\"enlist\",\n\"enough\",\n\"enrich\",\n\"enroll\",\n\"ensure\",\n\"enter\",\n\"entire\",\n\"entry\",\n\"envelope\",\n\"episode\",\n\"equal\",\n\"equip\",\n\"era\",\n\"erase\",\n\"erode\",\n\"erosion\",\n\"error\",\n\"erupt\",\n\"escape\",\n\"essay\",\n\"essence\",\n\"estate\",\n\"eternal\",\n\"ethics\",\n\"evidence\",\n\"evil\",\n\"evoke\",\n\"evolve\",\n\"exact\",\n\"example\",\n\"excess\",\n\"exchange\",\n\"excite\",\n\"exclude\",\n\"excuse\",\n\"execute\",\n\"exercise\",\n\"exhaust\",\n\"exhibit\",\n\"exile\",\n\"exist\",\n\"exit\",\n\"exotic\",\n\"expand\",\n\"expect\",\n\"expire\",\n\"explain\",\n\"expose\",\n\"express\",\n\"extend\",\n\"extra\",\n\"eye\",\n\"eyebrow\",\n\"fabric\",\n\"face\",\n\"faculty\",\n\"fade\",\n\"faint\",\n\"faith\",\n\"fall\",\n\"false\",\n\"fame\",\n\"family\",\n\"famous\",\n\"fan\",\n\"fancy\",\n\"fantasy\",\n\"farm\",\n\"fashion\",\n\"fat\",\n\"fatal\",\n\"father\",\n\"fatigue\",\n\"fault\",\n\"favorite\",\n\"feature\",\n\"february\",\n\"federal\",\n\"fee\",\n\"feed\",\n\"feel\",\n\"female\",\n\"fence\",\n\"festival\",\n\"fetch\",\n\"fever\",\n\"few\",\n\"fiber\",\n\"fiction\",\n\"field\",\n\"figure\",\n\"file\",\n\"film\",\n\"filter\",\n\"final\",\n\"find\",\n\"fine\",\n\"finger\",\n\"finish\",\n\"fire\",\n\"firm\",\n\"first\",\n\"fiscal\",\n\"fish\",\n\"fit\",\n\"fitness\",\n\"fix\",\n\"flag\",\n\"flame\",\n\"flash\",\n\"flat\",\n\"flavor\",\n\"flee\",\n\"flight\",\n\"flip\",\n\"float\",\n\"flock\",\n\"floor\",\n\"flower\",\n\"fluid\",\n\"flush\",\n\"fly\",\n\"foam\",\n\"focus\",\n\"fog\",\n\"foil\",\n\"fold\",\n\"follow\",\n\"food\",\n\"foot\",\n\"force\",\n\"forest\",\n\"forget\",\n\"fork\",\n\"fortune\",\n\"forum\",\n\"forward\",\n\"fossil\",\n\"foster\",\n\"found\",\n\"fox\",\n\"fragile\",\n\"frame\",\n\"frequent\",\n\"fresh\",\n\"friend\",\n\"fringe\",\n\"frog\",\n\"front\",\n\"frost\",\n\"frown\",\n\"frozen\",\n\"fruit\",\n\"fuel\",\n\"fun\",\n\"funny\",\n\"furnace\",\n\"fury\",\n\"future\",\n\"gadget\",\n\"gain\",\n\"galaxy\",\n\"gallery\",\n\"game\",\n\"gap\",\n\"garage\",\n\"garbage\",\n\"garden\",\n\"garlic\",\n\"garment\",\n\"gas\",\n\"gasp\",\n\"gate\",\n\"gather\",\n\"gauge\",\n\"gaze\",\n\"general\",\n\"genius\",\n\"genre\",\n\"gentle\",\n\"genuine\",\n\"gesture\",\n\"ghost\",\n\"giant\",\n\"gift\",\n\"giggle\",\n\"ginger\",\n\"giraffe\",\n\"girl\",\n\"give\",\n\"glad\",\n\"glance\",\n\"glare\",\n\"glass\",\n\"glide\",\n\"glimpse\",\n\"globe\",\n\"gloom\",\n\"glory\",\n\"glove\",\n\"glow\",\n\"glue\",\n\"goat\",\n\"goddess\",\n\"gold\",\n\"good\",\n\"goose\",\n\"gorilla\",\n\"gospel\",\n\"gossip\",\n\"govern\",\n\"gown\",\n\"grab\",\n\"grace\",\n\"grain\",\n\"grant\",\n\"grape\",\n\"grass\",\n\"gravity\",\n\"great\",\n\"green\",\n\"grid\",\n\"grief\",\n\"grit\",\n\"grocery\",\n\"group\",\n\"grow\",\n\"grunt\",\n\"guard\",\n\"guess\",\n\"guide\",\n\"guilt\",\n\"guitar\",\n\"gun\",\n\"gym\",\n\"habit\",\n\"hair\",\n\"half\",\n\"hammer\",\n\"hamster\",\n\"hand\",\n\"happy\",\n\"harbor\",\n\"hard\",\n\"harsh\",\n\"harvest\",\n\"hat\",\n\"have\",\n\"hawk\",\n\"hazard\",\n\"head\",\n\"health\",\n\"heart\",\n\"heavy\",\n\"hedgehog\",\n\"height\",\n\"hello\",\n\"helmet\",\n\"help\",\n\"hen\",\n\"hero\",\n\"hidden\",\n\"high\",\n\"hill\",\n\"hint\",\n\"hip\",\n\"hire\",\n\"history\",\n\"hobby\",\n\"hockey\",\n\"hold\",\n\"hole\",\n\"holiday\",\n\"hollow\",\n\"home\",\n\"honey\",\n\"hood\",\n\"hope\",\n\"horn\",\n\"horror\",\n\"horse\",\n\"hospital\",\n\"host\",\n\"hotel\",\n\"hour\",\n\"hover\",\n\"hub\",\n\"huge\",\n\"human\",\n\"humble\",\n\"humor\",\n\"hundred\",\n\"hungry\",\n\"hunt\",\n\"hurdle\",\n\"hurry\",\n\"hurt\",\n\"husband\",\n\"hybrid\",\n\"ice\",\n\"icon\",\n\"idea\",\n\"identify\",\n\"idle\",\n\"ignore\",\n\"ill\",\n\"illegal\",\n\"illness\",\n\"image\",\n\"imitate\",\n\"immense\",\n\"immune\",\n\"impact\",\n\"impose\",\n\"improve\",\n\"impulse\",\n\"inch\",\n\"include\",\n\"income\",\n\"increase\",\n\"index\",\n\"indicate\",\n\"indoor\",\n\"industry\",\n\"infant\",\n\"inflict\",\n\"inform\",\n\"inhale\",\n\"inherit\",\n\"initial\",\n\"inject\",\n\"injury\",\n\"inmate\",\n\"inner\",\n\"innocent\",\n\"input\",\n\"inquiry\",\n\"insane\",\n\"insect\",\n\"inside\",\n\"inspire\",\n\"install\",\n\"intact\",\n\"interest\",\n\"into\",\n\"invest\",\n\"invite\",\n\"involve\",\n\"iron\",\n\"island\",\n\"isolate\",\n\"issue\",\n\"item\",\n\"ivory\",\n\"jacket\",\n\"jaguar\",\n\"jar\",\n\"jazz\",\n\"jealous\",\n\"jeans\",\n\"jelly\",\n\"jewel\",\n\"job\",\n\"join\",\n\"joke\",\n\"journey\",\n\"joy\",\n\"judge\",\n\"juice\",\n\"jump\",\n\"jungle\",\n\"junior\",\n\"junk\",\n\"just\",\n\"kangaroo\",\n\"keen\",\n\"keep\",\n\"ketchup\",\n\"key\",\n\"kick\",\n\"kid\",\n\"kidney\",\n\"kind\",\n\"kingdom\",\n\"kiss\",\n\"kit\",\n\"kitchen\",\n\"kite\",\n\"kitten\",\n\"kiwi\",\n\"knee\",\n\"knife\",\n\"knock\",\n\"know\",\n\"lab\",\n\"label\",\n\"labor\",\n\"ladder\",\n\"lady\",\n\"lake\",\n\"lamp\",\n\"language\",\n\"laptop\",\n\"large\",\n\"later\",\n\"latin\",\n\"laugh\",\n\"laundry\",\n\"lava\",\n\"law\",\n\"lawn\",\n\"lawsuit\",\n\"layer\",\n\"lazy\",\n\"leader\",\n\"leaf\",\n\"learn\",\n\"leave\",\n\"lecture\",\n\"left\",\n\"leg\",\n\"legal\",\n\"legend\",\n\"leisure\",\n\"lemon\",\n\"lend\",\n\"length\",\n\"lens\",\n\"leopard\",\n\"lesson\",\n\"letter\",\n\"level\",\n\"liar\",\n\"liberty\",\n\"library\",\n\"license\",\n\"life\",\n\"lift\",\n\"light\",\n\"like\",\n\"limb\",\n\"limit\",\n\"link\",\n\"lion\",\n\"liquid\",\n\"list\",\n\"little\",\n\"live\",\n\"lizard\",\n\"load\",\n\"loan\",\n\"lobster\",\n\"local\",\n\"lock\",\n\"logic\",\n\"lonely\",\n\"long\",\n\"loop\",\n\"lottery\",\n\"loud\",\n\"lounge\",\n\"love\",\n\"loyal\",\n\"lucky\",\n\"luggage\",\n\"lumber\",\n\"lunar\",\n\"lunch\",\n\"luxury\",\n\"lyrics\",\n\"machine\",\n\"mad\",\n\"magic\",\n\"magnet\",\n\"maid\",\n\"mail\",\n\"main\",\n\"major\",\n\"make\",\n\"mammal\",\n\"man\",\n\"manage\",\n\"mandate\",\n\"mango\",\n\"mansion\",\n\"manual\",\n\"maple\",\n\"marble\",\n\"march\",\n\"margin\",\n\"marine\",\n\"market\",\n\"marriage\",\n\"mask\",\n\"mass\",\n\"master\",\n\"match\",\n\"material\",\n\"math\",\n\"matrix\",\n\"matter\",\n\"maximum\",\n\"maze\",\n\"meadow\",\n\"mean\",\n\"measure\",\n\"meat\",\n\"mechanic\",\n\"medal\",\n\"media\",\n\"melody\",\n\"melt\",\n\"member\",\n\"memory\",\n\"mention\",\n\"menu\",\n\"mercy\",\n\"merge\",\n\"merit\",\n\"merry\",\n\"mesh\",\n\"message\",\n\"metal\",\n\"method\",\n\"middle\",\n\"midnight\",\n\"milk\",\n\"million\",\n\"mimic\",\n\"mind\",\n\"minimum\",\n\"minor\",\n\"minute\",\n\"miracle\",\n\"mirror\",\n\"misery\",\n\"miss\",\n\"mistake\",\n\"mix\",\n\"mixed\",\n\"mixture\",\n\"mobile\",\n\"model\",\n\"modify\",\n\"mom\",\n\"moment\",\n\"monitor\",\n\"monkey\",\n\"monster\",\n\"month\",\n\"moon\",\n\"moral\",\n\"more\",\n\"morning\",\n\"mosquito\",\n\"mother\",\n\"motion\",\n\"motor\",\n\"mountain\",\n\"mouse\",\n\"move\",\n\"movie\",\n\"much\",\n\"muffin\",\n\"mule\",\n\"multiply\",\n\"muscle\",\n\"museum\",\n\"mushroom\",\n\"music\",\n\"must\",\n\"mutual\",\n\"myself\",\n\"mystery\",\n\"myth\",\n\"naive\",\n\"name\",\n\"napkin\",\n\"narrow\",\n\"nasty\",\n\"nation\",\n\"nature\",\n\"near\",\n\"neck\",\n\"need\",\n\"negative\",\n\"neglect\",\n\"neither\",\n\"nephew\",\n\"nerve\",\n\"nest\",\n\"net\",\n\"network\",\n\"neutral\",\n\"never\",\n\"news\",\n\"next\",\n\"nice\",\n\"night\",\n\"noble\",\n\"noise\",\n\"nominee\",\n\"noodle\",\n\"normal\",\n\"north\",\n\"nose\",\n\"notable\",\n\"note\",\n\"nothing\",\n\"notice\",\n\"novel\",\n\"now\",\n\"nuclear\",\n\"number\",\n\"nurse\",\n\"nut\",\n\"oak\",\n\"obey\",\n\"object\",\n\"oblige\",\n\"obscure\",\n\"observe\",\n\"obtain\",\n\"obvious\",\n\"occur\",\n\"ocean\",\n\"october\",\n\"odor\",\n\"off\",\n\"offer\",\n\"office\",\n\"often\",\n\"oil\",\n\"okay\",\n\"old\",\n\"olive\",\n\"olympic\",\n\"omit\",\n\"once\",\n\"one\",\n\"onion\",\n\"online\",\n\"only\",\n\"open\",\n\"opera\",\n\"opinion\",\n\"oppose\",\n\"option\",\n\"orange\",\n\"orbit\",\n\"orchard\",\n\"order\",\n\"ordinary\",\n\"organ\",\n\"orient\",\n\"original\",\n\"orphan\",\n\"ostrich\",\n\"other\",\n\"outdoor\",\n\"outer\",\n\"output\",\n\"outside\",\n\"oval\",\n\"oven\",\n\"over\",\n\"own\",\n\"owner\",\n\"oxygen\",\n\"oyster\",\n\"ozone\",\n\"pact\",\n\"paddle\",\n\"page\",\n\"pair\",\n\"palace\",\n\"palm\",\n\"panda\",\n\"panel\",\n\"panic\",\n\"panther\",\n\"paper\",\n\"parade\",\n\"parent\",\n\"park\",\n\"parrot\",\n\"party\",\n\"pass\",\n\"patch\",\n\"path\",\n\"patient\",\n\"patrol\",\n\"pattern\",\n\"pause\",\n\"pave\",\n\"payment\",\n\"peace\",\n\"peanut\",\n\"pear\",\n\"peasant\",\n\"pelican\",\n\"pen\",\n\"penalty\",\n\"pencil\",\n\"people\",\n\"pepper\",\n\"perfect\",\n\"permit\",\n\"person\",\n\"pet\",\n\"phone\",\n\"photo\",\n\"phrase\",\n\"physical\",\n\"piano\",\n\"picnic\",\n\"picture\",\n\"piece\",\n\"pig\",\n\"pigeon\",\n\"pill\",\n\"pilot\",\n\"pink\",\n\"pioneer\",\n\"pipe\",\n\"pistol\",\n\"pitch\",\n\"pizza\",\n\"place\",\n\"planet\",\n\"plastic\",\n\"plate\",\n\"play\",\n\"please\",\n\"pledge\",\n\"pluck\",\n\"plug\",\n\"plunge\",\n\"poem\",\n\"poet\",\n\"point\",\n\"polar\",\n\"pole\",\n\"police\",\n\"pond\",\n\"pony\",\n\"pool\",\n\"popular\",\n\"portion\",\n\"position\",\n\"possible\",\n\"post\",\n\"potato\",\n\"pottery\",\n\"poverty\",\n\"powder\",\n\"power\",\n\"practice\",\n\"praise\",\n\"predict\",\n\"prefer\",\n\"prepare\",\n\"present\",\n\"pretty\",\n\"prevent\",\n\"price\",\n\"pride\",\n\"primary\",\n\"print\",\n\"priority\",\n\"prison\",\n\"private\",\n\"prize\",\n\"problem\",\n\"process\",\n\"produce\",\n\"profit\",\n\"program\",\n\"project\",\n\"promote\",\n\"proof\",\n\"property\",\n\"prosper\",\n\"protect\",\n\"proud\",\n\"provide\",\n\"public\",\n\"pudding\",\n\"pull\",\n\"pulp\",\n\"pulse\",\n\"pumpkin\",\n\"punch\",\n\"pupil\",\n\"puppy\",\n\"purchase\",\n\"purity\",\n\"purpose\",\n\"purse\",\n\"push\",\n\"put\",\n\"puzzle\",\n\"pyramid\",\n\"quality\",\n\"quantum\",\n\"quarter\",\n\"question\",\n\"quick\",\n\"quit\",\n\"quiz\",\n\"quote\",\n\"rabbit\",\n\"raccoon\",\n\"race\",\n\"rack\",\n\"radar\",\n\"radio\",\n\"rail\",\n\"rain\",\n\"raise\",\n\"rally\",\n\"ramp\",\n\"ranch\",\n\"random\",\n\"range\",\n\"rapid\",\n\"rare\",\n\"rate\",\n\"rather\",\n\"raven\",\n\"raw\",\n\"razor\",\n\"ready\",\n\"real\",\n\"reason\",\n\"rebel\",\n\"rebuild\",\n\"recall\",\n\"receive\",\n\"recipe\",\n\"record\",\n\"recycle\",\n\"reduce\",\n\"reflect\",\n\"reform\",\n\"refuse\",\n\"region\",\n\"regret\",\n\"regular\",\n\"reject\",\n\"relax\",\n\"release\",\n\"relief\",\n\"rely\",\n\"remain\",\n\"remember\",\n\"remind\",\n\"remove\",\n\"render\",\n\"renew\",\n\"rent\",\n\"reopen\",\n\"repair\",\n\"repeat\",\n\"replace\",\n\"report\",\n\"require\",\n\"rescue\",\n\"resemble\",\n\"resist\",\n\"resource\",\n\"response\",\n\"result\",\n\"retire\",\n\"retreat\",\n\"return\",\n\"reunion\",\n\"reveal\",\n\"review\",\n\"reward\",\n\"rhythm\",\n\"rib\",\n\"ribbon\",\n\"rice\",\n\"rich\",\n\"ride\",\n\"ridge\",\n\"rifle\",\n\"right\",\n\"rigid\",\n\"ring\",\n\"riot\",\n\"ripple\",\n\"risk\",\n\"ritual\",\n\"rival\",\n\"river\",\n\"road\",\n\"roast\",\n\"robot\",\n\"robust\",\n\"rocket\",\n\"romance\",\n\"roof\",\n\"rookie\",\n\"room\",\n\"rose\",\n\"rotate\",\n\"rough\",\n\"round\",\n\"route\",\n\"royal\",\n\"rubber\",\n\"rude\",\n\"rug\",\n\"rule\",\n\"run\",\n\"runway\",\n\"rural\",\n\"sad\",\n\"saddle\",\n\"sadness\",\n\"safe\",\n\"sail\",\n\"salad\",\n\"salmon\",\n\"salon\",\n\"salt\",\n\"salute\",\n\"same\",\n\"sample\",\n\"sand\",\n\"satisfy\",\n\"satoshi\",\n\"sauce\",\n\"sausage\",\n\"save\",\n\"say\",\n\"scale\",\n\"scan\",\n\"scare\",\n\"scatter\",\n\"scene\",\n\"scheme\",\n\"school\",\n\"science\",\n\"scissors\",\n\"scorpion\",\n\"scout\",\n\"scrap\",\n\"screen\",\n\"script\",\n\"scrub\",\n\"sea\",\n\"search\",\n\"season\",\n\"seat\",\n\"second\",\n\"secret\",\n\"section\",\n\"security\",\n\"seed\",\n\"seek\",\n\"segment\",\n\"select\",\n\"sell\",\n\"seminar\",\n\"senior\",\n\"sense\",\n\"sentence\",\n\"series\",\n\"service\",\n\"session\",\n\"settle\",\n\"setup\",\n\"seven\",\n\"shadow\",\n\"shaft\",\n\"shallow\",\n\"share\",\n\"shed\",\n\"shell\",\n\"sheriff\",\n\"shield\",\n\"shift\",\n\"shine\",\n\"ship\",\n\"shiver\",\n\"shock\",\n\"shoe\",\n\"shoot\",\n\"shop\",\n\"short\",\n\"shoulder\",\n\"shove\",\n\"shrimp\",\n\"shrug\",\n\"shuffle\",\n\"shy\",\n\"sibling\",\n\"sick\",\n\"side\",\n\"siege\",\n\"sight\",\n\"sign\",\n\"silent\",\n\"silk\",\n\"silly\",\n\"silver\",\n\"similar\",\n\"simple\",\n\"since\",\n\"sing\",\n\"siren\",\n\"sister\",\n\"situate\",\n\"six\",\n\"size\",\n\"skate\",\n\"sketch\",\n\"ski\",\n\"skill\",\n\"skin\",\n\"skirt\",\n\"skull\",\n\"slab\",\n\"slam\",\n\"sleep\",\n\"slender\",\n\"slice\",\n\"slide\",\n\"slight\",\n\"slim\",\n\"slogan\",\n\"slot\",\n\"slow\",\n\"slush\",\n\"small\",\n\"smart\",\n\"smile\",\n\"smoke\",\n\"smooth\",\n\"snack\",\n\"snake\",\n\"snap\",\n\"sniff\",\n\"snow\",\n\"soap\",\n\"soccer\",\n\"social\",\n\"sock\",\n\"soda\",\n\"soft\",\n\"solar\",\n\"soldier\",\n\"solid\",\n\"solution\",\n\"solve\",\n\"someone\",\n\"song\",\n\"soon\",\n\"sorry\",\n\"sort\",\n\"soul\",\n\"sound\",\n\"soup\",\n\"source\",\n\"south\",\n\"space\",\n\"spare\",\n\"spatial\",\n\"spawn\",\n\"speak\",\n\"special\",\n\"speed\",\n\"spell\",\n\"spend\",\n\"sphere\",\n\"spice\",\n\"spider\",\n\"spike\",\n\"spin\",\n\"spirit\",\n\"split\",\n\"spoil\",\n\"sponsor\",\n\"spoon\",\n\"sport\",\n\"spot\",\n\"spray\",\n\"spread\",\n\"spring\",\n\"spy\",\n\"square\",\n\"squeeze\",\n\"squirrel\",\n\"stable\",\n\"stadium\",\n\"staff\",\n\"stage\",\n\"stairs\",\n\"stamp\",\n\"stand\",\n\"start\",\n\"state\",\n\"stay\",\n\"steak\",\n\"steel\",\n\"stem\",\n\"step\",\n\"stereo\",\n\"stick\",\n\"still\",\n\"sting\",\n\"stock\",\n\"stomach\",\n\"stone\",\n\"stool\",\n\"story\",\n\"stove\",\n\"strategy\",\n\"street\",\n\"strike\",\n\"strong\",\n\"struggle\",\n\"student\",\n\"stuff\",\n\"stumble\",\n\"style\",\n\"subject\",\n\"submit\",\n\"subway\",\n\"success\",\n\"such\",\n\"sudden\",\n\"suffer\",\n\"sugar\",\n\"suggest\",\n\"suit\",\n\"summer\",\n\"sun\",\n\"sunny\",\n\"sunset\",\n\"super\",\n\"supply\",\n\"supreme\",\n\"sure\",\n\"surface\",\n\"surge\",\n\"surprise\",\n\"surround\",\n\"survey\",\n\"suspect\",\n\"sustain\",\n\"swallow\",\n\"swamp\",\n\"swap\",\n\"swarm\",\n\"swear\",\n\"sweet\",\n\"swift\",\n\"swim\",\n\"swing\",\n\"switch\",\n\"sword\",\n\"symbol\",\n\"symptom\",\n\"syrup\",\n\"system\",\n\"table\",\n\"tackle\",\n\"tag\",\n\"tail\",\n\"talent\",\n\"talk\",\n\"tank\",\n\"tape\",\n\"target\",\n\"task\",\n\"taste\",\n\"tattoo\",\n\"taxi\",\n\"teach\",\n\"team\",\n\"tell\",\n\"ten\",\n\"tenant\",\n\"tennis\",\n\"tent\",\n\"term\",\n\"test\",\n\"text\",\n\"thank\",\n\"that\",\n\"theme\",\n\"then\",\n\"theory\",\n\"there\",\n\"they\",\n\"thing\",\n\"this\",\n\"thought\",\n\"three\",\n\"thrive\",\n\"throw\",\n\"thumb\",\n\"thunder\",\n\"ticket\",\n\"tide\",\n\"tiger\",\n\"tilt\",\n\"timber\",\n\"time\",\n\"tiny\",\n\"tip\",\n\"tired\",\n\"tissue\",\n\"title\",\n\"toast\",\n\"tobacco\",\n\"today\",\n\"toddler\",\n\"toe\",\n\"together\",\n\"toilet\",\n\"token\",\n\"tomato\",\n\"tomorrow\",\n\"tone\",\n\"tongue\",\n\"tonight\",\n\"tool\",\n\"tooth\",\n\"top\",\n\"topic\",\n\"topple\",\n\"torch\",\n\"tornado\",\n\"tortoise\",\n\"toss\",\n\"total\",\n\"tourist\",\n\"toward\",\n\"tower\",\n\"town\",\n\"toy\",\n\"track\",\n\"trade\",\n\"traffic\",\n\"tragic\",\n\"train\",\n\"transfer\",\n\"trap\",\n\"trash\",\n\"travel\",\n\"tray\",\n\"treat\",\n\"tree\",\n\"trend\",\n\"trial\",\n\"tribe\",\n\"trick\",\n\"trigger\",\n\"trim\",\n\"trip\",\n\"trophy\",\n\"trouble\",\n\"truck\",\n\"true\",\n\"truly\",\n\"trumpet\",\n\"trust\",\n\"truth\",\n\"try\",\n\"tube\",\n\"tuition\",\n\"tumble\",\n\"tuna\",\n\"tunnel\",\n\"turkey\",\n\"turn\",\n\"turtle\",\n\"twelve\",\n\"twenty\",\n\"twice\",\n\"twin\",\n\"twist\",\n\"two\",\n\"type\",\n\"typical\",\n\"ugly\",\n\"umbrella\",\n\"unable\",\n\"unaware\",\n\"uncle\",\n\"uncover\",\n\"under\",\n\"undo\",\n\"unfair\",\n\"unfold\",\n\"unhappy\",\n\"uniform\",\n\"unique\",\n\"unit\",\n\"universe\",\n\"unknown\",\n\"unlock\",\n\"until\",\n\"unusual\",\n\"unveil\",\n\"update\",\n\"upgrade\",\n\"uphold\",\n\"upon\",\n\"upper\",\n\"upset\",\n\"urban\",\n\"urge\",\n\"usage\",\n\"use\",\n\"used\",\n\"useful\",\n\"useless\",\n\"usual\",\n\"utility\",\n\"vacant\",\n\"vacuum\",\n\"vague\",\n\"valid\",\n\"valley\",\n\"valve\",\n\"van\",\n\"vanish\",\n\"vapor\",\n\"various\",\n\"vast\",\n\"vault\",\n\"vehicle\",\n\"velvet\",\n\"vendor\",\n\"venture\",\n\"venue\",\n\"verb\",\n\"verify\",\n\"version\",\n\"very\",\n\"vessel\",\n\"veteran\",\n\"viable\",\n\"vibrant\",\n\"vicious\",\n\"victory\",\n\"video\",\n\"view\",\n\"village\",\n\"vintage\",\n\"violin\",\n\"virtual\",\n\"virus\",\n\"visa\",\n\"visit\",\n\"visual\",\n\"vital\",\n\"vivid\",\n\"vocal\",\n\"voice\",\n\"void\",\n\"volcano\",\n\"volume\",\n\"vote\",\n\"voyage\",\n\"wage\",\n\"wagon\",\n\"wait\",\n\"walk\",\n\"wall\",\n\"walnut\",\n\"want\",\n\"warfare\",\n\"warm\",\n\"warrior\",\n\"wash\",\n\"wasp\",\n\"waste\",\n\"water\",\n\"wave\",\n\"way\",\n\"wealth\",\n\"weapon\",\n\"wear\",\n\"weasel\",\n\"weather\",\n\"web\",\n\"wedding\",\n\"weekend\",\n\"weird\",\n\"welcome\",\n\"west\",\n\"wet\",\n\"whale\",\n\"what\",\n\"wheat\",\n\"wheel\",\n\"when\",\n\"where\",\n\"whip\",\n\"whisper\",\n\"wide\",\n\"width\",\n\"wife\",\n\"wild\",\n\"will\",\n\"win\",\n\"window\",\n\"wine\",\n\"wing\",\n\"wink\",\n\"winner\",\n\"winter\",\n\"wire\",\n\"wisdom\",\n\"wise\",\n\"wish\",\n\"witness\",\n\"wolf\",\n\"woman\",\n\"wonder\",\n\"wood\",\n\"wool\",\n\"word\",\n\"work\",\n\"world\",\n\"worry\",\n\"worth\",\n\"wrap\",\n\"wreck\",\n\"wrestle\",\n\"wrist\",\n\"write\",\n\"wrong\",\n\"yard\",\n\"year\",\n\"yellow\",\n\"you\",\n\"young\",\n\"youth\",\n\"zebra\",\n\"zero\",\n\"zone\",\n\"zoo\"]",
        "children": [],
        "fileType": "file",
        "_id": "61766ead66cde0c456cb3b25",
        "isSelectedFile": false,
        "createdAt": "2021-10-25T09:26:18.259Z",
        "updatedAt": "2021-10-25T09:26:18.259Z",
        "id": "61766ead66cde0c456cb3b25"
      },
      {
        "name": "fadedword.js",
        "content": "class FadedWord {\n  constructor(word, x, y) {\n    this.word = word;\n    this.alpha = 0;\n    this.isFadeIn = true;\n    this.isDone = false;\n    this.x = x;\n    this.y = y;\n  }\n  \n  render() {\n    \n    if(this.isFadeIn) {\n      this.alpha += 2;\n      if(this.alpha >= 200) {\n        this.isFadeIn = false;\n      }\n    } else {\n      this.alpha -= 2;\n      if(this.alpha <= 0) {\n        this.isDone = true;\n      }\n    }\n    \n    textFont('Georgia');\n    textSize(60);\n    noStroke();\n    fill(255, this.alpha);\n    text(this.word, this.x, this.y);\n  }\n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "61766f6eddafe30024a36af8",
        "isSelectedFile": false,
        "updatedAt": "2021-10-25T09:26:18.259Z",
        "createdAt": "2021-10-25T09:26:18.259Z",
        "id": "61766f6eddafe30024a36af8"
      }
    ],
    "createdAt": "2021-10-25T08:46:07.290Z",
    "id": "LVt0UeE7P"
  },
  {
    "name": "World's Most Innefficient Sieve",
    "_id": "HpJf85H74",
    "updatedAt": "2023-04-18T01:16:17.745Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "622b05a976915b2daf2f441d",
          "622b064476915b2daf2f4420",
          "622b05a976915b2daf2f441c",
          "622b05a976915b2daf2f441e"
        ],
        "fileType": "folder",
        "_id": "622b05a976915b2daf2f441f",
        "isSelectedFile": false,
        "createdAt": "2023-04-18T01:16:17.745Z",
        "updatedAt": "2023-04-18T01:16:17.745Z",
        "id": "622b05a976915b2daf2f441f"
      },
      {
        "name": "sketch.js",
        "content": "let primes = [];\n\nlet iter = 7;\n\nfunction setup() {\n  \n  let one = new Prime(null, 1);\n  one.isPatternComplete = true;\n  \n  primes.push(one);\n  \n  let two = new Prime(one, 2, 1);\n  two.pattern = [1];\n  two.isPatternComplete = true;\n  primes.push(two);\n  \n  let next = two.getNextPrime();\n  primes.push(next);\n  \n  let p = next;\n  \n  for(let i = 2; i < iter; i++) {\n    p.calcPattern();\n    p = p.getNextPrime();\n    primes.push(p);\n  }\n  \n  \n  for (let i = 0; i < iter; i++) {\n    print(primes[i].pattern.length);\n  }\n  \n  print(primes);\n    \n  noLoop();\n}",
        "children": [],
        "fileType": "file",
        "_id": "622b05a976915b2daf2f441c",
        "isSelectedFile": true,
        "createdAt": "2023-04-18T01:16:17.745Z",
        "updatedAt": "2023-04-18T01:16:17.745Z",
        "id": "622b05a976915b2daf2f441c"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"prime.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "622b05a976915b2daf2f441d",
        "isSelectedFile": false,
        "createdAt": "2023-04-18T01:16:17.745Z",
        "updatedAt": "2023-04-18T01:16:17.745Z",
        "id": "622b05a976915b2daf2f441d"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "622b05a976915b2daf2f441e",
        "isSelectedFile": false,
        "createdAt": "2023-04-18T01:16:17.745Z",
        "updatedAt": "2023-04-18T01:16:17.745Z",
        "id": "622b05a976915b2daf2f441e"
      },
      {
        "name": "prime.js",
        "content": "class Prime {\n    \n  constructor(parent, prime, diffToParent) {\n    this.parent = parent;\n    this.diffToParent = diffToParent;\n    this.prime = prime;\n    this.pattern = [];\n    this.patternSize = 1;\n    this.patternCalcPointer = 1;\n    this.isPatternComplete = false;\n    \n    if(this.parent) {\n      this.patternSize = prime * parent.patternSize;\n    }\n  }\n  \n  getNextPrime() {\n    let nextPrimeN = this.prime + this.pattern[0];\n    let diff = nextPrimeN - this.prime;\n    return new Prime(this, nextPrimeN, diff);\n  }\n  \n  calcPattern() {\n    \n    let multiples = [];\n    for (let i = 0; i < this.patternSize; i += this.prime) {\n      multiples.push(i);\n    }\n    \n    let prevPattern = [];\n    let prevPatternSize = this.parent.patternSize;\n    \n    for (let i = 0; i < this.parent.pattern.length; i++) {\n      prevPattern.push(this.parent.pattern[i] - this.diffToParent);\n    }\n        \n    let iter = 0;\n    \n    let lastRemoved = 0;\n    let diffBetweenRemoved = [];\n    \n    for (let i = 0; i < this.prime + 1; i++) {\n      for (let j = 0; j < prevPattern.length; j++) {\n        let p = prevPattern[j];\n        p += iter * prevPatternSize;\n        \n        if (multiples.includes(p)) {\n          if(lastRemoved == 0) {\n            lastRemoved = p;\n          } else {\n            diffBetweenRemoved.push(p - lastRemoved);\n            lastRemoved = p;\n          }\n        }\n        \n        if(!multiples.includes(p) && p < this.patternSize) {\n          this.pattern.push(p);\n        }\n      }\n      iter++;\n    }\n    \n    print(this.prime, \"removed\", diffBetweenRemoved.length, \"from pattern.\");\n    \n    print(\"diffBetweenRemoved:\", diffBetweenRemoved);\n            \n    this.isPatternComplete = true;\n            \n    // if(this.isPatternComplete) {\n    //   this.parent.destroyPattern();\n    // }\n  }\n  \n  \n    \n  destroyPattern() {\n    if(!this.parent.isPatternComplete) {\n      this.parent.destroyPattern();\n    }\n    \n    if(!this.isPatternComplete) {\n      console.warn(\"WARNING: Destruction of incomplete pattern for [\", this.prime, \"]\");\n    }\n    this.pattern = null;\n  }\n  \n  toString() {\n    let out = \"[\" + this.prime + \"]\";\n    return out;\n  }\n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "622b064476915b2daf2f4420",
        "isSelectedFile": false,
        "createdAt": "2023-04-18T01:16:17.745Z",
        "updatedAt": "2023-04-18T01:16:17.745Z",
        "id": "622b064476915b2daf2f4420"
      }
    ],
    "createdAt": "2022-03-11T08:22:11.838Z",
    "id": "HpJf85H74"
  }
]
